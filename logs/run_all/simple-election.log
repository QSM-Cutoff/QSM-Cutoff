
**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************


*****************************************************************************************************

	[Synthesize Rmin]: ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=1

*****************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.ivy -s acceptor=2,proposer=1 -f 1 -g -w -r -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=1]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 7

[FW NOTE]: number of interpreted atoms (e.g. member,le): 2

[FW NOTE]: symmetric group order: 2

[FW NOTE]: number of branching actions: 4

ivy_to_cpp target=qrm simple-election.acceptor_2_proposer_1.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_2_proposer_1.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_2_proposer_1.finite.cpp simple-election.acceptor_2_proposer_1.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_2_proposer_1.finite.o simple-election.acceptor_2_proposer_1.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 7.969 seconds

[QRM NOTE]: Time elapsed since last: 7.969 seconds

[QRM NOTE]: Peak memory: 1182484 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 4

[FW NOTE]: number of total reachable states:        6

[FW NOTE]: number of dfs representative states:     5

[FW NOTE]: number of dfs non-representative states: 1


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=1]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1']
sort: proposer=['proposer0']
sort: quorum=['quorum__acceptor0_acceptor1']
predicate: leader('proposer',)
predicate: didNotPromise('acceptor',)
predicate: start('proposer',)
predicate: member('acceptor', 'quorum')
predicate: promise('acceptor', 'proposer')
predicate: chosenAt('quorum', 'proposer')
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', 'start(proposer0)']
representative states : 195, 199, 87, 287, 319


=== State Orbit 0 =====================
size : 1
repr state: 0110000
lex min decimal: 195
states:
0110000




=== State Orbit 1 =====================
size : 1
repr state: 0110001
lex min decimal: 199
states:
0110001




=== State Orbit 2 =====================
size : 2
repr state: 0010101
lex min decimal: 87
states:
0100011
0010101




=== State Orbit 3 =====================
size : 1
repr state: 1000111
lex min decimal: 287
states:
1000111




=== State Orbit 4 =====================
size : 1
repr state: 1001111
lex min decimal: 319
states:
1001111



[QRM NOTE]: Time elapsed since start: 8.059 seconds

[QRM NOTE]: Time elapsed since last: 0.090 seconds

[QRM NOTE]: Peak memory: 1211771 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 8.060 seconds

[QRM NOTE]: Time elapsed since last: 0.002 seconds

[QRM NOTE]: Peak memory: 161309 bytes


====================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=1]

====================================================================================================================


===============================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=1]

===============================================================================================================


=== Prime Orbit 0 =====================
size : 2
num_suborbits: 1
0 (*) : --0--0-
0     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
1     : -0--0--
1     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
2 (*) : 1----0-
2     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor1,proposer0)']
3     : 1---0--
3     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
4 (*) : ---1-0-
4     : ['leader(proposer0)', '~promise(acceptor1,proposer0)']
5     : ---10--
5     : ['leader(proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 2
num_suborbits: 1
6 (*) : -1--1--
6     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer0)']
7     : --1--1-
7     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 2
num_suborbits: 1
8 (*) : --11---
8     : ['didNotPromise(acceptor1)', 'leader(proposer0)']
9     : -1-1---
9     : ['didNotPromise(acceptor0)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 1
num_suborbits: 1
10 (*) : 0--1---
10     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 2
num_suborbits: 1
11 (*) : 1-1----
11     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor1)']
12     : 11-----
12     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 2
num_suborbits: 1
13 (*) : --0---0
13     : ['~didNotPromise(acceptor1)', '~start(proposer0)']
14     : -0----0
14     : ['~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 2
num_suborbits: 1
15 (*) : ----1-0
15     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
16     : -----10
16     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 1
num_suborbits: 1
17 (*) : 1-----0
17     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 1
num_suborbits: 1
18 (*) : ---1--0
18     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 1
num_suborbits: 1
19 (*) : 000----
19     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 2
num_suborbits: 1
20 (*) : 0-0-1--
20     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)']
21     : 00---1-
21     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 1
num_suborbits: 1
22 (*) : 0---11-
22     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 14

[PRIME NOTE]: number of orbits before merging: 14

[PRIME NOTE]: number of primes: 23

[QRM NOTE]: Time elapsed since start: 8.073 seconds

[QRM NOTE]: Time elapsed since last: 0.012 seconds

[QRM NOTE]: Peak memory: 1254227 bytes


=========================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=1]

=========================================================================================================

definition primes: {0, 1, 3, 6, 11, 12, 13}


New level: 0
 pending : [2, 4, 5, 7, 8, 9, 10]
 solution : []


Before reduction : 
 pending  : [2, 4, 5, 7, 8, 9, 10]
 solution : []

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, 128), (6, -1), (7, 64), (8, 64), (9, 8), (10, 128), (11, -1), (12, -1), (13, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [2, 4, 5, 7, 8, 9, 10]
 solution : []

[QRM NOTE]: Time elapsed since start: 8.081 seconds

[QRM NOTE]: Time elapsed since last: 0.008 seconds

[QRM NOTE]: Peak memory: 207486 bytes


=============================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=1]

=============================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
4 (*) : ---1-0-
4     : ['leader(proposer0)', '~promise(acceptor1,proposer0)']
5     : ---10--
5     : ['leader(proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~promise(acceptor1,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0',))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))): [acceptor$1$promise$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): [acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): acceptor$1$promise$0$0}

part_sig: ('acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0')


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~promise(acceptor1,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')), EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0',)),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')), EnumeratedSort('proposer', ('proposer0',)))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): [acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): acceptor$1$promise$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER0)


=== Prime Orbit 4 =====================
size : 2
num_suborbits: 1
8 (*) : --11---
8     : ['didNotPromise(acceptor1)', 'leader(proposer0)']
9     : -1-1---
9     : ['didNotPromise(acceptor0)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor1)', 'leader(proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))): [acceptor$0$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$0$leader$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): [acceptor$0$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): acceptor$0$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0', 'proposer$0$leader$0$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor1)', 'leader(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')),), 'leader': (EnumeratedSort('proposer', ('proposer0',)),)}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): [acceptor$0$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): acceptor$0$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0)


=== Prime Orbit 5 =====================
size : 1
num_suborbits: 1
10 (*) : 0--1---
10     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer0)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',))), Const('proposer0', EnumeratedSort('proposer', ('proposer0',))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',))): [quorum$1$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)): [quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)): quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$chosenAt$1$0', 'quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)), EnumeratedSort('proposer', ('proposer0',)), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)), EnumeratedSort('proposer', ('proposer0',))), 'leader': (EnumeratedSort('proposer', ('proposer0',)),)}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)): [quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)): quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$1$chosenAt$0': quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 7 =====================
size : 2
num_suborbits: 1
13 (*) : --0---0
13     : ['~didNotPromise(acceptor1)', '~start(proposer0)']
14     : -0----0
14     : ['~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor1)', '~start(proposer0)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))): [acceptor$1$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$1$start$0$0]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$1$start$0$0}

part_sig: ('acceptor$1$didNotPromise$0$0', 'proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor1)', '~start(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')),), 'start': (EnumeratedSort('proposer', ('proposer0',)),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0': [acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0': acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0. didNotPromise(ACCEPTOR0) | start(PROPOSER0)


=== Prime Orbit 8 =====================
size : 2
num_suborbits: 1
15 (*) : ----1-0
15     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
16     : -----10
16     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor0,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0',))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$0$promise$1$0, proposer$1$start$0$0]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$promise$1$0; proposer$1$start$0$0}

part_sig: ('acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['promise(acceptor0,proposer0)', '~start(proposer0)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')), EnumeratedSort('proposer', ('proposer0',)), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')), EnumeratedSort('proposer', ('proposer0',))), 'start': (EnumeratedSort('proposer', ('proposer0',)),)}

sign_func_name2count:  {'0$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$promise$1$0; proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$start$0': [proposer$0$promise$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$start$0': proposer$0$promise$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 9 =====================
size : 1
num_suborbits: 1
17 (*) : 1-----0
17     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',))), Const('proposer0', EnumeratedSort('proposer', ('proposer0',))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',))): [quorum$0$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$0$chosenAt$1$0, proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

part_sig: ('proposer$0$chosenAt$1$0; proposer$1$start$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)), EnumeratedSort('proposer', ('proposer0',)), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)), EnumeratedSort('proposer', ('proposer0',))), 'start': (EnumeratedSort('proposer', ('proposer0',)),)}

sign_func_name2count:  {'0$chosenAt': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 10 =====================
size : 1
num_suborbits: 1
18 (*) : ---1--0
18     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$0$leader$0$0, proposer$1$start$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0; proposer$1$start$0$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$start$0$0',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~start(proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0',)),), 'start': (EnumeratedSort('proposer', ('proposer0',)),)}

sign_func_name2count:  {'0$leader': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0; proposer$1$start$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$start$0': [proposer$0$leader$0$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$start$0': proposer$0$leader$0$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)


=======================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=1]

=======================================================================================================================


=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
4 (*) : ---1-0-
4     : ['leader(proposer0)', '~promise(acceptor1,proposer0)']
5     : ---10--
5     : ['leader(proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER0)
qcost : 4




=== Prime Orbit 4 =====================
size : 2
num_suborbits: 1
8 (*) : --11---
8     : ['didNotPromise(acceptor1)', 'leader(proposer0)']
9     : -1-1---
9     : ['didNotPromise(acceptor0)', 'leader(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0)
qcost : 4




=== Prime Orbit 5 =====================
size : 1
num_suborbits: 1
10 (*) : 0--1---
10     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall QUORUM0,PROPOSER0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)
qcost : 4




=== Prime Orbit 7 =====================
size : 2
num_suborbits: 1
13 (*) : --0---0
13     : ['~didNotPromise(acceptor1)', '~start(proposer0)']
14     : -0----0
14     : ['~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,ACCEPTOR0. didNotPromise(ACCEPTOR0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 8 =====================
size : 2
num_suborbits: 1
15 (*) : ----1-0
15     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
16     : -----10
16     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 9 =====================
size : 1
num_suborbits: 1
17 (*) : 1-----0
17     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall QUORUM0,PROPOSER0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0)
qcost : 4




=== Prime Orbit 10 =====================
size : 1
num_suborbits: 1
18 (*) : ---1--0
18     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)
qcost : 3



[QRM NOTE]: Time elapsed since start: 8.184 seconds

[QRM NOTE]: Time elapsed since last: 0.104 seconds

[QRM NOTE]: Peak memory: 1877830 bytes


======================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=1]

======================================================================================================


New level: 1
 pending : [2, 4, 5, 7, 8, 9, 10]
 solution : []


Before reduction : 
 pending  : [2, 4, 5, 7, 8, 9, 10]
 solution : []

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, 128), (6, -1), (7, 64), (8, 64), (9, 8), (10, 128), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, 128), (6, -1), (7, 64), (8, 64), (9, 8), (10, 128), (11, -1), (12, -1), (13, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [2, 4, 5, 7, 8, 9, 10]
 solution : []


Solution : [] has cost 0.


Decide in level 1 among pending : [2, 4, 5, 7, 8, 9, 10]

Coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, 128), (6, -1), (7, 64), (8, 64), (9, 8), (10, 128), (11, -1), (12, -1), (13, -1)]

Decide 5 with phase True at level 1

After decision at level 1
 pending : [2, 4, 7, 8, 9, 10]
 solution : [5]


New level: 2
 pending : [2, 4, 7, 8, 9, 10]
 solution : [5]


Before reduction : 
 pending  : [2, 4, 7, 8, 9, 10]
 solution : [5]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, 128), (6, -1), (7, 64), (8, 64), (9, 8), (10, 128), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 64), (8, 64), (9, 8), (10, 4), (11, -1), (12, -1), (13, -1)]

Covered at level 2 : {2, 4}

After reduction : 
 pending  : [7, 8, 9, 10]
 solution : [5]


Before reduction : 
 pending  : [7, 8, 9, 10]
 solution : [5]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 64), (8, 64), (9, 8), (10, 4), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 64), (9, 8), (10, 4), (11, -1), (12, -1), (13, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [7, 8, 9, 10]
 solution : [5]


Solution : [5] has cost 4.


Decide in level 2 among pending : [7, 8, 9, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 64), (9, 8), (10, 4), (11, -1), (12, -1), (13, -1)]

Decide 7 with phase True at level 2

After decision at level 2
 pending : [8, 9, 10]
 solution : [5, 7]


New level: 3
 pending : [8, 9, 10]
 solution : [5, 7]


Before reduction : 
 pending  : [8, 9, 10]
 solution : [5, 7]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 64), (9, 8), (10, 4), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1)]

Covered at level 3 : {8, 9, 10}

After reduction : 
 pending  : []
 solution : [5, 7]


Before reduction : 
 pending  : []
 solution : [5, 7]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : []
 solution : [5, 7]


Solution : [5, 7] has cost 8.


Before backtrack at level 3
 pending : []
 solution : [5, 7]

After backtrack at level 3
 pending : [8, 9, 10]
 solution : [5, 7]


Invert decision for 7 at level 2


New level: 3
 pending : [8, 9, 10]
 solution : [5]


Before reduction : 
 pending  : [8, 9, 10]
 solution : [5]

Essensial at level 3 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1)]

Covered at level 3 : {9, 10}

After reduction : 
 pending  : []
 solution : [5, 8]


Before reduction : 
 pending  : []
 solution : [5, 8]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : []
 solution : [5, 8]


Solution : [5, 8] has cost 8.


Before backtrack at level 3
 pending : []
 solution : [5, 8]

After backtrack at level 3
 pending : [8, 9, 10]
 solution : [5]


Before backtrack at level 2
 pending : [8, 9, 10]
 solution : [5]

After backtrack at level 2
 pending : [8, 9, 10, 2, 4, 7]
 solution : [5]


Invert decision for 5 at level 1


New level: 2
 pending : [8, 9, 10, 2, 4, 7]
 solution : []


Before reduction : 
 pending  : [8, 9, 10, 2, 4, 7]
 solution : []

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, -1), (6, -1), (7, 64), (8, 64), (9, 8), (10, 128), (11, -1), (12, -1), (13, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [8, 9, 10, 2, 4, 7]
 solution : []


Solution : [] has cost 0.


Decide in level 2 among pending : [8, 9, 10, 2, 4, 7]

Coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, -1), (6, -1), (7, 64), (8, 64), (9, 8), (10, 128), (11, -1), (12, -1), (13, -1)]

Decide 10 with phase True at level 2

After decision at level 2
 pending : [8, 9, 2, 4, 7]
 solution : [10]


New level: 3
 pending : [8, 9, 2, 4, 7]
 solution : [10]


Before reduction : 
 pending  : [8, 9, 2, 4, 7]
 solution : [10]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, -1), (6, -1), (7, 64), (8, 64), (9, 8), (10, 128), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 16), (5, -1), (6, -1), (7, 32), (8, 32), (9, 4), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [8, 9, 2, 4, 7]
 solution : [10]


Solution : [10] has cost 3.


Decide in level 3 among pending : [8, 9, 2, 4, 7]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 16), (5, -1), (6, -1), (7, 32), (8, 32), (9, 4), (10, -1), (11, -1), (12, -1), (13, -1)]

Decide 8 with phase True at level 3

After decision at level 3
 pending : [9, 2, 4, 7]
 solution : [10, 8]


New level: 4
 pending : [9, 2, 4, 7]
 solution : [10, 8]


Before reduction : 
 pending  : [9, 2, 4, 7]
 solution : [10, 8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 16), (5, -1), (6, -1), (7, 32), (8, 32), (9, 4), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 16), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : {9, 7}

After reduction : 
 pending  : [2, 4]
 solution : [10, 8]


Before reduction : 
 pending  : [2, 4]
 solution : [10, 8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 16), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [2, 4]
 solution : [10, 8]


Solution : [10, 8] has cost 7.


Decide in level 4 among pending : [2, 4]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Decide 2 with phase True at level 4

After decision at level 4
 pending : [4]
 solution : [10, 8, 2]


New level: 5
 pending : [4]
 solution : [10, 8, 2]


Before reduction : 
 pending  : [4]
 solution : [10, 8, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : {4}

After reduction : 
 pending  : []
 solution : [10, 8, 2]


Before reduction : 
 pending  : []
 solution : [10, 8, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [10, 8, 2]


Solution : [10, 8, 2] has cost 11.


Before backtrack at level 5
 pending : []
 solution : [10, 8, 2]

After backtrack at level 5
 pending : [4]
 solution : [10, 8, 2]


Invert decision for 2 at level 4


New level: 5
 pending : [4]
 solution : [10, 8]


Before reduction : 
 pending  : [4]
 solution : [10, 8]

Essensial at level 5 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [10, 8, 4]


Before reduction : 
 pending  : []
 solution : [10, 8, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [10, 8, 4]


Solution : [10, 8, 4] has cost 11.


Before backtrack at level 5
 pending : []
 solution : [10, 8, 4]

After backtrack at level 5
 pending : [4]
 solution : [10, 8]


Before backtrack at level 4
 pending : [4]
 solution : [10, 8]

After backtrack at level 4
 pending : [4, 9, 7, 2]
 solution : [10, 8]


Invert decision for 8 at level 3


New level: 4
 pending : [4, 9, 7, 2]
 solution : [10]


Before reduction : 
 pending  : [4, 9, 7, 2]
 solution : [10]

Essensial at level 4 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : {9}

After reduction : 
 pending  : [4, 2]
 solution : [10, 7]


Before reduction : 
 pending  : [4, 2]
 solution : [10, 7]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [4, 2]
 solution : [10, 7]


Solution : [10, 7] has cost 7.


Decide in level 4 among pending : [4, 2]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Decide 4 with phase True at level 4

After decision at level 4
 pending : [2]
 solution : [10, 7, 4]


New level: 5
 pending : [2]
 solution : [10, 7, 4]


Before reduction : 
 pending  : [2]
 solution : [10, 7, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : {2}

After reduction : 
 pending  : []
 solution : [10, 7, 4]


Before reduction : 
 pending  : []
 solution : [10, 7, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [10, 7, 4]


Solution : [10, 7, 4] has cost 11.


Before backtrack at level 5
 pending : []
 solution : [10, 7, 4]

After backtrack at level 5
 pending : [2]
 solution : [10, 7, 4]


Invert decision for 4 at level 4


New level: 5
 pending : [2]
 solution : [10, 7]


Before reduction : 
 pending  : [2]
 solution : [10, 7]

Essensial at level 5 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [10, 7, 2]


Before reduction : 
 pending  : []
 solution : [10, 7, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [10, 7, 2]


Solution : [10, 7, 2] has cost 11.


Before backtrack at level 5
 pending : []
 solution : [10, 7, 2]

After backtrack at level 5
 pending : [2]
 solution : [10, 7]


Before backtrack at level 4
 pending : [2]
 solution : [10, 7]

After backtrack at level 4
 pending : [2, 7, 9, 4]
 solution : [10]


Before backtrack at level 3
 pending : [2, 7, 9, 4]
 solution : [10]

After backtrack at level 3
 pending : [2, 7, 9, 4, 8]
 solution : [10]


Invert decision for 10 at level 2


New level: 3
 pending : [2, 7, 9, 4, 8]
 solution : []


Before reduction : 
 pending  : [2, 7, 9, 4, 8]
 solution : []

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, -1), (6, -1), (7, 64), (8, 64), (9, 8), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [2, 7, 9, 4, 8]
 solution : []


Solution : [] has cost 0.


Decide in level 3 among pending : [2, 7, 9, 4, 8]

Coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, -1), (6, -1), (7, 64), (8, 64), (9, 8), (10, -1), (11, -1), (12, -1), (13, -1)]

Decide 7 with phase True at level 3

After decision at level 3
 pending : [2, 9, 4, 8]
 solution : [7]


New level: 4
 pending : [2, 9, 4, 8]
 solution : [7]


Before reduction : 
 pending  : [2, 9, 4, 8]
 solution : [7]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, -1), (6, -1), (7, 64), (8, 64), (9, 8), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : {8, 9}

After reduction : 
 pending  : [2, 4]
 solution : [7]


Before reduction : 
 pending  : [2, 4]
 solution : [7]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [2, 4]
 solution : [7]


Solution : [7] has cost 4.


Decide in level 4 among pending : [2, 4]

Coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Decide 2 with phase True at level 4

After decision at level 4
 pending : [4]
 solution : [7, 2]


New level: 5
 pending : [4]
 solution : [7, 2]


Before reduction : 
 pending  : [4]
 solution : [7, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : {4}

After reduction : 
 pending  : []
 solution : [7, 2]


Before reduction : 
 pending  : []
 solution : [7, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [7, 2]


Solution : [7, 2] has cost 8.


Before backtrack at level 5
 pending : []
 solution : [7, 2]

After backtrack at level 5
 pending : [4]
 solution : [7, 2]


Invert decision for 2 at level 4


New level: 5
 pending : [4]
 solution : [7]


Before reduction : 
 pending  : [4]
 solution : [7]

Essensial at level 5 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [7, 4]


Before reduction : 
 pending  : []
 solution : [7, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [7, 4]


Solution : [7, 4] has cost 8.


Before backtrack at level 5
 pending : []
 solution : [7, 4]

After backtrack at level 5
 pending : [4]
 solution : [7]


Before backtrack at level 4
 pending : [4]
 solution : [7]

After backtrack at level 4
 pending : [4, 9, 8, 2]
 solution : [7]


Invert decision for 7 at level 3


New level: 4
 pending : [4, 9, 8, 2]
 solution : []


Before reduction : 
 pending  : [4, 9, 8, 2]
 solution : []

Essensial at level 4 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : {9}

After reduction : 
 pending  : [4, 2]
 solution : [8]


Before reduction : 
 pending  : [4, 2]
 solution : [8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [4, 2]
 solution : [8]


Solution : [8] has cost 4.


Decide in level 4 among pending : [4, 2]

Coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Decide 4 with phase True at level 4

After decision at level 4
 pending : [2]
 solution : [8, 4]


New level: 5
 pending : [2]
 solution : [8, 4]


Before reduction : 
 pending  : [2]
 solution : [8, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : {2}

After reduction : 
 pending  : []
 solution : [8, 4]


Before reduction : 
 pending  : []
 solution : [8, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [8, 4]


Solution : [8, 4] has cost 8.


Before backtrack at level 5
 pending : []
 solution : [8, 4]

After backtrack at level 5
 pending : [2]
 solution : [8, 4]


Invert decision for 4 at level 4


New level: 5
 pending : [2]
 solution : [8]


Before reduction : 
 pending  : [2]
 solution : [8]

Essensial at level 5 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [8, 2]


Before reduction : 
 pending  : []
 solution : [8, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [8, 2]


Solution : [8, 2] has cost 8.


Before backtrack at level 5
 pending : []
 solution : [8, 2]

After backtrack at level 5
 pending : [2]
 solution : [8]


Before backtrack at level 4
 pending : [2]
 solution : [8]

After backtrack at level 4
 pending : [2, 8, 9, 4]
 solution : []


Before backtrack at level 3
 pending : [2, 8, 9, 4]
 solution : []

After backtrack at level 3
 pending : [2, 8, 9, 4, 7]
 solution : []


Before backtrack at level 2
 pending : [2, 8, 9, 4, 7]
 solution : []

After backtrack at level 2
 pending : [2, 8, 9, 4, 7, 10]
 solution : []


Before backtrack at level 1
 pending : [2, 8, 9, 4, 7, 10]
 solution : []

After backtrack at level 1
 pending : [2, 8, 9, 4, 7, 10, 5]
 solution : []


=====================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=1]

=====================================================================================================================

[MIN NOTE]: number of minimal solution found: 6

[MIN NOTE]: total qcost: 8

[MIN NOTE]: maximum branch and bound depth: 5

Definitions (length=2)

invariant [def_didNotPromise] didNotPromise(A) = forall P. ~promise(A,P) # definition

invariant [def_chosenAt] chosenAt(Q,P) = forall A. member(A,Q) -> promise(A,P) # definition

Equality Relations (length=0)

Solution 0 : [5, 7] (length = 2)

invariant [invar_5] forall QUORUM0,PROPOSER0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) # qcost: 4

invariant [invar_7] forall PROPOSER0,ACCEPTOR0. didNotPromise(ACCEPTOR0) | start(PROPOSER0) # qcost: 4




Solution 1 : [5, 8] (length = 2)

invariant [invar_5] forall QUORUM0,PROPOSER0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) # qcost: 4

invariant [invar_8] forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0) # qcost: 4




Solution 2 : [7, 2] (length = 2)

invariant [invar_7] forall PROPOSER0,ACCEPTOR0. didNotPromise(ACCEPTOR0) | start(PROPOSER0) # qcost: 4

invariant [invar_2] forall PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) # qcost: 4




Solution 3 : [7, 4] (length = 2)

invariant [invar_7] forall PROPOSER0,ACCEPTOR0. didNotPromise(ACCEPTOR0) | start(PROPOSER0) # qcost: 4

invariant [invar_4] forall PROPOSER0,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) # qcost: 4




Solution 4 : [8, 4] (length = 2)

invariant [invar_8] forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0) # qcost: 4

invariant [invar_4] forall PROPOSER0,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) # qcost: 4




Solution 5 : [8, 2] (length = 2)

invariant [invar_8] forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0) # qcost: 4

invariant [invar_2] forall PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) # qcost: 4




[QRM NOTE]: Time elapsed since start: 8.379 seconds

[QRM NOTE]: Time elapsed since last: 0.195 seconds

[QRM NOTE]: Peak memory: 1870022 bytes


=========================================================================================================

	[IVY_CHECK]: Ivy Check on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=1]

=========================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 65: invar_5
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 66: invar_7

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 65: invar_5 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 66: invar_7 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 65: invar_5 ... FAIL
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 66: invar_7 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 65: invar_5 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 66: invar_7 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 65: invar_5 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 66: invar_7 ... FAIL

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: line 49: assumption

error: failed checks: 2
[IVY_CHECK RESULT]: FAIL ... exit with return code 1

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 65: invar_5
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 66: invar_8

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 65: invar_5 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 66: invar_8 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 65: invar_5 ... FAIL
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 66: invar_8 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 65: invar_5 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 66: invar_8 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 65: invar_5 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 66: invar_8 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: line 49: assumption

error: failed checks: 1
[IVY_CHECK RESULT]: FAIL ... exit with return code 1

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 65: invar_7
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 66: invar_2

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 65: invar_7 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 66: invar_2 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 65: invar_7 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 66: invar_2 ... FAIL
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 65: invar_7 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 66: invar_2 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 65: invar_7 ... FAIL
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 66: invar_2 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: line 49: assumption

error: failed checks: 2
[IVY_CHECK RESULT]: FAIL ... exit with return code 1

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 65: invar_7
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 66: invar_4

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 65: invar_7 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 66: invar_4 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 65: invar_7 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 66: invar_4 ... FAIL
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 65: invar_7 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 66: invar_4 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 65: invar_7 ... FAIL
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 66: invar_4 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: line 49: assumption

error: failed checks: 2
[IVY_CHECK RESULT]: FAIL ... exit with return code 1

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 65: invar_8
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 66: invar_4

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 65: invar_8 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 66: invar_4 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 65: invar_8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 66: invar_4 ... FAIL
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 65: invar_8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 66: invar_4 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 65: invar_8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 66: invar_4 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: line 49: assumption

error: failed checks: 1
[IVY_CHECK RESULT]: FAIL ... exit with return code 1

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 65: invar_8
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 66: invar_2

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 65: invar_8 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 66: invar_2 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 65: invar_8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 66: invar_2 ... FAIL
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 65: invar_8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 66: invar_2 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 65: invar_8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 66: invar_2 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: line 49: assumption

error: failed checks: 1
[IVY_CHECK RESULT]: FAIL ... exit with return code 1

[QRM NOTE]: Time elapsed since start: 20.532 seconds

[QRM NOTE]: Time elapsed since last: 12.152 seconds

[QRM NOTE]: Peak memory: 873154 bytes


********************************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=1

********************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 11

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: symmetric group order: 6

[FW NOTE]: number of branching actions: 7

ivy_to_cpp target=qrm simple-election.acceptor_3_proposer_1.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_3_proposer_1.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_3_proposer_1.finite.cpp simple-election.acceptor_3_proposer_1.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_3_proposer_1.finite.o simple-election.acceptor_3_proposer_1.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 6.892 seconds

[QRM NOTE]: Time elapsed since last: 6.892 seconds

[QRM NOTE]: Peak memory: 1188956 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 5

[FW NOTE]: number of total reachable states:        13

[FW NOTE]: number of dfs representative states:     7

[FW NOTE]: number of dfs non-representative states: 6


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: member('acceptor', 'quorum')
predicate: chosenAt('quorum', 'proposer')
predicate: didNotPromise('acceptor',)
predicate: leader('proposer',)
predicate: promise('acceptor', 'proposer')
predicate: start('proposer',)
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)', 'start(proposer0)']
representative states : 115115, 115627, 54187, 200619, 925611, 933803, 208811


=== State Orbit 0 =====================
size : 1
repr state: 00011100000
lex min decimal: 115115
states:
00011100000




=== State Orbit 1 =====================
size : 1
repr state: 00011100001
lex min decimal: 115627
states:
00011100001




=== State Orbit 2 =====================
size : 3
repr state: 00001101001
lex min decimal: 54187
states:
00011000011
00010100101
00001101001




=== State Orbit 3 =====================
size : 3
repr state: 10000101101
lex min decimal: 200619
states:
00110000111
10000101101
01001001011




=== State Orbit 4 =====================
size : 1
repr state: 11100001111
lex min decimal: 925611
states:
11100001111




=== State Orbit 5 =====================
size : 1
repr state: 11100011111
lex min decimal: 933803
states:
11100011111




=== State Orbit 6 =====================
size : 3
repr state: 10000111101
lex min decimal: 208811
states:
00110010111
10000111101
01001011011



[QRM NOTE]: Time elapsed since start: 6.976 seconds

[QRM NOTE]: Time elapsed since last: 0.084 seconds

[QRM NOTE]: Peak memory: 1222681 bytes


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

=========================================================================================================================================

Representatitive states in reachability not in Rmin

{208811}

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 7.084 seconds

[QRM NOTE]: Time elapsed since last: 0.108 seconds

[QRM NOTE]: Peak memory: 213088 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy -s acceptor=2,proposer=2 -f 2 -g -w -r -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=2]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 12

[FW NOTE]: number of interpreted atoms (e.g. member,le): 2

[FW NOTE]: symmetric group order: 4

[FW NOTE]: number of branching actions: 8

ivy_to_cpp target=qrm simple-election.acceptor_2_proposer_2.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_2_proposer_2.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_2_proposer_2.finite.cpp simple-election.acceptor_2_proposer_2.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_2_proposer_2.finite.o simple-election.acceptor_2_proposer_2.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 7.050 seconds

[QRM NOTE]: Time elapsed since last: 7.050 seconds

[QRM NOTE]: Peak memory: 1185845 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 5

[FW NOTE]: number of total reachable states:        22

[FW NOTE]: number of dfs representative states:     10

[FW NOTE]: number of dfs non-representative states: 12


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=2]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1']
sort: proposer=['proposer0', 'proposer1']
sort: quorum=['quorum__acceptor0_acceptor1']
predicate: start('proposer',)
predicate: didNotPromise('acceptor',)
predicate: member('acceptor', 'quorum')
predicate: leader('proposer',)
predicate: promise('acceptor', 'proposer')
predicate: chosenAt('quorum', 'proposer')
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)', 'leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'start(proposer0)', 'start(proposer1)']
representative states : 3075, 3079, 3087, 1103, 4191, 4447, 111, 1095, 4183, 4439


=== State Orbit 0 =====================
size : 1
repr state: 001100000000
lex min decimal: 3075
states:
001100000000




=== State Orbit 1 =====================
size : 2
repr state: 001100000010
lex min decimal: 3079
states:
001100000010
001100000001




=== State Orbit 2 =====================
size : 1
repr state: 001100000011
lex min decimal: 3087
states:
001100000011




=== State Orbit 3 =====================
size : 4
repr state: 000100100011
lex min decimal: 1103
states:
000100010011
001000000111
001000001011
000100100011




=== State Orbit 4 =====================
size : 2
repr state: 100000101011
lex min decimal: 4191
states:
010000010111
100000101011




=== State Orbit 5 =====================
size : 2
repr state: 100010101011
lex min decimal: 4447
states:
100010101011
010001010111




=== State Orbit 6 =====================
size : 2
repr state: 000000100111
lex min decimal: 111
states:
000000100111
000000011011




=== State Orbit 7 =====================
size : 4
repr state: 000100100010
lex min decimal: 1095
states:
001000000101
001000001010
000100100010
000100010001




=== State Orbit 8 =====================
size : 2
repr state: 100000101010
lex min decimal: 4183
states:
010000010101
100000101010




=== State Orbit 9 =====================
size : 2
repr state: 100010101010
lex min decimal: 4439
states:
010001010101
100010101010



[QRM NOTE]: Time elapsed since start: 7.141 seconds

[QRM NOTE]: Time elapsed since last: 0.092 seconds

[QRM NOTE]: Peak memory: 1220152 bytes


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=2]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 13311, binary: 110011111111

Found a representative state in Rmin not in reachability: decimal: 12799, binary: 110001111111

Found a representative state in Rmin not in reachability: decimal: 12543, binary: 110000111111

Found a representative state in Rmin not in reachability: decimal: 4223, binary: 010000011111

Found a representative state in Rmin not in reachability: decimal: 4479, binary: 010001011111

Found a representative state in Rmin not in reachability: decimal: 1231, binary: 000100110011

Representatitive states in reachability not in Rmin

{4439, 4183, 1095}

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 7.178 seconds

[QRM NOTE]: Time elapsed since last: 0.037 seconds

[QRM NOTE]: Peak memory: 186795 bytes

next size: acceptor=3,proposer=2


********************************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=1

********************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

=========================================================================================================================================

Representatitive states in reachability not in Rmin

{208811}

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.101 seconds

[QRM NOTE]: Time elapsed since last: 0.101 seconds

[QRM NOTE]: Peak memory: 46919 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy -s acceptor=2,proposer=2 -f 2 -g -w -r -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=2]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 13311, binary: 110011111111

Found a representative state in Rmin not in reachability: decimal: 12799, binary: 110001111111

Found a representative state in Rmin not in reachability: decimal: 12543, binary: 110000111111

Found a representative state in Rmin not in reachability: decimal: 4223, binary: 010000011111

Found a representative state in Rmin not in reachability: decimal: 4479, binary: 010001011111

Found a representative state in Rmin not in reachability: decimal: 1231, binary: 000100110011

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.076 seconds

[QRM NOTE]: Time elapsed since last: 0.076 seconds

[QRM NOTE]: Peak memory: 22421 bytes

next size: acceptor=3,proposer=2


********************************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=1

********************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

=========================================================================================================================================

Representatitive states in reachability not in Rmin

{208811}

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.103 seconds

[QRM NOTE]: Time elapsed since last: 0.103 seconds

[QRM NOTE]: Peak memory: 46631 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy -s acceptor=2,proposer=2 -f 2 -g -w -r -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=2]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 13311, binary: 110011111111

Found a representative state in Rmin not in reachability: decimal: 12799, binary: 110001111111

Found a representative state in Rmin not in reachability: decimal: 12543, binary: 110000111111

Found a representative state in Rmin not in reachability: decimal: 4223, binary: 010000011111

Found a representative state in Rmin not in reachability: decimal: 4479, binary: 010001011111

Found a representative state in Rmin not in reachability: decimal: 1231, binary: 000100110011

Representatitive states in reachability not in Rmin

{4439, 4183, 1095}

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.067 seconds

[QRM NOTE]: Time elapsed since last: 0.067 seconds

[QRM NOTE]: Peak memory: 23725 bytes

next size: acceptor=3,proposer=2


********************************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=1

********************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

=========================================================================================================================================

Representatitive states in reachability not in Rmin

{208811}

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.103 seconds

[QRM NOTE]: Time elapsed since last: 0.103 seconds

[QRM NOTE]: Peak memory: 46871 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy -s acceptor=2,proposer=2 -f 2 -g -w -r -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=2]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 13311, binary: 110011111111

Found a representative state in Rmin not in reachability: decimal: 12799, binary: 110001111111

Found a representative state in Rmin not in reachability: decimal: 12543, binary: 110000111111

Found a representative state in Rmin not in reachability: decimal: 4223, binary: 010000011111

Found a representative state in Rmin not in reachability: decimal: 4991, binary: 010011011111

Found a representative state in Rmin not in reachability: decimal: 4479, binary: 010001011111

Found a representative state in Rmin not in reachability: decimal: 4735, binary: 010010011111

Found a representative state in Rmin not in reachability: decimal: 4959, binary: 010011010111

Found a representative state in Rmin not in reachability: decimal: 4703, binary: 010010010111

Found a representative state in Rmin not in reachability: decimal: 367, binary: 000001011011

Found a representative state in Rmin not in reachability: decimal: 879, binary: 000011011011

Found a representative state in Rmin not in reachability: decimal: 1231, binary: 000100110011

Representatitive states in reachability not in Rmin

{4439, 4183, 1095}

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.075 seconds

[QRM NOTE]: Time elapsed since last: 0.075 seconds

[QRM NOTE]: Peak memory: 24029 bytes

next size: acceptor=3,proposer=2


********************************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=1

********************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

=========================================================================================================================================

Representatitive states in reachability not in Rmin

{208811}

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.098 seconds

[QRM NOTE]: Time elapsed since last: 0.098 seconds

[QRM NOTE]: Peak memory: 47159 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy -s acceptor=2,proposer=2 -f 2 -g -w -r -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=2]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 13311, binary: 110011111111

Found a representative state in Rmin not in reachability: decimal: 12799, binary: 110001111111

Found a representative state in Rmin not in reachability: decimal: 12543, binary: 110000111111

Found a representative state in Rmin not in reachability: decimal: 4223, binary: 010000011111

Found a representative state in Rmin not in reachability: decimal: 4991, binary: 010011011111

Found a representative state in Rmin not in reachability: decimal: 4479, binary: 010001011111

Found a representative state in Rmin not in reachability: decimal: 4735, binary: 010010011111

Found a representative state in Rmin not in reachability: decimal: 4959, binary: 010011010111

Found a representative state in Rmin not in reachability: decimal: 4703, binary: 010010010111

Found a representative state in Rmin not in reachability: decimal: 4951, binary: 010011010101

Found a representative state in Rmin not in reachability: decimal: 4695, binary: 010010010101

Found a representative state in Rmin not in reachability: decimal: 367, binary: 000001011011

Found a representative state in Rmin not in reachability: decimal: 879, binary: 000011011011

Found a representative state in Rmin not in reachability: decimal: 1231, binary: 000100110011

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.076 seconds

[QRM NOTE]: Time elapsed since last: 0.076 seconds

[QRM NOTE]: Peak memory: 24804 bytes

next size: acceptor=3,proposer=2


********************************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=1

********************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

=========================================================================================================================================

Representatitive states in reachability not in Rmin

{208811}

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.102 seconds

[QRM NOTE]: Time elapsed since last: 0.102 seconds

[QRM NOTE]: Peak memory: 46919 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy -s acceptor=2,proposer=2 -f 2 -g -w -r -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=2]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 13311, binary: 110011111111

Found a representative state in Rmin not in reachability: decimal: 12799, binary: 110001111111

Found a representative state in Rmin not in reachability: decimal: 12543, binary: 110000111111

Found a representative state in Rmin not in reachability: decimal: 4223, binary: 010000011111

Found a representative state in Rmin not in reachability: decimal: 4479, binary: 010001011111

Found a representative state in Rmin not in reachability: decimal: 1231, binary: 000100110011

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.073 seconds

[QRM NOTE]: Time elapsed since last: 0.073 seconds

[QRM NOTE]: Peak memory: 24237 bytes

next size: acceptor=3,proposer=2


*****************************************************************************************************

	[Synthesize Rmin]: ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2

*****************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.ivy -s acceptor=3,proposer=2 -f 1 -g -w -r -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 19

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: symmetric group order: 12

[FW NOTE]: number of branching actions: 14

ivy_to_cpp target=qrm simple-election.acceptor_3_proposer_2.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_3_proposer_2.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_3_proposer_2.finite.cpp simple-election.acceptor_3_proposer_2.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_3_proposer_2.finite.o simple-election.acceptor_3_proposer_2.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 6.926 seconds

[QRM NOTE]: Time elapsed since last: 6.926 seconds

[QRM NOTE]: Peak memory: 1191944 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 6

[FW NOTE]: number of total reachable states:        66

[FW NOTE]: number of dfs representative states:     16

[FW NOTE]: number of dfs non-representative states: 50


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0', 'proposer1']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: chosenAt('quorum', 'proposer')
predicate: promise('acceptor', 'proposer')
predicate: didNotPromise('acceptor',)
predicate: start('proposer',)
predicate: member('acceptor', 'quorum')
predicate: leader('proposer',)
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'start(proposer0)', 'start(proposer1)']
representative states : 3670443, 3670955, 3671979, 1607595, 6303659, 88125355, 88256427, 4272043, 4403115, 6434731, 575403, 1606571, 6302635, 88124331, 88255403, 6433707


=== State Orbit 0 =====================
size : 1
repr state: 0000001110000000000
lex min decimal: 3670443
states:
0000001110000000000




=== State Orbit 1 =====================
size : 2
repr state: 0000001110000000010
lex min decimal: 3670955
states:
0000001110000000010
0000001110000000001




=== State Orbit 2 =====================
size : 1
repr state: 0000001110000000011
lex min decimal: 3671979
states:
0000001110000000011




=== State Orbit 3 =====================
size : 6
repr state: 0000000110010000011
lex min decimal: 1607595
states:
0000001100000001011
0000001100000000111
0000000110001000011
0000001010000100011
0000000110010000011
0000001010000010011




=== State Orbit 4 =====================
size : 6
repr state: 1000000010010100011
lex min decimal: 6303659
states:
0000011000000010111
0100000010001010011
0010000100010001011
0000101000000101011
0001000100001000111
1000000010010100011




=== State Orbit 5 =====================
size : 2
repr state: 1010100000010101011
lex min decimal: 88125355
states:
0101010000001010111
1010100000010101011




=== State Orbit 6 =====================
size : 2
repr state: 1010100001010101011
lex min decimal: 88256427
states:
1010100001010101011
0101010000101010111




=== State Orbit 7 =====================
size : 6
repr state: 1000000000010100111
lex min decimal: 4272043
states:
0001000000001100111
0100000000001011011
1000000000010100111
0000100000001101011
0000010000010010111
0010000000010011011




=== State Orbit 8 =====================
size : 6
repr state: 1000000001010100111
lex min decimal: 4403115
states:
0010000001010011011
0000010000110010111
0000100001001101011
0100000000101011011
1000000001010100111
0001000000101100111




=== State Orbit 9 =====================
size : 6
repr state: 1000000011010100011
lex min decimal: 6434731
states:
0001000100101000111
0000101001000101011
0010000101010001011
0100000010101010011
1000000011010100011
0000011000100010111




=== State Orbit 10 =====================
size : 6
repr state: 0000000010010010011
lex min decimal: 575403
states:
0000000010001100011
0000001000000011011
0000000010010010011
0000001000000100111
0000000100010000111
0000000100001001011




=== State Orbit 11 =====================
size : 6
repr state: 0000000110010000010
lex min decimal: 1606571
states:
0000001100000000101
0000001010000100010
0000000110010000010
0000000110001000001
0000001010000010001
0000001100000001010




=== State Orbit 12 =====================
size : 6
repr state: 1000000010010100010
lex min decimal: 6302635
states:
0000011000000010101
0010000100010001010
0000101000000101010
0001000100001000101
0100000010001010001
1000000010010100010




=== State Orbit 13 =====================
size : 2
repr state: 1010100000010101010
lex min decimal: 88124331
states:
0101010000001010101
1010100000010101010




=== State Orbit 14 =====================
size : 2
repr state: 1010100001010101010
lex min decimal: 88255403
states:
0101010000101010101
1010100001010101010




=== State Orbit 15 =====================
size : 6
repr state: 1000000011010100010
lex min decimal: 6433707
states:
0000101001000101010
0010000101010001010
0100000010101010001
1000000011010100010
0000011000100010101
0001000100101000101



[QRM NOTE]: Time elapsed since start: 7.059 seconds

[QRM NOTE]: Time elapsed since last: 0.133 seconds

[QRM NOTE]: Peak memory: 1247130 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 7.062 seconds

[QRM NOTE]: Time elapsed since last: 0.003 seconds

[QRM NOTE]: Peak memory: 209706 bytes


====================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

====================================================================================================================


===============================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

===============================================================================================================


=== Prime Orbit 0 =====================
size : 12
num_suborbits: 1
0 (*) : ---1--------0------
0     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
1     : --1--------0-------
1     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
2     : -1----------0------
2     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor0,proposer1)']
3     : 1----------0-------
3     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor0,proposer0)']
4     : -----1--------0----
4     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
5     : ----1--------0-----
5     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
6     : -1------------0----
6     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor1,proposer1)']
7     : 1------------0-----
7     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor1,proposer0)']
8     : -----1----------0--
8     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
9     : ----1----------0---
9     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
10     : ---1------------0--
10     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
11     : --1------------0---
11     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 12
num_suborbits: 1
12 (*) : ---1--1------------
12     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor0)']
13     : --1---1------------
13     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor0)']
14     : -1----1------------
14     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor0)']
15     : 1-----1------------
15     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor0)']
16     : -----1-1-----------
16     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor1)']
17     : ----1--1-----------
17     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor1)']
18     : -1-----1-----------
18     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor1)']
19     : 1------1-----------
19     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor1)']
20     : -----1--1----------
20     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
21     : ----1---1----------
21     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
22     : ---1----1----------
22     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
23     : --1-----1----------
23     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 12
num_suborbits: 1
24 (*) : ---1-------1-------
24     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer0)']
25     : --1---------1------
25     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer1)']
26     : -1---------1-------
26     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer0)']
27     : 1-----------1------
27     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer1)']
28     : -----1-------1-----
28     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer0)']
29     : ----1---------1----
29     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer1)']
30     : -1-----------1-----
30     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer0)']
31     : 1-------------1----
31     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
32     : -----1---------1---
32     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
33     : ----1-----------1--
33     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
34     : ---1-----------1---
34     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
35     : --1-------------1--
35     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 6
num_suborbits: 1
36 (*) : ---1-----1---------
36     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
37     : --1-------1--------
37     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
38     : -1-------1---------
38     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
39     : 1---------1--------
39     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
40     : -----1---1---------
40     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
41     : ----1-----1--------
41     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 9
num_suborbits: 2
42 (*) : 1--1---------------
42     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
43     : -11----------------
43     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
44     : 1----1-------------
44     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
45     : -1--1--------------
45     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
46     : --1--1-------------
46     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
47     : ---11--------------
47     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
48 (*) : --11---------------
48     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
49     : 11-----------------
49     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)']
50     : ----11-------------
50     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 6
num_suborbits: 1
51 (*) : ---1--------------0
51     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
52     : --1--------------0-
52     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
53     : -1----------------0
53     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
54     : 1----------------0-
54     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
55     : -----1------------0
55     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
56     : ----1------------0-
56     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 6
num_suborbits: 1
57 (*) : --------1------1---
57     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer0)']
58     : --------1-------1--
58     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer1)']
59     : -------1-----1-----
59     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer0)']
60     : -------1------1----
60     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer1)']
61     : ------1----1-------
61     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer0)']
62     : ------1-----1------
62     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 3
num_suborbits: 1
63 (*) : ---------------11--
63     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
64     : -------------11----
64     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
65     : -----------11------
65     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 6
num_suborbits: 1
66 (*) : -----------1-----0-
66     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
67     : ------------1-----0
67     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
68     : -------------1---0-
68     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
69     : --------------1---0
69     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
70     : ---------------1-0-
70     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
71     : ----------------1-0
71     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 2
num_suborbits: 1
72 (*) : ---------1-------0-
72     : ['leader(proposer0)', '~start(proposer0)']
73     : ----------1-------0
73     : ['leader(proposer1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 1
num_suborbits: 1
74 (*) : ---------11--------
74     : ['leader(proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 12
num_suborbits: 1
75 (*) : ------1--1-----0---
75     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
76     : ------1---1-----0--
76     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
77     : ------1--1---0-----
77     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
78     : ------1---1---0----
78     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
79     : -------1-1-----0---
79     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
80     : -------1--1-----0--
80     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
81     : -------1-1-0-------
81     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
82     : -------1--1-0------
82     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
83     : --------11---0-----
83     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
84     : --------1-1---0----
84     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
85     : --------11-0-------
85     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
86     : --------1-1-0------
86     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 12
num_suborbits: 1
87 (*) : ------1--1------1--
87     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
88     : ------1---1----1---
88     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
89     : ------1--1----1----
89     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
90     : ------1---1--1-----
90     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
91     : -------1-1------1--
91     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
92     : -------1--1----1---
92     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
93     : -------1-1--1------
93     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
94     : -------1--11-------
94     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
95     : --------11----1----
95     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
96     : --------1-1--1-----
96     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
97     : --------11--1------
97     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
98     : --------1-11-------
98     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 6
num_suborbits: 1
99 (*) : ---------1-0---0---
99     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
100     : ----------1-0---0--
100     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
101     : ---------1-0-0-----
101     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
102     : ----------1-0-0----
102     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
103     : ---------1---0-0---
103     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
104     : ----------1---0-0--
104     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 12
num_suborbits: 1
105 (*) : ---------1-0----1--
105     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
106     : ----------1-0--1---
106     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
107     : ---------1-0--1----
107     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
108     : ----------1-01-----
108     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
109     : ---------1---0--1--
109     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
110     : ----------1---01---
110     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
111     : ---------1--10-----
111     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
112     : ----------11--0----
112     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
113     : ---------1----10---
113     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
114     : ----------1--1--0--
114     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
115     : ---------1--1--0---
115     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
116     : ----------11----0--
116     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 6
num_suborbits: 1
117 (*) : ---------1----1-1--
117     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
118     : ----------1--1-1---
118     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
119     : ---------1--1---1--
119     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
120     : ----------11---1---
120     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
121     : ---------1--1-1----
121     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
122     : ----------11-1-----
122     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 6
num_suborbits: 1
123 (*) : ----0-1--1---------
123     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
124     : -----01---1--------
124     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
125     : --0----1-1---------
125     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
126     : ---0---1--1--------
126     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
127     : 0-------11---------
127     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
128     : -0------1-1--------
128     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 6
num_suborbits: 1
129 (*) : ----0----1-0-------
129     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
130     : -----0----1-0------
130     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
131     : --0------1---0-----
131     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
132     : ---0------1---0----
132     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
133     : 0--------1-----0---
133     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
134     : -0--------1-----0--
134     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 6
num_suborbits: 1
135 (*) : ----0----1--1------
135     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
136     : -----0----11-------
136     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
137     : --0------1----1----
137     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
138     : ---0------1--1-----
138     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
139     : 0--------1------1--
139     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
140     : -0--------1----1---
140     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 6
num_suborbits: 1
141 (*) : ------11-1---------
141     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
142     : ------11--1--------
142     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
143     : ------1-11---------
143     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
144     : ------1-1-1--------
144     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
145     : -------111---------
145     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
146     : -------11-1--------
146     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 12
num_suborbits: 1
147 (*) : -1---0----------1--
147     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
148     : 1---0----------1---
148     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
149     : ---1-0--------1----
149     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
150     : --1-0--------1-----
150     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
151     : -1-0------------1--
151     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
152     : 1-0------------1---
152     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
153     : ---0-1------1------
153     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
154     : --0-1------1-------
154     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
155     : -0-1----------1----
155     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
156     : 0-1----------1-----
156     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
157     : -0---1------1------
157     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
158     : 0---1------1-------
158     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 6
num_suborbits: 1
159 (*) : ---0--------1---1--
159     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
160     : --0--------1---1---
160     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
161     : -0----------1-1----
161     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
162     : 0----------1-1-----
162     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
163     : -----0--------1-1--
163     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
164     : ----0--------1-1---
164     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 6
num_suborbits: 1
165 (*) : 1-0-1--------------
165     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
166     : -1-0-1-------------
166     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
167     : 0-1-1--------------
167     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
168     : -0-1-1-------------
168     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
169     : 1-1-0--------------
169     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
170     : -1-1-0-------------
170     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 3
num_suborbits: 1
171 (*) : -------0-----00----
171     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
172     : --------0------00--
172     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
173     : ------0----00------
173     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 6
num_suborbits: 1
174 (*) : -------0-----0----0
174     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
175     : -------0------0--0-
175     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
176     : --------0------0--0
176     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
177     : --------0-------00-
177     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
178     : ------0----0------0
178     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
179     : ------0-----0----0-
179     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 3
num_suborbits: 1
180 (*) : --------0--------00
180     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
181     : -------0---------00
181     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
182     : ------0----------00
182     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 12
num_suborbits: 1
183 (*) : 1---0---0---------0
183     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
184     : -1---0--0--------0-
184     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
185     : --1-0--0----------0
185     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
186     : ---1-0-0---------0-
186     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
187     : 1-0-----0---------0
187     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
188     : -1-0----0--------0-
188     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
189     : --0-1-0-----------0
189     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
190     : ---0-10----------0-
190     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
191     : 0-1----0----------0
191     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
192     : -0-1---0---------0-
192     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
193     : 0---1-0-----------0
193     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
194     : -0---10----------0-
194     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 12
num_suborbits: 1
195 (*) : 1---0---0-------0--
195     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
196     : -1---0--0------0---
196     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
197     : --1-0--0------0----
197     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
198     : ---1-0-0-----0-----
198     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
199     : 1-0-----0-------0--
199     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
200     : -1-0----0------0---
200     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
201     : --0-1-0-----0------
201     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
202     : ---0-10----0-------
202     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
203     : 0-1----0------0----
203     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
204     : -0-1---0-----0-----
204     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
205     : 0---1-0-----0------
205     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
206     : -0---10----0-------
206     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 12
num_suborbits: 1
207 (*) : ----0---0----1----0
207     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
208     : -----0--0-----1--0-
208     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
209     : ----0--0-------1--0
209     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
210     : -----0-0--------10-
210     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
211     : --0-----0--1------0
211     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
212     : ---0----0---1----0-
212     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
213     : --0---0--------1--0
213     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
214     : ---0--0---------10-
214     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
215     : 0------0---1------0
215     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
216     : -0-----0----1----0-
216     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
217     : 0-----0------1----0
217     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
218     : -0----0-------1--0-
218     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
219 (*) : ----0--00---------0
219     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
220     : -----0-00--------0-
220     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
221     : --0---0-0---------0
221     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
222     : ---0--0-0--------0-
222     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
223     : 0-----00----------0
223     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
224     : -0----00---------0-
224     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 12
num_suborbits: 1
225 (*) : -0-----0----10-----
225     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
226     : 0------0---1--0----
226     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
227     : ---0----0---1--0---
227     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
228     : --0-----0--1----0--
228     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
229     : -0----0----0--1----
229     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
230     : 0-----0-----01-----
230     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
231     : -----0--0-----10---
231     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
232     : ----0---0----1--0--
232     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
233     : ---0--0----0----1--
233     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
234     : --0---0-----0--1---
234     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
235     : -----0-0-----0--1--
235     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
236     : ----0--0------01---
236     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
237 (*) : -0---0----1---1----
237     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
238     : 0---0----1---1-----
238     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
239     : ---0-0----1-----1--
239     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
240     : --0-0----1-----1---
240     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
241     : -0-0------1-1------
241     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
242     : 0-0------1-1-------
242     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 2
num_suborbits: 1
243 (*) : -0-0-0----1--------
243     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
244     : 0-0-0----1---------
244     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
245 (*) : --0-0---01------0--
245     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
246     : ---0-0--0-1----0---
246     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
247     : 0---0--0-1----0----
247     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
248     : -0---0-0--1--0-----
248     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
249     : 0-0---0--1--0------
249     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
250     : -0-0--0---10-------
250     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 34 =====================
size : 6
num_suborbits: 1
251 (*) : 0-0---0--1--------0
251     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
252     : -0-0--0---1------0-
252     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
253     : 0---0--0-1--------0
253     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
254     : -0---0-0--1------0-
254     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
255     : --0-0---01--------0
255     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
256     : ---0-0--0-1------0-
256     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 35 =====================
size : 6
num_suborbits: 1
257 (*) : --0--0--0--1--1----
257     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)']
258     : ---00---0---11-----
258     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)']
259     : 0----0-0---1----1--
259     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)']
260     : -0--0--0----1--1---
260     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)']
261     : 0--0--0------1--1--
261     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)']
262     : -00---0-------11---
262     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 36 =====================
size : 6
num_suborbits: 1
263 (*) : --0---0-0---0---0--
263     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
264     : ---0--0-0--0---0---
264     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
265     : 0-----00----0-0----
265     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
266     : -0----00---0-0-----
266     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
267     : ----0--00-----0-0--
267     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
268     : -----0-00----0-0---
268     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 37 =====================
size : 6
num_suborbits: 1
269 (*) : -00-0-00-------1---
269     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)']
270     : 0--0-000--------1--
270     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)']
271     : 0--00-0-0----1-----
271     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)']
272     : -00--00-0-----1----
272     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)']
273     : 0-0--0-00--1-------
273     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)']
274     : -0-00--00---1------
274     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 38 =====================
size : 12
num_suborbits: 1
275 (*) : -0--0-00---0---1---
275     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)']
276     : 0----000----0---1--
276     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)']
277     : ---00-0-0--0-1-----
277     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)']
278     : --0--00-0---0-1----
278     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)']
279     : -00---00-----0-1---
279     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
280     : 0--0--00------0-1--
280     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
281     : --0--0-00--1-0-----
281     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)']
282     : ---00--00---1-0----
282     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)']
283     : 0--0--0-0----1-0---
283     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
284     : -00---0-0-----1-0--
284     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
285     : 0----0-00--1---0---
285     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
286     : -0--0--00---1---0--
286     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 39 =====================
size : 6
num_suborbits: 1
287 (*) : -00--0000----0-----
287     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)']
288     : 0--00-000-----0----
288     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)']
289     : 0--0-0000------0---
289     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
290     : -00-0-000-------0--
290     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
291     : -0-00-000--0-------
291     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)']
292     : 0-0--0000---0------
292     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 40 =====================
size : 6
num_suborbits: 1
293 (*) : -00---000----0--0--
293     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
294     : 0--0--000-----00---
294     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
295     : -0--0-000--0----0--
295     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
296     : 0----0000---0--0---
296     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
297     : ---00-000--0--0----
297     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
298     : --0--0000---00-----
298     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 41 =====================
size : 1
num_suborbits: 1
299 (*) : 000000000----------
299     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 42

[PRIME NOTE]: number of orbits before merging: 43

[PRIME NOTE]: number of primes: 300

[QRM NOTE]: Time elapsed since start: 7.179 seconds

[QRM NOTE]: Time elapsed since last: 0.117 seconds

[QRM NOTE]: Peak memory: 1633786 bytes


=========================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

=========================================================================================================

definition primes: {0, 1, 35, 36, 37, 6, 38, 39, 40, 41, 20, 21, 22, 23, 27, 30}


New level: 0
 pending : [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34]
 solution : []


Before reduction : 
 pending  : [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34]
 solution : []

Essensial at level 0 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 131072), (4, 0), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, 67108864), (10, 67108864), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 0 : {2, 4}

After reduction : 
 pending  : [3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34]
 solution : [7]


Before reduction : 
 pending  : [3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34]
 solution : [7]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 131072), (4, 0), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, 67108864), (10, 67108864), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, 67108864), (10, 67108864), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34]
 solution : [7]

[QRM NOTE]: Time elapsed since start: 7.253 seconds

[QRM NOTE]: Time elapsed since last: 0.074 seconds

[QRM NOTE]: Peak memory: 574065 bytes


=============================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

=============================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 7 =====================
size : 3
num_suborbits: 1
63 (*) : ---------------11--
63     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
64     : -------------11----
64     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
65     : -----------11------
65     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']

sign_func_name2args: {'0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$1]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

part_sig: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

sign_func_name2count:  {'0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': [acceptor$0$promise$0$0; acceptor$0$promise$0$1]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': acceptor$0$promise$0$0; acceptor$0$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0. (exists PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0))


=== Prime Orbit 3 =====================
size : 6
num_suborbits: 1
36 (*) : ---1-----1---------
36     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
37     : --1-------1--------
37     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
38     : -1-------1---------
38     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
39     : 1---------1--------
39     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
40     : -----1---1---------
40     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
41     : ----1-----1--------
41     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$chosenAt$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

part_sig: ('proposer$0$chosenAt$1$0 | proposer$0$leader$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'0$chosenAt': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1': [proposer$0$chosenAt$1$0], 'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1': proposer$0$chosenAt$1$0, 'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER1)', 'chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0,PROPOSER1. ~leader(PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 5 =====================
size : 6
num_suborbits: 1
51 (*) : ---1--------------0
51     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
52     : --1--------------0-
52     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
53     : -1----------------0
53     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
54     : 1----------------0-
54     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
55     : -----1------------0
55     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
56     : ----1------------0-
56     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$chosenAt$1$0, proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

part_sig: ('proposer$0$chosenAt$1$0; proposer$1$start$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'0$chosenAt': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 8 =====================
size : 6
num_suborbits: 1
66 (*) : -----------1-----0-
66     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
67     : ------------1-----0
67     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
68     : -------------1---0-
68     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
69     : --------------1---0
69     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
70     : ---------------1-0-
70     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
71     : ----------------1-0
71     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor0,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$0, proposer$1$start$0$0]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$promise$1$0; proposer$1$start$0$0}

part_sig: ('acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['promise(acceptor0,proposer0)', '~start(proposer0)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'0$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$promise$1$0; proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$start$0': [proposer$0$promise$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$start$0': proposer$0$promise$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 9 =====================
size : 2
num_suborbits: 1
72 (*) : ---------1-------0-
72     : ['leader(proposer0)', '~start(proposer0)']
73     : ----------1-------0
73     : ['leader(proposer1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0, proposer$1$start$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$start$0$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$start$0$0',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~start(proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'0$leader': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$start$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$start$0': [proposer$0$leader$0$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$start$0': proposer$0$leader$0$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 10 =====================
size : 1
num_suborbits: 1
74 (*) : ---------11--------
74     : ['leader(proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'leader(proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$0$leader$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

part_sig: ('proposer$0$leader$0$0 | proposer$0$leader$0$1',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', 'leader(proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'0$leader': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: set()

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: exists PROPOSER0. ~leader(PROPOSER0)


=== Prime Orbit 11 =====================
size : 12
num_suborbits: 1
75 (*) : ------1--1-----0---
75     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
76     : ------1---1-----0--
76     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
77     : ------1--1---0-----
77     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
78     : ------1---1---0----
78     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
79     : -------1-1-----0---
79     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
80     : -------1--1-----0--
80     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
81     : -------1-1-0-------
81     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
82     : -------1--1-0------
82     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
83     : --------11---0-----
83     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
84     : --------1-1---0----
84     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
85     : --------11-0-------
85     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
86     : --------1-1-0------
86     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 12 =====================
size : 12
num_suborbits: 1
87 (*) : ------1--1------1--
87     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
88     : ------1---1----1---
88     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
89     : ------1--1----1----
89     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
90     : ------1---1--1-----
90     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
91     : -------1-1------1--
91     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
92     : -------1--1----1---
92     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
93     : -------1-1--1------
93     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
94     : -------1--11-------
94     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
95     : --------11----1----
95     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
96     : --------1-1--1-----
96     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
97     : --------11--1------
97     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
98     : --------1-11-------
98     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0', 'proposer$0$leader$0$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'didNotPromise(ACCEPTOR0)', 'promise(ACCEPTOR1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ~promise(ACCEPTOR1,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 13 =====================
size : 6
num_suborbits: 1
99 (*) : ---------1-0---0---
99     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
100     : ----------1-0---0--
100     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
101     : ---------1-0-0-----
101     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
102     : ----------1-0-0----
102     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
103     : ---------1---0-0---
103     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
104     : ----------1---0-0--
104     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0, proposer$1$promise$1$0, proposer$1$promise$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

part_sig: ('acceptor$1$promise$0$0 | acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 14 =====================
size : 12
num_suborbits: 1
105 (*) : ---------1-0----1--
105     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
106     : ----------1-0--1---
106     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
107     : ---------1-0--1----
107     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
108     : ----------1-01-----
108     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
109     : ---------1---0--1--
109     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
110     : ----------1---01---
110     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
111     : ---------1--10-----
111     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
112     : ----------11--0----
112     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
113     : ---------1----10---
113     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
114     : ----------1--1--0--
114     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
115     : ---------1--1--0---
115     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
116     : ----------11----0--
116     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

part_sig: ('acceptor$0$promise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 15 =====================
size : 6
num_suborbits: 1
117 (*) : ---------1----1-1--
117     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
118     : ----------1--1-1---
118     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
119     : ---------1--1---1--
119     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
120     : ----------11---1---
120     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
121     : ---------1--1-1----
121     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
122     : ----------11-1-----
122     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$0, proposer$0$promise$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1; proposer$0$promise$1': [proposer$0$promise$1$0; proposer$0$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1; proposer$0$promise$1': proposer$0$promise$1$0; proposer$0$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)', 'promise(ACCEPTOR1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR1,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 16 =====================
size : 6
num_suborbits: 1
123 (*) : ----0-1--1---------
123     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
124     : -----01---1--------
124     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
125     : --0----1-1---------
125     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
126     : ---0---1--1--------
126     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
127     : 0-------11---------
127     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
128     : -0------1-1--------
128     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor0)', 'leader(proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor0)', 'leader(proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$didNotPromise': 1, '0$leader': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', 'didNotPromise(ACCEPTOR0)', '~member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0)


=== Prime Orbit 17 =====================
size : 6
num_suborbits: 1
129 (*) : ----0----1-0-------
129     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
130     : -----0----1-0------
130     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
131     : --0------1---0-----
131     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
132     : ---0------1---0----
132     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
133     : 0--------1-----0---
133     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
134     : -0--------1-----0--
134     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer0)', '~promise(acceptor0,proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer0)', '~promise(acceptor0,proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '1$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$member$0; acceptor$1$promise$0': [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$member$0; acceptor$1$promise$0': acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | member(ACCEPTOR0,QUORUM0)


=== Prime Orbit 18 =====================
size : 6
num_suborbits: 1
135 (*) : ----0----1--1------
135     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
136     : -----0----11-------
136     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
137     : --0------1----1----
137     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
138     : ---0------1--1-----
138     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
139     : 0--------1------1--
139     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
140     : -0--------1----1---
140     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer0)', 'promise(acceptor0,proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer0)', 'promise(acceptor0,proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '0$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)', '~member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,QUORUM0,PROPOSER1. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | member(ACCEPTOR0,QUORUM0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 19 =====================
size : 6
num_suborbits: 1
141 (*) : ------11-1---------
141     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
142     : ------11--1--------
142     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
143     : ------1-11---------
143     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
144     : ------1-1-1--------
144     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
145     : -------111---------
145     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
146     : -------11-1--------
146     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1', 'proposer$0$leader$0$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'0$didNotPromise': 2, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'didNotPromise(ACCEPTOR1)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR1) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 24 =====================
size : 6
num_suborbits: 1
174 (*) : -------0-----0----0
174     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
175     : -------0------0--0-
175     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
176     : --------0------0--0
176     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
177     : --------0-------00-
177     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
178     : ------0----0------0
178     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
179     : ------0-----0----0-
179     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$0]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$1$promise$1$0, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$1$promise$1$0 | proposer$1$start$0$0}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$1$promise$1$0 | proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$1$promise$1$0, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$1$promise$1$0 | proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER0)', '~start(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 25 =====================
size : 3
num_suborbits: 1
180 (*) : --------0--------00
180     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
181     : -------0---------00
181     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
182     : ------0----------00
182     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$1]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$1$start$0$0 | proposer$1$start$0$1}

part_sig: ('acceptor$1$didNotPromise$0$0', 'proposer$1$start$0$0 | proposer$1$start$0$1')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$start': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$1$start$0$0 | proposer$1$start$0$1}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0': [acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0': acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))


=== Prime Orbit 26 =====================
size : 12
num_suborbits: 1
183 (*) : 1---0---0---------0
183     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
184     : -1---0--0--------0-
184     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
185     : --1-0--0----------0
185     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
186     : ---1-0-0---------0-
186     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
187     : 1-0-----0---------0
187     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
188     : -1-0----0--------0-
188     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
189     : --0-1-0-----------0
189     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
190     : ---0-10----------0-
190     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
191     : 0-1----0----------0
191     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
192     : -0-1---0---------0-
192     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
193     : 0---1-0-----------0
193     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
194     : -0---10----------0-
194     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$chosenAt$1$0, proposer$1$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'0$chosenAt': 1, '1$chosenAt': 1, '1$didNotPromise': 1, '1$start': 1, '1$member': 1, '0$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM1)', 'chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER0)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER1)', '~member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER0,PROPOSER1,ACCEPTOR0,QUORUM0. ~member(ACCEPTOR0,QUORUM1) | ~chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | didNotPromise(ACCEPTOR0) | start(PROPOSER1) | member(ACCEPTOR0,QUORUM0) | (PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1)


=== Prime Orbit 28 =====================
size : 12
num_suborbits: 1
207 (*) : ----0---0----1----0
207     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
208     : -----0--0-----1--0-
208     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
209     : ----0--0-------1--0
209     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
210     : -----0-0--------10-
210     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
211     : --0-----0--1------0
211     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
212     : ---0----0---1----0-
212     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
213     : --0---0--------1--0
213     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
214     : ---0--0---------10-
214     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
215     : 0------0---1------0
215     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
216     : -0-----0----1----0-
216     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
217     : 0-----0------1----0
217     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
218     : -0----0-------1--0-
218     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'promise(acceptor1,proposer0)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'promise(acceptor1,proposer0)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '0$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$promise$0$0], 'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$promise$0$0, 'acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$didNotPromise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR1,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', 'promise(ACCEPTOR0,PROPOSER0)', '~didNotPromise(ACCEPTOR1)', '~start(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER0,PROPOSER1,ACCEPTOR0,QUORUM0. ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | didNotPromise(ACCEPTOR1) | start(PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
219 (*) : ----0--00---------0
219     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
220     : -----0-00--------0-
220     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
221     : --0---0-0---------0
221     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
222     : ---0--0-0--------0-
222     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
223     : 0-----00----------0
223     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
224     : -0----00---------0-
224     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR1,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER0,PROPOSER1,ACCEPTOR0,QUORUM0. ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR1) | didNotPromise(ACCEPTOR0) | start(PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
237 (*) : -0---0----1---1----
237     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
238     : 0---0----1---1-----
238     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
239     : ---0-0----1-----1--
239     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
240     : --0-0----1-----1---
240     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
241     : -0-0------1-1------
241     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
242     : 0-0------1-1-------
242     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor1,proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor1,proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '0$leader': 1, '0$promise': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$1, quorum$0$member$1$1, quorum$1$chosenAt$0$0]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', 'promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER0,ACCEPTOR0,QUORUM0. ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | QUORUM0 = QUORUM1


=== Prime Orbit 32 =====================
size : 2
num_suborbits: 1
243 (*) : -0-0-0----1--------
243     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
244     : 0-0-0----1---------
244     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

part_sig: ('proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2', 'quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'1$chosenAt': 3, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.exists

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))


=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
245 (*) : --0-0---01------0--
245     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
246     : ---0-0--0-1----0---
246     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
247     : 0---0--0-1----0----
247     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
248     : -0---0-0--1--0-----
248     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
249     : 0-0---0--1--0------
249     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
250     : -0-0--0---10-------
250     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor2,proposer1)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$promise$1$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0', 'quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor2,proposer1)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$1, quorum$0$member$1$1, quorum$1$chosenAt$0$0]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$promise$1': proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER0)', '~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER0,PROPOSER1,ACCEPTOR0,QUORUM0. ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1)


=== Prime Orbit 34 =====================
size : 6
num_suborbits: 1
251 (*) : 0-0---0--1--------0
251     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
252     : -0-0--0---1------0-
252     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
253     : 0---0--0-1--------0
253     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
254     : -0---0-0--1------0-
254     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
255     : --0-0---01--------0
255     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
256     : ---0-0--0-1------0-
256     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER0)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER0,PROPOSER1,ACCEPTOR0,QUORUM0. ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | didNotPromise(ACCEPTOR0) | start(PROPOSER1) | (PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1)


=======================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

=======================================================================================================================


=== Prime Orbit 7 =====================
size : 3
num_suborbits: 1
63 (*) : ---------------11--
63     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
64     : -------------11----
64     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
65     : -----------11------
65     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
num_forall :   1
num_exists :   1
num_literals : 1
quantified form : forall ACCEPTOR0. (exists PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0))
qcost : 3




=== Prime Orbit 3 =====================
size : 6
num_suborbits: 1
36 (*) : ---1-----1---------
36     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
37     : --1-------1--------
37     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
38     : -1-------1---------
38     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
39     : 1---------1--------
39     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
40     : -----1---1---------
40     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
41     : ----1-----1--------
41     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER0,QUORUM0,PROPOSER1. ~leader(PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 5 =====================
size : 6
num_suborbits: 1
51 (*) : ---1--------------0
51     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
52     : --1--------------0-
52     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
53     : -1----------------0
53     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
54     : 1----------------0-
54     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
55     : -----1------------0
55     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
56     : ----1------------0-
56     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,QUORUM0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0)
qcost : 4




=== Prime Orbit 8 =====================
size : 6
num_suborbits: 1
66 (*) : -----------1-----0-
66     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
67     : ------------1-----0
67     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
68     : -------------1---0-
68     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
69     : --------------1---0
69     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
70     : ---------------1-0-
70     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
71     : ----------------1-0
71     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 9 =====================
size : 2
num_suborbits: 1
72 (*) : ---------1-------0-
72     : ['leader(proposer0)', '~start(proposer0)']
73     : ----------1-------0
73     : ['leader(proposer1)', '~start(proposer1)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)
qcost : 3




=== Prime Orbit 10 =====================
size : 1
num_suborbits: 1
74 (*) : ---------11--------
74     : ['leader(proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   1
num_literals : 1
quantified form : exists PROPOSER0. ~leader(PROPOSER0)
qcost : 2




=== Prime Orbit 11 =====================
size : 12
num_suborbits: 1
75 (*) : ------1--1-----0---
75     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
76     : ------1---1-----0--
76     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
77     : ------1--1---0-----
77     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
78     : ------1---1---0----
78     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
79     : -------1-1-----0---
79     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
80     : -------1--1-----0--
80     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
81     : -------1-1-0-------
81     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
82     : -------1--1-0------
82     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
83     : --------11---0-----
83     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
84     : --------1-1---0----
84     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
85     : --------11-0-------
85     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
86     : --------1-1-0------
86     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 12 =====================
size : 12
num_suborbits: 1
87 (*) : ------1--1------1--
87     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
88     : ------1---1----1---
88     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
89     : ------1--1----1----
89     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
90     : ------1---1--1-----
90     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
91     : -------1-1------1--
91     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
92     : -------1--1----1---
92     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
93     : -------1-1--1------
93     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
94     : -------1--11-------
94     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
95     : --------11----1----
95     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
96     : --------1-1--1-----
96     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
97     : --------11--1------
97     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
98     : --------1-11-------
98     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ~promise(ACCEPTOR1,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 13 =====================
size : 6
num_suborbits: 1
99 (*) : ---------1-0---0---
99     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
100     : ----------1-0---0--
100     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
101     : ---------1-0-0-----
101     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
102     : ----------1-0-0----
102     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
103     : ---------1---0-0---
103     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
104     : ----------1---0-0--
104     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 14 =====================
size : 12
num_suborbits: 1
105 (*) : ---------1-0----1--
105     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
106     : ----------1-0--1---
106     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
107     : ---------1-0--1----
107     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
108     : ----------1-01-----
108     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
109     : ---------1---0--1--
109     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
110     : ----------1---01---
110     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
111     : ---------1--10-----
111     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
112     : ----------11--0----
112     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
113     : ---------1----10---
113     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
114     : ----------1--1--0--
114     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
115     : ---------1--1--0---
115     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
116     : ----------11----0--
116     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 15 =====================
size : 6
num_suborbits: 1
117 (*) : ---------1----1-1--
117     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
118     : ----------1--1-1---
118     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
119     : ---------1--1---1--
119     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
120     : ----------11---1---
120     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
121     : ---------1--1-1----
121     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
122     : ----------11-1-----
122     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR1,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 16 =====================
size : 6
num_suborbits: 1
123 (*) : ----0-1--1---------
123     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
124     : -----01---1--------
124     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
125     : --0----1-1---------
125     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
126     : ---0---1--1--------
126     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
127     : 0-------11---------
127     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
128     : -0------1-1--------
128     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0)
qcost : 7




=== Prime Orbit 17 =====================
size : 6
num_suborbits: 1
129 (*) : ----0----1-0-------
129     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
130     : -----0----1-0------
130     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
131     : --0------1---0-----
131     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
132     : ---0------1---0----
132     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
133     : 0--------1-----0---
133     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
134     : -0--------1-----0--
134     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | member(ACCEPTOR0,QUORUM0)
qcost : 7




=== Prime Orbit 18 =====================
size : 6
num_suborbits: 1
135 (*) : ----0----1--1------
135     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
136     : -----0----11-------
136     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
137     : --0------1----1----
137     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
138     : ---0------1--1-----
138     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
139     : 0--------1------1--
139     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
140     : -0--------1----1---
140     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,ACCEPTOR0,QUORUM0,PROPOSER1. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | member(ACCEPTOR0,QUORUM0) | PROPOSER0 = PROPOSER1
qcost : 9




=== Prime Orbit 19 =====================
size : 6
num_suborbits: 1
141 (*) : ------11-1---------
141     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
142     : ------11--1--------
142     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
143     : ------1-11---------
143     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
144     : ------1-1-1--------
144     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
145     : -------111---------
145     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
146     : -------11-1--------
146     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR1) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 24 =====================
size : 6
num_suborbits: 1
174 (*) : -------0-----0----0
174     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
175     : -------0------0--0-
175     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
176     : --------0------0--0
176     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
177     : --------0-------00-
177     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
178     : ------0----0------0
178     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
179     : ------0-----0----0-
179     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 7




=== Prime Orbit 25 =====================
size : 3
num_suborbits: 1
180 (*) : --------0--------00
180     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
181     : -------0---------00
181     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
182     : ------0----------00
182     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))
qcost : 4




=== Prime Orbit 26 =====================
size : 12
num_suborbits: 1
183 (*) : 1---0---0---------0
183     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
184     : -1---0--0--------0-
184     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
185     : --1-0--0----------0
185     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
186     : ---1-0-0---------0-
186     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
187     : 1-0-----0---------0
187     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
188     : -1-0----0--------0-
188     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
189     : --0-1-0-----------0
189     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
190     : ---0-10----------0-
190     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
191     : 0-1----0----------0
191     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
192     : -0-1---0---------0-
192     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
193     : 0---1-0-----------0
193     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
194     : -0---10----------0-
194     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   5
num_exists :   0
num_literals : 8
quantified form : forall QUORUM1,PROPOSER0,PROPOSER1,ACCEPTOR0,QUORUM0. ~member(ACCEPTOR0,QUORUM1) | ~chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | didNotPromise(ACCEPTOR0) | start(PROPOSER1) | member(ACCEPTOR0,QUORUM0) | (PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1)
qcost : 13




=== Prime Orbit 28 =====================
size : 12
num_suborbits: 1
207 (*) : ----0---0----1----0
207     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
208     : -----0--0-----1--0-
208     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
209     : ----0--0-------1--0
209     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
210     : -----0-0--------10-
210     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
211     : --0-----0--1------0
211     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
212     : ---0----0---1----0-
212     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
213     : --0---0--------1--0
213     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
214     : ---0--0---------10-
214     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
215     : 0------0---1------0
215     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
216     : -0-----0----1----0-
216     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
217     : 0-----0------1----0
217     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
218     : -0----0-------1--0-
218     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   5
num_exists :   0
num_literals : 8
quantified form : forall ACCEPTOR1,PROPOSER0,PROPOSER1,ACCEPTOR0,QUORUM0. ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | didNotPromise(ACCEPTOR1) | start(PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 13




=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
219 (*) : ----0--00---------0
219     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
220     : -----0-00--------0-
220     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
221     : --0---0-0---------0
221     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
222     : ---0--0-0--------0-
222     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
223     : 0-----00----------0
223     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
224     : -0----00---------0-
224     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
num_forall :   5
num_exists :   0
num_literals : 8
quantified form : forall ACCEPTOR1,PROPOSER0,PROPOSER1,ACCEPTOR0,QUORUM0. ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR1) | didNotPromise(ACCEPTOR0) | start(PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 13




=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
237 (*) : -0---0----1---1----
237     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
238     : 0---0----1---1-----
238     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
239     : ---0-0----1-----1--
239     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
240     : --0-0----1-----1---
240     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
241     : -0-0------1-1------
241     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
242     : 0-0------1-1-------
242     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall QUORUM1,PROPOSER0,ACCEPTOR0,QUORUM0. ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | QUORUM0 = QUORUM1
qcost : 11




=== Prime Orbit 32 =====================
size : 2
num_suborbits: 1
243 (*) : -0-0-0----1--------
243     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
244     : 0-0-0----1---------
244     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))
qcost : 4




=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
245 (*) : --0-0---01------0--
245     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
246     : ---0-0--0-1----0---
246     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
247     : 0---0--0-1----0----
247     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
248     : -0---0-0--1--0-----
248     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
249     : 0-0---0--1--0------
249     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
250     : -0-0--0---10-------
250     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
num_forall :   5
num_exists :   0
num_literals : 9
quantified form : forall QUORUM1,PROPOSER0,PROPOSER1,ACCEPTOR0,QUORUM0. ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1)
qcost : 14




=== Prime Orbit 34 =====================
size : 6
num_suborbits: 1
251 (*) : 0-0---0--1--------0
251     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
252     : -0-0--0---1------0-
252     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
253     : 0---0--0-1--------0
253     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
254     : -0---0-0--1------0-
254     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
255     : --0-0---01--------0
255     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
256     : ---0-0--0-1------0-
256     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   5
num_exists :   0
num_literals : 9
quantified form : forall QUORUM1,PROPOSER0,PROPOSER1,ACCEPTOR0,QUORUM0. ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | didNotPromise(ACCEPTOR0) | start(PROPOSER1) | (PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1)
qcost : 14



[QRM NOTE]: Time elapsed since start: 7.411 seconds

[QRM NOTE]: Time elapsed since last: 0.158 seconds

[QRM NOTE]: Peak memory: 2324548 bytes


======================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

======================================================================================================


New level: 1
 pending : [3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34]
 solution : [7]


Before reduction : 
 pending  : [3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34]
 solution : [7]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, 67108864), (10, 67108864), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, 67108864), (10, 67108864), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34]
 solution : [7]


Solution : [7] has cost 3.


Decide in level 1 among pending : [3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, 67108864), (10, 67108864), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 9 with phase True at level 1

After decision at level 1
 pending : [3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34]
 solution : [7, 9]


New level: 2
 pending : [3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34]
 solution : [7, 9]


Before reduction : 
 pending  : [3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34]
 solution : [7, 9]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, 67108864), (10, 67108864), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, 16777216), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34]
 solution : [7, 9]


Solution : [7, 9] has cost 6.


Decide in level 2 among pending : [3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, 16777216), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 10 with phase True at level 2

After decision at level 2
 pending : [3, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34]
 solution : [7, 9, 10]


New level: 3
 pending : [3, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34]
 solution : [7, 9, 10]


Before reduction : 
 pending  : [3, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34]
 solution : [7, 9, 10]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, 16777216), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [3, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34]
 solution : [7, 9, 10]


Solution : [7, 9, 10] has cost 8.


Decide in level 3 among pending : [3, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 25 with phase True at level 3

After decision at level 3
 pending : [3, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 28, 29, 31, 32, 33, 34]
 solution : [7, 9, 10, 25]


New level: 4
 pending : [3, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 28, 29, 31, 32, 33, 34]
 solution : [7, 9, 10, 25]


Before reduction : 
 pending  : [3, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 28, 29, 31, 32, 33, 34]
 solution : [7, 9, 10, 25]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, 4194304), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [3, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 28, 29, 31, 32, 33, 34]
 solution : [7, 9, 10, 25]


Solution : [7, 9, 10, 25] has cost 12.


Decide in level 4 among pending : [3, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 28, 29, 31, 32, 33, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, 4194304), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 29 with phase True at level 4

After decision at level 4
 pending : [3, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 28, 31, 32, 33, 34]
 solution : [7, 9, 10, 25, 29]


New level: 5
 pending : [3, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 28, 31, 32, 33, 34]
 solution : [7, 9, 10, 25, 29]


Before reduction : 
 pending  : [3, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 28, 31, 32, 33, 34]
 solution : [7, 9, 10, 25, 29]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, 4194304), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, 0), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 16384), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : {26, 28, 5}

After reduction : 
 pending  : [3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 31, 32, 33, 34]
 solution : [7, 9, 10, 25, 29]


Before reduction : 
 pending  : [3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 31, 32, 33, 34]
 solution : [7, 9, 10, 25, 29]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, 0), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 16384), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 16384), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 31, 32, 33, 34]
 solution : [7, 9, 10, 25, 29]


Solution : [7, 9, 10, 25, 29] has cost 25.


Decide in level 5 among pending : [3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 31, 32, 33, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 16384), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 31, 33, 34]
 solution : [7, 9, 10, 25, 29, 32]


New level: 6
 pending : [3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 31, 33, 34]
 solution : [7, 9, 10, 25, 29, 32]


Before reduction : 
 pending  : [3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 31, 33, 34]
 solution : [7, 9, 10, 25, 29, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 16384), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {33, 34, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31}

After reduction : 
 pending  : [8, 24]
 solution : [7, 9, 10, 25, 29, 32]


Before reduction : 
 pending  : [8, 24]
 solution : [7, 9, 10, 25, 29, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [8, 24]
 solution : [7, 9, 10, 25, 29, 32]


Solution : [7, 9, 10, 25, 29, 32] has cost 29.


Decide in level 6 among pending : [8, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 8 with phase True at level 6

After decision at level 6
 pending : [24]
 solution : [7, 9, 10, 25, 29, 32, 8]


New level: 7
 pending : [24]
 solution : [7, 9, 10, 25, 29, 32, 8]


Before reduction : 
 pending  : [24]
 solution : [7, 9, 10, 25, 29, 32, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {24}

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 29, 32, 8]


Before reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 29, 32, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 29, 32, 8]


Solution : [7, 9, 10, 25, 29, 32, 8] has cost 33.


Before backtrack at level 7
 pending : []
 solution : [7, 9, 10, 25, 29, 32, 8]

After backtrack at level 7
 pending : [24]
 solution : [7, 9, 10, 25, 29, 32, 8]


Invert decision for 8 at level 6


New level: 7
 pending : [24]
 solution : [7, 9, 10, 25, 29, 32]


Before reduction : 
 pending  : [24]
 solution : [7, 9, 10, 25, 29, 32]

Essensial at level 7 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 29, 32, 24]


Before reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 29, 32, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 29, 32, 24]


Solution : [7, 9, 10, 25, 29, 32, 24] has cost 36.


Before backtrack at level 7
 pending : []
 solution : [7, 9, 10, 25, 29, 32, 24]

After backtrack at level 7
 pending : [24]
 solution : [7, 9, 10, 25, 29, 32]


Before backtrack at level 6
 pending : [24]
 solution : [7, 9, 10, 25, 29, 32]

After backtrack at level 6
 pending : [24, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [24, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29]


Before reduction : 
 pending  : [24, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 16384), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29]


Solution : [7, 9, 10, 25, 29] has cost 25.


Decide in level 6 among pending : [24, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31, 33, 34, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 16384), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 6

After decision at level 6
 pending : [24, 3, 11, 12, 13, 14, 15, 16, 18, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29, 17]


New level: 7
 pending : [24, 3, 11, 12, 13, 14, 15, 16, 18, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29, 17]


Before reduction : 
 pending  : [24, 3, 11, 12, 13, 14, 15, 16, 18, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 16384), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {33, 34, 3, 11, 12, 13, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : [24, 8]
 solution : [7, 9, 10, 25, 29, 17]


Before reduction : 
 pending  : [24, 8]
 solution : [7, 9, 10, 25, 29, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [24, 8]
 solution : [7, 9, 10, 25, 29, 17]


Solution : [7, 9, 10, 25, 29, 17] has cost 32.


Decide in level 7 among pending : [24, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [8]
 solution : [7, 9, 10, 25, 29, 17, 24]


New level: 8
 pending : [8]
 solution : [7, 9, 10, 25, 29, 17, 24]


Before reduction : 
 pending  : [8]
 solution : [7, 9, 10, 25, 29, 17, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {8}

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 29, 17, 24]


Before reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 29, 17, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 29, 17, 24]


Solution : [7, 9, 10, 25, 29, 17, 24] has cost 39.


Before backtrack at level 8
 pending : []
 solution : [7, 9, 10, 25, 29, 17, 24]

After backtrack at level 8
 pending : [8]
 solution : [7, 9, 10, 25, 29, 17, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [8]
 solution : [7, 9, 10, 25, 29, 17]


Before reduction : 
 pending  : [8]
 solution : [7, 9, 10, 25, 29, 17]

Essensial at level 8 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 29, 17, 8]


Before reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 29, 17, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 29, 17, 8]


Solution : [7, 9, 10, 25, 29, 17, 8] has cost 36.


Before backtrack at level 8
 pending : []
 solution : [7, 9, 10, 25, 29, 17, 8]

After backtrack at level 8
 pending : [8]
 solution : [7, 9, 10, 25, 29, 17]


Before backtrack at level 7
 pending : [8]
 solution : [7, 9, 10, 25, 29, 17]

After backtrack at level 7
 pending : [8, 3, 11, 12, 13, 14, 15, 16, 18, 19, 31, 33, 34, 24]
 solution : [7, 9, 10, 25, 29, 17]


Invert decision for 17 at level 6


New level: 7
 pending : [8, 3, 11, 12, 13, 14, 15, 16, 18, 19, 31, 33, 34, 24]
 solution : [7, 9, 10, 25, 29]


Before reduction : 
 pending  : [8, 3, 11, 12, 13, 14, 15, 16, 18, 19, 31, 33, 34, 24]
 solution : [7, 9, 10, 25, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 16384), (16, 131072), (17, -1), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 3, 11, 12, 13, 14, 15, 16, 18, 19, 31, 33, 34, 24]
 solution : [7, 9, 10, 25, 29]


Solution : [7, 9, 10, 25, 29] has cost 25.


Decide in level 7 among pending : [8, 3, 11, 12, 13, 14, 15, 16, 18, 19, 31, 33, 34, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 16384), (16, 131072), (17, -1), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 7

After decision at level 7
 pending : [8, 3, 11, 12, 14, 15, 16, 18, 19, 31, 33, 34, 24]
 solution : [7, 9, 10, 25, 29, 13]


New level: 8
 pending : [8, 3, 11, 12, 14, 15, 16, 18, 19, 31, 33, 34, 24]
 solution : [7, 9, 10, 25, 29, 13]


Before reduction : 
 pending  : [8, 3, 11, 12, 14, 15, 16, 18, 19, 31, 33, 34, 24]
 solution : [7, 9, 10, 25, 29, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 16384), (16, 131072), (17, -1), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {33, 34, 3, 11, 12, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : [8, 24]
 solution : [7, 9, 10, 25, 29, 13]


Before reduction : 
 pending  : [8, 24]
 solution : [7, 9, 10, 25, 29, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 24]
 solution : [7, 9, 10, 25, 29, 13]


Solution : [7, 9, 10, 25, 29, 13] has cost 32.


Decide in level 8 among pending : [8, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 8 with phase True at level 8

After decision at level 8
 pending : [24]
 solution : [7, 9, 10, 25, 29, 13, 8]


New level: 9
 pending : [24]
 solution : [7, 9, 10, 25, 29, 13, 8]


Before reduction : 
 pending  : [24]
 solution : [7, 9, 10, 25, 29, 13, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {24}

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 29, 13, 8]


Before reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 29, 13, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 29, 13, 8]


Solution : [7, 9, 10, 25, 29, 13, 8] has cost 36.


Before backtrack at level 9
 pending : []
 solution : [7, 9, 10, 25, 29, 13, 8]

After backtrack at level 9
 pending : [24]
 solution : [7, 9, 10, 25, 29, 13, 8]


Invert decision for 8 at level 8


New level: 9
 pending : [24]
 solution : [7, 9, 10, 25, 29, 13]


Before reduction : 
 pending  : [24]
 solution : [7, 9, 10, 25, 29, 13]

Essensial at level 9 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 29, 13, 24]


Before reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 29, 13, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 29, 13, 24]


Solution : [7, 9, 10, 25, 29, 13, 24] has cost 39.


Before backtrack at level 9
 pending : []
 solution : [7, 9, 10, 25, 29, 13, 24]

After backtrack at level 9
 pending : [24]
 solution : [7, 9, 10, 25, 29, 13]


Before backtrack at level 8
 pending : [24]
 solution : [7, 9, 10, 25, 29, 13]

After backtrack at level 8
 pending : [24, 3, 11, 12, 14, 15, 16, 18, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29, 13]


Invert decision for 13 at level 7


New level: 8
 pending : [24, 3, 11, 12, 14, 15, 16, 18, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29]


Before reduction : 
 pending  : [24, 3, 11, 12, 14, 15, 16, 18, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, -1), (14, 262144), (15, 16384), (16, 131072), (17, -1), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [24, 3, 11, 12, 14, 15, 16, 18, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29]


Solution : [7, 9, 10, 25, 29] has cost 25.


Decide in level 8 among pending : [24, 3, 11, 12, 14, 15, 16, 18, 19, 31, 33, 34, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, -1), (14, 262144), (15, 16384), (16, 131072), (17, -1), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 8

After decision at level 8
 pending : [24, 3, 11, 12, 14, 15, 16, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29, 18]


New level: 9
 pending : [24, 3, 11, 12, 14, 15, 16, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29, 18]


Before reduction : 
 pending  : [24, 3, 11, 12, 14, 15, 16, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, -1), (14, 262144), (15, 16384), (16, 131072), (17, -1), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, 0), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {3, 12, 14, 15}

After reduction : 
 pending  : [24, 11, 16, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29, 18]


Before reduction : 
 pending  : [24, 11, 16, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, 0), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [24, 11, 16, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29, 18]


Solution : [7, 9, 10, 25, 29, 18] has cost 34.


Before backtrack at level 9
 pending : [24, 11, 16, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29, 18]

After backtrack at level 9
 pending : [24, 11, 16, 19, 31, 33, 34, 8, 3, 12, 14, 15]
 solution : [7, 9, 10, 25, 29, 18]


Invert decision for 18 at level 8


New level: 9
 pending : [24, 11, 16, 19, 31, 33, 34, 8, 3, 12, 14, 15]
 solution : [7, 9, 10, 25, 29]


Before reduction : 
 pending  : [24, 11, 16, 19, 31, 33, 34, 8, 3, 12, 14, 15]
 solution : [7, 9, 10, 25, 29]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, -1), (14, 262144), (15, 16384), (16, 131072), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [24, 11, 16, 19, 31, 33, 34, 8, 3, 12, 14, 15]
 solution : [7, 9, 10, 25, 29]


Solution : [7, 9, 10, 25, 29] has cost 25.


Decide in level 9 among pending : [24, 11, 16, 19, 31, 33, 34, 8, 3, 12, 14, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, -1), (14, 262144), (15, 16384), (16, 131072), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 14 with phase True at level 9

After decision at level 9
 pending : [24, 11, 16, 19, 31, 33, 34, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29, 14]


New level: 10
 pending : [24, 11, 16, 19, 31, 33, 34, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29, 14]


Before reduction : 
 pending  : [24, 11, 16, 19, 31, 33, 34, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, -1), (14, 262144), (15, 16384), (16, 131072), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, -1), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {3, 12, 15}

After reduction : 
 pending  : [24, 11, 16, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29, 14]


Before reduction : 
 pending  : [24, 11, 16, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, -1), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [24, 11, 16, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29, 14]


Solution : [7, 9, 10, 25, 29, 14] has cost 34.


Before backtrack at level 10
 pending : [24, 11, 16, 19, 31, 33, 34, 8]
 solution : [7, 9, 10, 25, 29, 14]

After backtrack at level 10
 pending : [24, 11, 16, 19, 31, 33, 34, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29, 14]


Invert decision for 14 at level 9


New level: 10
 pending : [24, 11, 16, 19, 31, 33, 34, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29]


Before reduction : 
 pending  : [24, 11, 16, 19, 31, 33, 34, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, -1), (14, -1), (15, 16384), (16, 131072), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [24, 11, 16, 19, 31, 33, 34, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29]


Solution : [7, 9, 10, 25, 29] has cost 25.


Decide in level 10 among pending : [24, 11, 16, 19, 31, 33, 34, 8, 3, 12, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, -1), (14, -1), (15, 16384), (16, 131072), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 16 with phase True at level 10

After decision at level 10
 pending : [24, 11, 19, 31, 33, 34, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29, 16]


New level: 11
 pending : [24, 11, 19, 31, 33, 34, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29, 16]


Before reduction : 
 pending  : [24, 11, 19, 31, 33, 34, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, -1), (14, -1), (15, 16384), (16, 131072), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {19, 34, 11, 12}

After reduction : 
 pending  : [24, 31, 33, 8, 3, 15]
 solution : [7, 9, 10, 25, 29, 16]


Before reduction : 
 pending  : [24, 31, 33, 8, 3, 15]
 solution : [7, 9, 10, 25, 29, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [24, 31, 33, 8, 3, 15]
 solution : [7, 9, 10, 25, 29, 16]


Solution : [7, 9, 10, 25, 29, 16] has cost 32.


Decide in level 11 among pending : [24, 31, 33, 8, 3, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 3 with phase True at level 11

After decision at level 11
 pending : [24, 31, 33, 8, 15]
 solution : [7, 9, 10, 25, 29, 16, 3]


New level: 12
 pending : [24, 31, 33, 8, 15]
 solution : [7, 9, 10, 25, 29, 16, 3]


Before reduction : 
 pending  : [24, 31, 33, 8, 15]
 solution : [7, 9, 10, 25, 29, 16, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {33, 15, 31}

After reduction : 
 pending  : [24, 8]
 solution : [7, 9, 10, 25, 29, 16, 3]


Before reduction : 
 pending  : [24, 8]
 solution : [7, 9, 10, 25, 29, 16, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [24, 8]
 solution : [7, 9, 10, 25, 29, 16, 3]


Solution : [7, 9, 10, 25, 29, 16, 3] has cost 38.


Before backtrack at level 12
 pending : [24, 8]
 solution : [7, 9, 10, 25, 29, 16, 3]

After backtrack at level 12
 pending : [24, 8, 31, 33, 15]
 solution : [7, 9, 10, 25, 29, 16, 3]


Invert decision for 3 at level 11


New level: 12
 pending : [24, 8, 31, 33, 15]
 solution : [7, 9, 10, 25, 29, 16]


Before reduction : 
 pending  : [24, 8, 31, 33, 15]
 solution : [7, 9, 10, 25, 29, 16]

Essensial at level 12 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {33, 31}

After reduction : 
 pending  : [24, 8]
 solution : [7, 9, 10, 25, 29, 16, 15]


Before reduction : 
 pending  : [24, 8]
 solution : [7, 9, 10, 25, 29, 16, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [24, 8]
 solution : [7, 9, 10, 25, 29, 16, 15]


Solution : [7, 9, 10, 25, 29, 16, 15] has cost 41.


Before backtrack at level 12
 pending : [24, 8]
 solution : [7, 9, 10, 25, 29, 16, 15]

After backtrack at level 12
 pending : [24, 8, 15, 31, 33]
 solution : [7, 9, 10, 25, 29, 16]


Before backtrack at level 11
 pending : [24, 8, 15, 31, 33]
 solution : [7, 9, 10, 25, 29, 16]

After backtrack at level 11
 pending : [24, 8, 15, 31, 33, 11, 19, 34, 12, 3]
 solution : [7, 9, 10, 25, 29, 16]


Invert decision for 16 at level 10


New level: 11
 pending : [24, 8, 15, 31, 33, 11, 19, 34, 12, 3]
 solution : [7, 9, 10, 25, 29]


Before reduction : 
 pending  : [24, 8, 15, 31, 33, 11, 19, 34, 12, 3]
 solution : [7, 9, 10, 25, 29]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [24, 8, 15, 31, 33, 11, 19, 34, 12, 3]
 solution : [7, 9, 10, 25, 29]


Solution : [7, 9, 10, 25, 29] has cost 25.


Decide in level 11 among pending : [24, 8, 15, 31, 33, 11, 19, 34, 12, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 11 with phase True at level 11

After decision at level 11
 pending : [24, 8, 15, 31, 33, 19, 34, 12, 3]
 solution : [7, 9, 10, 25, 29, 11]


New level: 12
 pending : [24, 8, 15, 31, 33, 19, 34, 12, 3]
 solution : [7, 9, 10, 25, 29, 11]


Before reduction : 
 pending  : [24, 8, 15, 31, 33, 19, 34, 12, 3]
 solution : [7, 9, 10, 25, 29, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {34, 19, 12}

After reduction : 
 pending  : [24, 8, 15, 31, 33, 3]
 solution : [7, 9, 10, 25, 29, 11]


Before reduction : 
 pending  : [24, 8, 15, 31, 33, 3]
 solution : [7, 9, 10, 25, 29, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [24, 8, 15, 31, 33, 3]
 solution : [7, 9, 10, 25, 29, 11]


Solution : [7, 9, 10, 25, 29, 11] has cost 32.


Decide in level 12 among pending : [24, 8, 15, 31, 33, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [24, 8, 31, 33, 3]
 solution : [7, 9, 10, 25, 29, 11, 15]


New level: 13
 pending : [24, 8, 31, 33, 3]
 solution : [7, 9, 10, 25, 29, 11, 15]


Before reduction : 
 pending  : [24, 8, 31, 33, 3]
 solution : [7, 9, 10, 25, 29, 11, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {33, 3, 31}

After reduction : 
 pending  : [24, 8]
 solution : [7, 9, 10, 25, 29, 11, 15]


Before reduction : 
 pending  : [24, 8]
 solution : [7, 9, 10, 25, 29, 11, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 8]
 solution : [7, 9, 10, 25, 29, 11, 15]


Solution : [7, 9, 10, 25, 29, 11, 15] has cost 41.


Before backtrack at level 13
 pending : [24, 8]
 solution : [7, 9, 10, 25, 29, 11, 15]

After backtrack at level 13
 pending : [24, 8, 31, 33, 3]
 solution : [7, 9, 10, 25, 29, 11, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [24, 8, 31, 33, 3]
 solution : [7, 9, 10, 25, 29, 11]


Before reduction : 
 pending  : [24, 8, 31, 33, 3]
 solution : [7, 9, 10, 25, 29, 11]

Essensial at level 13 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {33, 31}

After reduction : 
 pending  : [24, 8]
 solution : [7, 9, 10, 25, 29, 11, 3]


Before reduction : 
 pending  : [24, 8]
 solution : [7, 9, 10, 25, 29, 11, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 8]
 solution : [7, 9, 10, 25, 29, 11, 3]


Solution : [7, 9, 10, 25, 29, 11, 3] has cost 38.


Before backtrack at level 13
 pending : [24, 8]
 solution : [7, 9, 10, 25, 29, 11, 3]

After backtrack at level 13
 pending : [24, 8, 3, 31, 33]
 solution : [7, 9, 10, 25, 29, 11]


Before backtrack at level 12
 pending : [24, 8, 3, 31, 33]
 solution : [7, 9, 10, 25, 29, 11]

After backtrack at level 12
 pending : [24, 8, 3, 31, 33, 19, 34, 12, 15]
 solution : [7, 9, 10, 25, 29, 11]


Invert decision for 11 at level 11


New level: 12
 pending : [24, 8, 3, 31, 33, 19, 34, 12, 15]
 solution : [7, 9, 10, 25, 29]


Before reduction : 
 pending  : [24, 8, 3, 31, 33, 19, 34, 12, 15]
 solution : [7, 9, 10, 25, 29]

Essensial at level 12 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {34}

After reduction : 
 pending  : [24, 8, 3, 31, 33, 12, 15]
 solution : [7, 9, 10, 25, 29, 19]


Before reduction : 
 pending  : [24, 8, 3, 31, 33, 12, 15]
 solution : [7, 9, 10, 25, 29, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [24, 8, 3, 31, 33, 12, 15]
 solution : [7, 9, 10, 25, 29, 19]


Solution : [7, 9, 10, 25, 29, 19] has cost 32.


Decide in level 12 among pending : [24, 8, 3, 31, 33, 12, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 31 with phase True at level 12

After decision at level 12
 pending : [24, 8, 3, 33, 12, 15]
 solution : [7, 9, 10, 25, 29, 19, 31]


New level: 13
 pending : [24, 8, 3, 33, 12, 15]
 solution : [7, 9, 10, 25, 29, 19, 31]


Before reduction : 
 pending  : [24, 8, 3, 33, 12, 15]
 solution : [7, 9, 10, 25, 29, 19, 31]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 512), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {33}

After reduction : 
 pending  : [24, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29, 19, 31]


Before reduction : 
 pending  : [24, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29, 19, 31]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 512), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 512), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29, 19, 31]


Solution : [7, 9, 10, 25, 29, 19, 31] has cost 43.


Before backtrack at level 13
 pending : [24, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29, 19, 31]

After backtrack at level 13
 pending : [24, 8, 3, 12, 15, 33]
 solution : [7, 9, 10, 25, 29, 19, 31]


Invert decision for 31 at level 12


New level: 13
 pending : [24, 8, 3, 12, 15, 33]
 solution : [7, 9, 10, 25, 29, 19]


Before reduction : 
 pending  : [24, 8, 3, 12, 15, 33]
 solution : [7, 9, 10, 25, 29, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 512), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 8, 3, 12, 15, 33]
 solution : [7, 9, 10, 25, 29, 19]


Solution : [7, 9, 10, 25, 29, 19] has cost 32.


Decide in level 13 among pending : [24, 8, 3, 12, 15, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 33 with phase True at level 13

After decision at level 13
 pending : [24, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29, 19, 33]


New level: 14
 pending : [24, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29, 19, 33]


Before reduction : 
 pending  : [24, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29, 19, 33]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 512), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [24, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29, 19, 33]


Solution : [7, 9, 10, 25, 29, 19, 33] has cost 46.


Before backtrack at level 14
 pending : [24, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29, 19, 33]

After backtrack at level 14
 pending : [24, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29, 19, 33]


Invert decision for 33 at level 13


New level: 14
 pending : [24, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29, 19]


Before reduction : 
 pending  : [24, 8, 3, 12, 15]
 solution : [7, 9, 10, 25, 29, 19]

Essensial at level 14 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 512), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [24, 8, 3, 15]
 solution : [7, 9, 10, 25, 29, 19, 12]


Before reduction : 
 pending  : [24, 8, 3, 15]
 solution : [7, 9, 10, 25, 29, 19, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [24, 8, 3, 15]
 solution : [7, 9, 10, 25, 29, 19, 12]


Solution : [7, 9, 10, 25, 29, 19, 12] has cost 41.


Before backtrack at level 14
 pending : [24, 8, 3, 15]
 solution : [7, 9, 10, 25, 29, 19, 12]

After backtrack at level 14
 pending : [24, 8, 3, 15, 12]
 solution : [7, 9, 10, 25, 29, 19]


Before backtrack at level 13
 pending : [24, 8, 3, 15, 12]
 solution : [7, 9, 10, 25, 29, 19]

After backtrack at level 13
 pending : [24, 8, 3, 15, 12, 33]
 solution : [7, 9, 10, 25, 29, 19]


Before backtrack at level 12
 pending : [24, 8, 3, 15, 12, 33]
 solution : [7, 9, 10, 25, 29, 19]

After backtrack at level 12
 pending : [24, 8, 3, 15, 12, 33, 19, 34, 31]
 solution : [7, 9, 10, 25, 29]


Before backtrack at level 11
 pending : [24, 8, 3, 15, 12, 33, 19, 34, 31]
 solution : [7, 9, 10, 25, 29]

After backtrack at level 11
 pending : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11]
 solution : [7, 9, 10, 25, 29]


Before backtrack at level 10
 pending : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11]
 solution : [7, 9, 10, 25, 29]

After backtrack at level 10
 pending : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11, 16]
 solution : [7, 9, 10, 25, 29]


Before backtrack at level 9
 pending : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11, 16]
 solution : [7, 9, 10, 25, 29]

After backtrack at level 9
 pending : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11, 16, 14]
 solution : [7, 9, 10, 25, 29]


Before backtrack at level 8
 pending : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11, 16, 14]
 solution : [7, 9, 10, 25, 29]

After backtrack at level 8
 pending : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11, 16, 14, 18]
 solution : [7, 9, 10, 25, 29]


Before backtrack at level 7
 pending : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11, 16, 14, 18]
 solution : [7, 9, 10, 25, 29]

After backtrack at level 7
 pending : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11, 16, 14, 18, 13]
 solution : [7, 9, 10, 25, 29]


Before backtrack at level 6
 pending : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11, 16, 14, 18, 13]
 solution : [7, 9, 10, 25, 29]

After backtrack at level 6
 pending : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11, 16, 14, 18, 13, 17]
 solution : [7, 9, 10, 25, 29]


Before backtrack at level 5
 pending : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11, 16, 14, 18, 13, 17]
 solution : [7, 9, 10, 25, 29]

After backtrack at level 5
 pending : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11, 16, 14, 18, 13, 17, 5, 26, 28, 32]
 solution : [7, 9, 10, 25, 29]


Invert decision for 29 at level 4


New level: 5
 pending : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11, 16, 14, 18, 13, 17, 5, 26, 28, 32]
 solution : [7, 9, 10, 25]


Before reduction : 
 pending  : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11, 16, 14, 18, 13, 17, 5, 26, 28, 32]
 solution : [7, 9, 10, 25]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11, 16, 14, 18, 13, 17, 5, 26, 28, 32]
 solution : [7, 9, 10, 25]


Solution : [7, 9, 10, 25] has cost 12.


Decide in level 5 among pending : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11, 16, 14, 18, 13, 17, 5, 26, 28, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11, 16, 14, 18, 13, 17, 5, 26, 28]
 solution : [7, 9, 10, 25, 32]


New level: 6
 pending : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11, 16, 14, 18, 13, 17, 5, 26, 28]
 solution : [7, 9, 10, 25, 32]


Before reduction : 
 pending  : [24, 8, 3, 15, 12, 33, 19, 34, 31, 11, 16, 14, 18, 13, 17, 5, 26, 28]
 solution : [7, 9, 10, 25, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {33, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31}

After reduction : 
 pending  : [24, 8, 34, 5, 26, 28]
 solution : [7, 9, 10, 25, 32]


Before reduction : 
 pending  : [24, 8, 34, 5, 26, 28]
 solution : [7, 9, 10, 25, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 8, 34, 5, 26, 28]
 solution : [7, 9, 10, 25, 32]


Solution : [7, 9, 10, 25, 32] has cost 16.


Decide in level 6 among pending : [24, 8, 34, 5, 26, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [8, 34, 5, 26, 28]
 solution : [7, 9, 10, 25, 32, 24]


New level: 7
 pending : [8, 34, 5, 26, 28]
 solution : [7, 9, 10, 25, 32, 24]


Before reduction : 
 pending  : [8, 34, 5, 26, 28]
 solution : [7, 9, 10, 25, 32, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {34, 5, 8, 26, 28}

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 32, 24]


Before reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 32, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 32, 24]


Solution : [7, 9, 10, 25, 32, 24] has cost 23.


Before backtrack at level 7
 pending : []
 solution : [7, 9, 10, 25, 32, 24]

After backtrack at level 7
 pending : [8, 34, 5, 26, 28]
 solution : [7, 9, 10, 25, 32, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [8, 34, 5, 26, 28]
 solution : [7, 9, 10, 25, 32]


Before reduction : 
 pending  : [8, 34, 5, 26, 28]
 solution : [7, 9, 10, 25, 32]

Essensial at level 7 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {34, 26, 28, 5}

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 32, 8]


Before reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 32, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 32, 8]


Solution : [7, 9, 10, 25, 32, 8] has cost 20.


Before backtrack at level 7
 pending : []
 solution : [7, 9, 10, 25, 32, 8]

After backtrack at level 7
 pending : [8, 34, 5, 26, 28]
 solution : [7, 9, 10, 25, 32]


Before backtrack at level 6
 pending : [8, 34, 5, 26, 28]
 solution : [7, 9, 10, 25, 32]

After backtrack at level 6
 pending : [8, 34, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 17, 24]
 solution : [7, 9, 10, 25, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [8, 34, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 17, 24]
 solution : [7, 9, 10, 25]


Before reduction : 
 pending  : [8, 34, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 17, 24]
 solution : [7, 9, 10, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [8, 34, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 17, 24]
 solution : [7, 9, 10, 25]


Solution : [7, 9, 10, 25] has cost 12.


Decide in level 6 among pending : [8, 34, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 17, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 34 with phase True at level 6

After decision at level 6
 pending : [8, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 17, 24]
 solution : [7, 9, 10, 25, 34]


New level: 7
 pending : [8, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 17, 24]
 solution : [7, 9, 10, 25, 34]


Before reduction : 
 pending  : [8, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 17, 24]
 solution : [7, 9, 10, 25, 34]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, 2097152), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 512), (27, -1), (28, 16384), (29, -1), (30, -1), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 17, 24]
 solution : [7, 9, 10, 25, 34]


Solution : [7, 9, 10, 25, 34] has cost 26.


Before backtrack at level 7
 pending : [8, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 17, 24]
 solution : [7, 9, 10, 25, 34]

After backtrack at level 7
 pending : [8, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 17, 24]
 solution : [7, 9, 10, 25, 34]


Invert decision for 34 at level 6


New level: 7
 pending : [8, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 17, 24]
 solution : [7, 9, 10, 25]


Before reduction : 
 pending  : [8, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 17, 24]
 solution : [7, 9, 10, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, 2097152), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 512), (27, -1), (28, 16384), (29, -1), (30, -1), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 17, 24]
 solution : [7, 9, 10, 25]


Solution : [7, 9, 10, 25] has cost 12.


Decide in level 7 among pending : [8, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 17, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [8, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 24]
 solution : [7, 9, 10, 25, 17]


New level: 8
 pending : [8, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 24]
 solution : [7, 9, 10, 25, 17]


Before reduction : 
 pending  : [8, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 24]
 solution : [7, 9, 10, 25, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {33, 3, 11, 12, 13, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : [8, 5, 26, 28, 24]
 solution : [7, 9, 10, 25, 17]


Before reduction : 
 pending  : [8, 5, 26, 28, 24]
 solution : [7, 9, 10, 25, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 5, 26, 28, 24]
 solution : [7, 9, 10, 25, 17]


Solution : [7, 9, 10, 25, 17] has cost 19.


Decide in level 8 among pending : [8, 5, 26, 28, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 8 with phase True at level 8

After decision at level 8
 pending : [5, 26, 28, 24]
 solution : [7, 9, 10, 25, 17, 8]


New level: 9
 pending : [5, 26, 28, 24]
 solution : [7, 9, 10, 25, 17, 8]


Before reduction : 
 pending  : [5, 26, 28, 24]
 solution : [7, 9, 10, 25, 17, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {24, 26, 28, 5}

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 17, 8]


Before reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 17, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 17, 8]


Solution : [7, 9, 10, 25, 17, 8] has cost 23.


Before backtrack at level 9
 pending : []
 solution : [7, 9, 10, 25, 17, 8]

After backtrack at level 9
 pending : [5, 26, 28, 24]
 solution : [7, 9, 10, 25, 17, 8]


Invert decision for 8 at level 8


New level: 9
 pending : [5, 26, 28, 24]
 solution : [7, 9, 10, 25, 17]


Before reduction : 
 pending  : [5, 26, 28, 24]
 solution : [7, 9, 10, 25, 17]

Essensial at level 9 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {26, 28, 5}

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 17, 24]


Before reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 17, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 17, 24]


Solution : [7, 9, 10, 25, 17, 24] has cost 26.


Before backtrack at level 9
 pending : []
 solution : [7, 9, 10, 25, 17, 24]

After backtrack at level 9
 pending : [24, 5, 26, 28]
 solution : [7, 9, 10, 25, 17]


Before backtrack at level 8
 pending : [24, 5, 26, 28]
 solution : [7, 9, 10, 25, 17]

After backtrack at level 8
 pending : [24, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 8]
 solution : [7, 9, 10, 25, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [24, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 8]
 solution : [7, 9, 10, 25]


Before reduction : 
 pending  : [24, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 8]
 solution : [7, 9, 10, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, -1), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [24, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 8]
 solution : [7, 9, 10, 25]


Solution : [7, 9, 10, 25] has cost 12.


Decide in level 8 among pending : [24, 5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, -1), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 8]
 solution : [7, 9, 10, 25, 24]


New level: 9
 pending : [5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 8]
 solution : [7, 9, 10, 25, 24]


Before reduction : 
 pending  : [5, 26, 28, 3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13, 8]
 solution : [7, 9, 10, 25, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, -1), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {8, 26, 28, 5}

After reduction : 
 pending  : [3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13]
 solution : [7, 9, 10, 25, 24]


Before reduction : 
 pending  : [3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13]
 solution : [7, 9, 10, 25, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13]
 solution : [7, 9, 10, 25, 24]


Solution : [7, 9, 10, 25, 24] has cost 19.


Decide in level 9 among pending : [3, 15, 12, 33, 19, 31, 11, 16, 14, 18, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 9

After decision at level 9
 pending : [3, 15, 12, 33, 19, 31, 11, 16, 14, 18]
 solution : [7, 9, 10, 25, 24, 13]


New level: 10
 pending : [3, 15, 12, 33, 19, 31, 11, 16, 14, 18]
 solution : [7, 9, 10, 25, 24, 13]


Before reduction : 
 pending  : [3, 15, 12, 33, 19, 31, 11, 16, 14, 18]
 solution : [7, 9, 10, 25, 24, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {33, 3, 11, 12, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 24, 13]


Before reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 24, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 24, 13]


Solution : [7, 9, 10, 25, 24, 13] has cost 26.


Before backtrack at level 10
 pending : []
 solution : [7, 9, 10, 25, 24, 13]

After backtrack at level 10
 pending : [3, 15, 12, 33, 19, 31, 11, 16, 14, 18]
 solution : [7, 9, 10, 25, 24, 13]


Invert decision for 13 at level 9


New level: 10
 pending : [3, 15, 12, 33, 19, 31, 11, 16, 14, 18]
 solution : [7, 9, 10, 25, 24]


Before reduction : 
 pending  : [3, 15, 12, 33, 19, 31, 11, 16, 14, 18]
 solution : [7, 9, 10, 25, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 15, 12, 33, 19, 31, 11, 16, 14, 18]
 solution : [7, 9, 10, 25, 24]


Solution : [7, 9, 10, 25, 24] has cost 19.


Decide in level 10 among pending : [3, 15, 12, 33, 19, 31, 11, 16, 14, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 10

After decision at level 10
 pending : [3, 15, 12, 33, 19, 31, 11, 16, 14]
 solution : [7, 9, 10, 25, 24, 18]


New level: 11
 pending : [3, 15, 12, 33, 19, 31, 11, 16, 14]
 solution : [7, 9, 10, 25, 24, 18]


Before reduction : 
 pending  : [3, 15, 12, 33, 19, 31, 11, 16, 14]
 solution : [7, 9, 10, 25, 24, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, 0), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {3, 12, 14, 15}

After reduction : 
 pending  : [33, 19, 31, 11, 16]
 solution : [7, 9, 10, 25, 24, 18]


Before reduction : 
 pending  : [33, 19, 31, 11, 16]
 solution : [7, 9, 10, 25, 24, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, 0), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 19, 31, 11, 16]
 solution : [7, 9, 10, 25, 24, 18]


Solution : [7, 9, 10, 25, 24, 18] has cost 28.


Before backtrack at level 11
 pending : [33, 19, 31, 11, 16]
 solution : [7, 9, 10, 25, 24, 18]

After backtrack at level 11
 pending : [33, 19, 31, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 10, 25, 24, 18]


Invert decision for 18 at level 10


New level: 11
 pending : [33, 19, 31, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 10, 25, 24]


Before reduction : 
 pending  : [33, 19, 31, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 10, 25, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 19, 31, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 10, 25, 24]


Solution : [7, 9, 10, 25, 24] has cost 19.


Decide in level 11 among pending : [33, 19, 31, 11, 16, 3, 15, 12, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [33, 19, 31, 11, 3, 15, 12, 14]
 solution : [7, 9, 10, 25, 24, 16]


New level: 12
 pending : [33, 19, 31, 11, 3, 15, 12, 14]
 solution : [7, 9, 10, 25, 24, 16]


Before reduction : 
 pending  : [33, 19, 31, 11, 3, 15, 12, 14]
 solution : [7, 9, 10, 25, 24, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {11, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 10, 25, 24, 16]


Before reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 10, 25, 24, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 10, 25, 24, 16]


Solution : [7, 9, 10, 25, 24, 16] has cost 26.


Before backtrack at level 12
 pending : [33, 31, 3, 15, 14]
 solution : [7, 9, 10, 25, 24, 16]

After backtrack at level 12
 pending : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 9, 10, 25, 24, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 9, 10, 25, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 9, 10, 25, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 9, 10, 25, 24]


Solution : [7, 9, 10, 25, 24] has cost 19.


Decide in level 12 among pending : [33, 31, 3, 15, 14, 19, 11, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [33, 31, 3, 15, 19, 11, 12]
 solution : [7, 9, 10, 25, 24, 14]


New level: 13
 pending : [33, 31, 3, 15, 19, 11, 12]
 solution : [7, 9, 10, 25, 24, 14]


Before reduction : 
 pending  : [33, 31, 3, 15, 19, 11, 12]
 solution : [7, 9, 10, 25, 24, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {3, 12, 15}

After reduction : 
 pending  : [33, 31, 19, 11]
 solution : [7, 9, 10, 25, 24, 14]


Before reduction : 
 pending  : [33, 31, 19, 11]
 solution : [7, 9, 10, 25, 24, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 19, 11]
 solution : [7, 9, 10, 25, 24, 14]


Solution : [7, 9, 10, 25, 24, 14] has cost 28.


Before backtrack at level 13
 pending : [33, 31, 19, 11]
 solution : [7, 9, 10, 25, 24, 14]

After backtrack at level 13
 pending : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 9, 10, 25, 24, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 9, 10, 25, 24]


Before reduction : 
 pending  : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 9, 10, 25, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 9, 10, 25, 24]


Solution : [7, 9, 10, 25, 24] has cost 19.


Decide in level 13 among pending : [33, 31, 19, 11, 3, 15, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 11 with phase True at level 13

After decision at level 13
 pending : [33, 31, 19, 3, 15, 12]
 solution : [7, 9, 10, 25, 24, 11]


New level: 14
 pending : [33, 31, 19, 3, 15, 12]
 solution : [7, 9, 10, 25, 24, 11]


Before reduction : 
 pending  : [33, 31, 19, 3, 15, 12]
 solution : [7, 9, 10, 25, 24, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : {19, 12}

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 10, 25, 24, 11]


Before reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 10, 25, 24, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 10, 25, 24, 11]


Solution : [7, 9, 10, 25, 24, 11] has cost 26.


Before backtrack at level 14
 pending : [33, 31, 3, 15]
 solution : [7, 9, 10, 25, 24, 11]

After backtrack at level 14
 pending : [33, 31, 3, 15, 19, 12]
 solution : [7, 9, 10, 25, 24, 11]


Invert decision for 11 at level 13


New level: 14
 pending : [33, 31, 3, 15, 19, 12]
 solution : [7, 9, 10, 25, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 19, 12]
 solution : [7, 9, 10, 25, 24]

Essensial at level 14 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 10, 25, 24, 19]


Before reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 10, 25, 24, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 10, 25, 24, 19]


Solution : [7, 9, 10, 25, 24, 19] has cost 26.


Before backtrack at level 14
 pending : [33, 31, 3, 15, 12]
 solution : [7, 9, 10, 25, 24, 19]

After backtrack at level 14
 pending : [33, 31, 3, 15, 12, 19]
 solution : [7, 9, 10, 25, 24]


Before backtrack at level 13
 pending : [33, 31, 3, 15, 12, 19]
 solution : [7, 9, 10, 25, 24]

After backtrack at level 13
 pending : [33, 31, 3, 15, 12, 19, 11]
 solution : [7, 9, 10, 25, 24]


Before backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 11]
 solution : [7, 9, 10, 25, 24]

After backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 11, 14]
 solution : [7, 9, 10, 25, 24]


Before backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 11, 14]
 solution : [7, 9, 10, 25, 24]

After backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 9, 10, 25, 24]


Before backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 9, 10, 25, 24]

After backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 10, 25, 24]


Before backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 10, 25, 24]

After backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 5, 26, 28, 8, 13]
 solution : [7, 9, 10, 25, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 5, 26, 28, 8, 13]
 solution : [7, 9, 10, 25]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 5, 26, 28, 8, 13]
 solution : [7, 9, 10, 25]

Essensial at level 9 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {26, 28, 5}

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 25, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 25, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 25, 8]


Solution : [7, 9, 10, 25, 8] has cost 16.


Decide in level 9 among pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 9

After decision at level 9
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 10, 25, 8, 13]


New level: 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 10, 25, 8, 13]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 10, 25, 8, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {33, 3, 11, 12, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 8, 13]


Before reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 8, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 25, 8, 13]


Solution : [7, 9, 10, 25, 8, 13] has cost 23.


Before backtrack at level 10
 pending : []
 solution : [7, 9, 10, 25, 8, 13]

After backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 10, 25, 8, 13]


Invert decision for 13 at level 9


New level: 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 10, 25, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 10, 25, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 10, 25, 8]


Solution : [7, 9, 10, 25, 8] has cost 16.


Decide in level 10 among pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 10

After decision at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 9, 10, 25, 8, 18]


New level: 11
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 9, 10, 25, 8, 18]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 9, 10, 25, 8, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, 0), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {3, 12, 14, 15}

After reduction : 
 pending  : [33, 31, 19, 11, 16]
 solution : [7, 9, 10, 25, 8, 18]


Before reduction : 
 pending  : [33, 31, 19, 11, 16]
 solution : [7, 9, 10, 25, 8, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, 0), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 19, 11, 16]
 solution : [7, 9, 10, 25, 8, 18]


Solution : [7, 9, 10, 25, 8, 18] has cost 25.


Before backtrack at level 11
 pending : [33, 31, 19, 11, 16]
 solution : [7, 9, 10, 25, 8, 18]

After backtrack at level 11
 pending : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 10, 25, 8, 18]


Invert decision for 18 at level 10


New level: 11
 pending : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 10, 25, 8]


Before reduction : 
 pending  : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 10, 25, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 10, 25, 8]


Solution : [7, 9, 10, 25, 8] has cost 16.


Decide in level 11 among pending : [33, 31, 19, 11, 16, 3, 15, 12, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 9, 10, 25, 8, 16]


New level: 12
 pending : [33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 9, 10, 25, 8, 16]


Before reduction : 
 pending  : [33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 9, 10, 25, 8, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {11, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 10, 25, 8, 16]


Before reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 10, 25, 8, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 10, 25, 8, 16]


Solution : [7, 9, 10, 25, 8, 16] has cost 23.


Before backtrack at level 12
 pending : [33, 31, 3, 15, 14]
 solution : [7, 9, 10, 25, 8, 16]

After backtrack at level 12
 pending : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 9, 10, 25, 8, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 9, 10, 25, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 9, 10, 25, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 9, 10, 25, 8]


Solution : [7, 9, 10, 25, 8] has cost 16.


Decide in level 12 among pending : [33, 31, 3, 15, 14, 19, 11, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [33, 31, 3, 15, 19, 11, 12]
 solution : [7, 9, 10, 25, 8, 14]


New level: 13
 pending : [33, 31, 3, 15, 19, 11, 12]
 solution : [7, 9, 10, 25, 8, 14]


Before reduction : 
 pending  : [33, 31, 3, 15, 19, 11, 12]
 solution : [7, 9, 10, 25, 8, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {3, 12, 15}

After reduction : 
 pending  : [33, 31, 19, 11]
 solution : [7, 9, 10, 25, 8, 14]


Before reduction : 
 pending  : [33, 31, 19, 11]
 solution : [7, 9, 10, 25, 8, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 19, 11]
 solution : [7, 9, 10, 25, 8, 14]


Solution : [7, 9, 10, 25, 8, 14] has cost 25.


Before backtrack at level 13
 pending : [33, 31, 19, 11]
 solution : [7, 9, 10, 25, 8, 14]

After backtrack at level 13
 pending : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 9, 10, 25, 8, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 9, 10, 25, 8]


Before reduction : 
 pending  : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 9, 10, 25, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 9, 10, 25, 8]


Solution : [7, 9, 10, 25, 8] has cost 16.


Decide in level 13 among pending : [33, 31, 19, 11, 3, 15, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 11 with phase True at level 13

After decision at level 13
 pending : [33, 31, 19, 3, 15, 12]
 solution : [7, 9, 10, 25, 8, 11]


New level: 14
 pending : [33, 31, 19, 3, 15, 12]
 solution : [7, 9, 10, 25, 8, 11]


Before reduction : 
 pending  : [33, 31, 19, 3, 15, 12]
 solution : [7, 9, 10, 25, 8, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : {19, 12}

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 10, 25, 8, 11]


Before reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 10, 25, 8, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 10, 25, 8, 11]


Solution : [7, 9, 10, 25, 8, 11] has cost 23.


Before backtrack at level 14
 pending : [33, 31, 3, 15]
 solution : [7, 9, 10, 25, 8, 11]

After backtrack at level 14
 pending : [33, 31, 3, 15, 19, 12]
 solution : [7, 9, 10, 25, 8, 11]


Invert decision for 11 at level 13


New level: 14
 pending : [33, 31, 3, 15, 19, 12]
 solution : [7, 9, 10, 25, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 19, 12]
 solution : [7, 9, 10, 25, 8]

Essensial at level 14 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 10, 25, 8, 19]


Before reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 10, 25, 8, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 10, 25, 8, 19]


Solution : [7, 9, 10, 25, 8, 19] has cost 23.


Before backtrack at level 14
 pending : [33, 31, 3, 15, 12]
 solution : [7, 9, 10, 25, 8, 19]

After backtrack at level 14
 pending : [33, 31, 3, 15, 12, 19]
 solution : [7, 9, 10, 25, 8]


Before backtrack at level 13
 pending : [33, 31, 3, 15, 12, 19]
 solution : [7, 9, 10, 25, 8]

After backtrack at level 13
 pending : [33, 31, 3, 15, 12, 19, 11]
 solution : [7, 9, 10, 25, 8]


Before backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 11]
 solution : [7, 9, 10, 25, 8]

After backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 11, 14]
 solution : [7, 9, 10, 25, 8]


Before backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 11, 14]
 solution : [7, 9, 10, 25, 8]

After backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 9, 10, 25, 8]


Before backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 9, 10, 25, 8]

After backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 10, 25, 8]


Before backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 10, 25, 8]

After backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13]
 solution : [7, 9, 10, 25]


Before backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13]
 solution : [7, 9, 10, 25]

After backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24]
 solution : [7, 9, 10, 25]


Before backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24]
 solution : [7, 9, 10, 25]

After backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17]
 solution : [7, 9, 10, 25]


Before backtrack at level 6
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17]
 solution : [7, 9, 10, 25]

After backtrack at level 6
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34]
 solution : [7, 9, 10, 25]


Before backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34]
 solution : [7, 9, 10, 25]

After backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34, 32]
 solution : [7, 9, 10, 25]


Before backtrack at level 4
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34, 32]
 solution : [7, 9, 10, 25]

After backtrack at level 4
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34, 32, 29]
 solution : [7, 9, 10, 25]


Invert decision for 25 at level 3


New level: 4
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34, 32, 29]
 solution : [7, 9, 10]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34, 32, 29]
 solution : [7, 9, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34, 32, 29]
 solution : [7, 9, 10]


Solution : [7, 9, 10] has cost 8.


Decide in level 4 among pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34, 32, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 29 with phase True at level 4

After decision at level 4
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34, 32]
 solution : [7, 9, 10, 29]


New level: 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34, 32]
 solution : [7, 9, 10, 29]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34, 32]
 solution : [7, 9, 10, 29]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, 0), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 16384), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : {26, 28, 5}

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 13, 24, 17, 34, 32]
 solution : [7, 9, 10, 29]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 13, 24, 17, 34, 32]
 solution : [7, 9, 10, 29]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, 0), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 16384), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 16384), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 13, 24, 17, 34, 32]
 solution : [7, 9, 10, 29]


Solution : [7, 9, 10, 29] has cost 21.


Before backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 13, 24, 17, 34, 32]
 solution : [7, 9, 10, 29]

After backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 13, 24, 17, 34, 32, 5, 26, 28]
 solution : [7, 9, 10, 29]


Invert decision for 29 at level 4


New level: 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 13, 24, 17, 34, 32, 5, 26, 28]
 solution : [7, 9, 10]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 13, 24, 17, 34, 32, 5, 26, 28]
 solution : [7, 9, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 16384), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 13, 24, 17, 34, 32, 5, 26, 28]
 solution : [7, 9, 10]


Solution : [7, 9, 10] has cost 8.


Decide in level 5 among pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 13, 24, 17, 34, 32, 5, 26, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 13, 24, 17, 34, 5, 26, 28]
 solution : [7, 9, 10, 32]


New level: 6
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 13, 24, 17, 34, 5, 26, 28]
 solution : [7, 9, 10, 32]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 13, 24, 17, 34, 5, 26, 28]
 solution : [7, 9, 10, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {33, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31}

After reduction : 
 pending  : [8, 24, 34, 5, 26, 28]
 solution : [7, 9, 10, 32]


Before reduction : 
 pending  : [8, 24, 34, 5, 26, 28]
 solution : [7, 9, 10, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [8, 24, 34, 5, 26, 28]
 solution : [7, 9, 10, 32]


Solution : [7, 9, 10, 32] has cost 12.


Decide in level 6 among pending : [8, 24, 34, 5, 26, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 8 with phase True at level 6

After decision at level 6
 pending : [24, 34, 5, 26, 28]
 solution : [7, 9, 10, 32, 8]


New level: 7
 pending : [24, 34, 5, 26, 28]
 solution : [7, 9, 10, 32, 8]


Before reduction : 
 pending  : [24, 34, 5, 26, 28]
 solution : [7, 9, 10, 32, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {34, 5, 24, 26, 28}

After reduction : 
 pending  : []
 solution : [7, 9, 10, 32, 8]


Before reduction : 
 pending  : []
 solution : [7, 9, 10, 32, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 32, 8]


Solution : [7, 9, 10, 32, 8] has cost 16.


Before backtrack at level 7
 pending : []
 solution : [7, 9, 10, 32, 8]

After backtrack at level 7
 pending : [24, 34, 5, 26, 28]
 solution : [7, 9, 10, 32, 8]


Invert decision for 8 at level 6


New level: 7
 pending : [24, 34, 5, 26, 28]
 solution : [7, 9, 10, 32]


Before reduction : 
 pending  : [24, 34, 5, 26, 28]
 solution : [7, 9, 10, 32]

Essensial at level 7 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {34, 26, 28, 5}

After reduction : 
 pending  : []
 solution : [7, 9, 10, 32, 24]


Before reduction : 
 pending  : []
 solution : [7, 9, 10, 32, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 32, 24]


Solution : [7, 9, 10, 32, 24] has cost 19.


Before backtrack at level 7
 pending : []
 solution : [7, 9, 10, 32, 24]

After backtrack at level 7
 pending : [24, 34, 5, 26, 28]
 solution : [7, 9, 10, 32]


Before backtrack at level 6
 pending : [24, 34, 5, 26, 28]
 solution : [7, 9, 10, 32]

After backtrack at level 6
 pending : [24, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 8]
 solution : [7, 9, 10, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [24, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 8]
 solution : [7, 9, 10]


Before reduction : 
 pending  : [24, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 8]
 solution : [7, 9, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 8]
 solution : [7, 9, 10]


Solution : [7, 9, 10] has cost 8.


Decide in level 6 among pending : [24, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 8]
 solution : [7, 9, 10, 24]


New level: 7
 pending : [34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 8]
 solution : [7, 9, 10, 24]


Before reduction : 
 pending  : [34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 8]
 solution : [7, 9, 10, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 65536), (12, 16384), (13, 1048576), (14, 262144), (15, 32768), (16, 131072), (17, 2097152), (18, 524288), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, 2097152), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {8, 26, 28, 5}

After reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17]
 solution : [7, 9, 10, 24]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17]
 solution : [7, 9, 10, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, 2097152), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, 2097152), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17]
 solution : [7, 9, 10, 24]


Solution : [7, 9, 10, 24] has cost 15.


Decide in level 7 among pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, 2097152), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 24, 17]


New level: 8
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 24, 17]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 24, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, 2097152), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {33, 34, 3, 11, 12, 13, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : []
 solution : [7, 9, 10, 24, 17]


Before reduction : 
 pending  : []
 solution : [7, 9, 10, 24, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 24, 17]


Solution : [7, 9, 10, 24, 17] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [7, 9, 10, 24, 17]

After backtrack at level 8
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 24, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 24]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 24]


Solution : [7, 9, 10, 24] has cost 15.


Decide in level 8 among pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 8

After decision at level 8
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 10, 24, 13]


New level: 9
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 10, 24, 13]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 10, 24, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {33, 34, 3, 11, 12, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : []
 solution : [7, 9, 10, 24, 13]


Before reduction : 
 pending  : []
 solution : [7, 9, 10, 24, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 24, 13]


Solution : [7, 9, 10, 24, 13] has cost 22.


Before backtrack at level 9
 pending : []
 solution : [7, 9, 10, 24, 13]

After backtrack at level 9
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 10, 24, 13]


Invert decision for 13 at level 8


New level: 9
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 10, 24]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 10, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 10, 24]


Solution : [7, 9, 10, 24] has cost 15.


Decide in level 9 among pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 9, 10, 24, 18]


New level: 10
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 9, 10, 24, 18]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 9, 10, 24, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, 0), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {3, 12, 14, 15}

After reduction : 
 pending  : [34, 33, 31, 19, 11, 16]
 solution : [7, 9, 10, 24, 18]


Before reduction : 
 pending  : [34, 33, 31, 19, 11, 16]
 solution : [7, 9, 10, 24, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, 0), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 33, 31, 19, 11, 16]
 solution : [7, 9, 10, 24, 18]


Solution : [7, 9, 10, 24, 18] has cost 24.


Before backtrack at level 10
 pending : [34, 33, 31, 19, 11, 16]
 solution : [7, 9, 10, 24, 18]

After backtrack at level 10
 pending : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 10, 24, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 10, 24]


Before reduction : 
 pending  : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 10, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 10, 24]


Solution : [7, 9, 10, 24] has cost 15.


Decide in level 10 among pending : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 16 with phase True at level 10

After decision at level 10
 pending : [34, 33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 9, 10, 24, 16]


New level: 11
 pending : [34, 33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 9, 10, 24, 16]


Before reduction : 
 pending  : [34, 33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 9, 10, 24, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {11, 34, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 10, 24, 16]


Before reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 10, 24, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 10, 24, 16]


Solution : [7, 9, 10, 24, 16] has cost 22.


Before backtrack at level 11
 pending : [33, 31, 3, 15, 14]
 solution : [7, 9, 10, 24, 16]

After backtrack at level 11
 pending : [33, 31, 3, 15, 14, 34, 19, 11, 12]
 solution : [7, 9, 10, 24, 16]


Invert decision for 16 at level 10


New level: 11
 pending : [33, 31, 3, 15, 14, 34, 19, 11, 12]
 solution : [7, 9, 10, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 14, 34, 19, 11, 12]
 solution : [7, 9, 10, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14, 34, 19, 11, 12]
 solution : [7, 9, 10, 24]


Solution : [7, 9, 10, 24] has cost 15.


Decide in level 11 among pending : [33, 31, 3, 15, 14, 34, 19, 11, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [33, 31, 3, 15, 34, 19, 11, 12]
 solution : [7, 9, 10, 24, 14]


New level: 12
 pending : [33, 31, 3, 15, 34, 19, 11, 12]
 solution : [7, 9, 10, 24, 14]


Before reduction : 
 pending  : [33, 31, 3, 15, 34, 19, 11, 12]
 solution : [7, 9, 10, 24, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {3, 12, 15}

After reduction : 
 pending  : [33, 31, 34, 19, 11]
 solution : [7, 9, 10, 24, 14]


Before reduction : 
 pending  : [33, 31, 34, 19, 11]
 solution : [7, 9, 10, 24, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 34, 19, 11]
 solution : [7, 9, 10, 24, 14]


Solution : [7, 9, 10, 24, 14] has cost 24.


Before backtrack at level 12
 pending : [33, 31, 34, 19, 11]
 solution : [7, 9, 10, 24, 14]

After backtrack at level 12
 pending : [33, 31, 34, 19, 11, 3, 15, 12]
 solution : [7, 9, 10, 24, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [33, 31, 34, 19, 11, 3, 15, 12]
 solution : [7, 9, 10, 24]


Before reduction : 
 pending  : [33, 31, 34, 19, 11, 3, 15, 12]
 solution : [7, 9, 10, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 34, 19, 11, 3, 15, 12]
 solution : [7, 9, 10, 24]


Solution : [7, 9, 10, 24] has cost 15.


Decide in level 12 among pending : [33, 31, 34, 19, 11, 3, 15, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 11 with phase True at level 12

After decision at level 12
 pending : [33, 31, 34, 19, 3, 15, 12]
 solution : [7, 9, 10, 24, 11]


New level: 13
 pending : [33, 31, 34, 19, 3, 15, 12]
 solution : [7, 9, 10, 24, 11]


Before reduction : 
 pending  : [33, 31, 34, 19, 3, 15, 12]
 solution : [7, 9, 10, 24, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {34, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 10, 24, 11]


Before reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 10, 24, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 10, 24, 11]


Solution : [7, 9, 10, 24, 11] has cost 22.


Before backtrack at level 13
 pending : [33, 31, 3, 15]
 solution : [7, 9, 10, 24, 11]

After backtrack at level 13
 pending : [33, 31, 3, 15, 34, 19, 12]
 solution : [7, 9, 10, 24, 11]


Invert decision for 11 at level 12


New level: 13
 pending : [33, 31, 3, 15, 34, 19, 12]
 solution : [7, 9, 10, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 34, 19, 12]
 solution : [7, 9, 10, 24]

Essensial at level 13 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {34}

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 10, 24, 19]


Before reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 10, 24, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 10, 24, 19]


Solution : [7, 9, 10, 24, 19] has cost 22.


Before backtrack at level 13
 pending : [33, 31, 3, 15, 12]
 solution : [7, 9, 10, 24, 19]

After backtrack at level 13
 pending : [33, 31, 3, 15, 12, 19, 34]
 solution : [7, 9, 10, 24]


Before backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 34]
 solution : [7, 9, 10, 24]

After backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 34, 11]
 solution : [7, 9, 10, 24]


Before backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 34, 11]
 solution : [7, 9, 10, 24]

After backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14]
 solution : [7, 9, 10, 24]


Before backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14]
 solution : [7, 9, 10, 24]

After backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 9, 10, 24]


Before backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 9, 10, 24]

After backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 10, 24]


Before backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 10, 24]

After backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 24]


Before backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 24]

After backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 5, 26, 28, 8, 17]
 solution : [7, 9, 10, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 5, 26, 28, 8, 17]
 solution : [7, 9, 10]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 5, 26, 28, 8, 17]
 solution : [7, 9, 10]

Essensial at level 7 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, 2097152), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {26, 28, 5}

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 17]
 solution : [7, 9, 10, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 17]
 solution : [7, 9, 10, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, 2097152), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, 2097152), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 17]
 solution : [7, 9, 10, 8]


Solution : [7, 9, 10, 8] has cost 12.


Decide in level 7 among pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, 2097152), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 8, 17]


New level: 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 8, 17]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 8, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, 2097152), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {33, 34, 3, 11, 12, 13, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : []
 solution : [7, 9, 10, 8, 17]


Before reduction : 
 pending  : []
 solution : [7, 9, 10, 8, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 8, 17]


Solution : [7, 9, 10, 8, 17] has cost 19.


Before backtrack at level 8
 pending : []
 solution : [7, 9, 10, 8, 17]

After backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 8, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 8]


Solution : [7, 9, 10, 8] has cost 12.


Decide in level 8 among pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 8

After decision at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 10, 8, 13]


New level: 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 10, 8, 13]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 10, 8, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, 1048576), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {33, 34, 3, 11, 12, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : []
 solution : [7, 9, 10, 8, 13]


Before reduction : 
 pending  : []
 solution : [7, 9, 10, 8, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 10, 8, 13]


Solution : [7, 9, 10, 8, 13] has cost 19.


Before backtrack at level 9
 pending : []
 solution : [7, 9, 10, 8, 13]

After backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 10, 8, 13]


Invert decision for 13 at level 8


New level: 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 10, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 10, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 10, 8]


Solution : [7, 9, 10, 8] has cost 12.


Decide in level 9 among pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 9, 10, 8, 18]


New level: 10
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 9, 10, 8, 18]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 9, 10, 8, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, 262144), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, 0), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {3, 12, 14, 15}

After reduction : 
 pending  : [33, 31, 19, 34, 11, 16]
 solution : [7, 9, 10, 8, 18]


Before reduction : 
 pending  : [33, 31, 19, 34, 11, 16]
 solution : [7, 9, 10, 8, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, 0), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 31, 19, 34, 11, 16]
 solution : [7, 9, 10, 8, 18]


Solution : [7, 9, 10, 8, 18] has cost 21.


Before backtrack at level 10
 pending : [33, 31, 19, 34, 11, 16]
 solution : [7, 9, 10, 8, 18]

After backtrack at level 10
 pending : [33, 31, 19, 34, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 10, 8, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [33, 31, 19, 34, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 10, 8]


Before reduction : 
 pending  : [33, 31, 19, 34, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 10, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 31, 19, 34, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 10, 8]


Solution : [7, 9, 10, 8] has cost 12.


Decide in level 10 among pending : [33, 31, 19, 34, 11, 16, 3, 15, 12, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 16 with phase True at level 10

After decision at level 10
 pending : [33, 31, 19, 34, 11, 3, 15, 12, 14]
 solution : [7, 9, 10, 8, 16]


New level: 11
 pending : [33, 31, 19, 34, 11, 3, 15, 12, 14]
 solution : [7, 9, 10, 8, 16]


Before reduction : 
 pending  : [33, 31, 19, 34, 11, 3, 15, 12, 14]
 solution : [7, 9, 10, 8, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, 131072), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {11, 34, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 10, 8, 16]


Before reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 10, 8, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 10, 8, 16]


Solution : [7, 9, 10, 8, 16] has cost 19.


Before backtrack at level 11
 pending : [33, 31, 3, 15, 14]
 solution : [7, 9, 10, 8, 16]

After backtrack at level 11
 pending : [33, 31, 3, 15, 14, 19, 34, 11, 12]
 solution : [7, 9, 10, 8, 16]


Invert decision for 16 at level 10


New level: 11
 pending : [33, 31, 3, 15, 14, 19, 34, 11, 12]
 solution : [7, 9, 10, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 14, 19, 34, 11, 12]
 solution : [7, 9, 10, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14, 19, 34, 11, 12]
 solution : [7, 9, 10, 8]


Solution : [7, 9, 10, 8] has cost 12.


Decide in level 11 among pending : [33, 31, 3, 15, 14, 19, 34, 11, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [33, 31, 3, 15, 19, 34, 11, 12]
 solution : [7, 9, 10, 8, 14]


New level: 12
 pending : [33, 31, 3, 15, 19, 34, 11, 12]
 solution : [7, 9, 10, 8, 14]


Before reduction : 
 pending  : [33, 31, 3, 15, 19, 34, 11, 12]
 solution : [7, 9, 10, 8, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, 131072), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {3, 12, 15}

After reduction : 
 pending  : [33, 31, 19, 34, 11]
 solution : [7, 9, 10, 8, 14]


Before reduction : 
 pending  : [33, 31, 19, 34, 11]
 solution : [7, 9, 10, 8, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 19, 34, 11]
 solution : [7, 9, 10, 8, 14]


Solution : [7, 9, 10, 8, 14] has cost 21.


Before backtrack at level 12
 pending : [33, 31, 19, 34, 11]
 solution : [7, 9, 10, 8, 14]

After backtrack at level 12
 pending : [33, 31, 19, 34, 11, 3, 15, 12]
 solution : [7, 9, 10, 8, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [33, 31, 19, 34, 11, 3, 15, 12]
 solution : [7, 9, 10, 8]


Before reduction : 
 pending  : [33, 31, 19, 34, 11, 3, 15, 12]
 solution : [7, 9, 10, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4096), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4096), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 19, 34, 11, 3, 15, 12]
 solution : [7, 9, 10, 8]


Solution : [7, 9, 10, 8] has cost 12.


Decide in level 12 among pending : [33, 31, 19, 34, 11, 3, 15, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 11 with phase True at level 12

After decision at level 12
 pending : [33, 31, 19, 34, 3, 15, 12]
 solution : [7, 9, 10, 8, 11]


New level: 13
 pending : [33, 31, 19, 34, 3, 15, 12]
 solution : [7, 9, 10, 8, 11]


Before reduction : 
 pending  : [33, 31, 19, 34, 3, 15, 12]
 solution : [7, 9, 10, 8, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 65536), (12, 8192), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {34, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 10, 8, 11]


Before reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 10, 8, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 10, 8, 11]


Solution : [7, 9, 10, 8, 11] has cost 19.


Before backtrack at level 13
 pending : [33, 31, 3, 15]
 solution : [7, 9, 10, 8, 11]

After backtrack at level 13
 pending : [33, 31, 3, 15, 19, 34, 12]
 solution : [7, 9, 10, 8, 11]


Invert decision for 11 at level 12


New level: 13
 pending : [33, 31, 3, 15, 19, 34, 12]
 solution : [7, 9, 10, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 19, 34, 12]
 solution : [7, 9, 10, 8]

Essensial at level 13 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8192), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {34}

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 10, 8, 19]


Before reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 10, 8, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 10, 8, 19]


Solution : [7, 9, 10, 8, 19] has cost 19.


Before backtrack at level 13
 pending : [33, 31, 3, 15, 12]
 solution : [7, 9, 10, 8, 19]

After backtrack at level 13
 pending : [33, 31, 3, 15, 12, 19, 34]
 solution : [7, 9, 10, 8]


Before backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 34]
 solution : [7, 9, 10, 8]

After backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 34, 11]
 solution : [7, 9, 10, 8]


Before backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 34, 11]
 solution : [7, 9, 10, 8]

After backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14]
 solution : [7, 9, 10, 8]


Before backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14]
 solution : [7, 9, 10, 8]

After backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 9, 10, 8]


Before backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 9, 10, 8]

After backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 10, 8]


Before backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 10, 8]

After backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 8]


Before backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 9, 10, 8]

After backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 8, 5, 26, 28, 17]
 solution : [7, 9, 10]


Before backtrack at level 6
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 8, 5, 26, 28, 17]
 solution : [7, 9, 10]

After backtrack at level 6
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 8, 5, 26, 28, 17, 24]
 solution : [7, 9, 10]


Before backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 8, 5, 26, 28, 17, 24]
 solution : [7, 9, 10]

After backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 8, 5, 26, 28, 17, 24, 32]
 solution : [7, 9, 10]


Before backtrack at level 4
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 8, 5, 26, 28, 17, 24, 32]
 solution : [7, 9, 10]

After backtrack at level 4
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 8, 5, 26, 28, 17, 24, 32, 29]
 solution : [7, 9, 10]


Before backtrack at level 3
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 8, 5, 26, 28, 17, 24, 32, 29]
 solution : [7, 9, 10]

After backtrack at level 3
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 8, 5, 26, 28, 17, 24, 32, 29, 25]
 solution : [7, 9, 10]


Invert decision for 10 at level 2


New level: 3
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 8, 5, 26, 28, 17, 24, 32, 29, 25]
 solution : [7, 9]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 8, 5, 26, 28, 17, 24, 32, 29, 25]
 solution : [7, 9]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4096), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 8, 5, 26, 28, 17, 24, 32, 29, 25]
 solution : [7, 9]


Solution : [7, 9] has cost 6.


Decide in level 3 among pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 8, 5, 26, 28, 17, 24, 32, 29, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 32 with phase True at level 3

After decision at level 3
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 8, 5, 26, 28, 17, 24, 29, 25]
 solution : [7, 9, 32]


New level: 4
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 8, 5, 26, 28, 17, 24, 29, 25]
 solution : [7, 9, 32]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 8, 5, 26, 28, 17, 24, 29, 25]
 solution : [7, 9, 32]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 0), (32, -1), (33, 0), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 4 : {33, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31}

After reduction : 
 pending  : [34, 8, 5, 26, 28, 24, 29, 25]
 solution : [7, 9, 32]


Before reduction : 
 pending  : [34, 8, 5, 26, 28, 24, 29, 25]
 solution : [7, 9, 32]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 0), (32, -1), (33, 0), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [34, 8, 5, 26, 28, 24, 29, 25]
 solution : [7, 9, 32]


Solution : [7, 9, 32] has cost 10.


Decide in level 4 among pending : [34, 8, 5, 26, 28, 24, 29, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 29 with phase True at level 4

After decision at level 4
 pending : [34, 8, 5, 26, 28, 24, 25]
 solution : [7, 9, 32, 29]


New level: 5
 pending : [34, 8, 5, 26, 28, 24, 25]
 solution : [7, 9, 32, 29]


Before reduction : 
 pending  : [34, 8, 5, 26, 28, 24, 25]
 solution : [7, 9, 32, 29]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, 8388608), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : {34, 26, 28, 5}

After reduction : 
 pending  : [8, 24, 25]
 solution : [7, 9, 32, 29]


Before reduction : 
 pending  : [8, 24, 25]
 solution : [7, 9, 32, 29]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, 8388608), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, 8388608), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [8, 24, 25]
 solution : [7, 9, 32, 29]


Solution : [7, 9, 32, 29] has cost 23.


Before backtrack at level 5
 pending : [8, 24, 25]
 solution : [7, 9, 32, 29]

After backtrack at level 5
 pending : [8, 24, 25, 34, 5, 26, 28]
 solution : [7, 9, 32, 29]


Invert decision for 29 at level 4


New level: 5
 pending : [8, 24, 25, 34, 5, 26, 28]
 solution : [7, 9, 32]


Before reduction : 
 pending  : [8, 24, 25, 34, 5, 26, 28]
 solution : [7, 9, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, 8388608), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [8, 24, 25, 34, 5, 26, 28]
 solution : [7, 9, 32]


Solution : [7, 9, 32] has cost 10.


Decide in level 5 among pending : [8, 24, 25, 34, 5, 26, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 25 with phase True at level 5

After decision at level 5
 pending : [8, 24, 34, 5, 26, 28]
 solution : [7, 9, 32, 25]


New level: 6
 pending : [8, 24, 34, 5, 26, 28]
 solution : [7, 9, 32, 25]


Before reduction : 
 pending  : [8, 24, 34, 5, 26, 28]
 solution : [7, 9, 32, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [8, 24, 34, 5, 26, 28]
 solution : [7, 9, 32, 25]


Solution : [7, 9, 32, 25] has cost 14.


Decide in level 6 among pending : [8, 24, 34, 5, 26, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 8 with phase True at level 6

After decision at level 6
 pending : [24, 34, 5, 26, 28]
 solution : [7, 9, 32, 25, 8]


New level: 7
 pending : [24, 34, 5, 26, 28]
 solution : [7, 9, 32, 25, 8]


Before reduction : 
 pending  : [24, 34, 5, 26, 28]
 solution : [7, 9, 32, 25, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {34, 5, 24, 26, 28}

After reduction : 
 pending  : []
 solution : [7, 9, 32, 25, 8]


Before reduction : 
 pending  : []
 solution : [7, 9, 32, 25, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 32, 25, 8]


Solution : [7, 9, 32, 25, 8] has cost 18.


Before backtrack at level 7
 pending : []
 solution : [7, 9, 32, 25, 8]

After backtrack at level 7
 pending : [24, 34, 5, 26, 28]
 solution : [7, 9, 32, 25, 8]


Invert decision for 8 at level 6


New level: 7
 pending : [24, 34, 5, 26, 28]
 solution : [7, 9, 32, 25]


Before reduction : 
 pending  : [24, 34, 5, 26, 28]
 solution : [7, 9, 32, 25]

Essensial at level 7 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {34, 26, 28, 5}

After reduction : 
 pending  : []
 solution : [7, 9, 32, 25, 24]


Before reduction : 
 pending  : []
 solution : [7, 9, 32, 25, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 32, 25, 24]


Solution : [7, 9, 32, 25, 24] has cost 21.


Before backtrack at level 7
 pending : []
 solution : [7, 9, 32, 25, 24]

After backtrack at level 7
 pending : [24, 34, 5, 26, 28]
 solution : [7, 9, 32, 25]


Before backtrack at level 6
 pending : [24, 34, 5, 26, 28]
 solution : [7, 9, 32, 25]

After backtrack at level 6
 pending : [24, 34, 5, 26, 28, 8]
 solution : [7, 9, 32, 25]


Invert decision for 25 at level 5


New level: 6
 pending : [24, 34, 5, 26, 28, 8]
 solution : [7, 9, 32]


Before reduction : 
 pending  : [24, 34, 5, 26, 28, 8]
 solution : [7, 9, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 34, 5, 26, 28, 8]
 solution : [7, 9, 32]


Solution : [7, 9, 32] has cost 10.


Decide in level 6 among pending : [24, 34, 5, 26, 28, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [34, 5, 26, 28, 8]
 solution : [7, 9, 32, 24]


New level: 7
 pending : [34, 5, 26, 28, 8]
 solution : [7, 9, 32, 24]


Before reduction : 
 pending  : [34, 5, 26, 28, 8]
 solution : [7, 9, 32, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {34, 5, 8, 26, 28}

After reduction : 
 pending  : []
 solution : [7, 9, 32, 24]


Before reduction : 
 pending  : []
 solution : [7, 9, 32, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 32, 24]


Solution : [7, 9, 32, 24] has cost 17.


Before backtrack at level 7
 pending : []
 solution : [7, 9, 32, 24]

After backtrack at level 7
 pending : [34, 5, 26, 28, 8]
 solution : [7, 9, 32, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [34, 5, 26, 28, 8]
 solution : [7, 9, 32]


Before reduction : 
 pending  : [34, 5, 26, 28, 8]
 solution : [7, 9, 32]

Essensial at level 7 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {34, 26, 28, 5}

After reduction : 
 pending  : []
 solution : [7, 9, 32, 8]


Before reduction : 
 pending  : []
 solution : [7, 9, 32, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 32, 8]


Solution : [7, 9, 32, 8] has cost 14.


Before backtrack at level 7
 pending : []
 solution : [7, 9, 32, 8]

After backtrack at level 7
 pending : [8, 34, 5, 26, 28]
 solution : [7, 9, 32]


Before backtrack at level 6
 pending : [8, 34, 5, 26, 28]
 solution : [7, 9, 32]

After backtrack at level 6
 pending : [8, 34, 5, 26, 28, 24]
 solution : [7, 9, 32]


Before backtrack at level 5
 pending : [8, 34, 5, 26, 28, 24]
 solution : [7, 9, 32]

After backtrack at level 5
 pending : [8, 34, 5, 26, 28, 24, 25]
 solution : [7, 9, 32]


Before backtrack at level 4
 pending : [8, 34, 5, 26, 28, 24, 25]
 solution : [7, 9, 32]

After backtrack at level 4
 pending : [8, 34, 5, 26, 28, 24, 25, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 29]
 solution : [7, 9, 32]


Invert decision for 32 at level 3


New level: 4
 pending : [8, 34, 5, 26, 28, 24, 25, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 29]
 solution : [7, 9]


Before reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 25, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 29]
 solution : [7, 9]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 25, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 29]
 solution : [7, 9]


Solution : [7, 9] has cost 6.


Decide in level 4 among pending : [8, 34, 5, 26, 28, 24, 25, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 25 with phase True at level 4

After decision at level 4
 pending : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 29]
 solution : [7, 9, 25]


New level: 5
 pending : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 29]
 solution : [7, 9, 25]


Before reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 29]
 solution : [7, 9, 25]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, 4194304), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 29]
 solution : [7, 9, 25]


Solution : [7, 9, 25] has cost 10.


Decide in level 5 among pending : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, 4194304), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 5

After decision at level 5
 pending : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 29]
 solution : [7, 9, 25, 17]


New level: 6
 pending : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 29]
 solution : [7, 9, 25, 17]


Before reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 29]
 solution : [7, 9, 25, 17]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, 4194304), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, 4194304), (30, -1), (31, 0), (32, -1), (33, 0), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {33, 3, 11, 12, 13, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 29]
 solution : [7, 9, 25, 17]


Before reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 29]
 solution : [7, 9, 25, 17]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, 4194304), (30, -1), (31, 0), (32, -1), (33, 0), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, 4194304), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 29]
 solution : [7, 9, 25, 17]


Solution : [7, 9, 25, 17] has cost 17.


Before backtrack at level 6
 pending : [8, 34, 5, 26, 28, 24, 29]
 solution : [7, 9, 25, 17]

After backtrack at level 6
 pending : [8, 34, 5, 26, 28, 24, 29, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 25, 17]


Invert decision for 17 at level 5


New level: 6
 pending : [8, 34, 5, 26, 28, 24, 29, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 25]


Before reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 29, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, 4194304), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, 4194304), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 29, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 25]


Solution : [7, 9, 25] has cost 10.


Decide in level 6 among pending : [8, 34, 5, 26, 28, 24, 29, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, 4194304), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 29 with phase True at level 6

After decision at level 6
 pending : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 25, 29]


New level: 7
 pending : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 25, 29]


Before reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 25, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, 4194304), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 32768), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {26, 28, 5}

After reduction : 
 pending  : [8, 34, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 25, 29]


Before reduction : 
 pending  : [8, 34, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 25, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 32768), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 32768), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 34, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 25, 29]


Solution : [7, 9, 25, 29] has cost 23.


Before backtrack at level 7
 pending : [8, 34, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 25, 29]

After backtrack at level 7
 pending : [8, 34, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 9, 25, 29]


Invert decision for 29 at level 6


New level: 7
 pending : [8, 34, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 9, 25]


Before reduction : 
 pending  : [8, 34, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 9, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1024), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 32768), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 34, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 9, 25]


Solution : [7, 9, 25] has cost 10.


Decide in level 7 among pending : [8, 34, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 34 with phase True at level 7

After decision at level 7
 pending : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 9, 25, 34]


New level: 8
 pending : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 9, 25, 34]


Before reduction : 
 pending  : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 9, 25, 34]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 512), (27, -1), (28, 16384), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 9, 25, 34]


Solution : [7, 9, 25, 34] has cost 24.


Before backtrack at level 8
 pending : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 9, 25, 34]

After backtrack at level 8
 pending : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 9, 25, 34]


Invert decision for 34 at level 7


New level: 8
 pending : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 9, 25]


Before reduction : 
 pending  : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 9, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 512), (27, -1), (28, 16384), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 9, 25]


Solution : [7, 9, 25] has cost 10.


Decide in level 8 among pending : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 8

After decision at level 8
 pending : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 5, 26, 28]
 solution : [7, 9, 25, 13]


New level: 9
 pending : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 5, 26, 28]
 solution : [7, 9, 25, 13]


Before reduction : 
 pending  : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 5, 26, 28]
 solution : [7, 9, 25, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {33, 3, 11, 12, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : [8, 24, 5, 26, 28]
 solution : [7, 9, 25, 13]


Before reduction : 
 pending  : [8, 24, 5, 26, 28]
 solution : [7, 9, 25, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [8, 24, 5, 26, 28]
 solution : [7, 9, 25, 13]


Solution : [7, 9, 25, 13] has cost 17.


Before backtrack at level 9
 pending : [8, 24, 5, 26, 28]
 solution : [7, 9, 25, 13]

After backtrack at level 9
 pending : [8, 24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 25, 13]


Invert decision for 13 at level 8


New level: 9
 pending : [8, 24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 25]


Before reduction : 
 pending  : [8, 24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [8, 24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 25]


Solution : [7, 9, 25] has cost 10.


Decide in level 9 among pending : [8, 24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 8 with phase True at level 9

After decision at level 9
 pending : [24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 25, 8]


New level: 10
 pending : [24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 25, 8]


Before reduction : 
 pending  : [24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 25, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {24, 26, 28, 5}

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 25, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 25, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 25, 8]


Solution : [7, 9, 25, 8] has cost 14.


Decide in level 10 among pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 10

After decision at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 9, 25, 8, 18]


New level: 11
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 9, 25, 8, 18]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 9, 25, 8, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, 0), (15, 0), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {3, 12, 14, 15}

After reduction : 
 pending  : [33, 31, 19, 11, 16]
 solution : [7, 9, 25, 8, 18]


Before reduction : 
 pending  : [33, 31, 19, 11, 16]
 solution : [7, 9, 25, 8, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, 0), (15, 0), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 19, 11, 16]
 solution : [7, 9, 25, 8, 18]


Solution : [7, 9, 25, 8, 18] has cost 23.


Before backtrack at level 11
 pending : [33, 31, 19, 11, 16]
 solution : [7, 9, 25, 8, 18]

After backtrack at level 11
 pending : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 25, 8, 18]


Invert decision for 18 at level 10


New level: 11
 pending : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 25, 8]


Before reduction : 
 pending  : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 25, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 25, 8]


Solution : [7, 9, 25, 8] has cost 14.


Decide in level 11 among pending : [33, 31, 19, 11, 16, 3, 15, 12, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 9, 25, 8, 16]


New level: 12
 pending : [33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 9, 25, 8, 16]


Before reduction : 
 pending  : [33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 9, 25, 8, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {11, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 25, 8, 16]


Before reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 25, 8, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 25, 8, 16]


Solution : [7, 9, 25, 8, 16] has cost 21.


Before backtrack at level 12
 pending : [33, 31, 3, 15, 14]
 solution : [7, 9, 25, 8, 16]

After backtrack at level 12
 pending : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 9, 25, 8, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 9, 25, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 9, 25, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 9, 25, 8]


Solution : [7, 9, 25, 8] has cost 14.


Decide in level 12 among pending : [33, 31, 3, 15, 14, 19, 11, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [33, 31, 3, 15, 19, 11, 12]
 solution : [7, 9, 25, 8, 14]


New level: 13
 pending : [33, 31, 3, 15, 19, 11, 12]
 solution : [7, 9, 25, 8, 14]


Before reduction : 
 pending  : [33, 31, 3, 15, 19, 11, 12]
 solution : [7, 9, 25, 8, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {3, 12, 15}

After reduction : 
 pending  : [33, 31, 19, 11]
 solution : [7, 9, 25, 8, 14]


Before reduction : 
 pending  : [33, 31, 19, 11]
 solution : [7, 9, 25, 8, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 19, 11]
 solution : [7, 9, 25, 8, 14]


Solution : [7, 9, 25, 8, 14] has cost 23.


Before backtrack at level 13
 pending : [33, 31, 19, 11]
 solution : [7, 9, 25, 8, 14]

After backtrack at level 13
 pending : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 9, 25, 8, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 9, 25, 8]


Before reduction : 
 pending  : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 9, 25, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 9, 25, 8]


Solution : [7, 9, 25, 8] has cost 14.


Decide in level 13 among pending : [33, 31, 19, 11, 3, 15, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 11 with phase True at level 13

After decision at level 13
 pending : [33, 31, 19, 3, 15, 12]
 solution : [7, 9, 25, 8, 11]


New level: 14
 pending : [33, 31, 19, 3, 15, 12]
 solution : [7, 9, 25, 8, 11]


Before reduction : 
 pending  : [33, 31, 19, 3, 15, 12]
 solution : [7, 9, 25, 8, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : {19, 12}

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 25, 8, 11]


Before reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 25, 8, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 25, 8, 11]


Solution : [7, 9, 25, 8, 11] has cost 21.


Before backtrack at level 14
 pending : [33, 31, 3, 15]
 solution : [7, 9, 25, 8, 11]

After backtrack at level 14
 pending : [33, 31, 3, 15, 19, 12]
 solution : [7, 9, 25, 8, 11]


Invert decision for 11 at level 13


New level: 14
 pending : [33, 31, 3, 15, 19, 12]
 solution : [7, 9, 25, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 19, 12]
 solution : [7, 9, 25, 8]

Essensial at level 14 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 25, 8, 19]


Before reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 25, 8, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 25, 8, 19]


Solution : [7, 9, 25, 8, 19] has cost 21.


Before backtrack at level 14
 pending : [33, 31, 3, 15, 12]
 solution : [7, 9, 25, 8, 19]

After backtrack at level 14
 pending : [33, 31, 3, 15, 12, 19]
 solution : [7, 9, 25, 8]


Before backtrack at level 13
 pending : [33, 31, 3, 15, 12, 19]
 solution : [7, 9, 25, 8]

After backtrack at level 13
 pending : [33, 31, 3, 15, 12, 19, 11]
 solution : [7, 9, 25, 8]


Before backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 11]
 solution : [7, 9, 25, 8]

After backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 11, 14]
 solution : [7, 9, 25, 8]


Before backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 11, 14]
 solution : [7, 9, 25, 8]

After backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 9, 25, 8]


Before backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 9, 25, 8]

After backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 24, 5, 26, 28, 18]
 solution : [7, 9, 25, 8]


Invert decision for 8 at level 9


New level: 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 24, 5, 26, 28, 18]
 solution : [7, 9, 25]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 24, 5, 26, 28, 18]
 solution : [7, 9, 25]

Essensial at level 10 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {26, 28, 5}

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 25, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 25, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 25, 24]


Solution : [7, 9, 25, 24] has cost 17.


Before backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 25, 24]

After backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28]
 solution : [7, 9, 25]


Before backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28]
 solution : [7, 9, 25]

After backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8]
 solution : [7, 9, 25]


Before backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8]
 solution : [7, 9, 25]

After backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13]
 solution : [7, 9, 25]


Before backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13]
 solution : [7, 9, 25]

After backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34]
 solution : [7, 9, 25]


Before backtrack at level 6
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34]
 solution : [7, 9, 25]

After backtrack at level 6
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 29]
 solution : [7, 9, 25]


Before backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 29]
 solution : [7, 9, 25]

After backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 29, 17]
 solution : [7, 9, 25]


Invert decision for 25 at level 4


New level: 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 29, 17]
 solution : [7, 9]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 29, 17]
 solution : [7, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 29, 17]
 solution : [7, 9]


Solution : [7, 9] has cost 6.


Decide in level 5 among pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 29, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 29 with phase True at level 5

After decision at level 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 17]
 solution : [7, 9, 29]


New level: 6
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 17]
 solution : [7, 9, 29]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 17]
 solution : [7, 9, 29]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 32768), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {26, 28, 5}

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17]
 solution : [7, 9, 29]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17]
 solution : [7, 9, 29]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 32768), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 32768), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17]
 solution : [7, 9, 29]


Solution : [7, 9, 29] has cost 19.


Before backtrack at level 6
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17]
 solution : [7, 9, 29]

After backtrack at level 6
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17, 5, 26, 28]
 solution : [7, 9, 29]


Invert decision for 29 at level 5


New level: 6
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17, 5, 26, 28]
 solution : [7, 9]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17, 5, 26, 28]
 solution : [7, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 32768), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17, 5, 26, 28]
 solution : [7, 9]


Solution : [7, 9] has cost 6.


Decide in level 6 among pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17, 5, 26, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 6

After decision at level 6
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 5, 26, 28]
 solution : [7, 9, 17]


New level: 7
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 5, 26, 28]
 solution : [7, 9, 17]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 5, 26, 28]
 solution : [7, 9, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {33, 3, 11, 12, 13, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : [24, 8, 34, 5, 26, 28]
 solution : [7, 9, 17]


Before reduction : 
 pending  : [24, 8, 34, 5, 26, 28]
 solution : [7, 9, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [24, 8, 34, 5, 26, 28]
 solution : [7, 9, 17]


Solution : [7, 9, 17] has cost 13.


Decide in level 7 among pending : [24, 8, 34, 5, 26, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [8, 34, 5, 26, 28]
 solution : [7, 9, 17, 24]


New level: 8
 pending : [8, 34, 5, 26, 28]
 solution : [7, 9, 17, 24]


Before reduction : 
 pending  : [8, 34, 5, 26, 28]
 solution : [7, 9, 17, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {34, 5, 8, 26, 28}

After reduction : 
 pending  : []
 solution : [7, 9, 17, 24]


Before reduction : 
 pending  : []
 solution : [7, 9, 17, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 17, 24]


Solution : [7, 9, 17, 24] has cost 20.


Before backtrack at level 8
 pending : []
 solution : [7, 9, 17, 24]

After backtrack at level 8
 pending : [8, 34, 5, 26, 28]
 solution : [7, 9, 17, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [8, 34, 5, 26, 28]
 solution : [7, 9, 17]


Before reduction : 
 pending  : [8, 34, 5, 26, 28]
 solution : [7, 9, 17]

Essensial at level 8 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {34, 26, 28, 5}

After reduction : 
 pending  : []
 solution : [7, 9, 17, 8]


Before reduction : 
 pending  : []
 solution : [7, 9, 17, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 17, 8]


Solution : [7, 9, 17, 8] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [7, 9, 17, 8]

After backtrack at level 8
 pending : [8, 34, 5, 26, 28]
 solution : [7, 9, 17]


Before backtrack at level 7
 pending : [8, 34, 5, 26, 28]
 solution : [7, 9, 17]

After backtrack at level 7
 pending : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 24]
 solution : [7, 9, 17]


Invert decision for 17 at level 6


New level: 7
 pending : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 24]
 solution : [7, 9]


Before reduction : 
 pending  : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 24]
 solution : [7, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 24]
 solution : [7, 9]


Solution : [7, 9] has cost 6.


Decide in level 7 among pending : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 24]
 solution : [7, 9, 8]


New level: 8
 pending : [34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 24]
 solution : [7, 9, 8]


Before reduction : 
 pending  : [34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 24]
 solution : [7, 9, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {24, 26, 28, 5}

After reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 8]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 9, 8]


Solution : [7, 9, 8] has cost 10.


Decide in level 8 among pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 8

After decision at level 8
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 8, 13]


New level: 9
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 8, 13]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 8, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {33, 34, 3, 11, 12, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : []
 solution : [7, 9, 8, 13]


Before reduction : 
 pending  : []
 solution : [7, 9, 8, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 8, 13]


Solution : [7, 9, 8, 13] has cost 17.


Before backtrack at level 9
 pending : []
 solution : [7, 9, 8, 13]

After backtrack at level 9
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 8, 13]


Invert decision for 13 at level 8


New level: 9
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 8]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 9, 8]


Solution : [7, 9, 8] has cost 10.


Decide in level 9 among pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 9, 8, 18]


New level: 10
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 9, 8, 18]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 9, 8, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, 0), (15, 0), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {3, 12, 14, 15}

After reduction : 
 pending  : [34, 33, 31, 19, 11, 16]
 solution : [7, 9, 8, 18]


Before reduction : 
 pending  : [34, 33, 31, 19, 11, 16]
 solution : [7, 9, 8, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, 0), (15, 0), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 33, 31, 19, 11, 16]
 solution : [7, 9, 8, 18]


Solution : [7, 9, 8, 18] has cost 19.


Before backtrack at level 10
 pending : [34, 33, 31, 19, 11, 16]
 solution : [7, 9, 8, 18]

After backtrack at level 10
 pending : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 8, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 8]


Before reduction : 
 pending  : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 8]


Solution : [7, 9, 8] has cost 10.


Decide in level 10 among pending : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 16 with phase True at level 10

After decision at level 10
 pending : [34, 33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 9, 8, 16]


New level: 11
 pending : [34, 33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 9, 8, 16]


Before reduction : 
 pending  : [34, 33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 9, 8, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {11, 34, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 8, 16]


Before reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 8, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 8, 16]


Solution : [7, 9, 8, 16] has cost 17.


Before backtrack at level 11
 pending : [33, 31, 3, 15, 14]
 solution : [7, 9, 8, 16]

After backtrack at level 11
 pending : [33, 31, 3, 15, 14, 34, 19, 11, 12]
 solution : [7, 9, 8, 16]


Invert decision for 16 at level 10


New level: 11
 pending : [33, 31, 3, 15, 14, 34, 19, 11, 12]
 solution : [7, 9, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 14, 34, 19, 11, 12]
 solution : [7, 9, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14, 34, 19, 11, 12]
 solution : [7, 9, 8]


Solution : [7, 9, 8] has cost 10.


Decide in level 11 among pending : [33, 31, 3, 15, 14, 34, 19, 11, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [33, 31, 3, 15, 34, 19, 11, 12]
 solution : [7, 9, 8, 14]


New level: 12
 pending : [33, 31, 3, 15, 34, 19, 11, 12]
 solution : [7, 9, 8, 14]


Before reduction : 
 pending  : [33, 31, 3, 15, 34, 19, 11, 12]
 solution : [7, 9, 8, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {3, 12, 15}

After reduction : 
 pending  : [33, 31, 34, 19, 11]
 solution : [7, 9, 8, 14]


Before reduction : 
 pending  : [33, 31, 34, 19, 11]
 solution : [7, 9, 8, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 34, 19, 11]
 solution : [7, 9, 8, 14]


Solution : [7, 9, 8, 14] has cost 19.


Before backtrack at level 12
 pending : [33, 31, 34, 19, 11]
 solution : [7, 9, 8, 14]

After backtrack at level 12
 pending : [33, 31, 34, 19, 11, 3, 15, 12]
 solution : [7, 9, 8, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [33, 31, 34, 19, 11, 3, 15, 12]
 solution : [7, 9, 8]


Before reduction : 
 pending  : [33, 31, 34, 19, 11, 3, 15, 12]
 solution : [7, 9, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 34, 19, 11, 3, 15, 12]
 solution : [7, 9, 8]


Solution : [7, 9, 8] has cost 10.


Decide in level 12 among pending : [33, 31, 34, 19, 11, 3, 15, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 11 with phase True at level 12

After decision at level 12
 pending : [33, 31, 34, 19, 3, 15, 12]
 solution : [7, 9, 8, 11]


New level: 13
 pending : [33, 31, 34, 19, 3, 15, 12]
 solution : [7, 9, 8, 11]


Before reduction : 
 pending  : [33, 31, 34, 19, 3, 15, 12]
 solution : [7, 9, 8, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {34, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 8, 11]


Before reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 8, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 8, 11]


Solution : [7, 9, 8, 11] has cost 17.


Before backtrack at level 13
 pending : [33, 31, 3, 15]
 solution : [7, 9, 8, 11]

After backtrack at level 13
 pending : [33, 31, 3, 15, 34, 19, 12]
 solution : [7, 9, 8, 11]


Invert decision for 11 at level 12


New level: 13
 pending : [33, 31, 3, 15, 34, 19, 12]
 solution : [7, 9, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 34, 19, 12]
 solution : [7, 9, 8]

Essensial at level 13 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {34}

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 8, 19]


Before reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 8, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 8, 19]


Solution : [7, 9, 8, 19] has cost 17.


Before backtrack at level 13
 pending : [33, 31, 3, 15, 12]
 solution : [7, 9, 8, 19]

After backtrack at level 13
 pending : [33, 31, 3, 15, 12, 19, 34]
 solution : [7, 9, 8]


Before backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 34]
 solution : [7, 9, 8]

After backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 34, 11]
 solution : [7, 9, 8]


Before backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 34, 11]
 solution : [7, 9, 8]

After backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14]
 solution : [7, 9, 8]


Before backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14]
 solution : [7, 9, 8]

After backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 9, 8]


Before backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 9, 8]

After backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 8]


Before backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 8]

After backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 5, 26, 28, 24, 13]
 solution : [7, 9, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 5, 26, 28, 24, 13]
 solution : [7, 9]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 5, 26, 28, 24, 13]
 solution : [7, 9]

Essensial at level 8 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {26, 28, 5}

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 9, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 9, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 9, 24]


Solution : [7, 9, 24] has cost 13.


Decide in level 8 among pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 8

After decision at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 24, 13]


New level: 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 24, 13]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 24, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {33, 34, 3, 11, 12, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : []
 solution : [7, 9, 24, 13]


Before reduction : 
 pending  : []
 solution : [7, 9, 24, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 9, 24, 13]


Solution : [7, 9, 24, 13] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [7, 9, 24, 13]

After backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 24, 13]


Invert decision for 13 at level 8


New level: 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 24]


Solution : [7, 9, 24] has cost 13.


Decide in level 9 among pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 9, 24, 18]


New level: 10
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 9, 24, 18]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 9, 24, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, 0), (15, 0), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {3, 12, 14, 15}

After reduction : 
 pending  : [33, 31, 19, 34, 11, 16]
 solution : [7, 9, 24, 18]


Before reduction : 
 pending  : [33, 31, 19, 34, 11, 16]
 solution : [7, 9, 24, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, 0), (15, 0), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 31, 19, 34, 11, 16]
 solution : [7, 9, 24, 18]


Solution : [7, 9, 24, 18] has cost 22.


Before backtrack at level 10
 pending : [33, 31, 19, 34, 11, 16]
 solution : [7, 9, 24, 18]

After backtrack at level 10
 pending : [33, 31, 19, 34, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 24, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [33, 31, 19, 34, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 24]


Before reduction : 
 pending  : [33, 31, 19, 34, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 31, 19, 34, 11, 16, 3, 15, 12, 14]
 solution : [7, 9, 24]


Solution : [7, 9, 24] has cost 13.


Decide in level 10 among pending : [33, 31, 19, 34, 11, 16, 3, 15, 12, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 16 with phase True at level 10

After decision at level 10
 pending : [33, 31, 19, 34, 11, 3, 15, 12, 14]
 solution : [7, 9, 24, 16]


New level: 11
 pending : [33, 31, 19, 34, 11, 3, 15, 12, 14]
 solution : [7, 9, 24, 16]


Before reduction : 
 pending  : [33, 31, 19, 34, 11, 3, 15, 12, 14]
 solution : [7, 9, 24, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {11, 34, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 24, 16]


Before reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 24, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 9, 24, 16]


Solution : [7, 9, 24, 16] has cost 20.


Before backtrack at level 11
 pending : [33, 31, 3, 15, 14]
 solution : [7, 9, 24, 16]

After backtrack at level 11
 pending : [33, 31, 3, 15, 14, 19, 34, 11, 12]
 solution : [7, 9, 24, 16]


Invert decision for 16 at level 10


New level: 11
 pending : [33, 31, 3, 15, 14, 19, 34, 11, 12]
 solution : [7, 9, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 14, 19, 34, 11, 12]
 solution : [7, 9, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14, 19, 34, 11, 12]
 solution : [7, 9, 24]


Solution : [7, 9, 24] has cost 13.


Decide in level 11 among pending : [33, 31, 3, 15, 14, 19, 34, 11, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [33, 31, 3, 15, 19, 34, 11, 12]
 solution : [7, 9, 24, 14]


New level: 12
 pending : [33, 31, 3, 15, 19, 34, 11, 12]
 solution : [7, 9, 24, 14]


Before reduction : 
 pending  : [33, 31, 3, 15, 19, 34, 11, 12]
 solution : [7, 9, 24, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {3, 12, 15}

After reduction : 
 pending  : [33, 31, 19, 34, 11]
 solution : [7, 9, 24, 14]


Before reduction : 
 pending  : [33, 31, 19, 34, 11]
 solution : [7, 9, 24, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 19, 34, 11]
 solution : [7, 9, 24, 14]


Solution : [7, 9, 24, 14] has cost 22.


Before backtrack at level 12
 pending : [33, 31, 19, 34, 11]
 solution : [7, 9, 24, 14]

After backtrack at level 12
 pending : [33, 31, 19, 34, 11, 3, 15, 12]
 solution : [7, 9, 24, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [33, 31, 19, 34, 11, 3, 15, 12]
 solution : [7, 9, 24]


Before reduction : 
 pending  : [33, 31, 19, 34, 11, 3, 15, 12]
 solution : [7, 9, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 19, 34, 11, 3, 15, 12]
 solution : [7, 9, 24]


Solution : [7, 9, 24] has cost 13.


Decide in level 12 among pending : [33, 31, 19, 34, 11, 3, 15, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 11 with phase True at level 12

After decision at level 12
 pending : [33, 31, 19, 34, 3, 15, 12]
 solution : [7, 9, 24, 11]


New level: 13
 pending : [33, 31, 19, 34, 3, 15, 12]
 solution : [7, 9, 24, 11]


Before reduction : 
 pending  : [33, 31, 19, 34, 3, 15, 12]
 solution : [7, 9, 24, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {34, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 24, 11]


Before reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 24, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 9, 24, 11]


Solution : [7, 9, 24, 11] has cost 20.


Before backtrack at level 13
 pending : [33, 31, 3, 15]
 solution : [7, 9, 24, 11]

After backtrack at level 13
 pending : [33, 31, 3, 15, 19, 34, 12]
 solution : [7, 9, 24, 11]


Invert decision for 11 at level 12


New level: 13
 pending : [33, 31, 3, 15, 19, 34, 12]
 solution : [7, 9, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 19, 34, 12]
 solution : [7, 9, 24]

Essensial at level 13 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {34}

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 24, 19]


Before reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 24, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 9, 24, 19]


Solution : [7, 9, 24, 19] has cost 20.


Before backtrack at level 13
 pending : [33, 31, 3, 15, 12]
 solution : [7, 9, 24, 19]

After backtrack at level 13
 pending : [33, 31, 3, 15, 12, 19, 34]
 solution : [7, 9, 24]


Before backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 34]
 solution : [7, 9, 24]

After backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 34, 11]
 solution : [7, 9, 24]


Before backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 34, 11]
 solution : [7, 9, 24]

After backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14]
 solution : [7, 9, 24]


Before backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14]
 solution : [7, 9, 24]

After backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 9, 24]


Before backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 9, 24]

After backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 24]


Before backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 9, 24]

After backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13]
 solution : [7, 9]


Before backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13]
 solution : [7, 9]

After backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8]
 solution : [7, 9]


Before backtrack at level 6
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8]
 solution : [7, 9]

After backtrack at level 6
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17]
 solution : [7, 9]


Before backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17]
 solution : [7, 9]

After backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29]
 solution : [7, 9]


Before backtrack at level 4
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29]
 solution : [7, 9]

After backtrack at level 4
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29, 25]
 solution : [7, 9]


Before backtrack at level 3
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29, 25]
 solution : [7, 9]

After backtrack at level 3
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29, 25, 32]
 solution : [7, 9]


Before backtrack at level 2
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29, 25, 32]
 solution : [7, 9]

After backtrack at level 2
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29, 25, 32, 10]
 solution : [7, 9]


Invert decision for 9 at level 1


New level: 2
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29, 25, 32, 10]
 solution : [7]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29, 25, 32, 10]
 solution : [7]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, 67108864), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29, 25, 32, 10]
 solution : [7]


Solution : [7] has cost 3.


Decide in level 2 among pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29, 25, 32, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, 67108864), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 10 with phase True at level 2

After decision at level 2
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29, 25, 32]
 solution : [7, 10]


New level: 3
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29, 25, 32]
 solution : [7, 10]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29, 25, 32]
 solution : [7, 10]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, 67108864), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29, 25, 32]
 solution : [7, 10]


Solution : [7, 10] has cost 5.


Decide in level 3 among pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29, 25, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 25 with phase True at level 3

After decision at level 3
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29, 32]
 solution : [7, 10, 25]


New level: 4
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29, 32]
 solution : [7, 10, 25]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29, 32]
 solution : [7, 10, 25]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29, 32]
 solution : [7, 10, 25]


Solution : [7, 10, 25] has cost 9.


Decide in level 4 among pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 29, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 29 with phase True at level 4

After decision at level 4
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 32]
 solution : [7, 10, 25, 29]


New level: 5
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 32]
 solution : [7, 10, 25, 29]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 5, 26, 28, 13, 8, 17, 32]
 solution : [7, 10, 25, 29]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 32768), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : {26, 28, 5}

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 13, 8, 17, 32]
 solution : [7, 10, 25, 29]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 13, 8, 17, 32]
 solution : [7, 10, 25, 29]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 32768), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 32768), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 13, 8, 17, 32]
 solution : [7, 10, 25, 29]


Solution : [7, 10, 25, 29] has cost 22.


Before backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 13, 8, 17, 32]
 solution : [7, 10, 25, 29]

After backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 13, 8, 17, 32, 5, 26, 28]
 solution : [7, 10, 25, 29]


Invert decision for 29 at level 4


New level: 5
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 13, 8, 17, 32, 5, 26, 28]
 solution : [7, 10, 25]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 13, 8, 17, 32, 5, 26, 28]
 solution : [7, 10, 25]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 32768), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 2048), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 13, 8, 17, 32, 5, 26, 28]
 solution : [7, 10, 25]


Solution : [7, 10, 25] has cost 9.


Decide in level 5 among pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 13, 8, 17, 32, 5, 26, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 13, 8, 17, 5, 26, 28]
 solution : [7, 10, 25, 32]


New level: 6
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 13, 8, 17, 5, 26, 28]
 solution : [7, 10, 25, 32]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 24, 13, 8, 17, 5, 26, 28]
 solution : [7, 10, 25, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {33, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31}

After reduction : 
 pending  : [34, 24, 8, 5, 26, 28]
 solution : [7, 10, 25, 32]


Before reduction : 
 pending  : [34, 24, 8, 5, 26, 28]
 solution : [7, 10, 25, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [34, 24, 8, 5, 26, 28]
 solution : [7, 10, 25, 32]


Solution : [7, 10, 25, 32] has cost 13.


Decide in level 6 among pending : [34, 24, 8, 5, 26, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [34, 8, 5, 26, 28]
 solution : [7, 10, 25, 32, 24]


New level: 7
 pending : [34, 8, 5, 26, 28]
 solution : [7, 10, 25, 32, 24]


Before reduction : 
 pending  : [34, 8, 5, 26, 28]
 solution : [7, 10, 25, 32, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {34, 5, 8, 26, 28}

After reduction : 
 pending  : []
 solution : [7, 10, 25, 32, 24]


Before reduction : 
 pending  : []
 solution : [7, 10, 25, 32, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 25, 32, 24]


Solution : [7, 10, 25, 32, 24] has cost 20.


Before backtrack at level 7
 pending : []
 solution : [7, 10, 25, 32, 24]

After backtrack at level 7
 pending : [34, 8, 5, 26, 28]
 solution : [7, 10, 25, 32, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [34, 8, 5, 26, 28]
 solution : [7, 10, 25, 32]


Before reduction : 
 pending  : [34, 8, 5, 26, 28]
 solution : [7, 10, 25, 32]

Essensial at level 7 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {34, 26, 28, 5}

After reduction : 
 pending  : []
 solution : [7, 10, 25, 32, 8]


Before reduction : 
 pending  : []
 solution : [7, 10, 25, 32, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 25, 32, 8]


Solution : [7, 10, 25, 32, 8] has cost 17.


Before backtrack at level 7
 pending : []
 solution : [7, 10, 25, 32, 8]

After backtrack at level 7
 pending : [8, 34, 5, 26, 28]
 solution : [7, 10, 25, 32]


Before backtrack at level 6
 pending : [8, 34, 5, 26, 28]
 solution : [7, 10, 25, 32]

After backtrack at level 6
 pending : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7, 10, 25, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7, 10, 25]


Before reduction : 
 pending  : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7, 10, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7, 10, 25]


Solution : [7, 10, 25] has cost 9.


Decide in level 6 among pending : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 6

After decision at level 6
 pending : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 24]
 solution : [7, 10, 25, 17]


New level: 7
 pending : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 24]
 solution : [7, 10, 25, 17]


Before reduction : 
 pending  : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 24]
 solution : [7, 10, 25, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {33, 3, 11, 12, 13, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : [8, 34, 5, 26, 28, 24]
 solution : [7, 10, 25, 17]


Before reduction : 
 pending  : [8, 34, 5, 26, 28, 24]
 solution : [7, 10, 25, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 34, 5, 26, 28, 24]
 solution : [7, 10, 25, 17]


Solution : [7, 10, 25, 17] has cost 16.


Before backtrack at level 7
 pending : [8, 34, 5, 26, 28, 24]
 solution : [7, 10, 25, 17]

After backtrack at level 7
 pending : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 10, 25, 17]


Invert decision for 17 at level 6


New level: 7
 pending : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 10, 25]


Before reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 10, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 10, 25]


Solution : [7, 10, 25] has cost 9.


Decide in level 7 among pending : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 10, 25, 8]


New level: 8
 pending : [34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 10, 25, 8]


Before reduction : 
 pending  : [34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 10, 25, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, -1), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 2097152), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {24, 26, 28, 5}

After reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 10, 25, 8]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 10, 25, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 10, 25, 8]


Solution : [7, 10, 25, 8] has cost 13.


Decide in level 8 among pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 8

After decision at level 8
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 10, 25, 8, 13]


New level: 9
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 10, 25, 8, 13]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 10, 25, 8, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {33, 34, 3, 11, 12, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : []
 solution : [7, 10, 25, 8, 13]


Before reduction : 
 pending  : []
 solution : [7, 10, 25, 8, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 25, 8, 13]


Solution : [7, 10, 25, 8, 13] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [7, 10, 25, 8, 13]

After backtrack at level 9
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 10, 25, 8, 13]


Invert decision for 13 at level 8


New level: 9
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 10, 25, 8]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 10, 25, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 10, 25, 8]


Solution : [7, 10, 25, 8] has cost 13.


Decide in level 9 among pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 10, 25, 8, 18]


New level: 10
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 10, 25, 8, 18]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 10, 25, 8, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, 0), (15, 0), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {3, 12, 14, 15}

After reduction : 
 pending  : [34, 33, 31, 19, 11, 16]
 solution : [7, 10, 25, 8, 18]


Before reduction : 
 pending  : [34, 33, 31, 19, 11, 16]
 solution : [7, 10, 25, 8, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, 0), (15, 0), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 33, 31, 19, 11, 16]
 solution : [7, 10, 25, 8, 18]


Solution : [7, 10, 25, 8, 18] has cost 22.


Before backtrack at level 10
 pending : [34, 33, 31, 19, 11, 16]
 solution : [7, 10, 25, 8, 18]

After backtrack at level 10
 pending : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 10, 25, 8, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 10, 25, 8]


Before reduction : 
 pending  : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 10, 25, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 10, 25, 8]


Solution : [7, 10, 25, 8] has cost 13.


Decide in level 10 among pending : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 16 with phase True at level 10

After decision at level 10
 pending : [34, 33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 10, 25, 8, 16]


New level: 11
 pending : [34, 33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 10, 25, 8, 16]


Before reduction : 
 pending  : [34, 33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 10, 25, 8, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {11, 34, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 10, 25, 8, 16]


Before reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 10, 25, 8, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 10, 25, 8, 16]


Solution : [7, 10, 25, 8, 16] has cost 20.


Before backtrack at level 11
 pending : [33, 31, 3, 15, 14]
 solution : [7, 10, 25, 8, 16]

After backtrack at level 11
 pending : [33, 31, 3, 15, 14, 34, 19, 11, 12]
 solution : [7, 10, 25, 8, 16]


Invert decision for 16 at level 10


New level: 11
 pending : [33, 31, 3, 15, 14, 34, 19, 11, 12]
 solution : [7, 10, 25, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 14, 34, 19, 11, 12]
 solution : [7, 10, 25, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14, 34, 19, 11, 12]
 solution : [7, 10, 25, 8]


Solution : [7, 10, 25, 8] has cost 13.


Decide in level 11 among pending : [33, 31, 3, 15, 14, 34, 19, 11, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [33, 31, 3, 15, 34, 19, 11, 12]
 solution : [7, 10, 25, 8, 14]


New level: 12
 pending : [33, 31, 3, 15, 34, 19, 11, 12]
 solution : [7, 10, 25, 8, 14]


Before reduction : 
 pending  : [33, 31, 3, 15, 34, 19, 11, 12]
 solution : [7, 10, 25, 8, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {3, 12, 15}

After reduction : 
 pending  : [33, 31, 34, 19, 11]
 solution : [7, 10, 25, 8, 14]


Before reduction : 
 pending  : [33, 31, 34, 19, 11]
 solution : [7, 10, 25, 8, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 34, 19, 11]
 solution : [7, 10, 25, 8, 14]


Solution : [7, 10, 25, 8, 14] has cost 22.


Before backtrack at level 12
 pending : [33, 31, 34, 19, 11]
 solution : [7, 10, 25, 8, 14]

After backtrack at level 12
 pending : [33, 31, 34, 19, 11, 3, 15, 12]
 solution : [7, 10, 25, 8, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [33, 31, 34, 19, 11, 3, 15, 12]
 solution : [7, 10, 25, 8]


Before reduction : 
 pending  : [33, 31, 34, 19, 11, 3, 15, 12]
 solution : [7, 10, 25, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 34, 19, 11, 3, 15, 12]
 solution : [7, 10, 25, 8]


Solution : [7, 10, 25, 8] has cost 13.


Decide in level 12 among pending : [33, 31, 34, 19, 11, 3, 15, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 11 with phase True at level 12

After decision at level 12
 pending : [33, 31, 34, 19, 3, 15, 12]
 solution : [7, 10, 25, 8, 11]


New level: 13
 pending : [33, 31, 34, 19, 3, 15, 12]
 solution : [7, 10, 25, 8, 11]


Before reduction : 
 pending  : [33, 31, 34, 19, 3, 15, 12]
 solution : [7, 10, 25, 8, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {34, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 10, 25, 8, 11]


Before reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 10, 25, 8, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 10, 25, 8, 11]


Solution : [7, 10, 25, 8, 11] has cost 20.


Before backtrack at level 13
 pending : [33, 31, 3, 15]
 solution : [7, 10, 25, 8, 11]

After backtrack at level 13
 pending : [33, 31, 3, 15, 34, 19, 12]
 solution : [7, 10, 25, 8, 11]


Invert decision for 11 at level 12


New level: 13
 pending : [33, 31, 3, 15, 34, 19, 12]
 solution : [7, 10, 25, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 34, 19, 12]
 solution : [7, 10, 25, 8]

Essensial at level 13 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {34}

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 10, 25, 8, 19]


Before reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 10, 25, 8, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 10, 25, 8, 19]


Solution : [7, 10, 25, 8, 19] has cost 20.


Before backtrack at level 13
 pending : [33, 31, 3, 15, 12]
 solution : [7, 10, 25, 8, 19]

After backtrack at level 13
 pending : [33, 31, 3, 15, 12, 19, 34]
 solution : [7, 10, 25, 8]


Before backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 34]
 solution : [7, 10, 25, 8]

After backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 34, 11]
 solution : [7, 10, 25, 8]


Before backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 34, 11]
 solution : [7, 10, 25, 8]

After backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14]
 solution : [7, 10, 25, 8]


Before backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14]
 solution : [7, 10, 25, 8]

After backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 10, 25, 8]


Before backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 10, 25, 8]

After backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 10, 25, 8]


Before backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 10, 25, 8]

After backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 5, 26, 28, 24, 13]
 solution : [7, 10, 25, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 5, 26, 28, 24, 13]
 solution : [7, 10, 25]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 5, 26, 28, 24, 13]
 solution : [7, 10, 25]

Essensial at level 8 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {26, 28, 5}

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 10, 25, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 10, 25, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 10, 25, 24]


Solution : [7, 10, 25, 24] has cost 16.


Before backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 10, 25, 24]

After backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28]
 solution : [7, 10, 25]


Before backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28]
 solution : [7, 10, 25]

After backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 8]
 solution : [7, 10, 25]


Before backtrack at level 6
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 8]
 solution : [7, 10, 25]

After backtrack at level 6
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 8, 17]
 solution : [7, 10, 25]


Before backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 8, 17]
 solution : [7, 10, 25]

After backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 8, 17, 32]
 solution : [7, 10, 25]


Before backtrack at level 4
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 8, 17, 32]
 solution : [7, 10, 25]

After backtrack at level 4
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 8, 17, 32, 29]
 solution : [7, 10, 25]


Invert decision for 25 at level 3


New level: 4
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 8, 17, 32, 29]
 solution : [7, 10]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 8, 17, 32, 29]
 solution : [7, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 8, 17, 32, 29]
 solution : [7, 10]


Solution : [7, 10] has cost 5.


Decide in level 4 among pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 8, 17, 32, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 29 with phase True at level 4

After decision at level 4
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 8, 17, 32]
 solution : [7, 10, 29]


New level: 5
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 8, 17, 32]
 solution : [7, 10, 29]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 8, 17, 32]
 solution : [7, 10, 29]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, 4096), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 32768), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4096), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 4096), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : {26, 28, 5}

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 8, 17, 32]
 solution : [7, 10, 29]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 8, 17, 32]
 solution : [7, 10, 29]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, 4096), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 32768), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4096), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 4096), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 32768), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 4096), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 8, 17, 32]
 solution : [7, 10, 29]


Solution : [7, 10, 29] has cost 18.


Before backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 8, 17, 32]
 solution : [7, 10, 29]

After backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 8, 17, 32, 5, 26, 28]
 solution : [7, 10, 29]


Invert decision for 29 at level 4


New level: 5
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 8, 17, 32, 5, 26, 28]
 solution : [7, 10]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 8, 17, 32, 5, 26, 28]
 solution : [7, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 32768), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 4096), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 8, 17, 32, 5, 26, 28]
 solution : [7, 10]


Solution : [7, 10] has cost 5.


Decide in level 5 among pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 8, 17, 32, 5, 26, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 8, 17, 5, 26, 28]
 solution : [7, 10, 32]


New level: 6
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 8, 17, 5, 26, 28]
 solution : [7, 10, 32]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 8, 17, 5, 26, 28]
 solution : [7, 10, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 65536), (32, 8388608), (33, 65536), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 2048), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 1024), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {33, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31}

After reduction : 
 pending  : [34, 24, 8, 5, 26, 28]
 solution : [7, 10, 32]


Before reduction : 
 pending  : [34, 24, 8, 5, 26, 28]
 solution : [7, 10, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 2048), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 1024), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 2048), (27, -1), (28, 131072), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1024), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [34, 24, 8, 5, 26, 28]
 solution : [7, 10, 32]


Solution : [7, 10, 32] has cost 9.


Decide in level 6 among pending : [34, 24, 8, 5, 26, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 2048), (27, -1), (28, 131072), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1024), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [34, 8, 5, 26, 28]
 solution : [7, 10, 32, 24]


New level: 7
 pending : [34, 8, 5, 26, 28]
 solution : [7, 10, 32, 24]


Before reduction : 
 pending  : [34, 8, 5, 26, 28]
 solution : [7, 10, 32, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 2048), (27, -1), (28, 131072), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1024), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {34, 5, 8, 26, 28}

After reduction : 
 pending  : []
 solution : [7, 10, 32, 24]


Before reduction : 
 pending  : []
 solution : [7, 10, 32, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 32, 24]


Solution : [7, 10, 32, 24] has cost 16.


Before backtrack at level 7
 pending : []
 solution : [7, 10, 32, 24]

After backtrack at level 7
 pending : [34, 8, 5, 26, 28]
 solution : [7, 10, 32, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [34, 8, 5, 26, 28]
 solution : [7, 10, 32]


Before reduction : 
 pending  : [34, 8, 5, 26, 28]
 solution : [7, 10, 32]

Essensial at level 7 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {34, 26, 28, 5}

After reduction : 
 pending  : []
 solution : [7, 10, 32, 8]


Before reduction : 
 pending  : []
 solution : [7, 10, 32, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 32, 8]


Solution : [7, 10, 32, 8] has cost 13.


Before backtrack at level 7
 pending : []
 solution : [7, 10, 32, 8]

After backtrack at level 7
 pending : [8, 34, 5, 26, 28]
 solution : [7, 10, 32]


Before backtrack at level 6
 pending : [8, 34, 5, 26, 28]
 solution : [7, 10, 32]

After backtrack at level 6
 pending : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7, 10, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7, 10]


Before reduction : 
 pending  : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7, 10]


Solution : [7, 10] has cost 5.


Decide in level 6 among pending : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 8 with phase True at level 6

After decision at level 6
 pending : [34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7, 10, 8]


New level: 7
 pending : [34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7, 10, 8]


Before reduction : 
 pending  : [34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7, 10, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 131072), (12, 32768), (13, 2097152), (14, 524288), (15, 65536), (16, 262144), (17, 4194304), (18, 1048576), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, 4194304), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {24, 26, 28, 5}

After reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17]
 solution : [7, 10, 8]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17]
 solution : [7, 10, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, 4194304), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, 4194304), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17]
 solution : [7, 10, 8]


Solution : [7, 10, 8] has cost 9.


Decide in level 7 among pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, 4194304), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 10, 8, 17]


New level: 8
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 10, 8, 17]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 10, 8, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, 4194304), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {33, 34, 3, 11, 12, 13, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : []
 solution : [7, 10, 8, 17]


Before reduction : 
 pending  : []
 solution : [7, 10, 8, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 8, 17]


Solution : [7, 10, 8, 17] has cost 16.


Before backtrack at level 8
 pending : []
 solution : [7, 10, 8, 17]

After backtrack at level 8
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 10, 8, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 10, 8]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 10, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 10, 8]


Solution : [7, 10, 8] has cost 9.


Decide in level 8 among pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 8

After decision at level 8
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 10, 8, 13]


New level: 9
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 10, 8, 13]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 10, 8, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {33, 34, 3, 11, 12, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : []
 solution : [7, 10, 8, 13]


Before reduction : 
 pending  : []
 solution : [7, 10, 8, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 8, 13]


Solution : [7, 10, 8, 13] has cost 16.


Before backtrack at level 9
 pending : []
 solution : [7, 10, 8, 13]

After backtrack at level 9
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 10, 8, 13]


Invert decision for 13 at level 8


New level: 9
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 10, 8]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 10, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 10, 8]


Solution : [7, 10, 8] has cost 9.


Decide in level 9 among pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 10, 8, 18]


New level: 10
 pending : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 10, 8, 18]


Before reduction : 
 pending  : [34, 33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 10, 8, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, 0), (15, 0), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {3, 12, 14, 15}

After reduction : 
 pending  : [34, 33, 31, 19, 11, 16]
 solution : [7, 10, 8, 18]


Before reduction : 
 pending  : [34, 33, 31, 19, 11, 16]
 solution : [7, 10, 8, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, 0), (15, 0), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 33, 31, 19, 11, 16]
 solution : [7, 10, 8, 18]


Solution : [7, 10, 8, 18] has cost 18.


Before backtrack at level 10
 pending : [34, 33, 31, 19, 11, 16]
 solution : [7, 10, 8, 18]

After backtrack at level 10
 pending : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 10, 8, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 10, 8]


Before reduction : 
 pending  : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 10, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 10, 8]


Solution : [7, 10, 8] has cost 9.


Decide in level 10 among pending : [34, 33, 31, 19, 11, 16, 3, 15, 12, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 16 with phase True at level 10

After decision at level 10
 pending : [34, 33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 10, 8, 16]


New level: 11
 pending : [34, 33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 10, 8, 16]


Before reduction : 
 pending  : [34, 33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 10, 8, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {11, 34, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 10, 8, 16]


Before reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 10, 8, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 10, 8, 16]


Solution : [7, 10, 8, 16] has cost 16.


Before backtrack at level 11
 pending : [33, 31, 3, 15, 14]
 solution : [7, 10, 8, 16]

After backtrack at level 11
 pending : [33, 31, 3, 15, 14, 34, 19, 11, 12]
 solution : [7, 10, 8, 16]


Invert decision for 16 at level 10


New level: 11
 pending : [33, 31, 3, 15, 14, 34, 19, 11, 12]
 solution : [7, 10, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 14, 34, 19, 11, 12]
 solution : [7, 10, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14, 34, 19, 11, 12]
 solution : [7, 10, 8]


Solution : [7, 10, 8] has cost 9.


Decide in level 11 among pending : [33, 31, 3, 15, 14, 34, 19, 11, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [33, 31, 3, 15, 34, 19, 11, 12]
 solution : [7, 10, 8, 14]


New level: 12
 pending : [33, 31, 3, 15, 34, 19, 11, 12]
 solution : [7, 10, 8, 14]


Before reduction : 
 pending  : [33, 31, 3, 15, 34, 19, 11, 12]
 solution : [7, 10, 8, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {3, 12, 15}

After reduction : 
 pending  : [33, 31, 34, 19, 11]
 solution : [7, 10, 8, 14]


Before reduction : 
 pending  : [33, 31, 34, 19, 11]
 solution : [7, 10, 8, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 34, 19, 11]
 solution : [7, 10, 8, 14]


Solution : [7, 10, 8, 14] has cost 18.


Before backtrack at level 12
 pending : [33, 31, 34, 19, 11]
 solution : [7, 10, 8, 14]

After backtrack at level 12
 pending : [33, 31, 34, 19, 11, 3, 15, 12]
 solution : [7, 10, 8, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [33, 31, 34, 19, 11, 3, 15, 12]
 solution : [7, 10, 8]


Before reduction : 
 pending  : [33, 31, 34, 19, 11, 3, 15, 12]
 solution : [7, 10, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 34, 19, 11, 3, 15, 12]
 solution : [7, 10, 8]


Solution : [7, 10, 8] has cost 9.


Decide in level 12 among pending : [33, 31, 34, 19, 11, 3, 15, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 11 with phase True at level 12

After decision at level 12
 pending : [33, 31, 34, 19, 3, 15, 12]
 solution : [7, 10, 8, 11]


New level: 13
 pending : [33, 31, 34, 19, 3, 15, 12]
 solution : [7, 10, 8, 11]


Before reduction : 
 pending  : [33, 31, 34, 19, 3, 15, 12]
 solution : [7, 10, 8, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {34, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 10, 8, 11]


Before reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 10, 8, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 10, 8, 11]


Solution : [7, 10, 8, 11] has cost 16.


Before backtrack at level 13
 pending : [33, 31, 3, 15]
 solution : [7, 10, 8, 11]

After backtrack at level 13
 pending : [33, 31, 3, 15, 34, 19, 12]
 solution : [7, 10, 8, 11]


Invert decision for 11 at level 12


New level: 13
 pending : [33, 31, 3, 15, 34, 19, 12]
 solution : [7, 10, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 34, 19, 12]
 solution : [7, 10, 8]

Essensial at level 13 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {34}

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 10, 8, 19]


Before reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 10, 8, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 10, 8, 19]


Solution : [7, 10, 8, 19] has cost 16.


Before backtrack at level 13
 pending : [33, 31, 3, 15, 12]
 solution : [7, 10, 8, 19]

After backtrack at level 13
 pending : [33, 31, 3, 15, 12, 19, 34]
 solution : [7, 10, 8]


Before backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 34]
 solution : [7, 10, 8]

After backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 34, 11]
 solution : [7, 10, 8]


Before backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 34, 11]
 solution : [7, 10, 8]

After backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14]
 solution : [7, 10, 8]


Before backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14]
 solution : [7, 10, 8]

After backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 10, 8]


Before backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 10, 8]

After backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 10, 8]


Before backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 10, 8]

After backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 10, 8]


Before backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 10, 8]

After backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 5, 26, 28, 24, 17]
 solution : [7, 10, 8]


Invert decision for 8 at level 6


New level: 7
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 5, 26, 28, 24, 17]
 solution : [7, 10]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 5, 26, 28, 24, 17]
 solution : [7, 10]

Essensial at level 7 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, 4194304), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {26, 28, 5}

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 17]
 solution : [7, 10, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 17]
 solution : [7, 10, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, 4194304), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, 4194304), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 17]
 solution : [7, 10, 24]


Solution : [7, 10, 24] has cost 12.


Decide in level 7 among pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, 4194304), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 10, 24, 17]


New level: 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 10, 24, 17]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 10, 24, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, 4194304), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {33, 34, 3, 11, 12, 13, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : []
 solution : [7, 10, 24, 17]


Before reduction : 
 pending  : []
 solution : [7, 10, 24, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 24, 17]


Solution : [7, 10, 24, 17] has cost 19.


Before backtrack at level 8
 pending : []
 solution : [7, 10, 24, 17]

After backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 10, 24, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 10, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 10, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 10, 24]


Solution : [7, 10, 24] has cost 12.


Decide in level 8 among pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 8

After decision at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 10, 24, 13]


New level: 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 10, 24, 13]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 10, 24, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, 2097152), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {33, 34, 3, 11, 12, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : []
 solution : [7, 10, 24, 13]


Before reduction : 
 pending  : []
 solution : [7, 10, 24, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 24, 13]


Solution : [7, 10, 24, 13] has cost 19.


Before backtrack at level 9
 pending : []
 solution : [7, 10, 24, 13]

After backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 10, 24, 13]


Invert decision for 13 at level 8


New level: 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 10, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 10, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 10, 24]


Solution : [7, 10, 24] has cost 12.


Decide in level 9 among pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 10, 24, 18]


New level: 10
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 10, 24, 18]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 10, 24, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, 524288), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, 0), (15, 0), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {3, 12, 14, 15}

After reduction : 
 pending  : [33, 31, 19, 34, 11, 16]
 solution : [7, 10, 24, 18]


Before reduction : 
 pending  : [33, 31, 19, 34, 11, 16]
 solution : [7, 10, 24, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, 0), (15, 0), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 31, 19, 34, 11, 16]
 solution : [7, 10, 24, 18]


Solution : [7, 10, 24, 18] has cost 21.


Before backtrack at level 10
 pending : [33, 31, 19, 34, 11, 16]
 solution : [7, 10, 24, 18]

After backtrack at level 10
 pending : [33, 31, 19, 34, 11, 16, 3, 15, 12, 14]
 solution : [7, 10, 24, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [33, 31, 19, 34, 11, 16, 3, 15, 12, 14]
 solution : [7, 10, 24]


Before reduction : 
 pending  : [33, 31, 19, 34, 11, 16, 3, 15, 12, 14]
 solution : [7, 10, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 31, 19, 34, 11, 16, 3, 15, 12, 14]
 solution : [7, 10, 24]


Solution : [7, 10, 24] has cost 12.


Decide in level 10 among pending : [33, 31, 19, 34, 11, 16, 3, 15, 12, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 16 with phase True at level 10

After decision at level 10
 pending : [33, 31, 19, 34, 11, 3, 15, 12, 14]
 solution : [7, 10, 24, 16]


New level: 11
 pending : [33, 31, 19, 34, 11, 3, 15, 12, 14]
 solution : [7, 10, 24, 16]


Before reduction : 
 pending  : [33, 31, 19, 34, 11, 3, 15, 12, 14]
 solution : [7, 10, 24, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, 262144), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {11, 34, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 10, 24, 16]


Before reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 10, 24, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 10, 24, 16]


Solution : [7, 10, 24, 16] has cost 19.


Before backtrack at level 11
 pending : [33, 31, 3, 15, 14]
 solution : [7, 10, 24, 16]

After backtrack at level 11
 pending : [33, 31, 3, 15, 14, 19, 34, 11, 12]
 solution : [7, 10, 24, 16]


Invert decision for 16 at level 10


New level: 11
 pending : [33, 31, 3, 15, 14, 19, 34, 11, 12]
 solution : [7, 10, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 14, 19, 34, 11, 12]
 solution : [7, 10, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14, 19, 34, 11, 12]
 solution : [7, 10, 24]


Solution : [7, 10, 24] has cost 12.


Decide in level 11 among pending : [33, 31, 3, 15, 14, 19, 34, 11, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [33, 31, 3, 15, 19, 34, 11, 12]
 solution : [7, 10, 24, 14]


New level: 12
 pending : [33, 31, 3, 15, 19, 34, 11, 12]
 solution : [7, 10, 24, 14]


Before reduction : 
 pending  : [33, 31, 3, 15, 19, 34, 11, 12]
 solution : [7, 10, 24, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, 262144), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {3, 12, 15}

After reduction : 
 pending  : [33, 31, 19, 34, 11]
 solution : [7, 10, 24, 14]


Before reduction : 
 pending  : [33, 31, 19, 34, 11]
 solution : [7, 10, 24, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 19, 34, 11]
 solution : [7, 10, 24, 14]


Solution : [7, 10, 24, 14] has cost 21.


Before backtrack at level 12
 pending : [33, 31, 19, 34, 11]
 solution : [7, 10, 24, 14]

After backtrack at level 12
 pending : [33, 31, 19, 34, 11, 3, 15, 12]
 solution : [7, 10, 24, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [33, 31, 19, 34, 11, 3, 15, 12]
 solution : [7, 10, 24]


Before reduction : 
 pending  : [33, 31, 19, 34, 11, 3, 15, 12]
 solution : [7, 10, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8192), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 19, 34, 11, 3, 15, 12]
 solution : [7, 10, 24]


Solution : [7, 10, 24] has cost 12.


Decide in level 12 among pending : [33, 31, 19, 34, 11, 3, 15, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 11 with phase True at level 12

After decision at level 12
 pending : [33, 31, 19, 34, 3, 15, 12]
 solution : [7, 10, 24, 11]


New level: 13
 pending : [33, 31, 19, 34, 3, 15, 12]
 solution : [7, 10, 24, 11]


Before reduction : 
 pending  : [33, 31, 19, 34, 3, 15, 12]
 solution : [7, 10, 24, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 131072), (12, 16384), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {34, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 10, 24, 11]


Before reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 10, 24, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 10, 24, 11]


Solution : [7, 10, 24, 11] has cost 19.


Before backtrack at level 13
 pending : [33, 31, 3, 15]
 solution : [7, 10, 24, 11]

After backtrack at level 13
 pending : [33, 31, 3, 15, 19, 34, 12]
 solution : [7, 10, 24, 11]


Invert decision for 11 at level 12


New level: 13
 pending : [33, 31, 3, 15, 19, 34, 12]
 solution : [7, 10, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 19, 34, 12]
 solution : [7, 10, 24]

Essensial at level 13 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16384), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {34}

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 10, 24, 19]


Before reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 10, 24, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 10, 24, 19]


Solution : [7, 10, 24, 19] has cost 19.


Before backtrack at level 13
 pending : [33, 31, 3, 15, 12]
 solution : [7, 10, 24, 19]

After backtrack at level 13
 pending : [33, 31, 3, 15, 12, 19, 34]
 solution : [7, 10, 24]


Before backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 34]
 solution : [7, 10, 24]

After backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 34, 11]
 solution : [7, 10, 24]


Before backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 34, 11]
 solution : [7, 10, 24]

After backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14]
 solution : [7, 10, 24]


Before backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14]
 solution : [7, 10, 24]

After backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 10, 24]


Before backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16]
 solution : [7, 10, 24]

After backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 10, 24]


Before backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18]
 solution : [7, 10, 24]

After backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 10, 24]


Before backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13]
 solution : [7, 10, 24]

After backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17]
 solution : [7, 10]


Before backtrack at level 6
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17]
 solution : [7, 10]

After backtrack at level 6
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17, 8]
 solution : [7, 10]


Before backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17, 8]
 solution : [7, 10]

After backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17, 8, 32]
 solution : [7, 10]


Before backtrack at level 4
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17, 8, 32]
 solution : [7, 10]

After backtrack at level 4
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17, 8, 32, 29]
 solution : [7, 10]


Before backtrack at level 3
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17, 8, 32, 29]
 solution : [7, 10]

After backtrack at level 3
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17, 8, 32, 29, 25]
 solution : [7, 10]


Invert decision for 10 at level 2


New level: 3
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17, 8, 32, 29, 25]
 solution : [7]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17, 8, 32, 29, 25]
 solution : [7]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8192), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17, 8, 32, 29, 25]
 solution : [7]


Solution : [7] has cost 3.


Decide in level 3 among pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17, 8, 32, 29, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 25 with phase True at level 3

After decision at level 3
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17, 8, 32, 29]
 solution : [7, 25]


New level: 4
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17, 8, 32, 29]
 solution : [7, 25]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17, 8, 32, 29]
 solution : [7, 25]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17, 8, 32, 29]
 solution : [7, 25]


Solution : [7, 25] has cost 7.


Decide in level 4 among pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17, 8, 32, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 32 with phase True at level 4

After decision at level 4
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17, 8, 29]
 solution : [7, 25, 32]


New level: 5
 pending : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17, 8, 29]
 solution : [7, 25, 32]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 34, 11, 14, 16, 18, 13, 24, 5, 26, 28, 17, 8, 29]
 solution : [7, 25, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 0), (32, -1), (33, 0), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : {33, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31}

After reduction : 
 pending  : [34, 24, 5, 26, 28, 8, 29]
 solution : [7, 25, 32]


Before reduction : 
 pending  : [34, 24, 5, 26, 28, 8, 29]
 solution : [7, 25, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 0), (32, -1), (33, 0), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [34, 24, 5, 26, 28, 8, 29]
 solution : [7, 25, 32]


Solution : [7, 25, 32] has cost 11.


Decide in level 5 among pending : [34, 24, 5, 26, 28, 8, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 29 with phase True at level 5

After decision at level 5
 pending : [34, 24, 5, 26, 28, 8]
 solution : [7, 25, 32, 29]


New level: 6
 pending : [34, 24, 5, 26, 28, 8]
 solution : [7, 25, 32, 29]


Before reduction : 
 pending  : [34, 24, 5, 26, 28, 8]
 solution : [7, 25, 32, 29]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {34, 26, 28, 5}

After reduction : 
 pending  : [24, 8]
 solution : [7, 25, 32, 29]


Before reduction : 
 pending  : [24, 8]
 solution : [7, 25, 32, 29]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 8]
 solution : [7, 25, 32, 29]


Solution : [7, 25, 32, 29] has cost 24.


Before backtrack at level 6
 pending : [24, 8]
 solution : [7, 25, 32, 29]

After backtrack at level 6
 pending : [24, 8, 34, 5, 26, 28]
 solution : [7, 25, 32, 29]


Invert decision for 29 at level 5


New level: 6
 pending : [24, 8, 34, 5, 26, 28]
 solution : [7, 25, 32]


Before reduction : 
 pending  : [24, 8, 34, 5, 26, 28]
 solution : [7, 25, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 8, 34, 5, 26, 28]
 solution : [7, 25, 32]


Solution : [7, 25, 32] has cost 11.


Decide in level 6 among pending : [24, 8, 34, 5, 26, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [8, 34, 5, 26, 28]
 solution : [7, 25, 32, 24]


New level: 7
 pending : [8, 34, 5, 26, 28]
 solution : [7, 25, 32, 24]


Before reduction : 
 pending  : [8, 34, 5, 26, 28]
 solution : [7, 25, 32, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {34, 5, 8, 26, 28}

After reduction : 
 pending  : []
 solution : [7, 25, 32, 24]


Before reduction : 
 pending  : []
 solution : [7, 25, 32, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 25, 32, 24]


Solution : [7, 25, 32, 24] has cost 18.


Before backtrack at level 7
 pending : []
 solution : [7, 25, 32, 24]

After backtrack at level 7
 pending : [8, 34, 5, 26, 28]
 solution : [7, 25, 32, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [8, 34, 5, 26, 28]
 solution : [7, 25, 32]


Before reduction : 
 pending  : [8, 34, 5, 26, 28]
 solution : [7, 25, 32]

Essensial at level 7 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {34, 26, 28, 5}

After reduction : 
 pending  : []
 solution : [7, 25, 32, 8]


Before reduction : 
 pending  : []
 solution : [7, 25, 32, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 25, 32, 8]


Solution : [7, 25, 32, 8] has cost 15.


Before backtrack at level 7
 pending : []
 solution : [7, 25, 32, 8]

After backtrack at level 7
 pending : [8, 34, 5, 26, 28]
 solution : [7, 25, 32]


Before backtrack at level 6
 pending : [8, 34, 5, 26, 28]
 solution : [7, 25, 32]

After backtrack at level 6
 pending : [8, 34, 5, 26, 28, 24]
 solution : [7, 25, 32]


Before backtrack at level 5
 pending : [8, 34, 5, 26, 28, 24]
 solution : [7, 25, 32]

After backtrack at level 5
 pending : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 29]
 solution : [7, 25, 32]


Invert decision for 32 at level 4


New level: 5
 pending : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 29]
 solution : [7, 25]


Before reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 29]
 solution : [7, 25]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 29]
 solution : [7, 25]


Solution : [7, 25] has cost 7.


Decide in level 5 among pending : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 5

After decision at level 5
 pending : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 29]
 solution : [7, 25, 17]


New level: 6
 pending : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 29]
 solution : [7, 25, 17]


Before reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 29]
 solution : [7, 25, 17]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 0), (32, -1), (33, 0), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {33, 3, 11, 12, 13, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 29]
 solution : [7, 25, 17]


Before reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 29]
 solution : [7, 25, 17]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 0), (32, -1), (33, 0), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 29]
 solution : [7, 25, 17]


Solution : [7, 25, 17] has cost 14.


Before backtrack at level 6
 pending : [8, 34, 5, 26, 28, 24, 29]
 solution : [7, 25, 17]

After backtrack at level 6
 pending : [8, 34, 5, 26, 28, 24, 29, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 25, 17]


Invert decision for 17 at level 5


New level: 6
 pending : [8, 34, 5, 26, 28, 24, 29, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 25]


Before reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 29, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, -1), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 29, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 25]


Solution : [7, 25] has cost 7.


Decide in level 6 among pending : [8, 34, 5, 26, 28, 24, 29, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, -1), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 29 with phase True at level 6

After decision at level 6
 pending : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 25, 29]


New level: 7
 pending : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 25, 29]


Before reduction : 
 pending  : [8, 34, 5, 26, 28, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 25, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, -1), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, 8388608), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 65536), (16, 524288), (17, -1), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, 4096), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {26, 28, 5}

After reduction : 
 pending  : [8, 34, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 25, 29]


Before reduction : 
 pending  : [8, 34, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 25, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 65536), (16, 524288), (17, -1), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, 4096), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 65536), (16, 524288), (17, -1), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, 4096), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 34, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 25, 29]


Solution : [7, 25, 29] has cost 20.


Before backtrack at level 7
 pending : [8, 34, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 25, 29]

After backtrack at level 7
 pending : [8, 34, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 25, 29]


Invert decision for 29 at level 6


New level: 7
 pending : [8, 34, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 25]


Before reduction : 
 pending  : [8, 34, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 65536), (16, 524288), (17, -1), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, 4096), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, -1), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 34, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 25]


Solution : [7, 25] has cost 7.


Decide in level 7 among pending : [8, 34, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, -1), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 34 with phase True at level 7

After decision at level 7
 pending : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 25, 34]


New level: 8
 pending : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 25, 34]


Before reduction : 
 pending  : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 25, 34]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, -1), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, 4194304), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, 4194304), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 25, 34]


Solution : [7, 25, 34] has cost 21.


Before backtrack at level 8
 pending : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 25, 34]

After backtrack at level 8
 pending : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 25, 34]


Invert decision for 34 at level 7


New level: 8
 pending : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 25]


Before reduction : 
 pending  : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, 4194304), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 1024), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, -1), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]
 solution : [7, 25]


Solution : [7, 25] has cost 7.


Decide in level 8 among pending : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 5, 26, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, -1), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 8

After decision at level 8
 pending : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 5, 26, 28]
 solution : [7, 25, 13]


New level: 9
 pending : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 5, 26, 28]
 solution : [7, 25, 13]


Before reduction : 
 pending  : [8, 24, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 5, 26, 28]
 solution : [7, 25, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, -1), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {33, 3, 11, 12, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : [8, 24, 5, 26, 28]
 solution : [7, 25, 13]


Before reduction : 
 pending  : [8, 24, 5, 26, 28]
 solution : [7, 25, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [8, 24, 5, 26, 28]
 solution : [7, 25, 13]


Solution : [7, 25, 13] has cost 14.


Before backtrack at level 9
 pending : [8, 24, 5, 26, 28]
 solution : [7, 25, 13]

After backtrack at level 9
 pending : [8, 24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 25, 13]


Invert decision for 13 at level 8


New level: 9
 pending : [8, 24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 25]


Before reduction : 
 pending  : [8, 24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 1024), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, -1), (14, 1048576), (15, 131072), (16, 524288), (17, -1), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [8, 24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 25]


Solution : [7, 25] has cost 7.


Decide in level 9 among pending : [8, 24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, -1), (14, 1048576), (15, 131072), (16, 524288), (17, -1), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 8 with phase True at level 9

After decision at level 9
 pending : [24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 25, 8]


New level: 10
 pending : [24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 25, 8]


Before reduction : 
 pending  : [24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 25, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, -1), (14, 1048576), (15, 131072), (16, 524288), (17, -1), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {24, 26, 28, 5}

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 25, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 25, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 25, 8]


Solution : [7, 25, 8] has cost 11.


Decide in level 10 among pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 10

After decision at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 25, 8, 18]


New level: 11
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 25, 8, 18]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 25, 8, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, 0), (13, -1), (14, 0), (15, 0), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {3, 12, 14, 15}

After reduction : 
 pending  : [33, 31, 19, 11, 16]
 solution : [7, 25, 8, 18]


Before reduction : 
 pending  : [33, 31, 19, 11, 16]
 solution : [7, 25, 8, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, 0), (13, -1), (14, 0), (15, 0), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 19, 11, 16]
 solution : [7, 25, 8, 18]


Solution : [7, 25, 8, 18] has cost 20.


Before backtrack at level 11
 pending : [33, 31, 19, 11, 16]
 solution : [7, 25, 8, 18]

After backtrack at level 11
 pending : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 25, 8, 18]


Invert decision for 18 at level 10


New level: 11
 pending : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 25, 8]


Before reduction : 
 pending  : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 25, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 25, 8]


Solution : [7, 25, 8] has cost 11.


Decide in level 11 among pending : [33, 31, 19, 11, 16, 3, 15, 12, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 25, 8, 16]


New level: 12
 pending : [33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 25, 8, 16]


Before reduction : 
 pending  : [33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 25, 8, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {11, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 25, 8, 16]


Before reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 25, 8, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 25, 8, 16]


Solution : [7, 25, 8, 16] has cost 18.


Before backtrack at level 12
 pending : [33, 31, 3, 15, 14]
 solution : [7, 25, 8, 16]

After backtrack at level 12
 pending : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 25, 8, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 25, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 25, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 25, 8]


Solution : [7, 25, 8] has cost 11.


Decide in level 12 among pending : [33, 31, 3, 15, 14, 19, 11, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [33, 31, 3, 15, 19, 11, 12]
 solution : [7, 25, 8, 14]


New level: 13
 pending : [33, 31, 3, 15, 19, 11, 12]
 solution : [7, 25, 8, 14]


Before reduction : 
 pending  : [33, 31, 3, 15, 19, 11, 12]
 solution : [7, 25, 8, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {3, 12, 15}

After reduction : 
 pending  : [33, 31, 19, 11]
 solution : [7, 25, 8, 14]


Before reduction : 
 pending  : [33, 31, 19, 11]
 solution : [7, 25, 8, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 19, 11]
 solution : [7, 25, 8, 14]


Solution : [7, 25, 8, 14] has cost 20.


Before backtrack at level 13
 pending : [33, 31, 19, 11]
 solution : [7, 25, 8, 14]

After backtrack at level 13
 pending : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 25, 8, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 25, 8]


Before reduction : 
 pending  : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 25, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 25, 8]


Solution : [7, 25, 8] has cost 11.


Decide in level 13 among pending : [33, 31, 19, 11, 3, 15, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 11 with phase True at level 13

After decision at level 13
 pending : [33, 31, 19, 3, 15, 12]
 solution : [7, 25, 8, 11]


New level: 14
 pending : [33, 31, 19, 3, 15, 12]
 solution : [7, 25, 8, 11]


Before reduction : 
 pending  : [33, 31, 19, 3, 15, 12]
 solution : [7, 25, 8, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : {19, 12}

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 25, 8, 11]


Before reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 25, 8, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 25, 8, 11]


Solution : [7, 25, 8, 11] has cost 18.


Before backtrack at level 14
 pending : [33, 31, 3, 15]
 solution : [7, 25, 8, 11]

After backtrack at level 14
 pending : [33, 31, 3, 15, 19, 12]
 solution : [7, 25, 8, 11]


Invert decision for 11 at level 13


New level: 14
 pending : [33, 31, 3, 15, 19, 12]
 solution : [7, 25, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 19, 12]
 solution : [7, 25, 8]

Essensial at level 14 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16384), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 25, 8, 19]


Before reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 25, 8, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16384), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16384), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 25, 8, 19]


Solution : [7, 25, 8, 19] has cost 18.


Before backtrack at level 14
 pending : [33, 31, 3, 15, 12]
 solution : [7, 25, 8, 19]

After backtrack at level 14
 pending : [33, 31, 3, 15, 12, 19]
 solution : [7, 25, 8]


Before backtrack at level 13
 pending : [33, 31, 3, 15, 12, 19]
 solution : [7, 25, 8]

After backtrack at level 13
 pending : [33, 31, 3, 15, 12, 19, 11]
 solution : [7, 25, 8]


Before backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 11]
 solution : [7, 25, 8]

After backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 11, 14]
 solution : [7, 25, 8]


Before backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 11, 14]
 solution : [7, 25, 8]

After backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 25, 8]


Before backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 25, 8]

After backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 24, 5, 26, 28, 18]
 solution : [7, 25, 8]


Invert decision for 8 at level 9


New level: 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 24, 5, 26, 28, 18]
 solution : [7, 25]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 24, 5, 26, 28, 18]
 solution : [7, 25]

Essensial at level 10 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16384), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {26, 28, 5}

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 25, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 25, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 25, 24]


Solution : [7, 25, 24] has cost 14.


Before backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 25, 24]

After backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28]
 solution : [7, 25]


Before backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28]
 solution : [7, 25]

After backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8]
 solution : [7, 25]


Before backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8]
 solution : [7, 25]

After backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13]
 solution : [7, 25]


Before backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13]
 solution : [7, 25]

After backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34]
 solution : [7, 25]


Before backtrack at level 6
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34]
 solution : [7, 25]

After backtrack at level 6
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 29]
 solution : [7, 25]


Before backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 29]
 solution : [7, 25]

After backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 29, 17]
 solution : [7, 25]


Before backtrack at level 4
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 29, 17]
 solution : [7, 25]

After backtrack at level 4
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 29, 17, 32]
 solution : [7, 25]


Invert decision for 25 at level 3


New level: 4
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 29, 17, 32]
 solution : [7]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 29, 17, 32]
 solution : [7]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 29, 17, 32]
 solution : [7]


Solution : [7] has cost 3.


Decide in level 4 among pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 29, 17, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 29 with phase True at level 4

After decision at level 4
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 17, 32]
 solution : [7, 29]


New level: 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 17, 32]
 solution : [7, 29]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 5, 26, 28, 8, 13, 34, 17, 32]
 solution : [7, 29]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, 16777216), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, 4096), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 65536), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4096), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8192), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : {26, 28, 5}

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17, 32]
 solution : [7, 29]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17, 32]
 solution : [7, 29]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, 4096), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 65536), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4096), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8192), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 65536), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8192), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17, 32]
 solution : [7, 29]


Solution : [7, 29] has cost 16.


Before backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17, 32]
 solution : [7, 29]

After backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17, 32, 5, 26, 28]
 solution : [7, 29]


Invert decision for 29 at level 4


New level: 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17, 32, 5, 26, 28]
 solution : [7]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17, 32, 5, 26, 28]
 solution : [7]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 65536), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8192), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17, 32, 5, 26, 28]
 solution : [7]


Solution : [7] has cost 3.


Decide in level 5 among pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17, 32, 5, 26, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17, 5, 26, 28]
 solution : [7, 32]


New level: 6
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17, 5, 26, 28]
 solution : [7, 32]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 24, 8, 13, 34, 17, 5, 26, 28]
 solution : [7, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 131072), (32, 16777216), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 2048), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 1024), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {33, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31}

After reduction : 
 pending  : [24, 8, 34, 5, 26, 28]
 solution : [7, 32]


Before reduction : 
 pending  : [24, 8, 34, 5, 26, 28]
 solution : [7, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 2048), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 1024), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 2048), (27, -1), (28, 131072), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1024), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 8, 34, 5, 26, 28]
 solution : [7, 32]


Solution : [7, 32] has cost 7.


Decide in level 6 among pending : [24, 8, 34, 5, 26, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 2048), (27, -1), (28, 131072), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1024), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [8, 34, 5, 26, 28]
 solution : [7, 32, 24]


New level: 7
 pending : [8, 34, 5, 26, 28]
 solution : [7, 32, 24]


Before reduction : 
 pending  : [8, 34, 5, 26, 28]
 solution : [7, 32, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 2048), (27, -1), (28, 131072), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1024), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {34, 5, 8, 26, 28}

After reduction : 
 pending  : []
 solution : [7, 32, 24]


Before reduction : 
 pending  : []
 solution : [7, 32, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 32, 24]


Solution : [7, 32, 24] has cost 14.


Before backtrack at level 7
 pending : []
 solution : [7, 32, 24]

After backtrack at level 7
 pending : [8, 34, 5, 26, 28]
 solution : [7, 32, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [8, 34, 5, 26, 28]
 solution : [7, 32]


Before reduction : 
 pending  : [8, 34, 5, 26, 28]
 solution : [7, 32]

Essensial at level 7 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {34, 26, 28, 5}

After reduction : 
 pending  : []
 solution : [7, 32, 8]


Before reduction : 
 pending  : []
 solution : [7, 32, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 32, 8]


Solution : [7, 32, 8] has cost 11.


Before backtrack at level 7
 pending : []
 solution : [7, 32, 8]

After backtrack at level 7
 pending : [8, 34, 5, 26, 28]
 solution : [7, 32]


Before backtrack at level 6
 pending : [8, 34, 5, 26, 28]
 solution : [7, 32]

After backtrack at level 6
 pending : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7]


Before reduction : 
 pending  : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7]


Solution : [7] has cost 3.


Decide in level 6 among pending : [8, 34, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 34 with phase True at level 6

After decision at level 6
 pending : [8, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7, 34]


New level: 7
 pending : [8, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7, 34]


Before reduction : 
 pending  : [8, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7, 34]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, 8388608), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, 4194304), (14, 524288), (15, 65536), (16, 524288), (17, 8388608), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7, 34]


Solution : [7, 34] has cost 17.


Before backtrack at level 7
 pending : [8, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7, 34]

After backtrack at level 7
 pending : [8, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7, 34]


Invert decision for 34 at level 6


New level: 7
 pending : [8, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7]


Before reduction : 
 pending  : [8, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 2097152), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, 4194304), (14, 524288), (15, 65536), (16, 524288), (17, 8388608), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 2048), (27, -1), (28, 65536), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]
 solution : [7]


Solution : [7] has cost 3.


Decide in level 7 among pending : [8, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 17, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [8, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 24]
 solution : [7, 17]


New level: 8
 pending : [8, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 24]
 solution : [7, 17]


Before reduction : 
 pending  : [8, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 24]
 solution : [7, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, 8388608), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 2048), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {33, 3, 11, 12, 13, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : [8, 5, 26, 28, 24]
 solution : [7, 17]


Before reduction : 
 pending  : [8, 5, 26, 28, 24]
 solution : [7, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 2048), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 2048), (27, -1), (28, 131072), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 5, 26, 28, 24]
 solution : [7, 17]


Solution : [7, 17] has cost 10.


Decide in level 8 among pending : [8, 5, 26, 28, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 2048), (27, -1), (28, 131072), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 8 with phase True at level 8

After decision at level 8
 pending : [5, 26, 28, 24]
 solution : [7, 17, 8]


New level: 9
 pending : [5, 26, 28, 24]
 solution : [7, 17, 8]


Before reduction : 
 pending  : [5, 26, 28, 24]
 solution : [7, 17, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 2048), (27, -1), (28, 131072), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {24, 26, 28, 5}

After reduction : 
 pending  : []
 solution : [7, 17, 8]


Before reduction : 
 pending  : []
 solution : [7, 17, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 17, 8]


Solution : [7, 17, 8] has cost 14.


Before backtrack at level 9
 pending : []
 solution : [7, 17, 8]

After backtrack at level 9
 pending : [5, 26, 28, 24]
 solution : [7, 17, 8]


Invert decision for 8 at level 8


New level: 9
 pending : [5, 26, 28, 24]
 solution : [7, 17]


Before reduction : 
 pending  : [5, 26, 28, 24]
 solution : [7, 17]

Essensial at level 9 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {26, 28, 5}

After reduction : 
 pending  : []
 solution : [7, 17, 24]


Before reduction : 
 pending  : []
 solution : [7, 17, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 17, 24]


Solution : [7, 17, 24] has cost 17.


Before backtrack at level 9
 pending : []
 solution : [7, 17, 24]

After backtrack at level 9
 pending : [24, 5, 26, 28]
 solution : [7, 17]


Before backtrack at level 8
 pending : [24, 5, 26, 28]
 solution : [7, 17]

After backtrack at level 8
 pending : [24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 8]
 solution : [7, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 8]
 solution : [7]


Before reduction : 
 pending  : [24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 8]
 solution : [7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, -1), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 8]
 solution : [7]


Solution : [7] has cost 3.


Decide in level 8 among pending : [24, 5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, -1), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 8]
 solution : [7, 24]


New level: 9
 pending : [5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 8]
 solution : [7, 24]


Before reduction : 
 pending  : [5, 26, 28, 33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13, 8]
 solution : [7, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 4194304), (9, -1), (10, -1), (11, 262144), (12, 65536), (13, 4194304), (14, 1048576), (15, 131072), (16, 524288), (17, -1), (18, 2097152), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 4096), (27, -1), (28, 131072), (29, -1), (30, -1), (31, 131072), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, 4194304), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {8, 26, 28, 5}

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, 4194304), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, 4194304), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 24]


Solution : [7, 24] has cost 10.


Decide in level 9 among pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, 4194304), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 9

After decision at level 9
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 24, 13]


New level: 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 24, 13]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 24, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, 4194304), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {33, 3, 11, 12, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : []
 solution : [7, 24, 13]


Before reduction : 
 pending  : []
 solution : [7, 24, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [7, 24, 13]


Solution : [7, 24, 13] has cost 17.


Before backtrack at level 10
 pending : []
 solution : [7, 24, 13]

After backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 24, 13]


Invert decision for 13 at level 9


New level: 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 24]


Solution : [7, 24] has cost 10.


Decide in level 10 among pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 10

After decision at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 24, 18]


New level: 11
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 24, 18]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 24, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, 0), (13, -1), (14, 0), (15, 0), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {3, 12, 14, 15}

After reduction : 
 pending  : [33, 31, 19, 11, 16]
 solution : [7, 24, 18]


Before reduction : 
 pending  : [33, 31, 19, 11, 16]
 solution : [7, 24, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, 0), (13, -1), (14, 0), (15, 0), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 19, 11, 16]
 solution : [7, 24, 18]


Solution : [7, 24, 18] has cost 19.


Before backtrack at level 11
 pending : [33, 31, 19, 11, 16]
 solution : [7, 24, 18]

After backtrack at level 11
 pending : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 24, 18]


Invert decision for 18 at level 10


New level: 11
 pending : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 24]


Before reduction : 
 pending  : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 24]


Solution : [7, 24] has cost 10.


Decide in level 11 among pending : [33, 31, 19, 11, 16, 3, 15, 12, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 24, 16]


New level: 12
 pending : [33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 24, 16]


Before reduction : 
 pending  : [33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 24, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {11, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 24, 16]


Before reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 24, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 24, 16]


Solution : [7, 24, 16] has cost 17.


Before backtrack at level 12
 pending : [33, 31, 3, 15, 14]
 solution : [7, 24, 16]

After backtrack at level 12
 pending : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 24, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 24]


Solution : [7, 24] has cost 10.


Decide in level 12 among pending : [33, 31, 3, 15, 14, 19, 11, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [33, 31, 3, 15, 19, 11, 12]
 solution : [7, 24, 14]


New level: 13
 pending : [33, 31, 3, 15, 19, 11, 12]
 solution : [7, 24, 14]


Before reduction : 
 pending  : [33, 31, 3, 15, 19, 11, 12]
 solution : [7, 24, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {3, 12, 15}

After reduction : 
 pending  : [33, 31, 19, 11]
 solution : [7, 24, 14]


Before reduction : 
 pending  : [33, 31, 19, 11]
 solution : [7, 24, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 19, 11]
 solution : [7, 24, 14]


Solution : [7, 24, 14] has cost 19.


Before backtrack at level 13
 pending : [33, 31, 19, 11]
 solution : [7, 24, 14]

After backtrack at level 13
 pending : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 24, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 24]


Before reduction : 
 pending  : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 24]


Solution : [7, 24] has cost 10.


Decide in level 13 among pending : [33, 31, 19, 11, 3, 15, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 11 with phase True at level 13

After decision at level 13
 pending : [33, 31, 19, 3, 15, 12]
 solution : [7, 24, 11]


New level: 14
 pending : [33, 31, 19, 3, 15, 12]
 solution : [7, 24, 11]


Before reduction : 
 pending  : [33, 31, 19, 3, 15, 12]
 solution : [7, 24, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : {19, 12}

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 24, 11]


Before reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 24, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 24, 11]


Solution : [7, 24, 11] has cost 17.


Before backtrack at level 14
 pending : [33, 31, 3, 15]
 solution : [7, 24, 11]

After backtrack at level 14
 pending : [33, 31, 3, 15, 19, 12]
 solution : [7, 24, 11]


Invert decision for 11 at level 13


New level: 14
 pending : [33, 31, 3, 15, 19, 12]
 solution : [7, 24]


Before reduction : 
 pending  : [33, 31, 3, 15, 19, 12]
 solution : [7, 24]

Essensial at level 14 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16384), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 24, 19]


Before reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 24, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16384), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16384), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 24, 19]


Solution : [7, 24, 19] has cost 17.


Before backtrack at level 14
 pending : [33, 31, 3, 15, 12]
 solution : [7, 24, 19]

After backtrack at level 14
 pending : [33, 31, 3, 15, 12, 19]
 solution : [7, 24]


Before backtrack at level 13
 pending : [33, 31, 3, 15, 12, 19]
 solution : [7, 24]

After backtrack at level 13
 pending : [33, 31, 3, 15, 12, 19, 11]
 solution : [7, 24]


Before backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 11]
 solution : [7, 24]

After backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 11, 14]
 solution : [7, 24]


Before backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 11, 14]
 solution : [7, 24]

After backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 24]


Before backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 24]

After backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 24]


Before backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 24]

After backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 5, 26, 28, 8, 13]
 solution : [7, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 5, 26, 28, 8, 13]
 solution : [7]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 5, 26, 28, 8, 13]
 solution : [7]

Essensial at level 9 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16384), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, 4194304), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {26, 28, 5}

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, 4194304), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, 4194304), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]
 solution : [7, 8]


Solution : [7, 8] has cost 7.


Decide in level 9 among pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, 4194304), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 9

After decision at level 9
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 8, 13]


New level: 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 8, 13]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 8, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, 4194304), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {33, 3, 11, 12, 14, 15, 16, 18, 19, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 13]


Before reduction : 
 pending  : []
 solution : [7, 8, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 13]


Solution : [7, 8, 13] has cost 14.


Before backtrack at level 10
 pending : []
 solution : [7, 8, 13]

After backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 8, 13]


Invert decision for 13 at level 9


New level: 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 8]


Solution : [7, 8] has cost 7.


Decide in level 10 among pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 10

After decision at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 8, 18]


New level: 11
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 8, 18]


Before reduction : 
 pending  : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 8, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, 1048576), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, 0), (13, -1), (14, 0), (15, 0), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {3, 12, 14, 15}

After reduction : 
 pending  : [33, 31, 19, 11, 16]
 solution : [7, 8, 18]


Before reduction : 
 pending  : [33, 31, 19, 11, 16]
 solution : [7, 8, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, 0), (13, -1), (14, 0), (15, 0), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 19, 11, 16]
 solution : [7, 8, 18]


Solution : [7, 8, 18] has cost 16.


Before backtrack at level 11
 pending : [33, 31, 19, 11, 16]
 solution : [7, 8, 18]

After backtrack at level 11
 pending : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 8, 18]


Invert decision for 18 at level 10


New level: 11
 pending : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 8]


Before reduction : 
 pending  : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 19, 11, 16, 3, 15, 12, 14]
 solution : [7, 8]


Solution : [7, 8] has cost 7.


Decide in level 11 among pending : [33, 31, 19, 11, 16, 3, 15, 12, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 8, 16]


New level: 12
 pending : [33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 8, 16]


Before reduction : 
 pending  : [33, 31, 19, 11, 3, 15, 12, 14]
 solution : [7, 8, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, 524288), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {11, 19, 12}

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 8, 16]


Before reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 8, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14]
 solution : [7, 8, 16]


Solution : [7, 8, 16] has cost 14.


Before backtrack at level 12
 pending : [33, 31, 3, 15, 14]
 solution : [7, 8, 16]

After backtrack at level 12
 pending : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 8, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 14, 19, 11, 12]
 solution : [7, 8]


Solution : [7, 8] has cost 7.


Decide in level 12 among pending : [33, 31, 3, 15, 14, 19, 11, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [33, 31, 3, 15, 19, 11, 12]
 solution : [7, 8, 14]


New level: 13
 pending : [33, 31, 3, 15, 19, 11, 12]
 solution : [7, 8, 14]


Before reduction : 
 pending  : [33, 31, 3, 15, 19, 11, 12]
 solution : [7, 8, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, 524288), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {3, 12, 15}

After reduction : 
 pending  : [33, 31, 19, 11]
 solution : [7, 8, 14]


Before reduction : 
 pending  : [33, 31, 19, 11]
 solution : [7, 8, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 19, 11]
 solution : [7, 8, 14]


Solution : [7, 8, 14] has cost 16.


Before backtrack at level 13
 pending : [33, 31, 19, 11]
 solution : [7, 8, 14]

After backtrack at level 13
 pending : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 8, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 8]


Before reduction : 
 pending  : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16384), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 19, 11, 3, 15, 12]
 solution : [7, 8]


Solution : [7, 8] has cost 7.


Decide in level 13 among pending : [33, 31, 19, 11, 3, 15, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 11 with phase True at level 13

After decision at level 13
 pending : [33, 31, 19, 3, 15, 12]
 solution : [7, 8, 11]


New level: 14
 pending : [33, 31, 19, 3, 15, 12]
 solution : [7, 8, 11]


Before reduction : 
 pending  : [33, 31, 19, 3, 15, 12]
 solution : [7, 8, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 262144), (12, 32768), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : {19, 12}

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 8, 11]


Before reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 8, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [33, 31, 3, 15]
 solution : [7, 8, 11]


Solution : [7, 8, 11] has cost 14.


Before backtrack at level 14
 pending : [33, 31, 3, 15]
 solution : [7, 8, 11]

After backtrack at level 14
 pending : [33, 31, 3, 15, 19, 12]
 solution : [7, 8, 11]


Invert decision for 11 at level 13


New level: 14
 pending : [33, 31, 3, 15, 19, 12]
 solution : [7, 8]


Before reduction : 
 pending  : [33, 31, 3, 15, 19, 12]
 solution : [7, 8]

Essensial at level 14 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16384), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 8, 19]


Before reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 8, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16384), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16384), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [33, 31, 3, 15, 12]
 solution : [7, 8, 19]


Solution : [7, 8, 19] has cost 14.


Before backtrack at level 14
 pending : [33, 31, 3, 15, 12]
 solution : [7, 8, 19]

After backtrack at level 14
 pending : [33, 31, 3, 15, 12, 19]
 solution : [7, 8]


Before backtrack at level 13
 pending : [33, 31, 3, 15, 12, 19]
 solution : [7, 8]

After backtrack at level 13
 pending : [33, 31, 3, 15, 12, 19, 11]
 solution : [7, 8]


Before backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 11]
 solution : [7, 8]

After backtrack at level 12
 pending : [33, 31, 3, 15, 12, 19, 11, 14]
 solution : [7, 8]


Before backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 11, 14]
 solution : [7, 8]

After backtrack at level 11
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 8]


Before backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16]
 solution : [7, 8]

After backtrack at level 10
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 8]


Before backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18]
 solution : [7, 8]

After backtrack at level 9
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13]
 solution : [7]


Before backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13]
 solution : [7]

After backtrack at level 8
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24]
 solution : [7]


Before backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24]
 solution : [7]

After backtrack at level 7
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17]
 solution : [7]


Before backtrack at level 6
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17]
 solution : [7]

After backtrack at level 6
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34]
 solution : [7]


Before backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34]
 solution : [7]

After backtrack at level 5
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34, 32]
 solution : [7]


Before backtrack at level 4
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34, 32]
 solution : [7]

After backtrack at level 4
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34, 32, 29]
 solution : [7]


Before backtrack at level 3
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34, 32, 29]
 solution : [7]

After backtrack at level 3
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34, 32, 29, 25]
 solution : [7]


Before backtrack at level 2
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34, 32, 29, 25]
 solution : [7]

After backtrack at level 2
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34, 32, 29, 25, 10]
 solution : [7]


Before backtrack at level 1
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34, 32, 29, 25, 10]
 solution : [7]

After backtrack at level 1
 pending : [33, 31, 3, 15, 12, 19, 11, 14, 16, 18, 8, 5, 26, 28, 13, 24, 17, 34, 32, 29, 25, 10, 9]
 solution : [7]


=====================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

=====================================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: total qcost: 11

[MIN NOTE]: maximum branch and bound depth: 14

Definitions (length=2)

invariant [def_didNotPromise] didNotPromise(A) = forall P. ~promise(A,P) # definition

invariant [def_chosenAt] chosenAt(Q,P) = forall A. member(A,Q) -> promise(A,P) # definition

Equality Relations (length=0)

Solution 0 : [7, 32, 8] (length = 3)

invariant [invar_7] forall ACCEPTOR0. (exists PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0)) # qcost: 3

invariant [invar_32] forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) # qcost: 4

invariant [invar_8] forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0) # qcost: 4




[QRM NOTE]: Time elapsed since start: 8.204 seconds

[QRM NOTE]: Time elapsed since last: 0.793 seconds

[QRM NOTE]: Peak memory: 2288544 bytes


=========================================================================================================

	[IVY_CHECK]: Ivy Check on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

=========================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 65: invar_7
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 66: invar_32
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 67: invar_8

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 65: invar_7 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 66: invar_32 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 67: invar_8 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 65: invar_7 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 66: invar_32 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 67: invar_8 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 65: invar_7 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 66: invar_32 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 67: invar_8 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 65: invar_7 ... FAIL
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 66: invar_32 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 67: invar_8 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 49: assumption

error: failed checks: 1
[IVY_CHECK RESULT]: FAIL ... exit with return code 1

[QRM NOTE]: Time elapsed since start: 9.987 seconds

[QRM NOTE]: Time elapsed since last: 1.783 seconds

[QRM NOTE]: Peak memory: 1289645 bytes


********************************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2

********************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy -s acceptor=4,proposer=2 -f 2 -g -w -r -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=4,proposer=2]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 24

[FW NOTE]: number of interpreted atoms (e.g. member,le): 16

[FW NOTE]: symmetric group order: 48

[FW NOTE]: number of branching actions: 18

ivy_to_cpp target=qrm simple-election.acceptor_4_proposer_2.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_4_proposer_2.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_4_proposer_2.finite.cpp simple-election.acceptor_4_proposer_2.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_4_proposer_2.finite.o simple-election.acceptor_4_proposer_2.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 7.386 seconds

[QRM NOTE]: Time elapsed since last: 7.386 seconds

[QRM NOTE]: Peak memory: 1183371 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 7

[FW NOTE]: number of total reachable states:        142

[FW NOTE]: number of dfs representative states:     20

[FW NOTE]: number of dfs non-representative states: 122


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=4,proposer=2]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2', 'acceptor3']
sort: proposer=['proposer0', 'proposer1']
sort: quorum=['quorum__acceptor0_acceptor1_acceptor2', 'quorum__acceptor0_acceptor1_acceptor3', 'quorum__acceptor0_acceptor2_acceptor3', 'quorum__acceptor1_acceptor2_acceptor3']
predicate: member('acceptor', 'quorum')
predicate: chosenAt('quorum', 'proposer')
predicate: leader('proposer',)
predicate: promise('acceptor', 'proposer')
predicate: didNotPromise('acceptor',)
predicate: start('proposer',)
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1_acceptor2)': '1', 'member(acceptor0,quorum__acceptor0_acceptor1_acceptor3)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2_acceptor3)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2_acceptor3)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1_acceptor2)': '1', 'member(acceptor1,quorum__acceptor0_acceptor1_acceptor3)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2_acceptor3)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2_acceptor3)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1_acceptor3)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2_acceptor3)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2_acceptor3)': '1', 'member(acceptor3,quorum__acceptor0_acceptor1_acceptor2)': '0', 'member(acceptor3,quorum__acceptor0_acceptor1_acceptor3)': '1', 'member(acceptor3,quorum__acceptor0_acceptor2_acceptor3)': '1', 'member(acceptor3,quorum__acceptor1_acceptor2_acceptor3)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor3,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor3,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor3,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor3,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor3,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor3,proposer1)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'didNotPromise(acceptor3)', 'leader(proposer0)', 'leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor3,proposer0)', 'promise(acceptor3,proposer1)', 'start(proposer0)', 'start(proposer1)']
representative states : 4026592695, 4026658231, 4026789303, 1896082871, 826535351, 6448213431, 365094759863, 365161868727, 4334284215, 4401393079, 6515322295, 291761591, 23850423, 830729655, 1895951799, 826404279, 6448082359, 365094628791, 365161737655, 6515191223


=== State Orbit 0 =====================
size : 1
repr state: 000000001111000000000000
lex min decimal: 4026592695
states:
000000001111000000000000




=== State Orbit 1 =====================
size : 2
repr state: 000000001111000000000010
lex min decimal: 4026658231
states:
000000001111000000000001
000000001111000000000010




=== State Orbit 2 =====================
size : 1
repr state: 000000001111000000000011
lex min decimal: 4026789303
states:
000000001111000000000011




=== State Orbit 3 =====================
size : 8
repr state: 000000000111001000000011
lex min decimal: 1896082871
states:
000000001110000000001011
000000001110000000000111
000000001101000000100011
000000001011000001000011
000000000111000100000011
000000001101000000010011
000000001011000010000011
000000000111001000000011




=== State Orbit 4 =====================
size : 12
repr state: 000000000011001010000011
lex min decimal: 826535351
states:
000000001010000001000111
000000001010000010001011
000000000101000100010011
000000000011001010000011
000000001001000001010011
000000000011000101000011
000000000110001000001011
000000000110000100000111
000000001001000010100011
000000000101001000100011
000000001100000000010111
000000001100000000101011




=== State Orbit 5 =====================
size : 8
repr state: 100000000001001010100011
lex min decimal: 6448213431
states:
000010000100001000101011
000000011000000001010111
100000000001001010100011
000100000010000101000111
000000101000000010101011
010000000001000101010011
001000000010001010001011
000001000100000100010111




=== State Orbit 6 =====================
size : 2
repr state: 101010100000001010101011
lex min decimal: 365094759863
states:
101010100000001010101011
010101010000000101010111




=== State Orbit 7 =====================
size : 2
repr state: 101010100000101010101011
lex min decimal: 365161868727
states:
101010100000101010101011
010101010000010101010111




=== State Orbit 8 =====================
size : 8
repr state: 100000000000001010100111
lex min decimal: 4334284215
states:
001000000000001010011011
010000000000000101011011
000010000000001001101011
000100000000000101100111
100000000000001010100111
000000010000001001010111
000001000000000110010111
000000100000000110101011




=== State Orbit 9 =====================
size : 8
repr state: 100000000000101010100111
lex min decimal: 4401393079
states:
000010000000101001101011
001000000000101010011011
010000000000010101011011
000000100000100110101011
000001000000010110010111
000100000000010101100111
100000000000101010100111
000000010000011001010111




=== State Orbit 10 =====================
size : 8
repr state: 100000000001101010100011
lex min decimal: 6515322295
states:
000100000010010101000111
100000000001101010100011
001000000010101010001011
000000011000010001010111
010000000001010101010011
000001000100010100010111
000000101000100010101011
000010000100101000101011




=== State Orbit 11 =====================
size : 24
repr state: 000000000001001010010011
lex min decimal: 291761591
states:
000000000010001001001011
000000000100000100100111
000000000010000110000111
000000000010000110001011
000000001000000010010111
000000000010001001000111
000000000001001001100011
000000001000000001101011
000000001000000001100111
000000000100000100101011
000000000010001010000111
000000000001000101100011
000000000001000110010011
000000000010000101001011
000000000100001000010111
000000000001000110100011
000000000001001010010011
000000000100000100011011
000000000001001001010011
000000001000000001011011
000000000100001000100111
000000000100001000011011
000000001000000010100111
000000001000000010011011




=== State Orbit 12 =====================
size : 6
repr state: 000000000000001010010111
lex min decimal: 23850423
states:
000000000000001010010111
000000000000000110011011
000000000000000101101011
000000000000001001100111
000000000000000110100111
000000000000001001011011




=== State Orbit 13 =====================
size : 12
repr state: 000000000011001001000011
lex min decimal: 830729655
states:
000000001001000001100011
000000000110001000000111
000000000101000100100011
000000001100000000011011
000000001100000000100111
000000000101001000010011
000000000011001001000011
000000000011000110000011
000000000110000100001011
000000001010000001001011
000000001010000010000111
000000001001000010010011




=== State Orbit 14 =====================
size : 8
repr state: 000000000111001000000010
lex min decimal: 1895951799
states:
000000001110000000001010
000000001011000001000001
000000001011000010000010
000000001110000000000101
000000000111000100000001
000000001101000000100010
000000001101000000010001
000000000111001000000010




=== State Orbit 15 =====================
size : 12
repr state: 000000000011001010000010
lex min decimal: 826404279
states:
000000001010000001000101
000000000101000100010001
000000000110000100000101
000000000101001000100010
000000001001000001010001
000000000011001010000010
000000001100000000010101
000000001010000010001010
000000001100000000101010
000000000110001000001010
000000000011000101000001
000000001001000010100010




=== State Orbit 16 =====================
size : 8
repr state: 100000000001001010100010
lex min decimal: 6448082359
states:
010000000001000101010001
000010000100001000101010
001000000010001010001010
000000101000000010101010
100000000001001010100010
000000011000000001010101
000100000010000101000101
000001000100000100010101




=== State Orbit 17 =====================
size : 2
repr state: 101010100000001010101010
lex min decimal: 365094628791
states:
101010100000001010101010
010101010000000101010101




=== State Orbit 18 =====================
size : 2
repr state: 101010100000101010101010
lex min decimal: 365161737655
states:
101010100000101010101010
010101010000010101010101




=== State Orbit 19 =====================
size : 8
repr state: 100000000001101010100010
lex min decimal: 6515191223
states:
001000000010101010001010
000001000100010100010101
010000000001010101010001
000000101000100010101010
000100000010010101000101
000000011000010001010101
000010000100101000101010
100000000001101010100010



[QRM NOTE]: Time elapsed since start: 7.764 seconds

[QRM NOTE]: Time elapsed since last: 0.377 seconds

[QRM NOTE]: Peak memory: 1277698 bytes


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=4,proposer=2]

=========================================================================================================================================

[REACH_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 8.241 seconds

[QRM NOTE]: Time elapsed since last: 0.478 seconds

[QRM NOTE]: Peak memory: 352603 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy -s acceptor=3,proposer=3 -f 2 -g -w -r -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 27

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: symmetric group order: 36

[FW NOTE]: number of branching actions: 21

ivy_to_cpp target=qrm simple-election.acceptor_3_proposer_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_3_proposer_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_3_proposer_3.finite.cpp simple-election.acceptor_3_proposer_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_3_proposer_3.finite.o simple-election.acceptor_3_proposer_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 7.132 seconds

[QRM NOTE]: Time elapsed since last: 7.132 seconds

[QRM NOTE]: Peak memory: 1192903 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 7

[FW NOTE]: number of total reachable states:        254

[FW NOTE]: number of dfs representative states:     26

[FW NOTE]: number of dfs non-representative states: 228


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0', 'proposer1', 'proposer2']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: start('proposer',)
predicate: member('acceptor', 'quorum')
predicate: promise('acceptor', 'proposer')
predicate: leader('proposer',)
predicate: chosenAt('quorum', 'proposer')
predicate: didNotPromise('acceptor',)
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'leader(proposer1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)', 'start(proposer0)', 'start(proposer1)', 'start(proposer2)']
representative states : 117440939, 117441451, 117442475, 117444523, 50597803, 201367467, 9798197163, 9800294315, 134782891, 136880043, 203464619, 17108907, 348075, 50595755, 201365419, 9798195115, 9800292267, 134780843, 136877995, 203462571, 17106859, 50594731, 201364395, 9798194091, 9800291243, 203461547


=== State Orbit 0 =====================
size : 1
repr state: 000000000111000000000000000
lex min decimal: 117440939
states:
000000000111000000000000000




=== State Orbit 1 =====================
size : 3
repr state: 000000000111000000000000100
lex min decimal: 117441451
states:
000000000111000000000000010
000000000111000000000000100
000000000111000000000000001




=== State Orbit 2 =====================
size : 3
repr state: 000000000111000000000000110
lex min decimal: 117442475
states:
000000000111000000000000110
000000000111000000000000011
000000000111000000000000101




=== State Orbit 3 =====================
size : 1
repr state: 000000000111000000000000111
lex min decimal: 117444523
states:
000000000111000000000000111




=== State Orbit 4 =====================
size : 9
repr state: 000000000011000100000000111
lex min decimal: 50597803
states:
000000000101000000001000111
000000000011000100000000111
000000000110000000000010111
000000000011000010000000111
000000000101000000100000111
000000000110000000000100111
000000000011000001000000111
000000000110000000000001111
000000000101000000010000111




=== State Orbit 5 =====================
size : 9
repr state: 100000000001000100100000111
lex min decimal: 201367467
states:
000000100100000000100100111
010000000001000010010000111
001000000001000001001000111
100000000001000100100000111
000001000010000001000001111
000000001100000000001001111
000000010100000000010010111
000100000010000100000100111
000010000010000010000010111




=== State Orbit 6 =====================
size : 3
repr state: 100100100000000100100100111
lex min decimal: 9798197163
states:
010010010000000010010010111
100100100000000100100100111
001001001000000001001001111




=== State Orbit 7 =====================
size : 3
repr state: 100100100000100100100100111
lex min decimal: 9800294315
states:
010010010000010010010010111
001001001000001001001001111
100100100000100100100100111




=== State Orbit 8 =====================
size : 18
repr state: 100000000000000100100010111
lex min decimal: 134782891
states:
001000000000000001001100111
000100000000000100010100111
001000000000000001001010111
000010000000000010001010111
000000010000000100010010111
000000100000000010100100111
010000000000000010010001111
000000010000000001010010111
000001000000000001100001111
000000001000000100001001111
000010000000000010100010111
000001000000000001010001111
010000000000000010010100111
000100000000000100001100111
000000100000000001100100111
100000000000000100100001111
100000000000000100100010111
000000001000000010001001111




=== State Orbit 9 =====================
size : 18
repr state: 100000000000100100100010111
lex min decimal: 136880043
states:
000100000000100100001100111
000000100000100010100100111
000010000000010010001010111
000001000000001001010001111
100000000000100100100001111
000000100000100001100100111
000000010000010001010010111
010000000000010010010001111
001000000000001001001010111
001000000000001001001100111
000010000000010010100010111
010000000000010010010100111
000000010000010100010010111
000000001000001100001001111
000000001000001010001001111
100000000000100100100010111
000100000000100100010100111
000001000000001001100001111




=== State Orbit 10 =====================
size : 9
repr state: 100000000001100100100000111
lex min decimal: 203464619
states:
000010000010010010000010111
100000000001100100100000111
000000001100001000001001111
001000000001001001001000111
000001000010001001000001111
000000010100010000010010111
010000000001010010010000111
000000100100100000100100111
000100000010100100000100111




=== State Orbit 11 =====================
size : 18
repr state: 000000000001000100010000111
lex min decimal: 17108907
states:
000000000100000000010100111
000000000001000100010000111
000000000010000100000010111
000000000100000000100010111
000000000010000001000100111
000000000100000000100001111
000000000010000001000010111
000000000100000000001100111
000000000010000100000001111
000000000001000010100000111
000000000001000100001000111
000000000100000000010001111
000000000010000010000001111
000000000100000000001010111
000000000001000001100000111
000000000001000010001000111
000000000010000010000100111
000000000001000001010000111




=== State Orbit 12 =====================
size : 6
repr state: 000000000000000100010001111
lex min decimal: 348075
states:
000000000000000010100001111
000000000000000100010001111
000000000000000001100010111
000000000000000001010100111
000000000000000010001100111
000000000000000100001010111




=== State Orbit 13 =====================
size : 18
repr state: 000000000011000100000000110
lex min decimal: 50595755
states:
000000000110000000000010110
000000000110000000000100101
000000000101000000100000101
000000000110000000000010011
000000000011000010000000110
000000000011000001000000101
000000000110000000000001011
000000000101000000001000011
000000000011000001000000011
000000000011000100000000110
000000000101000000010000110
000000000110000000000001101
000000000011000010000000011
000000000101000000001000101
000000000101000000100000110
000000000110000000000100110
000000000011000100000000101
000000000101000000010000011




=== State Orbit 14 =====================
size : 18
repr state: 100000000001000100100000110
lex min decimal: 201365419
states:
000000001100000000001001011
100000000001000100100000101
100000000001000100100000110
001000000001000001001000101
010000000001000010010000110
001000000001000001001000011
000001000010000001000001101
000100000010000100000100101
000000100100000000100100101
010000000001000010010000011
000100000010000100000100110
000001000010000001000001011
000000010100000000010010011
000000010100000000010010110
000000001100000000001001101
000010000010000010000010110
000010000010000010000010011
000000100100000000100100110




=== State Orbit 15 =====================
size : 6
repr state: 100100100000000100100100110
lex min decimal: 9798195115
states:
001001001000000001001001011
001001001000000001001001101
010010010000000010010010110
100100100000000100100100101
100100100000000100100100110
010010010000000010010010011




=== State Orbit 16 =====================
size : 6
repr state: 100100100000100100100100110
lex min decimal: 9800292267
states:
001001001000001001001001011
001001001000001001001001101
100100100000100100100100101
010010010000010010010010011
010010010000010010010010110
100100100000100100100100110




=== State Orbit 17 =====================
size : 18
repr state: 100000000000000100100010110
lex min decimal: 134780843
states:
000000010000000100010010110
010000000000000010010100110
000100000000000100010100110
000001000000000001010001011
000100000000000100001100101
001000000000000001001100101
000010000000000010100010110
001000000000000001001010011
000000100000000010100100110
100000000000000100100001101
000000100000000001100100101
000001000000000001100001101
000000010000000001010010011
000000001000000010001001011
010000000000000010010001011
100000000000000100100010110
000000001000000100001001101
000010000000000010001010011




=== State Orbit 18 =====================
size : 18
repr state: 100000000000100100100010110
lex min decimal: 136877995
states:
000100000000100100010100110
000000100000100010100100110
000001000000001001010001011
010000000000010010010001011
000001000000001001100001101
000000010000010001010010011
010000000000010010010100110
100000000000100100100001101
000000010000010100010010110
000000001000001100001001101
001000000000001001001100101
000100000000100100001100101
100000000000100100100010110
000000001000001010001001011
000010000000010010100010110
001000000000001001001010011
000000100000100001100100101
000010000000010010001010011




=== State Orbit 19 =====================
size : 18
repr state: 100000000001100100100000110
lex min decimal: 203462571
states:
000000001100001000001001011
000000100100100000100100110
001000000001001001001000101
100000000001100100100000110
000100000010100100000100110
001000000001001001001000011
000000010100010000010010110
100000000001100100100000101
010000000001010010010000110
010000000001010010010000011
000010000010010010000010011
000001000010001001000001101
000000100100100000100100101
000000010100010000010010011
000000001100001000001001101
000010000010010010000010110
000100000010100100000100101
000001000010001001000001011




=== State Orbit 20 =====================
size : 18
repr state: 000000000001000100010000110
lex min decimal: 17106859
states:
000000000001000010100000110
000000000010000100000010110
000000000001000001100000101
000000000100000000010001011
000000000100000000001010011
000000000100000000100001101
000000000010000100000001101
000000000100000000001100101
000000000010000010000001011
000000000001000100010000110
000000000010000010000100110
000000000001000010001000011
000000000001000001010000011
000000000100000000100010110
000000000010000001000100101
000000000100000000010100110
000000000001000100001000101
000000000010000001000010011




=== State Orbit 21 =====================
size : 9
repr state: 000000000011000100000000100
lex min decimal: 50594731
states:
000000000011000001000000001
000000000101000000001000001
000000000110000000000100100
000000000110000000000010010
000000000110000000000001001
000000000101000000010000010
000000000011000100000000100
000000000011000010000000010
000000000101000000100000100




=== State Orbit 22 =====================
size : 9
repr state: 100000000001000100100000100
lex min decimal: 201364395
states:
000000010100000000010010010
000000001100000000001001001
100000000001000100100000100
000010000010000010000010010
010000000001000010010000010
000001000010000001000001001
000000100100000000100100100
000100000010000100000100100
001000000001000001001000001




=== State Orbit 23 =====================
size : 3
repr state: 100100100000000100100100100
lex min decimal: 9798194091
states:
010010010000000010010010010
100100100000000100100100100
001001001000000001001001001




=== State Orbit 24 =====================
size : 3
repr state: 100100100000100100100100100
lex min decimal: 9800291243
states:
100100100000100100100100100
001001001000001001001001001
010010010000010010010010010




=== State Orbit 25 =====================
size : 9
repr state: 100000000001100100100000100
lex min decimal: 203461547
states:
000100000010100100000100100
010000000001010010010000010
000000001100001000001001001
000000010100010000010010010
000001000010001001000001001
000010000010010010000010010
000000100100100000100100100
100000000001100100100000100
001000000001001001001000001



[QRM NOTE]: Time elapsed since start: 7.544 seconds

[QRM NOTE]: Time elapsed since last: 0.412 seconds

[QRM NOTE]: Peak memory: 1300140 bytes


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 29400874923, binary: 011011011000011011011011111

Found a representative state in Rmin not in reachability: decimal: 29396680619, binary: 011011011000001011011011111

Found a representative state in Rmin not in reachability: decimal: 29394583467, binary: 011011011000000011011011111

Found a representative state in Rmin not in reachability: decimal: 29394581419, binary: 011011011000000011011011011

Found a representative state in Rmin not in reachability: decimal: 29400872875, binary: 011011011000011011011011011

Found a representative state in Rmin not in reachability: decimal: 29396678571, binary: 011011011000001011011011011

Found a representative state in Rmin not in reachability: decimal: 10072995755, binary: 001001011000011001011011011

Found a representative state in Rmin not in reachability: decimal: 10069852075, binary: 001001011000001101011011111

Found a representative state in Rmin not in reachability: decimal: 10067754923, binary: 001001011000000101011011111

Found a representative state in Rmin not in reachability: decimal: 10068801451, binary: 001001011000001001011011011

Found a representative state in Rmin not in reachability: decimal: 10070898603, binary: 001001011000010001011011011

Found a representative state in Rmin not in reachability: decimal: 10066704299, binary: 001001011000000001011011011

Found a representative state in Rmin not in reachability: decimal: 10066706347, binary: 001001011000000001011011111

Found a representative state in Rmin not in reachability: decimal: 10070900651, binary: 001001011000010001011011111

Found a representative state in Rmin not in reachability: decimal: 10072997803, binary: 001001011000011001011011111

Found a representative state in Rmin not in reachability: decimal: 10068803499, binary: 001001011000001001011011111

Found a representative state in Rmin not in reachability: decimal: 10074046379, binary: 001001011000011101011011111

Found a representative state in Rmin not in reachability: decimal: 10071949227, binary: 001001011000010101011011111

Found a representative state in Rmin not in reachability: decimal: 403816363, binary: 000000011000000100011011111

Found a representative state in Rmin not in reachability: decimal: 405913515, binary: 000000011000001100011011111

Found a representative state in Rmin not in reachability: decimal: 410107819, binary: 000000011000011100011011111

Found a representative state in Rmin not in reachability: decimal: 471973803, binary: 000000011100001000011011111

Found a representative state in Rmin not in reachability: decimal: 476168107, binary: 000000011100011000011011111

Found a representative state in Rmin not in reachability: decimal: 469876651, binary: 000000011100000000011011111

Found a representative state in Rmin not in reachability: decimal: 476166059, binary: 000000011100011000011011011

Found a representative state in Rmin not in reachability: decimal: 469874603, binary: 000000011100000000011011011

Found a representative state in Rmin not in reachability: decimal: 471971755, binary: 000000011100001000011011011

Found a representative state in Rmin not in reachability: decimal: 201373611, binary: 000000001100000000001011011

Found a representative state in Rmin not in reachability: decimal: 203470763, binary: 000000001100001000001011011

Found a representative state in Rmin not in reachability: decimal: 9800300459, binary: 001001001000001001001011011

Found a representative state in Rmin not in reachability: decimal: 9798203307, binary: 001001001000000001001011011

Found a representative state in Rmin not in reachability: decimal: 9800302507, binary: 001001001000001001001011111

Found a representative state in Rmin not in reachability: decimal: 9798205355, binary: 001001001000000001001011111

Found a representative state in Rmin not in reachability: decimal: 9798279083, binary: 001001001000000001011101111

Found a representative state in Rmin not in reachability: decimal: 9800376235, binary: 001001001000001001011101111

Found a representative state in Rmin not in reachability: decimal: 134799275, binary: 000000001000000010001101111

Found a representative state in Rmin not in reachability: decimal: 136896427, binary: 000000001000001010001101111

Found a representative state in Rmin not in reachability: decimal: 203472811, binary: 000000001100001000001011111

Found a representative state in Rmin not in reachability: decimal: 201375659, binary: 000000001100000000001011111

Found a representative state in Rmin not in reachability: decimal: 201449387, binary: 000000001100000000011101111

Found a representative state in Rmin not in reachability: decimal: 203546539, binary: 000000001100001000011101111

Found a representative state in Rmin not in reachability: decimal: 1345666987, binary: 000001010000001101010011111

Found a representative state in Rmin not in reachability: decimal: 1342652331, binary: 000001010000000001110011111

Found a representative state in Rmin not in reachability: decimal: 11275268011, binary: 001010100000000011101110111

Found a representative state in Rmin not in reachability: decimal: 11277365163, binary: 001010100000001011101110111

Found a representative state in Rmin not in reachability: decimal: 1344749483, binary: 000001010000001001110011111

Found a representative state in Rmin not in reachability: decimal: 1344618411, binary: 000001010000001001010011111

Found a representative state in Rmin not in reachability: decimal: 1342521259, binary: 000001010000000001010011111

Found a representative state in Rmin not in reachability: decimal: 1342519211, binary: 000001010000000001010011011

Found a representative state in Rmin not in reachability: decimal: 1344616363, binary: 000001010000001001010011011

Found a representative state in Rmin not in reachability: decimal: 11281559467, binary: 001010100000011011101110111

Found a representative state in Rmin not in reachability: decimal: 1348943787, binary: 000001010000011001110011111

Found a representative state in Rmin not in reachability: decimal: 11289948075, binary: 001010100000111011101110111

Found a representative state in Rmin not in reachability: decimal: 1348812715, binary: 000001010000011001010011111

Found a representative state in Rmin not in reachability: decimal: 1348810667, binary: 000001010000011001010011011

Found a representative state in Rmin not in reachability: decimal: 137928619, binary: 000000001000001110001001111

Found a representative state in Rmin not in reachability: decimal: 51120043, binary: 000000000011000011000000011

Found a representative state in Rmin not in reachability: decimal: 51122091, binary: 000000000011000011000000111

Found a representative state in Rmin not in reachability: decimal: 17239979, binary: 000000000001000001110000111

Found a representative state in Rmin not in reachability: decimal: 135831467, binary: 000000001000000110001001111

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 8.721 seconds

[QRM NOTE]: Time elapsed since last: 1.178 seconds

[QRM NOTE]: Peak memory: 332552 bytes

next size: acceptor=3,proposer=3


*****************************************************************************************************

	[Synthesize Rmin]: ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3

*****************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.ivy -s acceptor=3,proposer=3 -f 1 -g -w -r -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 0.039 seconds

[QRM NOTE]: Time elapsed since last: 0.039 seconds

[QRM NOTE]: Peak memory: 109108 bytes


====================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

====================================================================================================================


===============================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

===============================================================================================================


=== Prime Orbit 0 =====================
size : 27
num_suborbits: 2
0 (*) : -1----1--------------------
0     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
1     : --1---1--------------------
1     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
2     : 1------1-------------------
2     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
3     : --1----1-------------------
3     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
4     : 1-------1------------------
4     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
5     : -1------1------------------
5     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
6     : ----1-1--------------------
6     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
7     : -----11--------------------
7     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
8     : ---1---1-------------------
8     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
9     : -----1-1-------------------
9     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
10     : ---1----1------------------
10     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
11     : ----1---1------------------
11     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
12     : -1-1-----------------------
12     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
13     : --11-----------------------
13     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
14     : 1---1----------------------
14     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
15     : --1-1----------------------
15     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
16     : 1----1---------------------
16     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
17     : -1---1---------------------
17     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
72 (*) : ------1-1------------------
72     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
73     : ------11-------------------
73     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
74     : -------11------------------
74     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
75     : ---1-1---------------------
75     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
76     : ---11----------------------
76     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
77     : ----11---------------------
77     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
78     : 1-1------------------------
78     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
79     : 11-------------------------
79     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)']
80     : -11------------------------
80     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 36
num_suborbits: 1
18 (*) : ------1---------------1----
18     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
19     : ------1----------------1---
19     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
20     : -------1-------------1-----
20     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
21     : -------1---------------1---
21     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
22     : --------1------------1-----
22     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
23     : --------1-------------1----
23     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
24     : ------1------------1-------
24     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer1)']
25     : ------1-------------1------
25     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer2)']
26     : -------1----------1--------
26     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer0)']
27     : -------1------------1------
27     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer2)']
28     : --------1---------1--------
28     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer0)']
29     : --------1----------1-------
29     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer1)']
30     : ---1------------------1----
30     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
31     : ---1-------------------1---
31     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
32     : ----1----------------1-----
32     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
33     : ----1------------------1---
33     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
34     : -----1---------------1-----
34     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
35     : -----1----------------1----
35     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
36     : ---1------------1----------
36     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer1)']
37     : ---1-------------1---------
37     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer2)']
38     : ----1----------1-----------
38     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer0)']
39     : ----1------------1---------
39     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer2)']
40     : -----1---------1-----------
40     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer0)']
41     : -----1----------1----------
41     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer1)']
42     : 1------------------1-------
42     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
43     : 1-------------------1------
43     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
44     : -1----------------1--------
44     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer0)']
45     : -1------------------1------
45     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
46     : --1---------------1--------
46     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer0)']
47     : --1----------------1-------
47     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer1)']
48     : 1---------------1----------
48     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer1)']
49     : 1----------------1---------
49     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer2)']
50     : -1-------------1-----------
50     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer0)']
51     : -1---------------1---------
51     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer2)']
52     : --1------------1-----------
52     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer0)']
53     : --1-------------1----------
53     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 18
num_suborbits: 1
54 (*) : ------1----1---------------
54     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
55     : -------1---1---------------
55     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
56     : --------1--1---------------
56     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
57     : ------1---1----------------
57     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor1)']
58     : -------1--1----------------
58     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor1)']
59     : --------1-1----------------
59     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor1)']
60     : ---1-------1---------------
60     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
61     : ----1------1---------------
61     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
62     : -----1-----1---------------
62     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
63     : ---1-----1-----------------
63     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor0)']
64     : ----1----1-----------------
64     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor0)']
65     : -----1---1-----------------
65     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor0)']
66     : 1---------1----------------
66     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor1)']
67     : -1--------1----------------
67     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor1)']
68     : --1-------1----------------
68     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor1)']
69     : 1--------1-----------------
69     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor0)']
70     : -1-------1-----------------
70     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor0)']
71     : --1------1-----------------
71     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 18
num_suborbits: 1
81 (*) : ------1-----------0--------
81     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
82     : -------1-----------0-------
82     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
83     : --------1-----------0------
83     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
84     : ------1--------------0-----
84     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
85     : -------1--------------0----
85     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
86     : --------1--------------0---
86     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
87     : ---1-----------0-----------
87     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
88     : ----1-----------0----------
88     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
89     : -----1-----------0---------
89     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
90     : ---1-----------------0-----
90     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
91     : ----1-----------------0----
91     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
92     : -----1-----------------0---
92     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
93     : 1--------------0-----------
93     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor0,proposer0)']
94     : -1--------------0----------
94     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor0,proposer1)']
95     : --1--------------0---------
95     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor0,proposer2)']
96     : 1-----------------0--------
96     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor1,proposer0)']
97     : -1-----------------0-------
97     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor1,proposer1)']
98     : --1-----------------0------
98     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 18
num_suborbits: 1
99 (*) : ------1-------1------------
99     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
100     : ------1------1-------------
100     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
101     : -------1------1------------
101     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
102     : -------1----1--------------
102     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
103     : --------1----1-------------
103     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
104     : --------1---1--------------
104     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
105     : ---1----------1------------
105     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
106     : ---1---------1-------------
106     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
107     : ----1---------1------------
107     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
108     : ----1-------1--------------
108     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
109     : -----1-------1-------------
109     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
110     : -----1------1--------------
110     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
111     : 1-------------1------------
111     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
112     : 1------------1-------------
112     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
113     : -1------------1------------
113     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
114     : -1----------1--------------
114     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
115     : --1----------1-------------
115     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
116     : --1---------1--------------
116     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 9
num_suborbits: 1
117 (*) : -----------------1--------0
117     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
118     : ----------------1--------0-
118     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
119     : ---------------1--------0--
119     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
120     : --------------------1-----0
120     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
121     : -------------------1-----0-
121     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
122     : ------------------1-----0--
122     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
123     : -----------------------1--0
123     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
124     : ----------------------1--0-
124     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
125     : ---------------------1--0--
125     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 9
num_suborbits: 1
126 (*) : --------1-----------------0
126     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
127     : -------1-----------------0-
127     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
128     : ------1-----------------0--
128     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
129     : -----1--------------------0
129     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
130     : ----1--------------------0-
130     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
131     : ---1--------------------0--
131     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
132     : --1-----------------------0
132     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
133     : -1-----------------------0-
133     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
134     : 1-----------------------0--
134     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 3
num_suborbits: 1
135 (*) : --------------1-----------0
135     : ['leader(proposer2)', '~start(proposer2)']
136     : -------------1-----------0-
136     : ['leader(proposer1)', '~start(proposer1)']
137     : ------------1-----------0--
137     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 9
num_suborbits: 1
138 (*) : ------------------11-------
138     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
139     : ------------------1-1------
139     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
140     : -------------------11------
140     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
141     : ---------------------11----
141     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
142     : ---------------------1-1---
142     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
143     : ----------------------11---
143     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
144     : ---------------11----------
144     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
145     : ---------------1-1---------
145     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
146     : ----------------11---------
146     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
147 (*) : ---------1------1----------
147     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer1)']
148     : ---------1-------1---------
148     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer2)']
149     : ---------1-----1-----------
149     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer0)']
150     : ----------1--------1-------
150     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer1)']
151     : ----------1---------1------
151     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer2)']
152     : ----------1-------1--------
152     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer0)']
153     : -----------1----------1----
153     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer1)']
154     : -----------1-----------1---
154     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer2)']
155     : -----------1---------1-----
155     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
156 (*) : ------------1-1------------
156     : ['leader(proposer0)', 'leader(proposer2)']
157     : ------------11-------------
157     : ['leader(proposer0)', 'leader(proposer1)']
158     : -------------11------------
158     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 18
num_suborbits: 1
159 (*) : -1--0-----------------1----
159     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
160     : --1--0-----------------1---
160     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
161     : 1--0-----------------1-----
161     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
162     : -0--1--------------1-------
162     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
163     : --0--1--------------1------
163     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
164     : 0--1--------------1--------
164     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
165     : -1-----0--------------1----
165     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
166     : --1-----0--------------1---
166     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
167     : 1-----0--------------1-----
167     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
168     : -0-----1--------1----------
168     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
169     : --0-----1--------1---------
169     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
170     : 0-----1--------1-----------
170     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
171     : ----1--0-----------1-------
171     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
172     : -----1--0-----------1------
172     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
173     : ---1--0-----------1--------
173     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
174     : ----0--1--------1----------
174     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
175     : -----0--1--------1---------
175     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
176     : ---0--1--------1-----------
176     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 9
num_suborbits: 1
177 (*) : -1--0--1-------------------
177     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
178     : --1--0--1------------------
178     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
179     : 1--0--1--------------------
179     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
180     : -0--1--1-------------------
180     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
181     : --0--1--1------------------
181     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
182     : 0--1--1--------------------
182     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
183     : -1--1--0-------------------
183     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
184     : --1--1--0------------------
184     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
185     : 1--1--0--------------------
185     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 9
num_suborbits: 1
186 (*) : -------0-----------1--1----
186     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
187     : --------0-----------1--1---
187     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
188     : ------0-----------1--1-----
188     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
189     : ----0-----------1-----1----
189     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
190     : -----0-----------1-----1---
190     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
191     : ---0-----------1-----1-----
191     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
192     : -0--------------1--1-------
192     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
193     : --0--------------1--1------
193     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
194     : 0--------------1--1--------
194     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 9
num_suborbits: 1
195 (*) : -------0-----1--0----------
195     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
196     : --------0-----1--0---------
196     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
197     : ------0-----1--0-----------
197     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
198     : ----0--------1-----0-------
198     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
199     : -----0--------1-----0------
199     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
200     : ---0--------1-----0--------
200     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
201     : -0-----------1--------0----
201     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
202     : --0-----------1--------0---
202     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
203     : 0-----------1--------0-----
203     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 18
num_suborbits: 1
204 (*) : -------0-----1---1---------
204     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
205     : --------0-----1-1----------
205     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
206     : ------0-----1----1---------
206     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
207     : --------0-----11-----------
207     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
208     : ------0-----1---1----------
208     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
209     : -------0-----1-1-----------
209     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
210     : ----0--------1------1------
210     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
211     : -----0--------1----1-------
211     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
212     : ---0--------1-------1------
212     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
213     : -----0--------1---1--------
213     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
214     : ---0--------1------1-------
214     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
215     : ----0--------1----1--------
215     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
216     : -0-----------1---------1---
216     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
217     : --0-----------1-------1----
217     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
218     : 0-----------1----------1---
218     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
219     : --0-----------1------1-----
219     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
220     : 0-----------1---------1----
220     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
221     : -0-----------1-------1-----
221     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 18
num_suborbits: 1
222 (*) : ---------1---1-----0-------
222     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
223     : ---------1----1-----0------
223     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
224     : ---------1--1-----0--------
224     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
225     : ---------1---1--------0----
225     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
226     : ---------1----1--------0---
226     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
227     : ---------1--1--------0-----
227     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
228     : ----------1--1--0----------
228     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
229     : ----------1---1--0---------
229     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
230     : ----------1-1--0-----------
230     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
231     : ----------1--1--------0----
231     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
232     : ----------1---1--------0---
232     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
233     : ----------1-1--------0-----
233     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
234     : -----------1-1--0----------
234     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
235     : -----------1--1--0---------
235     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
236     : -----------11--0-----------
236     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
237     : -----------1-1-----0-------
237     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
238     : -----------1--1-----0------
238     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
239     : -----------11-----0--------
239     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 9
num_suborbits: 1
240 (*) : -------0-1---1-------------
240     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
241     : --------01----1------------
241     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
242     : ------0--1--1--------------
242     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
243     : ----0-----1--1-------------
243     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
244     : -----0----1---1------------
244     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
245     : ---0------1-1--------------
245     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
246     : -0---------1-1-------------
246     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
247     : --0--------1--1------------
247     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
248     : 0----------11--------------
248     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 36
num_suborbits: 1
249 (*) : ---------1---1------1------
249     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
250     : ---------1----1----1-------
250     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
251     : ---------1--1-------1------
251     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
252     : ---------1----1---1--------
252     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
253     : ---------1--1------1-------
253     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
254     : ---------1---1----1--------
254     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
255     : ---------1---1---------1---
255     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
256     : ---------1----1-------1----
256     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
257     : ---------1--1----------1---
257     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
258     : ---------1----1------1-----
258     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
259     : ---------1--1---------1----
259     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
260     : ---------1---1-------1-----
260     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
261     : ----------1--1---1---------
261     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
262     : ----------1---1-1----------
262     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
263     : ----------1-1----1---------
263     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
264     : ----------1---11-----------
264     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
265     : ----------1-1---1----------
265     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
266     : ----------1--1-1-----------
266     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
267     : ----------1--1---------1---
267     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
268     : ----------1---1-------1----
268     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
269     : ----------1-1----------1---
269     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
270     : ----------1---1------1-----
270     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
271     : ----------1-1---------1----
271     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
272     : ----------1--1-------1-----
272     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
273     : -----------1-1---1---------
273     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
274     : -----------1--1-1----------
274     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
275     : -----------11----1---------
275     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
276     : -----------1--11-----------
276     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
277     : -----------11---1----------
277     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
278     : -----------1-1-1-----------
278     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
279     : -----------1-1------1------
279     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
280     : -----------1--1----1-------
280     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
281     : -----------11-------1------
281     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
282     : -----------1--1---1--------
282     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
283     : -----------11------1-------
283     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
284     : -----------1-1----1--------
284     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 9
num_suborbits: 1
285 (*) : ---------1-1-1-------------
285     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
286     : ---------1-1--1------------
286     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
287     : ---------1-11--------------
287     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
288     : ---------11--1-------------
288     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
289     : ---------11---1------------
289     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
290     : ---------11-1--------------
290     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
291     : ----------11-1-------------
291     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
292     : ----------11--1------------
292     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
293     : ----------111--------------
293     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 36
num_suborbits: 1
294 (*) : -------------1--0-1--------
294     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
295     : --------------1--01--------
295     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
296     : ------------1--0---1-------
296     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
297     : --------------1--0-1-------
297     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
298     : ------------1--0----1------
298     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
299     : -------------1--0---1------
299     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
300     : -------------1--0----1-----
300     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
301     : --------------1--0---1-----
301     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
302     : ------------1--0------1----
302     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
303     : --------------1--0----1----
303     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
304     : ------------1--0-------1---
304     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
305     : -------------1--0------1---
305     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
306     : -------------1-1---0-------
306     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
307     : --------------11----0------
307     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
308     : ------------1---1-0--------
308     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
309     : --------------1-1---0------
309     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
310     : ------------1----10--------
310     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
311     : -------------1---1-0-------
311     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
312     : -------------1-----0-1-----
312     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
313     : --------------1-----01-----
313     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
314     : ------------1-----0---1----
314     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
315     : --------------1-----0-1----
315     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
316     : ------------1-----0----1---
316     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
317     : -------------1-----0---1---
317     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
318     : -------------1-1------0----
318     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
319     : --------------11-------0---
319     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
320     : ------------1---1----0-----
320     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
321     : --------------1-1------0---
321     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
322     : ------------1----1---0-----
322     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
323     : -------------1---1----0----
323     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
324     : -------------1----1---0----
324     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
325     : --------------1---1----0---
325     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
326     : ------------1------1-0-----
326     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
327     : --------------1----1---0---
327     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
328     : ------------1-------10-----
328     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
329     : -------------1------1-0----
329     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 36
num_suborbits: 2
330 (*) : -------------1---11--------
330     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
331     : --------------1-1-1--------
331     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
332     : ------------1----1-1-------
332     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
333     : --------------11---1-------
333     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
334     : ------------1---1---1------
334     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
335     : -------------1-1----1------
335     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
336     : -------------1---1---1-----
336     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
337     : --------------1-1----1-----
337     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
338     : ------------1----1----1----
338     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
339     : --------------11------1----
339     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
340     : ------------1---1------1---
340     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
341     : -------------1-1-------1---
341     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
342     : -------------1------11-----
342     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
343     : --------------1----1-1-----
343     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
344     : ------------1-------1-1----
344     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
345     : --------------1---1---1----
345     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
346     : ------------1------1---1---
346     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
347     : -------------1----1----1---
347     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
348 (*) : -------------1-1--1--------
348     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
349     : --------------11--1--------
349     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
350     : ------------1---1--1-------
350     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
351     : --------------1-1--1-------
351     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
352     : ------------1----1--1------
352     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
353     : -------------1---1--1------
353     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
354     : -------------1-1-----1-----
354     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
355     : --------------11-----1-----
355     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
356     : ------------1---1-----1----
356     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
357     : --------------1-1-----1----
357     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
358     : ------------1----1-----1---
358     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
359     : -------------1---1-----1---
359     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
360     : -------------1----1--1-----
360     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
361     : --------------1---1--1-----
361     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
362     : ------------1------1--1----
362     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
363     : --------------1----1--1----
363     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
364     : ------------1-------1--1---
364     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
365     : -------------1------1--1---
365     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
366 (*) : -------------1--0--0-------
366     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
367     : --------------1--0--0------
367     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
368     : ------------1--0--0--------
368     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
369     : -------------1--0-----0----
369     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
370     : --------------1--0-----0---
370     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
371     : ------------1--0-----0-----
371     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
372     : -------------1-----0--0----
372     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
373     : --------------1-----0--0---
373     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
374     : ------------1-----0--0-----
374     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : 0-----0-----1-----1--------
375     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
376     : -0-----0-----1-----1-------
376     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
377     : --0-----0-----1-----1------
377     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
378     : ---0--0-----1--------1-----
378     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
379     : ----0--0-----1--------1----
379     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
380     : -----0--0-----1--------1---
380     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
381     : 0--0--------1--1-----------
381     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
382     : -0--0--------1--1----------
382     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
383     : --0--0--------1--1---------
383     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 3
num_suborbits: 1
384 (*) : 0--0--0-----1--------------
384     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
385     : -0--0--0-----1-------------
385     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
386     : --0--0--0-----1------------
386     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 3
num_suborbits: 1
387 (*) : ---------0-----000---------
387     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
388     : ----------0-------000------
388     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
389     : -----------0---------000---
389     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
390 (*) : ---------0-----0-0-------0-
390     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
391     : ---------0-----00---------0
391     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
392     : ---------0------00------0--
392     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
393     : ----------0-------0-0----0-
393     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
394     : ----------0-------00------0
394     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
395     : ----------0--------00---0--
395     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
396     : -----------0---------0-0-0-
396     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
397     : -----------0---------00---0
397     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
398     : -----------0----------000--
398     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 9
num_suborbits: 1
399 (*) : ---------0-------0------00-
399     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
400     : ---------0------0-------0-0
400     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
401     : ---------0-----0---------00
401     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
402     : ----------0---------0---00-
402     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
403     : ----------0--------0----0-0
403     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
404     : ----------0-------0------00
404     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
405     : -----------0-----------000-
405     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
406     : -----------0----------0-0-0
406     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
407     : -----------0---------0---00
407     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : ----------0-------------000
408     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : -----------0------------000
409     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : ---------0--------------000
410     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : --------0-0-------0----1-0-
411     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
412     : -------0--0-------0---1---0
412     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
413     : --------0-0--------0---10--
413     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
414     : ------0---0--------0-1----0
414     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
415     : -------0--0---------0-1-0--
415     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
416     : ------0---0---------01---0-
416     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
417     : --------0--0--------10---0-
417     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
418     : -------0---0-------1-0----0
418     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
419     : --------0--0--------1-0-0--
419     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
420     : ------0----0------1---0---0
420     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
421     : -------0---0-------1---00--
421     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
422     : ------0----0------1----0-0-
422     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
423     : -----0---0-----0-------1-0-
423     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
424     : ----0----0-----0------1---0
424     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
425     : -----0---0------0------10--
425     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
426     : ---0-----0------0----1----0
426     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
427     : ----0----0-------0----1-0--
427     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
428     : ---0-----0-------0---1---0-
428     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
429     : -----0-----0-----1---0---0-
429     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
430     : ----0------0----1----0----0
430     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
431     : -----0-----0-----1----0-0--
431     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
432     : ---0-------0---1------0---0
432     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
433     : ----0------0----1------00--
433     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
434     : ---0-------0---1-------0-0-
434     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
435     : --0------0-----0----1----0-
435     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
436     : -0-------0-----0---1------0
436     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
437     : --0------0------0---1---0--
437     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
438     : 0--------0------0-1-------0
438     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
439     : -0-------0-------0-1----0--
439     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
440     : 0--------0-------01------0-
440     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
441     : --0-------0------10------0-
441     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
442     : -0--------0-----1-0-------0
442     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
443     : --0-------0------1-0----0--
443     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
444     : 0---------0----1---0------0
444     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
445     : -0--------0-----1---0---0--
445     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
446     : 0---------0----1----0----0-
446     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 18
num_suborbits: 1
447 (*) : -----0---0-------------100-
447     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
448     : ----0----0------------1-0-0
448     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
449     : ---0-----0-----------1---00
449     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
450     : --0------0----------1---00-
450     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
451     : -0-------0---------1----0-0
451     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
452     : 0--------0--------1------00
452     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
453     : --------0-0------------100-
453     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
454     : -------0--0-----------1-0-0
454     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
455     : ------0---0----------1---00
455     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
456     : --0-------0------1------00-
456     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
457     : -0--------0-----1-------0-0
457     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
458     : 0---------0----1---------00
458     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
459     : --------0--0--------1---00-
459     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
460     : -------0---0-------1----0-0
460     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
461     : ------0----0------1------00
461     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
462     : -----0-----0-----1------00-
462     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
463     : ----0------0----1-------0-0
463     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
464     : ---0-------0---1---------00
464     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 18
num_suborbits: 1
465 (*) : --------0-0-------00---1---
465     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
466     : -------0--0-------0-0-1----
466     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
467     : ------0---0--------001-----
467     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
468     : --------0--0--------100----
468     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
469     : -------0---0-------1-0-0---
469     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
470     : ------0----0------1---00---
470     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
471     : -----0---0-----00------1---
471     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
472     : ----0----0-----0-0----1----
472     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
473     : ---0-----0------00---1-----
473     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
474     : -----0-----0-----1---00----
474     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
475     : ----0------0----1----0-0---
475     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
476     : ---0-------0---1------00---
476     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
477     : --0------0-----00---1------
477     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
478     : -0-------0-----0-0-1-------
478     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
479     : 0--------0------001--------
479     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
480     : --0-------0------100-------
480     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
481     : -0--------0-----1-0-0------
481     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
482     : 0---------0----1---00------
482     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 36
num_suborbits: 1
483 (*) : -1--0------0---------0----0
483     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
484     : --1--0-----0---------0---0-
484     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
485     : 1--0-------0----------0---0
485     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
486     : --1--0-----0----------0-0--
486     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
487     : 1--0-------0-----------0-0-
487     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
488     : -1--0------0-----------00--
488     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
489     : -0--1-----0-------0-------0
489     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
490     : --0--1----0-------0------0-
490     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
491     : 0--1------0--------0------0
491     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
492     : --0--1----0--------0----0--
492     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
493     : 0--1------0---------0----0-
493     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
494     : -0--1-----0---------0---0--
494     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
495     : -1-----0---0---------0----0
495     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
496     : --1-----0--0---------0---0-
496     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
497     : 1-----0----0----------0---0
497     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
498     : --1-----0--0----------0-0--
498     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
499     : 1-----0----0-----------0-0-
499     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
500     : -1-----0---0-----------00--
500     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
501     : -0-----1-0-----0----------0
501     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
502     : --0-----10-----0---------0-
502     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
503     : 0-----1--0------0---------0
503     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
504     : --0-----10------0-------0--
504     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
505     : 0-----1--0-------0-------0-
505     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
506     : -0-----1-0-------0------0--
506     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
507     : ----1--0--0-------0-------0
507     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
508     : -----1--0-0-------0------0-
508     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
509     : ---1--0---0--------0------0
509     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
510     : -----1--0-0--------0----0--
510     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
511     : ---1--0---0---------0----0-
511     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
512     : ----1--0--0---------0---0--
512     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
513     : ----0--1-0-----0----------0
513     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
514     : -----0--10-----0---------0-
514     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
515     : ---0--1--0------0---------0
515     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
516     : -----0--10------0-------0--
516     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
517     : ---0--1--0-------0-------0-
517     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
518     : ----0--1-0-------0------0--
518     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 18
num_suborbits: 1
519 (*) : -1--0------0------------0-0
519     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
520     : --1--0-----0------------00-
520     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
521     : 1--0-------0-------------00
521     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
522     : -0--1-----0-------------0-0
522     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
523     : --0--1----0-------------00-
523     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
524     : 0--1------0--------------00
524     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
525     : -1-----0---0------------0-0
525     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
526     : --1-----0--0------------00-
526     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
527     : 1-----0----0-------------00
527     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
528     : -0-----1-0--------------0-0
528     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
529     : --0-----10--------------00-
529     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
530     : 0-----1--0---------------00
530     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
531     : ----1--0--0-------------0-0
531     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
532     : -----1--0-0-------------00-
532     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
533     : ---1--0---0--------------00
533     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
534     : ----0--1-0--------------0-0
534     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
535     : -----0--10--------------00-
535     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
536     : ---0--1--0---------------00
536     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 34 =====================
size : 18
num_suborbits: 1
537 (*) : -1--0------0---------0-0---
537     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
538     : --1--0-----0---------00----
538     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
539     : 1--0-------0----------00---
539     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
540     : -0--1-----0-------0-0------
540     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
541     : --0--1----0-------00-------
541     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
542     : 0--1------0--------00------
542     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
543     : -1-----0---0---------0-0---
543     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
544     : --1-----0--0---------00----
544     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
545     : 1-----0----0----------00---
545     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
546     : -0-----1-0-----0-0---------
546     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
547     : --0-----10-----00----------
547     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
548     : 0-----1--0------00---------
548     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
549     : ----1--0--0-------0-0------
549     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
550     : -----1--0-0-------00-------
550     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
551     : ---1--0---0--------00------
551     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
552     : ----0--1-0-----0-0---------
552     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
553     : -----0--10-----00----------
553     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
554     : ---0--1--0------00---------
554     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 35 =====================
size : 9
num_suborbits: 1
555 (*) : ------0---00-------------00
555     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
556     : -------0--00------------0-0
556     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
557     : --------0-00------------00-
557     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
558     : ---0-----0-0-------------00
558     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
559     : ----0----0-0------------0-0
559     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
560     : -----0---0-0------------00-
560     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
561     : 0--------00--------------00
561     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
562     : -0-------00-------------0-0
562     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
563     : --0------00-------------00-
563     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 36 =====================
size : 18
num_suborbits: 1
564 (*) : --0---0---0------1-0-1-----
564     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
565     : -0----0---0-----1---01-----
565     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
566     : --0----0--0------10---1----
566     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
567     : 0------0--0----1----0-1----
567     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
568     : -0------0-0-----1-0----1---
568     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
569     : 0-------0-0----1---0---1---
569     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
570     : -----00----0-----11---0----
570     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
571     : ----0-0----0----1-1----0---
571     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
572     : -----0-0---0-----1-1-0-----
572     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
573     : ---0---0---0---1---1---0---
573     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
574     : ----0---0--0----1---10-----
574     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
575     : ---0----0--0---1----1-0----
575     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
576     : --00-----0------0---11-----
576     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
577     : -0-0-----0-------0-1-1-----
577     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
578     : --0-0----0-----0----1-1----
578     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
579     : 0---0----0-------01---1----
579     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
580     : -0---0---0-----0---1---1---
580     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
581     : 0----0---0------0-1----1---
581     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 37 =====================
size : 18
num_suborbits: 1
582 (*) : -0-0-----0---------1-1----0
582     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
583     : --00-----0----------11---0-
583     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
584     : 0---0----0--------1---1---0
584     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
585     : --0-0----0----------1-1-0--
585     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
586     : 0----0---0--------1----1-0-
586     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
587     : -0---0---0---------1---10--
587     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
588     : -0----0---0-----1----1----0
588     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
589     : --0---0---0------1---1---0-
589     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
590     : 0------0--0----1------1---0
590     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
591     : --0----0--0------1----1-0--
591     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
592     : 0-------0-0----1-------1-0-
592     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
593     : -0------0-0-----1------10--
593     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
594     : ----0-0----0----1-1-------0
594     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
595     : -----00----0-----11------0-
595     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
596     : ---0---0---0---1---1------0
596     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
597     : -----0-0---0-----1-1----0--
597     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
598     : ---0----0--0---1----1----0-
598     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
599     : ----0---0--0----1---1---0--
599     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
600 (*) : 0--0-----0--1---0---------0
600     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
601     : 0--0-----0--1----0-------0-
601     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
602     : -0--0----0---1-0----------0
602     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
603     : -0--0----0---1---0------0--
603     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
604     : --0--0---0----10---------0-
604     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
605     : --0--0---0----1-0-------0--
605     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
606     : 0-----0---0-1------0------0
606     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
607     : 0-----0---0-1-------0----0-
607     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
608     : -0-----0--0--1----0-------0
608     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
609     : -0-----0--0--1------0---0--
609     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
610     : --0-----0-0---1---0------0-
610     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
611     : --0-----0-0---1----0----0--
611     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
612     : ---0--0----01---------0---0
612     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
613     : ---0--0----01----------0-0-
613     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
614     : ----0--0---0-1-------0----0
614     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
615     : ----0--0---0-1---------00--
615     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
616     : -----0--0--0--1------0---0-
616     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
617     : -----0--0--0--1-------0-0--
617     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 39 =====================
size : 9
num_suborbits: 1
618 (*) : 0--0-----0--1------------00
618     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
619     : -0--0----0---1----------0-0
619     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
620     : --0--0---0----1---------00-
620     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
621     : 0-----0---0-1------------00
621     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
622     : -0-----0--0--1----------0-0
622     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
623     : --0-----0-0---1---------00-
623     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
624     : ---0--0----01------------00
624     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
625     : ----0--0---0-1----------0-0
625     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
626     : -----0--0--0--1---------00-
626     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 40 =====================
size : 9
num_suborbits: 1
627 (*) : 0--0-----0--1---00---------
627     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
628     : -0--0----0---1-0-0---------
628     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
629     : --0--0---0----100----------
629     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
630     : 0-----0---0-1------00------
630     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
631     : -0-----0--0--1----0-0------
631     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
632     : --0-----0-0---1---00-------
632     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
633     : ---0--0----01---------00---
633     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
634     : ----0--0---0-1-------0-0---
634     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
635     : -----0--0--0--1------00----
635     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
636 (*) : 0--------00------0--0----0-
636     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
637     : 0--------00-----0--0------0
637     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
638     : -0-------00------0--0---0--
638     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
639     : -0-------00----0--0-------0
639     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
640     : --0------00-----0--0----0--
640     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
641     : --0------00----0--0------0-
641     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
642     : ---0-----0-0-----0-----0-0-
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
643     : ---0-----0-0----0-----0---0
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
644     : ----0----0-0-----0-----00--
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
645     : ----0----0-0---0-----0----0
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
646     : -----0---0-0----0-----0-0--
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
647     : -----0---0-0---0-----0---0-
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
648     : ------0---00--------0--0-0-
648     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
649     : ------0---00-------0--0---0
649     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
650     : -------0--00--------0--00--
650     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
651     : -------0--00------0--0----0
651     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
652     : --------0-00-------0--0-0--
652     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
653     : --------0-00------0--0---0-
653     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : 0--0---0--00---1----------0
654     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
655     : 0--0----0-00---1---------0-
655     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
656     : -0--0-0---00----1---------0
656     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
657     : -0--0---0-00----1-------0--
657     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
658     : --0--00---00-----1-------0-
658     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
659     : --0--0-0--00-----1------0--
659     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
660     : 0---0-0--0-0------1-------0
660     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
661     : 0----00--0-0------1------0-
661     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
662     : -0-0---0-0-0-------1------0
662     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
663     : -0---0-0-0-0-------1----0--
663     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
664     : --00----00-0--------1----0-
664     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
665     : --0-0---00-0--------1---0--
665     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
666     : -0-0--0--00----------1----0
666     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
667     : --00--0--00----------1---0-
667     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
668     : 0---0--0-00-----------1---0
668     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
669     : --0-0--0-00-----------1-0--
669     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
670     : 0----0--000------------1-0-
670     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
671     : -0---0--000------------10--
671     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : 0------0--00---1-----0----0
672     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
673     : 0-------0-00---1-----0---0-
673     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
674     : -0----0---00----1-----0---0
674     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
675     : -0------0-00----1-----0-0--
675     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
676     : --0---0---00-----1-----0-0-
676     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
677     : --0----0--00-----1-----00--
677     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
678     : ---0---0--00---1--0-------0
678     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
679     : ---0----0-00---1--0------0-
679     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
680     : ----0-0---00----1--0------0
680     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
681     : ----0---0-00----1--0----0--
681     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
682     : -----00---00-----1--0----0-
682     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
683     : -----0-0--00-----1--0---0--
683     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
684     : 0---0----0-0------1--0----0
684     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
685     : 0----0---0-0------1--0---0-
685     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
686     : -0-0-----0-0-------1--0---0
686     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
687     : -0---0---0-0-------1--0-0--
687     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
688     : --00-----0-0--------1--0-0-
688     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
689     : --0-0----0-0--------1--00--
689     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
690     : ----0-0--0-0---0--1-------0
690     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
691     : -----00--0-0---0--1------0-
691     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
692     : ---0---0-0-0----0--1------0
692     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
693     : -----0-0-0-0----0--1----0--
693     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
694     : ---0----00-0-----0--1----0-
694     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
695     : ----0---00-0-----0--1---0--
695     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
696     : -0-0-----00-------0--1----0
696     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
697     : --00-----00-------0--1---0-
697     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
698     : 0---0----00--------0--1---0
698     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
699     : --0-0----00--------0--1-0--
699     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
700     : 0----0---00---------0--1-0-
700     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
701     : -0---0---00---------0--10--
701     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
702     : -0----0--00----0-----1----0
702     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
703     : --0---0--00----0-----1---0-
703     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
704     : 0------0-00-----0-----1---0
704     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
705     : --0----0-00-----0-----1-0--
705     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
706     : 0-------000------0-----1-0-
706     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
707     : -0------000------0-----10--
707     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 44 =====================
size : 9
num_suborbits: 1
708 (*) : 0--------00-----00-00------
708     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
709     : -0-------00----0-00-0------
709     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
710     : --0------00----00-00-------
710     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
711     : ---0-----0-0----00----00---
711     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
712     : ----0----0-0---0-0---0-0---
712     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
713     : -----0---0-0---00----00----
713     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
714     : ------0---00-------00-00---
714     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
715     : -------0--00------0-00-0---
715     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
716     : --------0-00------00-00----
716     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 45 =====================
size : 18
num_suborbits: 1
717 (*) : -0---0-0-0-0---0---1-0-----
717     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
718     : --0-0---00-0---0----10-----
718     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
719     : 0----00--0-0----0-1---0----
719     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
720     : --00----00-0----0---1-0----
720     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
721     : 0---0-0--0-0-----01----0---
721     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
722     : -0-0---0-0-0-----0-1---0---
722     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
723     : --0-0--0-00----0--0---1----
723     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
724     : -0---0--000----0--0----1---
724     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
725     : --00--0--00-----0--0-1-----
725     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
726     : 0----0--000-----0--0---1---
726     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
727     : -0-0--0--00------0--01-----
727     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
728     : 0---0--0-00------0--0-1----
728     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
729     : -0--0---0-00----1-0--0-----
729     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
730     : --0--0-0--00-----10--0-----
730     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
731     : 0--0----0-00---1---0--0----
731     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
732     : --0--00---00-----1-0--0----
732     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
733     : 0--0---0--00---1----0--0---
733     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
734     : -0--0-0---00----1---0--0---
734     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 46 =====================
size : 36
num_suborbits: 1
735 (*) : -0---0---0-0---0---1-00----
735     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
736     : --0-0----0-0---0----10-0---
736     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
737     : 0----0---0-0----0-1--00----
737     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
738     : --00-----0-0----0---1-00---
738     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
739     : 0---0----0-0-----01--0-0---
739     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
740     : -0-0-----0-0-----0-1--00---
740     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
741     : --0-0----00----0--00--1----
741     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
742     : -0---0---00----0--0-0--1---
742     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
743     : --00-----00-----0-00-1-----
743     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
744     : 0----0---00-----0--00--1---
744     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
745     : -0-0-----00------00-01-----
745     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
746     : 0---0----00------0-00-1----
746     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
747     : -0------0-00----1-0--00----
747     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
748     : --0----0--00-----10--0-0---
748     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
749     : 0-------0-00---1---0-00----
749     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
750     : --0---0---00-----1-0--00---
750     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
751     : 0------0--00---1----00-0---
751     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
752     : -0----0---00----1---0-00---
752     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
753     : --0----0-00----00-0---1----
753     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
754     : -0------000----0-00----1---
754     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
755     : --0---0--00----00--0-1-----
755     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
756     : 0-------000-----00-0---1---
756     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
757     : -0----0--00----0-0--01-----
757     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
758     : 0------0-00-----00--0-1----
758     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
759     : ----0---0-00----1-00-0-----
759     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
760     : -----0-0--00-----10-00-----
760     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
761     : ---0----0-00---1--00--0----
761     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
762     : -----00---00-----1-00-0----
762     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
763     : ---0---0--00---1--0-0--0---
763     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
764     : ----0-0---00----1--00--0---
764     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
765     : -----0-0-0-0---00--1-0-----
765     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
766     : ----0---00-0---0-0--10-----
766     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
767     : -----00--0-0---00-1---0----
767     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
768     : ---0----00-0----00--1-0----
768     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
769     : ----0-0--0-0---0-01----0---
769     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
770     : ---0---0-0-0----00-1---0---
770     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
771 (*) : 0----0--0000---------0---0-
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
772     : 0---0--0-000---------0----0
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
773     : -0---0--0000----------0-0--
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
774     : -0-0--0--000----------0---0
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
775     : --0-0--0-000-----------00--
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
776     : --00--0--000-----------0-0-
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
777     : --00----0000------0------0-
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
778     : -0-0---0-000------0-------0
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
779     : --0-0---0000-------0----0--
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
780     : 0---0-0--000-------0------0
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
781     : -0---0-0-000--------0---0--
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
782     : 0----00--000--------0----0-
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
783     : --0--00--000---0---------0-
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
784     : -0--0-0--000---0----------0
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
785     : --0--0-0-000----0-------0--
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
786     : 0--0---0-000----0---------0
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
787     : -0--0---0000-----0------0--
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
788     : 0--0----0000-----0-------0-
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
789 (*) : ---0----0000-----00------0-
789     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
790     : ---0---0-000----0-0-------0
790     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
791     : ----0---0000-----0-0----0--
791     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
792     : ----0-0--000---0---0------0
792     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
793     : -----0-0-000----0---0---0--
793     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
794     : -----00--000---0----0----0-
794     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
795     : 0-------0000-----0---0---0-
795     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
796     : 0------0-000----0----0----0
796     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
797     : -0------0000-----0----0-0--
797     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
798     : -0----0--000---0------0---0
798     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
799     : --0----0-000----0------00--
799     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
800     : --0---0--000---0-------0-0-
800     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
801     : 0----0---000--------00---0-
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
802     : 0---0----000-------0-0----0
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
803     : -0---0---000--------0-0-0--
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
804     : -0-0-----000------0---0---0
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
805     : --0-0----000-------0---00--
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
806     : --00-----000------0----0-0-
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 49 =====================
size : 18
num_suborbits: 1
807 (*) : --0--0-0-000---00-0--0-----
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
808     : -0--0---0000---0-00--0-----
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
809     : --0--00--000---00--0--0----
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
810     : 0--0----0000----00-0--0----
810     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
811     : -0--0-0--000---0-0--0--0---
811     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
812     : 0--0---0-000----00--0--0---
812     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
813     : --0-0---0000---0--00-0-----
813     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
814     : -0---0-0-000---0--0-00-----
814     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
815     : --00----0000----0-00--0----
815     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
816     : 0----00--000----0--00-0----
816     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
817     : -0-0---0-000-----00-0--0---
817     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
818     : 0---0-0--000-----0-00--0---
818     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
819     : -0---0--0000---0--0--00----
819     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
820     : --0-0--0-000---0--0--0-0---
820     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
821     : 0----0--0000----0--0-00----
821     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
822     : --00--0--000----0--0--00---
822     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
823     : 0---0--0-000-----0--00-0---
823     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
824     : -0-0--0--000-----0--0-00---
824     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 50 =====================
size : 18
num_suborbits: 1
825 (*) : ---0----0000----0000--0----
825     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
826     : ---0---0-000----000-0--0---
826     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
827     : ----0---0000---0-000-0-----
827     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
828     : ----0-0--000---0-0-00--0---
828     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
829     : -----0-0-000---00-0-00-----
829     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
830     : -----00--000---00--00-0----
830     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
831     : 0-------0000----00-0-00----
831     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
832     : 0------0-000----00--00-0---
832     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
833     : -0------0000---0-00--00----
833     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
834     : -0----0--000---0-0--0-00---
834     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
835     : --0----0-000---00-0--0-0---
835     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
836     : --0---0--000---00--0--00---
836     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
837     : 0----0---000----0--0000----
837     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
838     : 0---0----000-----0-000-0---
838     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
839     : -0---0---000---0--0-000----
839     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
840     : -0-0-----000-----00-0-00---
840     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
841     : --0-0----000---0--00-0-0---
841     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
842     : --00-----000----0-00--00---
842     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 51 =====================
size : 3
num_suborbits: 1
843 (*) : 0-00-00-0000-------------0-
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
844     : 00-00-00-000--------------0
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
845     : -00-00-00000------------0--
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 52 =====================
size : 3
num_suborbits: 1
846 (*) : 00-00-00-000-----0--0--0---
846     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
847     : 0-00-00-0000----0--0--0----
847     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
848     : -00-00-00000---0--0--0-----
848     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 53

[PRIME NOTE]: number of orbits before merging: 55

[PRIME NOTE]: number of primes: 849

[QRM NOTE]: Time elapsed since start: 0.472 seconds

[QRM NOTE]: Time elapsed since last: 0.433 seconds

[QRM NOTE]: Peak memory: 2307252 bytes


=========================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=========================================================================================================

definition primes: {2, 3, 34, 36, 9, 11, 12, 13, 44, 45, 46, 49, 50, 52, 25, 31}


New level: 0
 pending : [0, 1, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]
 solution : []


Before reduction : 
 pending  : [0, 1, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]
 solution : []

Essensial at level 0 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, 0), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, 17179869184), (8, -1), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 0 : {0, 1}

After reduction : 
 pending  : [4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]
 solution : [8]


Before reduction : 
 pending  : [4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]
 solution : [8]

Essensial at level 0 : set()

Before removed
 coverage : [(0, 0), (1, 0), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, 17179869184), (8, -1), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, 17179869184), (8, -1), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]
 solution : [8]

[QRM NOTE]: Time elapsed since start: 0.572 seconds

[QRM NOTE]: Time elapsed since last: 0.099 seconds

[QRM NOTE]: Peak memory: 1097759 bytes


=============================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=============================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 8 =====================
size : 9
num_suborbits: 1
138 (*) : ------------------11-------
138     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
139     : ------------------1-1------
139     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
140     : -------------------11------
140     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
141     : ---------------------11----
141     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
142     : ---------------------1-1---
142     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
143     : ----------------------11---
143     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
144     : ---------------11----------
144     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
145     : ---------------1-1---------
145     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
146     : ----------------11---------
146     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']

sign_func_name2args: {'0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

part_sig: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': [acceptor$0$promise$0$0; acceptor$0$promise$0$1]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': acceptor$0$promise$0$0; acceptor$0$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 4 =====================
size : 18
num_suborbits: 1
99 (*) : ------1-------1------------
99     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
100     : ------1------1-------------
100     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
101     : -------1------1------------
101     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
102     : -------1----1--------------
102     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
103     : --------1----1-------------
103     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
104     : --------1---1--------------
104     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
105     : ---1----------1------------
105     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
106     : ---1---------1-------------
106     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
107     : ----1---------1------------
107     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
108     : ----1-------1--------------
108     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
109     : -----1-------1-------------
109     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
110     : -----1------1--------------
110     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
111     : 1-------------1------------
111     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
112     : 1------------1-------------
112     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
113     : -1------------1------------
113     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
114     : -1----------1--------------
114     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
115     : --1----------1-------------
115     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
116     : --1---------1--------------
116     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

part_sig: ('proposer$0$chosenAt$1$0 | proposer$0$leader$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1': [proposer$0$chosenAt$1$0], 'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1': proposer$0$chosenAt$1$0, 'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER1,PROPOSER0. ~chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 5 =====================
size : 9
num_suborbits: 1
117 (*) : -----------------1--------0
117     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
118     : ----------------1--------0-
118     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
119     : ---------------1--------0--
119     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
120     : --------------------1-----0
120     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
121     : -------------------1-----0-
121     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
122     : ------------------1-----0--
122     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
123     : -----------------------1--0
123     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
124     : ----------------------1--0-
124     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
125     : ---------------------1--0--
125     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor0,proposer2)', '~start(proposer2)']

sign_func_name2args: {'0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$1$start$0$0]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

part_sig: ('acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['promise(acceptor0,proposer2)', '~start(proposer2)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$start$0': [proposer$0$promise$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$start$0': proposer$0$promise$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0)


=== Prime Orbit 6 =====================
size : 9
num_suborbits: 1
126 (*) : --------1-----------------0
126     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
127     : -------1-----------------0-
127     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
128     : ------1-----------------0--
128     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
129     : -----1--------------------0
129     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
130     : ----1--------------------0-
130     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
131     : ---1--------------------0--
131     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
132     : --1-----------------------0
132     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
133     : -1-----------------------0-
133     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
134     : 1-----------------------0--
134     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

part_sig: ('proposer$0$chosenAt$1$0; proposer$1$start$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 7 =====================
size : 3
num_suborbits: 1
135 (*) : --------------1-----------0
135     : ['leader(proposer2)', '~start(proposer2)']
136     : -------------1-----------0-
136     : ['leader(proposer1)', '~start(proposer1)']
137     : ------------1-----------0--
137     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer2)', '~start(proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$start$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$start$0$0',)


---------- SigGenerator ----------

terms:  ['leader(proposer2)', '~start(proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$start$0': [proposer$0$leader$0$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$start$0': proposer$0$leader$0$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
156 (*) : ------------1-1------------
156     : ['leader(proposer0)', 'leader(proposer2)']
157     : ------------11-------------
157     : ['leader(proposer0)', 'leader(proposer1)']
158     : -------------11------------
158     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'leader(proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

part_sig: ('proposer$0$leader$0$0 | proposer$0$leader$0$1',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', 'leader(proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER0. ~leader(PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 14 =====================
size : 9
num_suborbits: 1
195 (*) : -------0-----1--0----------
195     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
196     : --------0-----1--0---------
196     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
197     : ------0-----1--0-----------
197     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
198     : ----0--------1-----0-------
198     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
199     : -----0--------1-----0------
199     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
200     : ---0--------1-----0--------
200     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
201     : -0-----------1--------0----
201     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
202     : --0-----------1--------0---
202     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
203     : 0-----------1--------0-----
203     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '1$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$member$0; acceptor$1$promise$0': [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$member$0; acceptor$1$promise$0': acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0,ACCEPTOR0. member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0)


=== Prime Orbit 15 =====================
size : 18
num_suborbits: 1
204 (*) : -------0-----1---1---------
204     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
205     : --------0-----1-1----------
205     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
206     : ------0-----1----1---------
206     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
207     : --------0-----11-----------
207     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
208     : ------0-----1---1----------
208     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
209     : -------0-----1-1-----------
209     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
210     : ----0--------1------1------
210     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
211     : -----0--------1----1-------
211     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
212     : ---0--------1-------1------
212     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
213     : -----0--------1---1--------
213     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
214     : ---0--------1------1-------
214     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
215     : ----0--------1----1--------
215     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
216     : -0-----------1---------1---
216     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
217     : --0-----------1-------1----
217     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
218     : 0-----------1----------1---
218     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
219     : --0-----------1------1-----
219     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
220     : 0-----------1---------1----
220     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
221     : -0-----------1-------1-----
221     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '0$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER1,PROPOSER0,ACCEPTOR0. member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 16 =====================
size : 18
num_suborbits: 1
222 (*) : ---------1---1-----0-------
222     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
223     : ---------1----1-----0------
223     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
224     : ---------1--1-----0--------
224     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
225     : ---------1---1--------0----
225     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
226     : ---------1----1--------0---
226     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
227     : ---------1--1--------0-----
227     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
228     : ----------1--1--0----------
228     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
229     : ----------1---1--0---------
229     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
230     : ----------1-1--0-----------
230     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
231     : ----------1--1--------0----
231     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
232     : ----------1---1--------0---
232     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
233     : ----------1-1--------0-----
233     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
234     : -----------1-1--0----------
234     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
235     : -----------1--1--0---------
235     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
236     : -----------11--0-----------
236     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
237     : -----------1-1-----0-------
237     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
238     : -----------1--1-----0------
238     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
239     : -----------11-----0--------
239     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR1,ACCEPTOR0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 17 =====================
size : 9
num_suborbits: 1
240 (*) : -------0-1---1-------------
240     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
241     : --------01----1------------
241     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
242     : ------0--1--1--------------
242     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
243     : ----0-----1--1-------------
243     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
244     : -----0----1---1------------
244     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
245     : ---0------1-1--------------
245     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
246     : -0---------1-1-------------
246     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
247     : --0--------1--1------------
247     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
248     : 0----------11--------------
248     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor0)', 'leader(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor0)', 'leader(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$didNotPromise': 1, '0$leader': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0,ACCEPTOR0. member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~didNotPromise(ACCEPTOR0)


=== Prime Orbit 18 =====================
size : 36
num_suborbits: 1
249 (*) : ---------1---1------1------
249     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
250     : ---------1----1----1-------
250     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
251     : ---------1--1-------1------
251     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
252     : ---------1----1---1--------
252     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
253     : ---------1--1------1-------
253     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
254     : ---------1---1----1--------
254     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
255     : ---------1---1---------1---
255     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
256     : ---------1----1-------1----
256     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
257     : ---------1--1----------1---
257     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
258     : ---------1----1------1-----
258     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
259     : ---------1--1---------1----
259     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
260     : ---------1---1-------1-----
260     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
261     : ----------1--1---1---------
261     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
262     : ----------1---1-1----------
262     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
263     : ----------1-1----1---------
263     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
264     : ----------1---11-----------
264     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
265     : ----------1-1---1----------
265     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
266     : ----------1--1-1-----------
266     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
267     : ----------1--1---------1---
267     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
268     : ----------1---1-------1----
268     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
269     : ----------1-1----------1---
269     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
270     : ----------1---1------1-----
270     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
271     : ----------1-1---------1----
271     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
272     : ----------1--1-------1-----
272     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
273     : -----------1-1---1---------
273     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
274     : -----------1--1-1----------
274     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
275     : -----------11----1---------
275     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
276     : -----------1--11-----------
276     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
277     : -----------11---1----------
277     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
278     : -----------1-1-1-----------
278     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
279     : -----------1-1------1------
279     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
280     : -----------1--1----1-------
280     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
281     : -----------11-------1------
281     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
282     : -----------1--1---1--------
282     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
283     : -----------11------1-------
283     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
284     : -----------1-1----1--------
284     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0', 'proposer$0$leader$0$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'promise(ACCEPTOR1,PROPOSER1)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER0,ACCEPTOR1,ACCEPTOR0. ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER1) | ~didNotPromise(ACCEPTOR0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 19 =====================
size : 9
num_suborbits: 1
285 (*) : ---------1-1-1-------------
285     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
286     : ---------1-1--1------------
286     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
287     : ---------1-11--------------
287     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
288     : ---------11--1-------------
288     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
289     : ---------11---1------------
289     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
290     : ---------11-1--------------
290     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
291     : ----------11-1-------------
291     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
292     : ----------11--1------------
292     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
293     : ----------111--------------
293     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1', 'proposer$0$leader$0$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$didNotPromise': 2, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'didNotPromise(ACCEPTOR1)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR1,ACCEPTOR0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR1) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 20 =====================
size : 36
num_suborbits: 1
294 (*) : -------------1--0-1--------
294     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
295     : --------------1--01--------
295     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
296     : ------------1--0---1-------
296     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
297     : --------------1--0-1-------
297     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
298     : ------------1--0----1------
298     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
299     : -------------1--0---1------
299     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
300     : -------------1--0----1-----
300     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
301     : --------------1--0---1-----
301     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
302     : ------------1--0------1----
302     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
303     : --------------1--0----1----
303     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
304     : ------------1--0-------1---
304     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
305     : -------------1--0------1---
305     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
306     : -------------1-1---0-------
306     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
307     : --------------11----0------
307     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
308     : ------------1---1-0--------
308     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
309     : --------------1-1---0------
309     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
310     : ------------1----10--------
310     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
311     : -------------1---1-0-------
311     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
312     : -------------1-----0-1-----
312     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
313     : --------------1-----01-----
313     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
314     : ------------1-----0---1----
314     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
315     : --------------1-----0-1----
315     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
316     : ------------1-----0----1---
316     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
317     : -------------1-----0---1---
317     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
318     : -------------1-1------0----
318     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
319     : --------------11-------0---
319     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
320     : ------------1---1----0-----
320     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
321     : --------------1-1------0---
321     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
322     : ------------1----1---0-----
322     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
323     : -------------1---1----0----
323     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
324     : -------------1----1---0----
324     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
325     : --------------1---1----0---
325     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
326     : ------------1------1-0-----
326     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
327     : --------------1----1---0---
327     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
328     : ------------1-------10-----
328     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
329     : -------------1------1-0----
329     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', '~promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

part_sig: ('acceptor$0$promise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', '~promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER0,ACCEPTOR1,ACCEPTOR0. ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | promise(ACCEPTOR1,PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 21 =====================
size : 36
num_suborbits: 2
330 (*) : -------------1---11--------
330     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
331     : --------------1-1-1--------
331     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
332     : ------------1----1-1-------
332     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
333     : --------------11---1-------
333     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
334     : ------------1---1---1------
334     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
335     : -------------1-1----1------
335     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
336     : -------------1---1---1-----
336     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
337     : --------------1-1----1-----
337     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
338     : ------------1----1----1----
338     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
339     : --------------11------1----
339     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
340     : ------------1---1------1---
340     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
341     : -------------1-1-------1---
341     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
342     : -------------1------11-----
342     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
343     : --------------1----1-1-----
343     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
344     : ------------1-------1-1----
344     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
345     : --------------1---1---1----
345     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
346     : ------------1------1---1---
346     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
347     : -------------1----1----1---
347     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
348 (*) : -------------1-1--1--------
348     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
349     : --------------11--1--------
349     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
350     : ------------1---1--1-------
350     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
351     : --------------1-1--1-------
351     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
352     : ------------1----1--1------
352     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
353     : -------------1---1--1------
353     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
354     : -------------1-1-----1-----
354     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
355     : --------------11-----1-----
355     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
356     : ------------1---1-----1----
356     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
357     : --------------1-1-----1----
357     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
358     : ------------1----1-----1---
358     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
359     : -------------1---1-----1---
359     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
360     : -------------1----1--1-----
360     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
361     : --------------1---1--1-----
361     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
362     : ------------1------1--1----
362     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
363     : --------------1----1--1----
363     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
364     : ------------1-------1--1---
364     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
365     : -------------1------1--1---
365     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$0$promise$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)', 'promise(ACCEPTOR1,PROPOSER2)']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER2:proposer', 'PROPOSER1:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER2:proposer', 'PROPOSER1:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER2:proposer', 'PROPOSER1:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER2:proposer', 'PROPOSER1:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR1,PROPOSER2) | ((ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 ~= PROPOSER2 | PROPOSER0 = PROPOSER1) & (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1))


=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
366 (*) : -------------1--0--0-------
366     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
367     : --------------1--0--0------
367     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
368     : ------------1--0--0--------
368     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
369     : -------------1--0-----0----
369     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
370     : --------------1--0-----0---
370     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
371     : ------------1--0-----0-----
371     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
372     : -------------1-----0--0----
372     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
373     : --------------1-----0--0---
373     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
374     : ------------1-----0--0-----
374     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0, proposer$1$promise$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

part_sig: ('acceptor$1$promise$0$0 | acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR1,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : 0-----0-----1-----1--------
375     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
376     : -0-----0-----1-----1-------
376     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
377     : --0-----0-----1-----1------
377     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
378     : ---0--0-----1--------1-----
378     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
379     : ----0--0-----1--------1----
379     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
380     : -----0--0-----1--------1---
380     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
381     : 0--0--------1--1-----------
381     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
382     : -0--0--------1--1----------
382     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
383     : --0--0--------1--1---------
383     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer0)', 'promise(acceptor1,proposer0)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer0)', 'promise(acceptor1,proposer0)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '0$leader': 1, '0$promise': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', 'promise(ACCEPTOR0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,QUORUM0,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | QUORUM0 = QUORUM1


=== Prime Orbit 24 =====================
size : 3
num_suborbits: 1
384 (*) : 0--0--0-----1--------------
384     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
385     : -0--0--0-----1-------------
385     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
386     : --0--0--0-----1------------
386     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer0)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

part_sig: ('proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2', 'quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$chosenAt': 3, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.exists

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))


=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
390 (*) : ---------0-----0-0-------0-
390     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
391     : ---------0-----00---------0
391     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
392     : ---------0------00------0--
392     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
393     : ----------0-------0-0----0-
393     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
394     : ----------0-------00------0
394     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
395     : ----------0--------00---0--
395     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
396     : -----------0---------0-0-0-
396     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
397     : -----------0---------00---0
397     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
398     : -----------0----------000--
398     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 2, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER0)', '~start(PROPOSER1)', '~didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0. start(PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 27 =====================
size : 9
num_suborbits: 1
399 (*) : ---------0-------0------00-
399     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
400     : ---------0------0-------0-0
400     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
401     : ---------0-----0---------00
401     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
402     : ----------0---------0---00-
402     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
403     : ----------0--------0----0-0
403     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
404     : ----------0-------0------00
404     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
405     : -----------0-----------000-
405     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
406     : -----------0----------0-0-0
406     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
407     : -----------0---------0---00
407     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 1, '1$start': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$promise$1': proposer$1$promise$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : ----------0-------------000
408     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : -----------0------------000
409     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : ---------0--------------000
410     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$2]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

part_sig: ('acceptor$1$didNotPromise$0$0', 'proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$start': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0': [acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0': acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', '~didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0. (exists PROPOSER0. start(PROPOSER0) | didNotPromise(ACCEPTOR0))


=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : --------0-0-------0----1-0-
411     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
412     : -------0--0-------0---1---0
412     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
413     : --------0-0--------0---10--
413     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
414     : ------0---0--------0-1----0
414     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
415     : -------0--0---------0-1-0--
415     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
416     : ------0---0---------01---0-
416     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
417     : --------0--0--------10---0-
417     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
418     : -------0---0-------1-0----0
418     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
419     : --------0--0--------1-0-0--
419     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
420     : ------0----0------1---0---0
420     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
421     : -------0---0-------1---00--
421     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
422     : ------0----0------1----0-0-
422     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
423     : -----0---0-----0-------1-0-
423     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
424     : ----0----0-----0------1---0
424     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
425     : -----0---0------0------10--
425     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
426     : ---0-----0------0----1----0
426     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
427     : ----0----0-------0----1-0--
427     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
428     : ---0-----0-------0---1---0-
428     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
429     : -----0-----0-----1---0---0-
429     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
430     : ----0------0----1----0----0
430     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
431     : -----0-----0-----1----0-0--
431     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
432     : ---0-------0---1------0---0
432     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
433     : ----0------0----1------00--
433     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
434     : ---0-------0---1-------0-0-
434     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
435     : --0------0-----0----1----0-
435     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
436     : -0-------0-----0---1------0
436     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
437     : --0------0------0---1---0--
437     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
438     : 0--------0------0-1-------0
438     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
439     : -0-------0-------0-1----0--
439     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
440     : 0--------0-------01------0-
440     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
441     : --0-------0------10------0-
441     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
442     : -0--------0-----1-0-------0
442     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
443     : --0-------0------1-0----0--
443     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
444     : 0---------0----1---0------0
444     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
445     : -0--------0-----1---0---0--
445     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
446     : 0---------0----1----0----0-
446     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '0$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'promise(ACCEPTOR1,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER2)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,QUORUM0,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 30 =====================
size : 18
num_suborbits: 1
447 (*) : -----0---0-------------100-
447     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
448     : ----0----0------------1-0-0
448     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
449     : ---0-----0-----------1---00
449     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
450     : --0------0----------1---00-
450     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
451     : -0-------0---------1----0-0
451     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
452     : 0--------0--------1------00
452     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
453     : --------0-0------------100-
453     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
454     : -------0--0-----------1-0-0
454     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
455     : ------0---0----------1---00
455     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
456     : --0-------0------1------00-
456     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
457     : -0--------0-----1-------0-0
457     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
458     : 0---------0----1---------00
458     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
459     : --------0--0--------1---00-
459     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
460     : -------0---0-------1----0-0
460     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
461     : ------0----0------1------00
461     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
462     : -----0-----0-----1------00-
462     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
463     : ----0------0----1-------0-0
463     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
464     : ---0-------0---1---------00
464     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', 'promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', 'promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '0$promise': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR1,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER1,ACCEPTOR1,ACCEPTOR0. ~promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 32 =====================
size : 36
num_suborbits: 1
483 (*) : -1--0------0---------0----0
483     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
484     : --1--0-----0---------0---0-
484     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
485     : 1--0-------0----------0---0
485     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
486     : --1--0-----0----------0-0--
486     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
487     : 1--0-------0-----------0-0-
487     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
488     : -1--0------0-----------00--
488     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
489     : -0--1-----0-------0-------0
489     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
490     : --0--1----0-------0------0-
490     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
491     : 0--1------0--------0------0
491     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
492     : --0--1----0--------0----0--
492     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
493     : 0--1------0---------0----0-
493     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
494     : -0--1-----0---------0---0--
494     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
495     : -1-----0---0---------0----0
495     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
496     : --1-----0--0---------0---0-
496     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
497     : 1-----0----0----------0---0
497     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
498     : --1-----0--0----------0-0--
498     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
499     : 1-----0----0-----------0-0-
499     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
500     : -1-----0---0-----------00--
500     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
501     : -0-----1-0-----0----------0
501     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
502     : --0-----10-----0---------0-
502     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
503     : 0-----1--0------0---------0
503     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
504     : --0-----10------0-------0--
504     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
505     : 0-----1--0-------0-------0-
505     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
506     : -0-----1-0-------0------0--
506     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
507     : ----1--0--0-------0-------0
507     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
508     : -----1--0-0-------0------0-
508     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
509     : ---1--0---0--------0------0
509     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
510     : -----1--0-0--------0----0--
510     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
511     : ---1--0---0---------0----0-
511     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
512     : ----1--0--0---------0---0--
512     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
513     : ----0--1-0-----0----------0
513     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
514     : -----0--10-----0---------0-
514     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
515     : ---0--1--0------0---------0
515     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
516     : -----0--10------0-------0--
516     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
517     : ---0--1--0-------0-------0-
517     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
518     : ----0--1-0-------0------0--
518     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$chosenAt$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'0$chosenAt': 1, '1$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '1$start': 1, '1$member': 1, '0$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER2)', 'member(ACCEPTOR0,QUORUM1)', 'chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,QUORUM1,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM1) | ~chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1)


=== Prime Orbit 33 =====================
size : 18
num_suborbits: 1
519 (*) : -1--0------0------------0-0
519     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
520     : --1--0-----0------------00-
520     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
521     : 1--0-------0-------------00
521     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
522     : -0--1-----0-------------0-0
522     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
523     : --0--1----0-------------00-
523     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
524     : 0--1------0--------------00
524     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
525     : -1-----0---0------------0-0
525     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
526     : --1-----0--0------------00-
526     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
527     : 1-----0----0-------------00
527     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
528     : -0-----1-0--------------0-0
528     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
529     : --0-----10--------------00-
529     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
530     : 0-----1--0---------------00
530     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
531     : ----1--0--0-------------0-0
531     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
532     : -----1--0-0-------------00-
532     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
533     : ---1--0---0--------------00
533     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
534     : ----0--1-0--------------0-0
534     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
535     : -----0--10--------------00-
535     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
536     : ---0--1--0---------------00
536     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$chosenAt$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'0$chosenAt': 1, '1$chosenAt': 1, '1$didNotPromise': 1, '1$start': 2, '1$member': 1, '0$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~member(ACCEPTOR0,QUORUM0)', 'chosenAt(QUORUM0,PROPOSER1)', '~start(PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,QUORUM0,PROPOSER1,ACCEPTOR0. chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0) | ~chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 35 =====================
size : 9
num_suborbits: 1
555 (*) : ------0---00-------------00
555     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
556     : -------0--00------------0-0
556     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
557     : --------0-00------------00-
557     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
558     : ---0-----0-0-------------00
558     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
559     : ----0----0-0------------0-0
559     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
560     : -----0---0-0------------00-
560     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
561     : 0--------00--------------00
561     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
562     : -0-------00-------------0-0
562     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
563     : --0------00-------------00-
563     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER1,ACCEPTOR1,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 37 =====================
size : 18
num_suborbits: 1
582 (*) : -0-0-----0---------1-1----0
582     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
583     : --00-----0----------11---0-
583     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
584     : 0---0----0--------1---1---0
584     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
585     : --0-0----0----------1-1-0--
585     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
586     : 0----0---0--------1----1-0-
586     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
587     : -0---0---0---------1---10--
587     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
588     : -0----0---0-----1----1----0
588     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
589     : --0---0---0------1---1---0-
589     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
590     : 0------0--0----1------1---0
590     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
591     : --0----0--0------1----1-0--
591     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
592     : 0-------0-0----1-------1-0-
592     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
593     : -0------0-0-----1------10--
593     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
594     : ----0-0----0----1-1-------0
594     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
595     : -----00----0-----11------0-
595     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
596     : ---0---0---0---1---1------0
596     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
597     : -----0-0---0-----1-1----0--
597     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
598     : ---0----0--0---1----1----0-
598     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
599     : ----0---0--0----1---1---0--
599     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$0$promise$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1, acceptor$1$member$0$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$promise': 2, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0, proposer$1$chosenAt$1$0, proposer$0$promise$1$1, proposer$1$chosenAt$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1, acceptor$0$promise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$3, acceptor$0$promise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR1,QUORUM1)', 'member(ACCEPTOR2,QUORUM1)', 'promise(ACCEPTOR1,PROPOSER0)', 'promise(ACCEPTOR2,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~member(ACCEPTOR2,QUORUM0)', '~start(PROPOSER2)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,QUORUM0,ACCEPTOR2,QUORUM1,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | ~promise(ACCEPTOR1,PROPOSER0) | ~promise(ACCEPTOR2,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR2,QUORUM0) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
600 (*) : 0--0-----0--1---0---------0
600     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
601     : 0--0-----0--1----0-------0-
601     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
602     : -0--0----0---1-0----------0
602     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
603     : -0--0----0---1---0------0--
603     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
604     : --0--0---0----10---------0-
604     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
605     : --0--0---0----1-0-------0--
605     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
606     : 0-----0---0-1------0------0
606     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
607     : 0-----0---0-1-------0----0-
607     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
608     : -0-----0--0--1----0-------0
608     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
609     : -0-----0--0--1------0---0--
609     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
610     : --0-----0-0---1---0------0-
610     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
611     : --0-----0-0---1----0----0--
611     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
612     : ---0--0----01---------0---0
612     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
613     : ---0--0----01----------0-0-
613     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
614     : ----0--0---0-1-------0----0
614     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
615     : ----0--0---0-1---------00--
615     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
616     : -----0--0--0--1------0---0-
616     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
617     : -----0--0--0--1-------0-0--
617     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER2)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,QUORUM1,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1)


=== Prime Orbit 39 =====================
size : 9
num_suborbits: 1
618 (*) : 0--0-----0--1------------00
618     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
619     : -0--0----0---1----------0-0
619     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
620     : --0--0---0----1---------00-
620     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
621     : 0-----0---0-1------------00
621     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
622     : -0-----0--0--1----------0-0
622     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
623     : --0-----0-0---1---------00-
623     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
624     : ---0--0----01------------00
624     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
625     : ----0--0---0-1----------0-0
625     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
626     : -----0--0--0--1---------00-
626     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)', 'leader(PROPOSER1)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,QUORUM0,PROPOSER1,ACCEPTOR0. chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 40 =====================
size : 9
num_suborbits: 1
627 (*) : 0--0-----0--1---00---------
627     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
628     : -0--0----0---1-0-0---------
628     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
629     : --0--0---0----100----------
629     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
630     : 0-----0---0-1------00------
630     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
631     : -0-----0--0--1----0-0------
631     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
632     : --0-----0-0---1---00-------
632     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
633     : ---0--0----01---------00---
633     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
634     : ----0--0---0-1-------0-0---
634     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
635     : -----0--0--0--1------00----
635     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER1)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,QUORUM0,PROPOSER1,ACCEPTOR0. chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
636 (*) : 0--------00------0--0----0-
636     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
637     : 0--------00-----0--0------0
637     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
638     : -0-------00------0--0---0--
638     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
639     : -0-------00----0--0-------0
639     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
640     : --0------00-----0--0----0--
640     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
641     : --0------00----0--0------0-
641     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
642     : ---0-----0-0-----0-----0-0-
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
643     : ---0-----0-0----0-----0---0
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
644     : ----0----0-0-----0-----00--
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
645     : ----0----0-0---0-----0----0
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
646     : -----0---0-0----0-----0-0--
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
647     : -----0---0-0---0-----0---0-
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
648     : ------0---00--------0--0-0-
648     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
649     : ------0---00-------0--0---0
649     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
650     : -------0--00--------0--00--
650     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
651     : -------0--00------0--0----0
651     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
652     : --------0-00-------0--0-0--
652     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
653     : --------0-00------0--0---0-
653     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1, acceptor$0$member$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0, proposer$1$promise$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$promise': 2, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$promise$1; proposer$1$promise$1': [proposer$1$promise$1$0; proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$promise$1; proposer$1$promise$1': proposer$1$promise$1$0; proposer$1$promise$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', '~start(PROPOSER2)', '~promise(ACCEPTOR0,PROPOSER1)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,QUORUM0,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER2) | promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR1,PROPOSER1) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : 0--0---0--00---1----------0
654     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
655     : 0--0----0-00---1---------0-
655     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
656     : -0--0-0---00----1---------0
656     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
657     : -0--0---0-00----1-------0--
657     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
658     : --0--00---00-----1-------0-
658     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
659     : --0--0-0--00-----1------0--
659     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
660     : 0---0-0--0-0------1-------0
660     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
661     : 0----00--0-0------1------0-
661     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
662     : -0-0---0-0-0-------1------0
662     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
663     : -0---0-0-0-0-------1----0--
663     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
664     : --00----00-0--------1----0-
664     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
665     : --0-0---00-0--------1---0--
665     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
666     : -0-0--0--00----------1----0
666     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
667     : --00--0--00----------1---0-
667     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
668     : 0---0--0-00-----------1---0
668     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
669     : --0-0--0-00-----------1-0--
669     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
670     : 0----0--000------------1-0-
670     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
671     : -0---0--000------------10--
671     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$member$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$4, acceptor$1$member$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 2, '0$promise': 1, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$2, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$1, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$2], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$2, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$1, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$2, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM2)', 'member(ACCEPTOR2,QUORUM1)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR2,QUORUM2)', 'member(ACCEPTOR1,QUORUM1)', '~member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~member(ACCEPTOR1,QUORUM2)', 'promise(ACCEPTOR0,PROPOSER0)', '~member(ACCEPTOR2,QUORUM0)', '~start(PROPOSER2)', '~chosenAt(QUORUM2,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM2,ACCEPTOR1,QUORUM0,ACCEPTOR2,QUORUM1,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR1,QUORUM2) | ~promise(ACCEPTOR0,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | start(PROPOSER2) | chosenAt(QUORUM2,PROPOSER0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | QUORUM1 = QUORUM2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : 0------0--00---1-----0----0
672     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
673     : 0-------0-00---1-----0---0-
673     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
674     : -0----0---00----1-----0---0
674     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
675     : -0------0-00----1-----0-0--
675     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
676     : --0---0---00-----1-----0-0-
676     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
677     : --0----0--00-----1-----00--
677     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
678     : ---0---0--00---1--0-------0
678     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
679     : ---0----0-00---1--0------0-
679     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
680     : ----0-0---00----1--0------0
680     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
681     : ----0---0-00----1--0----0--
681     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
682     : -----00---00-----1--0----0-
682     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
683     : -----0-0--00-----1--0---0--
683     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
684     : 0---0----0-0------1--0----0
684     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
685     : 0----0---0-0------1--0---0-
685     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
686     : -0-0-----0-0-------1--0---0
686     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
687     : -0---0---0-0-------1--0-0--
687     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
688     : --00-----0-0--------1--0-0-
688     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
689     : --0-0----0-0--------1--00--
689     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
690     : ----0-0--0-0---0--1-------0
690     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
691     : -----00--0-0---0--1------0-
691     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
692     : ---0---0-0-0----0--1------0
692     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
693     : -----0-0-0-0----0--1----0--
693     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
694     : ---0----00-0-----0--1----0-
694     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
695     : ----0---00-0-----0--1---0--
695     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
696     : -0-0-----00-------0--1----0
696     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
697     : --00-----00-------0--1---0-
697     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
698     : 0---0----00--------0--1---0
698     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
699     : --0-0----00--------0--1-0--
699     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
700     : 0----0---00---------0--1-0-
700     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
701     : -0---0---00---------0--10--
701     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
702     : -0----0--00----0-----1----0
702     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
703     : --0---0--00----0-----1---0-
703     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
704     : 0------0-00-----0-----1---0
704     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
705     : --0----0-00-----0-----1-0--
705     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
706     : 0-------000------0-----1-0-
706     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
707     : -0------000------0-----10--
707     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0, proposer$1$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$0$member$0$2], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$0, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 2, '0$promise': 1, '1$promise': 1, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR2,QUORUM1)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR1,QUORUM1)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~promise(ACCEPTOR2,PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER0)', '~member(ACCEPTOR2,QUORUM0)', '~start(PROPOSER2)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,QUORUM0,ACCEPTOR2,QUORUM1,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | promise(ACCEPTOR2,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | start(PROPOSER2) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
771 (*) : 0----0--0000---------0---0-
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
772     : 0---0--0-000---------0----0
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
773     : -0---0--0000----------0-0--
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
774     : -0-0--0--000----------0---0
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
775     : --0-0--0-000-----------00--
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
776     : --00--0--000-----------0-0-
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
777     : --00----0000------0------0-
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
778     : -0-0---0-000------0-------0
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
779     : --0-0---0000-------0----0--
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
780     : 0---0-0--000-------0------0
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
781     : -0---0-0-000--------0---0--
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
782     : 0----00--000--------0----0-
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
783     : --0--00--000---0---------0-
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
784     : -0--0-0--000---0----------0
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
785     : --0--0-0-000----0-------0--
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
786     : 0--0---0-000----0---------0
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
787     : -0--0---0000-----0------0--
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
788     : 0--0----0000-----0-------0-
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$4, acceptor$1$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$promise$0$0, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 3, '1$promise': 1, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$2, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$1, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0; proposer$1$promise$1$0], 'proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': proposer$1$chosenAt$1$0; proposer$1$promise$1$0, 'proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$1, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM2)', 'member(ACCEPTOR2,QUORUM1)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR2,QUORUM2)', 'member(ACCEPTOR1,QUORUM1)', '~member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~member(ACCEPTOR1,QUORUM2)', '~promise(ACCEPTOR2,PROPOSER0)', '~chosenAt(QUORUM2,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~member(ACCEPTOR2,QUORUM0)', '~start(PROPOSER2)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM2,ACCEPTOR1,QUORUM0,ACCEPTOR2,QUORUM1,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR1,QUORUM2) | promise(ACCEPTOR2,PROPOSER0) | chosenAt(QUORUM2,PROPOSER1) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR2,QUORUM0) | start(PROPOSER2) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | QUORUM1 = QUORUM2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
789 (*) : ---0----0000-----00------0-
789     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
790     : ---0---0-000----0-0-------0
790     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
791     : ----0---0000-----0-0----0--
791     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
792     : ----0-0--000---0---0------0
792     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
793     : -----0-0-000----0---0---0--
793     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
794     : -----00--000---0----0----0-
794     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
795     : 0-------0000-----0---0---0-
795     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
796     : 0------0-000----0----0----0
796     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
797     : -0------0000-----0----0-0--
797     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
798     : -0----0--000---0------0---0
798     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
799     : --0----0-000----0------00--
799     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
800     : --0---0--000---0-------0-0-
800     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
801     : 0----0---000--------00---0-
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
802     : 0---0----000-------0-0----0
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
803     : -0---0---000--------0-0-0--
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
804     : -0-0-----000------0---0---0
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
805     : --0-0----000-------0---00--
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
806     : --00-----000------0----0-0-
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$2, quorum$0$member$1$3], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$promise$1$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1, acceptor$1$member$0$1, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$0$member$0$1, acceptor$0$member$0$3], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$1, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 3, '1$promise': 2, '1$start': 1, '1$member': 2, '0$member': 4}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$1, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0, proposer$1$promise$1$1, proposer$1$chosenAt$1$1, proposer$1$promise$1$0]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$1, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$1, acceptor$1$promise$0$1, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$1$promise$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR2,QUORUM1)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR1,QUORUM1)', '~promise(ACCEPTOR0,PROPOSER0)', '~promise(ACCEPTOR2,PROPOSER1)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~member(ACCEPTOR2,QUORUM0)', '~start(PROPOSER2)', '~chosenAt(QUORUM0,PROPOSER1)', '~chosenAt(QUORUM1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,QUORUM0,ACCEPTOR2,QUORUM1,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR1,QUORUM1) | promise(ACCEPTOR0,PROPOSER0) | promise(ACCEPTOR2,PROPOSER1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR2,QUORUM0) | start(PROPOSER2) | chosenAt(QUORUM0,PROPOSER1) | chosenAt(QUORUM1,PROPOSER0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 51 =====================
size : 3
num_suborbits: 1
843 (*) : 0-00-00-0000-------------0-
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
844     : 00-00-00-000--------------0
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
845     : -00-00-00000------------0--
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$4, acceptor$1$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$3': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$4': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$5': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0', 'proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 6, '1$didNotPromise': 3, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$1, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM2)', '~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR2,QUORUM1)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR2,QUORUM2)', 'member(ACCEPTOR1,QUORUM1)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~member(ACCEPTOR1,QUORUM2)', '~start(PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~member(ACCEPTOR2,QUORUM0)', '~chosenAt(QUORUM2,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM2,ACCEPTOR1,QUORUM0,ACCEPTOR2,QUORUM1,ACCEPTOR0,PROPOSER1. ~member(ACCEPTOR0,QUORUM2) | member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR1,QUORUM2) | start(PROPOSER1) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR2,QUORUM0) | (exists PROPOSER0. ((chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | QUORUM1 = QUORUM2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1)


=======================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=======================================================================================================================


=== Prime Orbit 8 =====================
size : 9
num_suborbits: 1
138 (*) : ------------------11-------
138     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
139     : ------------------1-1------
139     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
140     : -------------------11------
140     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
141     : ---------------------11----
141     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
142     : ---------------------1-1---
142     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
143     : ----------------------11---
143     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
144     : ---------------11----------
144     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
145     : ---------------1-1---------
145     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
146     : ----------------11---------
146     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER1,PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 4 =====================
size : 18
num_suborbits: 1
99 (*) : ------1-------1------------
99     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
100     : ------1------1-------------
100     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
101     : -------1------1------------
101     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
102     : -------1----1--------------
102     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
103     : --------1----1-------------
103     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
104     : --------1---1--------------
104     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
105     : ---1----------1------------
105     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
106     : ---1---------1-------------
106     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
107     : ----1---------1------------
107     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
108     : ----1-------1--------------
108     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
109     : -----1-------1-------------
109     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
110     : -----1------1--------------
110     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
111     : 1-------------1------------
111     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
112     : 1------------1-------------
112     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
113     : -1------------1------------
113     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
114     : -1----------1--------------
114     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
115     : --1----------1-------------
115     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
116     : --1---------1--------------
116     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall QUORUM0,PROPOSER1,PROPOSER0. ~chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 5 =====================
size : 9
num_suborbits: 1
117 (*) : -----------------1--------0
117     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
118     : ----------------1--------0-
118     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
119     : ---------------1--------0--
119     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
120     : --------------------1-----0
120     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
121     : -------------------1-----0-
121     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
122     : ------------------1-----0--
122     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
123     : -----------------------1--0
123     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
124     : ----------------------1--0-
124     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
125     : ---------------------1--0--
125     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0)
qcost : 4




=== Prime Orbit 6 =====================
size : 9
num_suborbits: 1
126 (*) : --------1-----------------0
126     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
127     : -------1-----------------0-
127     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
128     : ------1-----------------0--
128     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
129     : -----1--------------------0
129     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
130     : ----1--------------------0-
130     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
131     : ---1--------------------0--
131     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
132     : --1-----------------------0
132     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
133     : -1-----------------------0-
133     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
134     : 1-----------------------0--
134     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall QUORUM0,PROPOSER0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0)
qcost : 4




=== Prime Orbit 7 =====================
size : 3
num_suborbits: 1
135 (*) : --------------1-----------0
135     : ['leader(proposer2)', '~start(proposer2)']
136     : -------------1-----------0-
136     : ['leader(proposer1)', '~start(proposer1)']
137     : ------------1-----------0--
137     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)
qcost : 3




=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
156 (*) : ------------1-1------------
156     : ['leader(proposer0)', 'leader(proposer2)']
157     : ------------11-------------
157     : ['leader(proposer0)', 'leader(proposer1)']
158     : -------------11------------
158     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER1,PROPOSER0. ~leader(PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 5




=== Prime Orbit 14 =====================
size : 9
num_suborbits: 1
195 (*) : -------0-----1--0----------
195     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
196     : --------0-----1--0---------
196     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
197     : ------0-----1--0-----------
197     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
198     : ----0--------1-----0-------
198     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
199     : -----0--------1-----0------
199     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
200     : ---0--------1-----0--------
200     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
201     : -0-----------1--------0----
201     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
202     : --0-----------1--------0---
202     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
203     : 0-----------1--------0-----
203     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall QUORUM0,PROPOSER0,ACCEPTOR0. member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0)
qcost : 7




=== Prime Orbit 15 =====================
size : 18
num_suborbits: 1
204 (*) : -------0-----1---1---------
204     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
205     : --------0-----1-1----------
205     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
206     : ------0-----1----1---------
206     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
207     : --------0-----11-----------
207     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
208     : ------0-----1---1----------
208     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
209     : -------0-----1-1-----------
209     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
210     : ----0--------1------1------
210     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
211     : -----0--------1----1-------
211     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
212     : ---0--------1-------1------
212     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
213     : -----0--------1---1--------
213     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
214     : ---0--------1------1-------
214     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
215     : ----0--------1----1--------
215     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
216     : -0-----------1---------1---
216     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
217     : --0-----------1-------1----
217     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
218     : 0-----------1----------1---
218     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
219     : --0-----------1------1-----
219     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
220     : 0-----------1---------1----
220     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
221     : -0-----------1-------1-----
221     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall QUORUM0,PROPOSER1,PROPOSER0,ACCEPTOR0. member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 9




=== Prime Orbit 16 =====================
size : 18
num_suborbits: 1
222 (*) : ---------1---1-----0-------
222     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
223     : ---------1----1-----0------
223     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
224     : ---------1--1-----0--------
224     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
225     : ---------1---1--------0----
225     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
226     : ---------1----1--------0---
226     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
227     : ---------1--1--------0-----
227     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
228     : ----------1--1--0----------
228     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
229     : ----------1---1--0---------
229     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
230     : ----------1-1--0-----------
230     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
231     : ----------1--1--------0----
231     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
232     : ----------1---1--------0---
232     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
233     : ----------1-1--------0-----
233     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
234     : -----------1-1--0----------
234     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
235     : -----------1--1--0---------
235     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
236     : -----------11--0-----------
236     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
237     : -----------1-1-----0-------
237     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
238     : -----------1--1-----0------
238     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
239     : -----------11-----0--------
239     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR1,ACCEPTOR0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 17 =====================
size : 9
num_suborbits: 1
240 (*) : -------0-1---1-------------
240     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
241     : --------01----1------------
241     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
242     : ------0--1--1--------------
242     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
243     : ----0-----1--1-------------
243     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
244     : -----0----1---1------------
244     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
245     : ---0------1-1--------------
245     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
246     : -0---------1-1-------------
246     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
247     : --0--------1--1------------
247     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
248     : 0----------11--------------
248     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall QUORUM0,PROPOSER0,ACCEPTOR0. member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~didNotPromise(ACCEPTOR0)
qcost : 7




=== Prime Orbit 18 =====================
size : 36
num_suborbits: 1
249 (*) : ---------1---1------1------
249     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
250     : ---------1----1----1-------
250     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
251     : ---------1--1-------1------
251     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
252     : ---------1----1---1--------
252     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
253     : ---------1--1------1-------
253     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
254     : ---------1---1----1--------
254     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
255     : ---------1---1---------1---
255     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
256     : ---------1----1-------1----
256     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
257     : ---------1--1----------1---
257     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
258     : ---------1----1------1-----
258     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
259     : ---------1--1---------1----
259     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
260     : ---------1---1-------1-----
260     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
261     : ----------1--1---1---------
261     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
262     : ----------1---1-1----------
262     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
263     : ----------1-1----1---------
263     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
264     : ----------1---11-----------
264     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
265     : ----------1-1---1----------
265     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
266     : ----------1--1-1-----------
266     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
267     : ----------1--1---------1---
267     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
268     : ----------1---1-------1----
268     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
269     : ----------1-1----------1---
269     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
270     : ----------1---1------1-----
270     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
271     : ----------1-1---------1----
271     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
272     : ----------1--1-------1-----
272     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
273     : -----------1-1---1---------
273     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
274     : -----------1--1-1----------
274     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
275     : -----------11----1---------
275     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
276     : -----------1--11-----------
276     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
277     : -----------11---1----------
277     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
278     : -----------1-1-1-----------
278     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
279     : -----------1-1------1------
279     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
280     : -----------1--1----1-------
280     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
281     : -----------11-------1------
281     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
282     : -----------1--1---1--------
282     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
283     : -----------11------1-------
283     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
284     : -----------1-1----1--------
284     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER1,PROPOSER0,ACCEPTOR1,ACCEPTOR0. ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER1) | ~didNotPromise(ACCEPTOR0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 9




=== Prime Orbit 19 =====================
size : 9
num_suborbits: 1
285 (*) : ---------1-1-1-------------
285     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
286     : ---------1-1--1------------
286     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
287     : ---------1-11--------------
287     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
288     : ---------11--1-------------
288     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
289     : ---------11---1------------
289     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
290     : ---------11-1--------------
290     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
291     : ----------11-1-------------
291     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
292     : ----------11--1------------
292     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
293     : ----------111--------------
293     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR1,ACCEPTOR0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR1) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 20 =====================
size : 36
num_suborbits: 1
294 (*) : -------------1--0-1--------
294     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
295     : --------------1--01--------
295     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
296     : ------------1--0---1-------
296     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
297     : --------------1--0-1-------
297     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
298     : ------------1--0----1------
298     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
299     : -------------1--0---1------
299     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
300     : -------------1--0----1-----
300     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
301     : --------------1--0---1-----
301     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
302     : ------------1--0------1----
302     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
303     : --------------1--0----1----
303     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
304     : ------------1--0-------1---
304     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
305     : -------------1--0------1---
305     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
306     : -------------1-1---0-------
306     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
307     : --------------11----0------
307     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
308     : ------------1---1-0--------
308     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
309     : --------------1-1---0------
309     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
310     : ------------1----10--------
310     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
311     : -------------1---1-0-------
311     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
312     : -------------1-----0-1-----
312     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
313     : --------------1-----01-----
313     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
314     : ------------1-----0---1----
314     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
315     : --------------1-----0-1----
315     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
316     : ------------1-----0----1---
316     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
317     : -------------1-----0---1---
317     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
318     : -------------1-1------0----
318     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
319     : --------------11-------0---
319     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
320     : ------------1---1----0-----
320     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
321     : --------------1-1------0---
321     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
322     : ------------1----1---0-----
322     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
323     : -------------1---1----0----
323     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
324     : -------------1----1---0----
324     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
325     : --------------1---1----0---
325     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
326     : ------------1------1-0-----
326     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
327     : --------------1----1---0---
327     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
328     : ------------1-------10-----
328     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
329     : -------------1------1-0----
329     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER1,PROPOSER0,ACCEPTOR1,ACCEPTOR0. ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | promise(ACCEPTOR1,PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 9




=== Prime Orbit 21 =====================
size : 36
num_suborbits: 2
330 (*) : -------------1---11--------
330     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
331     : --------------1-1-1--------
331     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
332     : ------------1----1-1-------
332     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
333     : --------------11---1-------
333     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
334     : ------------1---1---1------
334     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
335     : -------------1-1----1------
335     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
336     : -------------1---1---1-----
336     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
337     : --------------1-1----1-----
337     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
338     : ------------1----1----1----
338     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
339     : --------------11------1----
339     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
340     : ------------1---1------1---
340     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
341     : -------------1-1-------1---
341     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
342     : -------------1------11-----
342     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
343     : --------------1----1-1-----
343     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
344     : ------------1-------1-1----
344     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
345     : --------------1---1---1----
345     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
346     : ------------1------1---1---
346     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
347     : -------------1----1----1---
347     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
348 (*) : -------------1-1--1--------
348     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
349     : --------------11--1--------
349     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
350     : ------------1---1--1-------
350     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
351     : --------------1-1--1-------
351     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
352     : ------------1----1--1------
352     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
353     : -------------1---1--1------
353     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
354     : -------------1-1-----1-----
354     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
355     : --------------11-----1-----
355     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
356     : ------------1---1-----1----
356     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
357     : --------------1-1-----1----
357     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
358     : ------------1----1-----1---
358     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
359     : -------------1---1-----1---
359     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
360     : -------------1----1--1-----
360     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
361     : --------------1---1--1-----
361     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
362     : ------------1------1--1----
362     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
363     : --------------1----1--1----
363     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
364     : ------------1-------1--1---
364     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
365     : -------------1------1--1---
365     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
num_forall :   5
num_exists :   0
num_literals : 10
quantified form : forall ACCEPTOR1,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR1,PROPOSER2) | ((ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 ~= PROPOSER2 | PROPOSER0 = PROPOSER1) & (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1))
qcost : 15




=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
366 (*) : -------------1--0--0-------
366     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
367     : --------------1--0--0------
367     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
368     : ------------1--0--0--------
368     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
369     : -------------1--0-----0----
369     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
370     : --------------1--0-----0---
370     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
371     : ------------1--0-----0-----
371     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
372     : -------------1-----0--0----
372     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
373     : --------------1-----0--0---
373     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
374     : ------------1-----0--0-----
374     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR1,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : 0-----0-----1-----1--------
375     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
376     : -0-----0-----1-----1-------
376     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
377     : --0-----0-----1-----1------
377     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
378     : ---0--0-----1--------1-----
378     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
379     : ----0--0-----1--------1----
379     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
380     : -----0--0-----1--------1---
380     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
381     : 0--0--------1--1-----------
381     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
382     : -0--0--------1--1----------
382     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
383     : --0--0--------1--1---------
383     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall QUORUM1,QUORUM0,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | QUORUM0 = QUORUM1
qcost : 11




=== Prime Orbit 24 =====================
size : 3
num_suborbits: 1
384 (*) : 0--0--0-----1--------------
384     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
385     : -0--0--0-----1-------------
385     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
386     : --0--0--0-----1------------
386     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))
qcost : 4




=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
390 (*) : ---------0-----0-0-------0-
390     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
391     : ---------0-----00---------0
391     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
392     : ---------0------00------0--
392     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
393     : ----------0-------0-0----0-
393     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
394     : ----------0-------00------0
394     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
395     : ----------0--------00---0--
395     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
396     : -----------0---------0-0-0-
396     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
397     : -----------0---------00---0
397     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
398     : -----------0----------000--
398     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall PROPOSER1,ACCEPTOR0. start(PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 27 =====================
size : 9
num_suborbits: 1
399 (*) : ---------0-------0------00-
399     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
400     : ---------0------0-------0-0
400     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
401     : ---------0-----0---------00
401     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
402     : ----------0---------0---00-
402     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
403     : ----------0--------0----0-0
403     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
404     : ----------0-------0------00
404     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
405     : -----------0-----------000-
405     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
406     : -----------0----------0-0-0
406     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
407     : -----------0---------0---00
407     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall PROPOSER1,ACCEPTOR0. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : ----------0-------------000
408     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : -----------0------------000
409     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : ---------0--------------000
410     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall ACCEPTOR0. (exists PROPOSER0. start(PROPOSER0) | didNotPromise(ACCEPTOR0))
qcost : 4




=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : --------0-0-------0----1-0-
411     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
412     : -------0--0-------0---1---0
412     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
413     : --------0-0--------0---10--
413     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
414     : ------0---0--------0-1----0
414     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
415     : -------0--0---------0-1-0--
415     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
416     : ------0---0---------01---0-
416     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
417     : --------0--0--------10---0-
417     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
418     : -------0---0-------1-0----0
418     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
419     : --------0--0--------1-0-0--
419     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
420     : ------0----0------1---0---0
420     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
421     : -------0---0-------1---00--
421     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
422     : ------0----0------1----0-0-
422     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
423     : -----0---0-----0-------1-0-
423     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
424     : ----0----0-----0------1---0
424     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
425     : -----0---0------0------10--
425     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
426     : ---0-----0------0----1----0
426     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
427     : ----0----0-------0----1-0--
427     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
428     : ---0-----0-------0---1---0-
428     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
429     : -----0-----0-----1---0---0-
429     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
430     : ----0------0----1----0----0
430     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
431     : -----0-----0-----1----0-0--
431     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
432     : ---0-------0---1------0---0
432     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
433     : ----0------0----1------00--
433     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
434     : ---0-------0---1-------0-0-
434     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
435     : --0------0-----0----1----0-
435     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
436     : -0-------0-----0---1------0
436     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
437     : --0------0------0---1---0--
437     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
438     : 0--------0------0-1-------0
438     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
439     : -0-------0-------0-1----0--
439     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
440     : 0--------0-------01------0-
440     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
441     : --0-------0------10------0-
441     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
442     : -0--------0-----1-0-------0
442     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
443     : --0-------0------1-0----0--
443     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
444     : 0---------0----1---0------0
444     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
445     : -0--------0-----1---0---0--
445     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
446     : 0---------0----1----0----0-
446     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall ACCEPTOR1,QUORUM0,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1)
qcost : 17




=== Prime Orbit 30 =====================
size : 18
num_suborbits: 1
447 (*) : -----0---0-------------100-
447     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
448     : ----0----0------------1-0-0
448     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
449     : ---0-----0-----------1---00
449     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
450     : --0------0----------1---00-
450     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
451     : -0-------0---------1----0-0
451     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
452     : 0--------0--------1------00
452     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
453     : --------0-0------------100-
453     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
454     : -------0--0-----------1-0-0
454     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
455     : ------0---0----------1---00
455     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
456     : --0-------0------1------00-
456     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
457     : -0--------0-----1-------0-0
457     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
458     : 0---------0----1---------00
458     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
459     : --------0--0--------1---00-
459     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
460     : -------0---0-------1----0-0
460     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
461     : ------0----0------1------00
461     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
462     : -----0-----0-----1------00-
462     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
463     : ----0------0----1-------0-0
463     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
464     : ---0-------0---1---------00
464     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall QUORUM0,PROPOSER1,ACCEPTOR1,ACCEPTOR0. ~promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 32 =====================
size : 36
num_suborbits: 1
483 (*) : -1--0------0---------0----0
483     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
484     : --1--0-----0---------0---0-
484     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
485     : 1--0-------0----------0---0
485     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
486     : --1--0-----0----------0-0--
486     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
487     : 1--0-------0-----------0-0-
487     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
488     : -1--0------0-----------00--
488     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
489     : -0--1-----0-------0-------0
489     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
490     : --0--1----0-------0------0-
490     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
491     : 0--1------0--------0------0
491     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
492     : --0--1----0--------0----0--
492     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
493     : 0--1------0---------0----0-
493     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
494     : -0--1-----0---------0---0--
494     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
495     : -1-----0---0---------0----0
495     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
496     : --1-----0--0---------0---0-
496     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
497     : 1-----0----0----------0---0
497     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
498     : --1-----0--0----------0-0--
498     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
499     : 1-----0----0-----------0-0-
499     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
500     : -1-----0---0-----------00--
500     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
501     : -0-----1-0-----0----------0
501     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
502     : --0-----10-----0---------0-
502     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
503     : 0-----1--0------0---------0
503     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
504     : --0-----10------0-------0--
504     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
505     : 0-----1--0-------0-------0-
505     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
506     : -0-----1-0-------0------0--
506     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
507     : ----1--0--0-------0-------0
507     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
508     : -----1--0-0-------0------0-
508     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
509     : ---1--0---0--------0------0
509     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
510     : -----1--0-0--------0----0--
510     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
511     : ---1--0---0---------0----0-
511     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
512     : ----1--0--0---------0---0--
512     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
513     : ----0--1-0-----0----------0
513     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
514     : -----0--10-----0---------0-
514     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
515     : ---0--1--0------0---------0
515     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
516     : -----0--10------0-------0--
516     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
517     : ---0--1--0-------0-------0-
517     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
518     : ----0--1-0-------0------0--
518     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall QUORUM0,QUORUM1,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM1) | ~chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1)
qcost : 17




=== Prime Orbit 33 =====================
size : 18
num_suborbits: 1
519 (*) : -1--0------0------------0-0
519     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
520     : --1--0-----0------------00-
520     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
521     : 1--0-------0-------------00
521     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
522     : -0--1-----0-------------0-0
522     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
523     : --0--1----0-------------00-
523     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
524     : 0--1------0--------------00
524     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
525     : -1-----0---0------------0-0
525     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
526     : --1-----0--0------------00-
526     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
527     : 1-----0----0-------------00
527     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
528     : -0-----1-0--------------0-0
528     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
529     : --0-----10--------------00-
529     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
530     : 0-----1--0---------------00
530     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
531     : ----1--0--0-------------0-0
531     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
532     : -----1--0-0-------------00-
532     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
533     : ---1--0---0--------------00
533     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
534     : ----0--1-0--------------0-0
534     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
535     : -----0--10--------------00-
535     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
536     : ---0--1--0---------------00
536     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall QUORUM1,QUORUM0,PROPOSER1,ACCEPTOR0. chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0) | ~chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 13




=== Prime Orbit 35 =====================
size : 9
num_suborbits: 1
555 (*) : ------0---00-------------00
555     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
556     : -------0--00------------0-0
556     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
557     : --------0-00------------00-
557     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
558     : ---0-----0-0-------------00
558     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
559     : ----0----0-0------------0-0
559     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
560     : -----0---0-0------------00-
560     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
561     : 0--------00--------------00
561     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
562     : -0-------00-------------0-0
562     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
563     : --0------00-------------00-
563     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall QUORUM0,PROPOSER1,ACCEPTOR1,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 37 =====================
size : 18
num_suborbits: 1
582 (*) : -0-0-----0---------1-1----0
582     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
583     : --00-----0----------11---0-
583     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
584     : 0---0----0--------1---1---0
584     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
585     : --0-0----0----------1-1-0--
585     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
586     : 0----0---0--------1----1-0-
586     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
587     : -0---0---0---------1---10--
587     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
588     : -0----0---0-----1----1----0
588     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
589     : --0---0---0------1---1---0-
589     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
590     : 0------0--0----1------1---0
590     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
591     : --0----0--0------1----1-0--
591     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
592     : 0-------0-0----1-------1-0-
592     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
593     : -0------0-0-----1------10--
593     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
594     : ----0-0----0----1-1-------0
594     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
595     : -----00----0-----11------0-
595     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
596     : ---0---0---0---1---1------0
596     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
597     : -----0-0---0-----1-1----0--
597     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
598     : ---0----0--0---1----1----0-
598     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
599     : ----0---0--0----1---1---0--
599     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   8
num_exists :   0
num_literals : 19
quantified form : forall ACCEPTOR1,QUORUM0,ACCEPTOR2,QUORUM1,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | ~promise(ACCEPTOR1,PROPOSER0) | ~promise(ACCEPTOR2,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR2,QUORUM0) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1)
qcost : 27




=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
600 (*) : 0--0-----0--1---0---------0
600     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
601     : 0--0-----0--1----0-------0-
601     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
602     : -0--0----0---1-0----------0
602     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
603     : -0--0----0---1---0------0--
603     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
604     : --0--0---0----10---------0-
604     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
605     : --0--0---0----1-0-------0--
605     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
606     : 0-----0---0-1------0------0
606     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
607     : 0-----0---0-1-------0----0-
607     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
608     : -0-----0--0--1----0-------0
608     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
609     : -0-----0--0--1------0---0--
609     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
610     : --0-----0-0---1---0------0-
610     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
611     : --0-----0-0---1----0----0--
611     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
612     : ---0--0----01---------0---0
612     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
613     : ---0--0----01----------0-0-
613     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
614     : ----0--0---0-1-------0----0
614     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
615     : ----0--0---0-1---------00--
615     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
616     : -----0--0--0--1------0---0-
616     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
617     : -----0--0--0--1-------0-0--
617     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall QUORUM0,QUORUM1,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1)
qcost : 18




=== Prime Orbit 39 =====================
size : 9
num_suborbits: 1
618 (*) : 0--0-----0--1------------00
618     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
619     : -0--0----0---1----------0-0
619     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
620     : --0--0---0----1---------00-
620     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
621     : 0-----0---0-1------------00
621     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
622     : -0-----0--0--1----------0-0
622     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
623     : --0-----0-0---1---------00-
623     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
624     : ---0--0----01------------00
624     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
625     : ----0--0---0-1----------0-0
625     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
626     : -----0--0--0--1---------00-
626     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall QUORUM1,QUORUM0,PROPOSER1,ACCEPTOR0. chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 40 =====================
size : 9
num_suborbits: 1
627 (*) : 0--0-----0--1---00---------
627     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
628     : -0--0----0---1-0-0---------
628     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
629     : --0--0---0----100----------
629     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
630     : 0-----0---0-1------00------
630     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
631     : -0-----0--0--1----0-0------
631     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
632     : --0-----0-0---1---00-------
632     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
633     : ---0--0----01---------00---
633     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
634     : ----0--0---0-1-------0-0---
634     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
635     : -----0--0--0--1------00----
635     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall QUORUM1,QUORUM0,PROPOSER1,ACCEPTOR0. chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
636 (*) : 0--------00------0--0----0-
636     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
637     : 0--------00-----0--0------0
637     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
638     : -0-------00------0--0---0--
638     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
639     : -0-------00----0--0-------0
639     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
640     : --0------00-----0--0----0--
640     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
641     : --0------00----0--0------0-
641     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
642     : ---0-----0-0-----0-----0-0-
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
643     : ---0-----0-0----0-----0---0
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
644     : ----0----0-0-----0-----00--
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
645     : ----0----0-0---0-----0----0
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
646     : -----0---0-0----0-----0-0--
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
647     : -----0---0-0---0-----0---0-
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
648     : ------0---00--------0--0-0-
648     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
649     : ------0---00-------0--0---0
649     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
650     : -------0--00--------0--00--
650     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
651     : -------0--00------0--0----0
651     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
652     : --------0-00-------0--0-0--
652     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
653     : --------0-00------0--0---0-
653     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall ACCEPTOR1,QUORUM0,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER2) | promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR1,PROPOSER1) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1)
qcost : 18




=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : 0--0---0--00---1----------0
654     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
655     : 0--0----0-00---1---------0-
655     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
656     : -0--0-0---00----1---------0
656     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
657     : -0--0---0-00----1-------0--
657     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
658     : --0--00---00-----1-------0-
658     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
659     : --0--0-0--00-----1------0--
659     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
660     : 0---0-0--0-0------1-------0
660     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
661     : 0----00--0-0------1------0-
661     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
662     : -0-0---0-0-0-------1------0
662     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
663     : -0---0-0-0-0-------1----0--
663     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
664     : --00----00-0--------1----0-
664     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
665     : --0-0---00-0--------1---0--
665     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
666     : -0-0--0--00----------1----0
666     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
667     : --00--0--00----------1---0-
667     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
668     : 0---0--0-00-----------1---0
668     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
669     : --0-0--0-00-----------1-0--
669     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
670     : 0----0--000------------1-0-
670     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
671     : -0---0--000------------10--
671     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
num_forall :   9
num_exists :   0
num_literals : 25
quantified form : forall QUORUM2,ACCEPTOR1,QUORUM0,ACCEPTOR2,QUORUM1,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR1,QUORUM2) | ~promise(ACCEPTOR0,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | start(PROPOSER2) | chosenAt(QUORUM2,PROPOSER0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | QUORUM1 = QUORUM2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1)
qcost : 34




=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : 0------0--00---1-----0----0
672     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
673     : 0-------0-00---1-----0---0-
673     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
674     : -0----0---00----1-----0---0
674     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
675     : -0------0-00----1-----0-0--
675     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
676     : --0---0---00-----1-----0-0-
676     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
677     : --0----0--00-----1-----00--
677     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
678     : ---0---0--00---1--0-------0
678     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
679     : ---0----0-00---1--0------0-
679     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
680     : ----0-0---00----1--0------0
680     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
681     : ----0---0-00----1--0----0--
681     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
682     : -----00---00-----1--0----0-
682     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
683     : -----0-0--00-----1--0---0--
683     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
684     : 0---0----0-0------1--0----0
684     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
685     : 0----0---0-0------1--0---0-
685     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
686     : -0-0-----0-0-------1--0---0
686     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
687     : -0---0---0-0-------1--0-0--
687     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
688     : --00-----0-0--------1--0-0-
688     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
689     : --0-0----0-0--------1--00--
689     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
690     : ----0-0--0-0---0--1-------0
690     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
691     : -----00--0-0---0--1------0-
691     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
692     : ---0---0-0-0----0--1------0
692     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
693     : -----0-0-0-0----0--1----0--
693     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
694     : ---0----00-0-----0--1----0-
694     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
695     : ----0---00-0-----0--1---0--
695     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
696     : -0-0-----00-------0--1----0
696     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
697     : --00-----00-------0--1---0-
697     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
698     : 0---0----00--------0--1---0
698     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
699     : --0-0----00--------0--1-0--
699     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
700     : 0----0---00---------0--1-0-
700     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
701     : -0---0---00---------0--10--
701     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
702     : -0----0--00----0-----1----0
702     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
703     : --0---0--00----0-----1---0-
703     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
704     : 0------0-00-----0-----1---0
704     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
705     : --0----0-00-----0-----1-0--
705     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
706     : 0-------000------0-----1-0-
706     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
707     : -0------000------0-----10--
707     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   8
num_exists :   0
num_literals : 20
quantified form : forall ACCEPTOR1,QUORUM0,ACCEPTOR2,QUORUM1,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | promise(ACCEPTOR2,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | start(PROPOSER2) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1)
qcost : 28




=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
771 (*) : 0----0--0000---------0---0-
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
772     : 0---0--0-000---------0----0
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
773     : -0---0--0000----------0-0--
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
774     : -0-0--0--000----------0---0
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
775     : --0-0--0-000-----------00--
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
776     : --00--0--000-----------0-0-
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
777     : --00----0000------0------0-
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
778     : -0-0---0-000------0-------0
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
779     : --0-0---0000-------0----0--
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
780     : 0---0-0--000-------0------0
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
781     : -0---0-0-000--------0---0--
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
782     : 0----00--000--------0----0-
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
783     : --0--00--000---0---------0-
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
784     : -0--0-0--000---0----------0
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
785     : --0--0-0-000----0-------0--
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
786     : 0--0---0-000----0---------0
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
787     : -0--0---0000-----0------0--
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
788     : 0--0----0000-----0-------0-
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
num_forall :   9
num_exists :   0
num_literals : 26
quantified form : forall QUORUM2,ACCEPTOR1,QUORUM0,ACCEPTOR2,QUORUM1,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR1,QUORUM2) | promise(ACCEPTOR2,PROPOSER0) | chosenAt(QUORUM2,PROPOSER1) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR2,QUORUM0) | start(PROPOSER2) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | QUORUM1 = QUORUM2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1)
qcost : 35




=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
789 (*) : ---0----0000-----00------0-
789     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
790     : ---0---0-000----0-0-------0
790     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
791     : ----0---0000-----0-0----0--
791     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
792     : ----0-0--000---0---0------0
792     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
793     : -----0-0-000----0---0---0--
793     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
794     : -----00--000---0----0----0-
794     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
795     : 0-------0000-----0---0---0-
795     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
796     : 0------0-000----0----0----0
796     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
797     : -0------0000-----0----0-0--
797     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
798     : -0----0--000---0------0---0
798     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
799     : --0----0-000----0------00--
799     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
800     : --0---0--000---0-------0-0-
800     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
801     : 0----0---000--------00---0-
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
802     : 0---0----000-------0-0----0
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
803     : -0---0---000--------0-0-0--
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
804     : -0-0-----000------0---0---0
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
805     : --0-0----000-------0---00--
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
806     : --00-----000------0----0-0-
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   8
num_exists :   0
num_literals : 21
quantified form : forall ACCEPTOR1,QUORUM0,ACCEPTOR2,QUORUM1,ACCEPTOR0,PROPOSER2,PROPOSER1,PROPOSER0. member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR1,QUORUM1) | promise(ACCEPTOR0,PROPOSER0) | promise(ACCEPTOR2,PROPOSER1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR2,QUORUM0) | start(PROPOSER2) | chosenAt(QUORUM0,PROPOSER1) | chosenAt(QUORUM1,PROPOSER0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1)
qcost : 29




=== Prime Orbit 51 =====================
size : 3
num_suborbits: 1
843 (*) : 0-00-00-0000-------------0-
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
844     : 00-00-00-000--------------0
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
845     : -00-00-00000------------0--
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   7
num_exists :   1
num_literals : 23
quantified form : forall QUORUM2,ACCEPTOR1,QUORUM0,ACCEPTOR2,QUORUM1,ACCEPTOR0,PROPOSER1. ~member(ACCEPTOR0,QUORUM2) | member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR1,QUORUM2) | start(PROPOSER1) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR2,QUORUM0) | (exists PROPOSER0. ((chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | QUORUM1 = QUORUM2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1)
qcost : 31



[QRM NOTE]: Time elapsed since start: 1.078 seconds

[QRM NOTE]: Time elapsed since last: 0.506 seconds

[QRM NOTE]: Peak memory: 3055997 bytes


======================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

======================================================================================================


New level: 1
 pending : [4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]
 solution : [8]


Before reduction : 
 pending  : [4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]
 solution : [8]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, 17179869184), (8, -1), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, 17179869184), (8, -1), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]
 solution : [8]


Solution : [8] has cost 6.


Decide in level 1 among pending : [4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, 17179869184), (8, -1), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 7 with phase True at level 1

After decision at level 1
 pending : [4, 5, 6, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]
 solution : [8, 7]


New level: 2
 pending : [4, 5, 6, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]
 solution : [8, 7]


Before reduction : 
 pending  : [4, 5, 6, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]
 solution : [8, 7]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, 17179869184), (8, -1), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, 4294967296), (11, -1), (12, -1), (13, -1), (14, 1073741824), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, 2147483648), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [4, 5, 6, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]
 solution : [8, 7]


Solution : [8, 7] has cost 9.


Decide in level 2 among pending : [4, 5, 6, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, 4294967296), (11, -1), (12, -1), (13, -1), (14, 1073741824), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, 2147483648), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 10 with phase True at level 2

After decision at level 2
 pending : [4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10]


New level: 3
 pending : [4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10]


Before reduction : 
 pending  : [4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, 4294967296), (11, -1), (12, -1), (13, -1), (14, 1073741824), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, 2147483648), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, 536870912), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10]


Solution : [8, 7, 10] has cost 14.


Decide in level 3 among pending : [4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, 536870912), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 24 with phase True at level 3

After decision at level 3
 pending : [4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24]


New level: 4
 pending : [4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24]


Before reduction : 
 pending  : [4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, 536870912), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 4 : {4, 40, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [5, 6, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24]


Before reduction : 
 pending  : [5, 6, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [5, 6, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24]


Solution : [8, 7, 10, 24] has cost 18.


Decide in level 4 among pending : [5, 6, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43, 47, 48, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [5, 6, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28]


New level: 5
 pending : [5, 6, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28]


Before reduction : 
 pending  : [5, 6, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 6, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28]


Solution : [8, 7, 10, 24, 28] has cost 22.


Decide in level 5 among pending : [5, 6, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43, 47, 48, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 35 with phase True at level 5

After decision at level 5
 pending : [5, 6, 26, 27, 29, 30, 32, 33, 37, 38, 39, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28, 35]


New level: 6
 pending : [5, 6, 26, 27, 29, 30, 32, 33, 37, 38, 39, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28, 35]


Before reduction : 
 pending  : [5, 6, 26, 27, 29, 30, 32, 33, 37, 38, 39, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : {33, 30, 39}

After reduction : 
 pending  : [5, 6, 26, 27, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28, 35]


Before reduction : 
 pending  : [5, 6, 26, 27, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 6, 26, 27, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28, 35]


Solution : [8, 7, 10, 24, 28, 35] has cost 35.


Decide in level 6 among pending : [5, 6, 26, 27, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Decide 5 with phase True at level 6

After decision at level 6
 pending : [6, 26, 27, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28, 35, 5]


New level: 7
 pending : [6, 26, 27, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28, 35, 5]


Before reduction : 
 pending  : [6, 26, 27, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28, 35, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 7 : {32, 37, 6, 38, 41, 42, 43, 47, 48, 51, 26, 27, 29}

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 28, 35, 5]


Before reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 28, 35, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 28, 35, 5]


Solution : [8, 7, 10, 24, 28, 35, 5] has cost 39.


Before backtrack at level 7
 pending : []
 solution : [8, 7, 10, 24, 28, 35, 5]

After backtrack at level 7
 pending : [6, 26, 27, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28, 35, 5]


Invert decision for 5 at level 6


New level: 7
 pending : [6, 26, 27, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28, 35]


Before reduction : 
 pending  : [6, 26, 27, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28, 35]

Essensial at level 7 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 7 : {32, 37, 6, 38, 41, 42, 43, 47, 48, 51, 27, 29}

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 28, 35, 26]


Before reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 28, 35, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 28, 35, 26]


Solution : [8, 7, 10, 24, 28, 35, 26] has cost 42.


Before backtrack at level 7
 pending : []
 solution : [8, 7, 10, 24, 28, 35, 26]

After backtrack at level 7
 pending : [26, 6, 27, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28, 35]


Before backtrack at level 6
 pending : [26, 6, 27, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28, 35]

After backtrack at level 6
 pending : [26, 6, 27, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 7, 10, 24, 28, 35]


Invert decision for 35 at level 5


New level: 6
 pending : [26, 6, 27, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 7, 10, 24, 28]


Before reduction : 
 pending  : [26, 6, 27, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 7, 10, 24, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 6, 27, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 7, 10, 24, 28]


Solution : [8, 7, 10, 24, 28] has cost 22.


Decide in level 6 among pending : [26, 6, 27, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 7, 10, 24, 28, 27]


New level: 7
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 7, 10, 24, 28, 27]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 7, 10, 24, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {33, 30, 39}

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 24, 28, 27]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 24, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 24, 28, 27]


Solution : [8, 7, 10, 24, 28, 27] has cost 29.


Decide in level 7 among pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 24, 28, 27, 26]


New level: 8
 pending : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 24, 28, 27, 26]


Before reduction : 
 pending  : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 24, 28, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 37, 38, 6, 5, 41, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 28, 27, 26]


Before reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 28, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 28, 27, 26]


Solution : [8, 7, 10, 24, 28, 27, 26] has cost 36.


Before backtrack at level 8
 pending : []
 solution : [8, 7, 10, 24, 28, 27, 26]

After backtrack at level 8
 pending : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 24, 28, 27, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 24, 28, 27]


Before reduction : 
 pending  : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 24, 28, 27]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 37, 38, 6, 41, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 28, 27, 5]


Before reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 28, 27, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 28, 27, 5]


Solution : [8, 7, 10, 24, 28, 27, 5] has cost 33.


Before backtrack at level 8
 pending : []
 solution : [8, 7, 10, 24, 28, 27, 5]

After backtrack at level 8
 pending : [5, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28, 27]


Before backtrack at level 7
 pending : [5, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 28, 27]

After backtrack at level 7
 pending : [5, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24, 28, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [5, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24, 28]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24, 28]


Solution : [8, 7, 10, 24, 28] has cost 22.


Decide in level 7 among pending : [5, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24, 28, 5]


New level: 8
 pending : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24, 28, 5]


Before reduction : 
 pending  : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24, 28, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 33, 37, 38, 6, 39, 41, 42, 43, 47, 48, 51, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 28, 5]


Before reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 28, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 28, 5]


Solution : [8, 7, 10, 24, 28, 5] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [8, 7, 10, 24, 28, 5]

After backtrack at level 8
 pending : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24, 28, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24, 28]


Before reduction : 
 pending  : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24, 28]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 33, 37, 38, 6, 39, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 28, 26]


Before reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 28, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 28, 26]


Solution : [8, 7, 10, 24, 28, 26] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [8, 7, 10, 24, 28, 26]

After backtrack at level 8
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39]
 solution : [8, 7, 10, 24, 28]


Before backtrack at level 7
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39]
 solution : [8, 7, 10, 24, 28]

After backtrack at level 7
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 7, 10, 24, 28]


Before backtrack at level 6
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 7, 10, 24, 28]

After backtrack at level 6
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27]
 solution : [8, 7, 10, 24, 28]


Before backtrack at level 5
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27]
 solution : [8, 7, 10, 24, 28]

After backtrack at level 5
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35]
 solution : [8, 7, 10, 24, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35]
 solution : [8, 7, 10, 24]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35]
 solution : [8, 7, 10, 24]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35]
 solution : [8, 7, 10, 24]


Solution : [8, 7, 10, 24] has cost 18.


Decide in level 5 among pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 35 with phase True at level 5

After decision at level 5
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27]
 solution : [8, 7, 10, 24, 35]


New level: 6
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27]
 solution : [8, 7, 10, 24, 35]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27]
 solution : [8, 7, 10, 24, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : {33, 30, 39}

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 27]
 solution : [8, 7, 10, 24, 35]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 27]
 solution : [8, 7, 10, 24, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 27]
 solution : [8, 7, 10, 24, 35]


Solution : [8, 7, 10, 24, 35] has cost 31.


Before backtrack at level 6
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 27]
 solution : [8, 7, 10, 24, 35]

After backtrack at level 6
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 7, 10, 24, 35]


Invert decision for 35 at level 5


New level: 6
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 7, 10, 24]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 7, 10, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 7, 10, 24]


Solution : [8, 7, 10, 24] has cost 18.


Decide in level 6 among pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 7, 10, 24, 27]


New level: 7
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 7, 10, 24, 27]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 7, 10, 24, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : {33, 30, 39}

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 24, 27]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 24, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 24, 27]


Solution : [8, 7, 10, 24, 27] has cost 25.


Decide in level 7 among pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 24, 27, 26]


New level: 8
 pending : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 24, 27, 26]


Before reduction : 
 pending  : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 24, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 37, 38, 6, 5, 41, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 27, 26]


Before reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 27, 26]


Solution : [8, 7, 10, 24, 27, 26] has cost 32.


Before backtrack at level 8
 pending : []
 solution : [8, 7, 10, 24, 27, 26]

After backtrack at level 8
 pending : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 24, 27, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 24, 27]


Before reduction : 
 pending  : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 24, 27]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 37, 38, 6, 41, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 27, 5]


Before reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 27, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 27, 5]


Solution : [8, 7, 10, 24, 27, 5] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [8, 7, 10, 24, 27, 5]

After backtrack at level 8
 pending : [5, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 27]


Before backtrack at level 7
 pending : [5, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 24, 27]

After backtrack at level 7
 pending : [5, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [5, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24]


Solution : [8, 7, 10, 24] has cost 18.


Decide in level 7 among pending : [5, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24, 5]


New level: 8
 pending : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24, 5]


Before reduction : 
 pending  : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 33, 37, 38, 6, 39, 41, 42, 43, 47, 48, 51, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 5]


Before reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 5]


Solution : [8, 7, 10, 24, 5] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [8, 7, 10, 24, 5]

After backtrack at level 8
 pending : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24]


Before reduction : 
 pending  : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 10, 24]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 33, 37, 38, 6, 39, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 26]


Before reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 10, 24, 26]


Solution : [8, 7, 10, 24, 26] has cost 25.


Before backtrack at level 8
 pending : []
 solution : [8, 7, 10, 24, 26]

After backtrack at level 8
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39]
 solution : [8, 7, 10, 24]


Before backtrack at level 7
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39]
 solution : [8, 7, 10, 24]

After backtrack at level 7
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 7, 10, 24]


Before backtrack at level 6
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 7, 10, 24]

After backtrack at level 6
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27]
 solution : [8, 7, 10, 24]


Before backtrack at level 5
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27]
 solution : [8, 7, 10, 24]

After backtrack at level 5
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35]
 solution : [8, 7, 10, 24]


Before backtrack at level 4
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35]
 solution : [8, 7, 10, 24]

After backtrack at level 4
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [8, 7, 10, 24]


Invert decision for 24 at level 3


New level: 4
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [8, 7, 10]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [8, 7, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [8, 7, 10]


Solution : [8, 7, 10] has cost 14.


Decide in level 4 among pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 35 with phase True at level 4

After decision at level 4
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [8, 7, 10, 35]


New level: 5
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [8, 7, 10, 35]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [8, 7, 10, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 8192), (28, 536870912), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 4096), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : {33, 30}

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [8, 7, 10, 35]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [8, 7, 10, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 8192), (28, 536870912), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 4096), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 8192), (28, 536870912), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 4096), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [8, 7, 10, 35]


Solution : [8, 7, 10, 35] has cost 27.


Before backtrack at level 5
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [8, 7, 10, 35]

After backtrack at level 5
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 28, 30, 33]
 solution : [8, 7, 10, 35]


Invert decision for 35 at level 4


New level: 5
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 28, 30, 33]
 solution : [8, 7, 10]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 28, 30, 33]
 solution : [8, 7, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 8192), (28, 536870912), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 4096), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 28, 30, 33]
 solution : [8, 7, 10]


Solution : [8, 7, 10] has cost 14.


Decide in level 5 among pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 28, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 30, 33]
 solution : [8, 7, 10, 28]


New level: 6
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 30, 33]
 solution : [8, 7, 10, 28]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 30, 33]
 solution : [8, 7, 10, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 30, 33]
 solution : [8, 7, 10, 28]


Solution : [8, 7, 10, 28] has cost 18.


Decide in level 6 among pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 14 with phase True at level 6

After decision at level 6
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 30, 33]
 solution : [8, 7, 10, 28, 14]


New level: 7
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 30, 33]
 solution : [8, 7, 10, 28, 14]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 30, 33]
 solution : [8, 7, 10, 28, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : {4, 40, 15, 16, 17, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 30, 33]
 solution : [8, 7, 10, 28, 14]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 30, 33]
 solution : [8, 7, 10, 28, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 30, 33]
 solution : [8, 7, 10, 28, 14]


Solution : [8, 7, 10, 28, 14] has cost 25.


Before backtrack at level 7
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 30, 33]
 solution : [8, 7, 10, 28, 14]

After backtrack at level 7
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28, 14]


Invert decision for 14 at level 6


New level: 7
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28]


Solution : [8, 7, 10, 28] has cost 18.


Decide in level 7 among pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 39, 5, 27, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 39 with phase True at level 7

After decision at level 7
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28, 39]


New level: 8
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28, 39]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28, 39]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 67108864), (28, -1), (29, 524288), (30, 262144), (31, -1), (32, 8192), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 16777216), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28, 39]


Solution : [8, 7, 10, 28, 39] has cost 32.


Before backtrack at level 8
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28, 39]

After backtrack at level 8
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28, 39]


Invert decision for 39 at level 7


New level: 8
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 67108864), (28, -1), (29, 524288), (30, 262144), (31, -1), (32, 8192), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 16777216), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28]


Solution : [8, 7, 10, 28] has cost 18.


Decide in level 8 among pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 27 with phase True at level 8

After decision at level 8
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28, 27]


New level: 9
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28, 27]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, -1), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : {33, 30}

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28, 27]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, -1), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, -1), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28, 27]


Solution : [8, 7, 10, 28, 27] has cost 25.


Before backtrack at level 9
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40]
 solution : [8, 7, 10, 28, 27]

After backtrack at level 9
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 30, 33]
 solution : [8, 7, 10, 28, 27]


Invert decision for 27 at level 8


New level: 9
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 30, 33]
 solution : [8, 7, 10, 28]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 30, 33]
 solution : [8, 7, 10, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, -1), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 30, 33]
 solution : [8, 7, 10, 28]


Solution : [8, 7, 10, 28] has cost 18.


Decide in level 9 among pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40, 30, 33]
 solution : [8, 7, 10, 28, 22]


New level: 10
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40, 30, 33]
 solution : [8, 7, 10, 28, 22]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40, 30, 33]
 solution : [8, 7, 10, 28, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, -1), (40, 0), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : {4, 40, 15, 16, 17, 18, 19, 20, 21, 23}

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 30, 33]
 solution : [8, 7, 10, 28, 22]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 30, 33]
 solution : [8, 7, 10, 28, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, -1), (40, 0), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 30, 33]
 solution : [8, 7, 10, 28, 22]


Solution : [8, 7, 10, 28, 22] has cost 25.


Before backtrack at level 10
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 30, 33]
 solution : [8, 7, 10, 28, 22]

After backtrack at level 10
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40]
 solution : [8, 7, 10, 28, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40]
 solution : [8, 7, 10, 28]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40]
 solution : [8, 7, 10, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40]
 solution : [8, 7, 10, 28]


Solution : [8, 7, 10, 28] has cost 18.


Decide in level 10 among pending : [26, 6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 26 with phase True at level 10

After decision at level 10
 pending : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40]
 solution : [8, 7, 10, 28, 26]


New level: 11
 pending : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40]
 solution : [8, 7, 10, 28, 26]


Before reduction : 
 pending  : [6, 29, 32, 37, 38, 41, 42, 43, 47, 48, 51, 5, 30, 33, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40]
 solution : [8, 7, 10, 28, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 262144), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 33, 37, 6, 5, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : [38, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40]
 solution : [8, 7, 10, 28, 26]


Before reduction : 
 pending  : [38, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40]
 solution : [8, 7, 10, 28, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 262144), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40]
 solution : [8, 7, 10, 28, 26]


Solution : [8, 7, 10, 28, 26] has cost 25.


Before backtrack at level 11
 pending : [38, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40]
 solution : [8, 7, 10, 28, 26]

After backtrack at level 11
 pending : [38, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33]
 solution : [8, 7, 10, 28, 26]


Invert decision for 26 at level 10


New level: 11
 pending : [38, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33]
 solution : [8, 7, 10, 28]


Before reduction : 
 pending  : [38, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33]
 solution : [8, 7, 10, 28]

Essensial at level 11 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 33, 37, 6, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : [38, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40]
 solution : [8, 7, 10, 28, 5]


Before reduction : 
 pending  : [38, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40]
 solution : [8, 7, 10, 28, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40]
 solution : [8, 7, 10, 28, 5]


Solution : [8, 7, 10, 28, 5] has cost 22.


Decide in level 11 among pending : [38, 4, 15, 16, 17, 18, 19, 20, 21, 23, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 11

After decision at level 11
 pending : [38, 4, 16, 17, 18, 19, 20, 21, 23, 40]
 solution : [8, 7, 10, 28, 5, 15]


New level: 12
 pending : [38, 4, 16, 17, 18, 19, 20, 21, 23, 40]
 solution : [8, 7, 10, 28, 5, 15]


Before reduction : 
 pending  : [38, 4, 16, 17, 18, 19, 20, 21, 23, 40]
 solution : [8, 7, 10, 28, 5, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, 0), (19, 8192), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {18, 21, 4, 20}

After reduction : 
 pending  : [38, 16, 17, 19, 23, 40]
 solution : [8, 7, 10, 28, 5, 15]


Before reduction : 
 pending  : [38, 16, 17, 19, 23, 40]
 solution : [8, 7, 10, 28, 5, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, 0), (19, 8192), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 16, 17, 19, 23, 40]
 solution : [8, 7, 10, 28, 5, 15]


Solution : [8, 7, 10, 28, 5, 15] has cost 31.


Before backtrack at level 12
 pending : [38, 16, 17, 19, 23, 40]
 solution : [8, 7, 10, 28, 5, 15]

After backtrack at level 12
 pending : [38, 16, 17, 19, 23, 40, 4, 18, 20, 21]
 solution : [8, 7, 10, 28, 5, 15]


Invert decision for 15 at level 11


New level: 12
 pending : [38, 16, 17, 19, 23, 40, 4, 18, 20, 21]
 solution : [8, 7, 10, 28, 5]


Before reduction : 
 pending  : [38, 16, 17, 19, 23, 40, 4, 18, 20, 21]
 solution : [8, 7, 10, 28, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 16, 17, 19, 23, 40, 4, 18, 20, 21]
 solution : [8, 7, 10, 28, 5]


Solution : [8, 7, 10, 28, 5] has cost 22.


Decide in level 12 among pending : [38, 16, 17, 19, 23, 40, 4, 18, 20, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [38, 16, 19, 23, 40, 4, 18, 20, 21]
 solution : [8, 7, 10, 28, 5, 17]


New level: 13
 pending : [38, 16, 19, 23, 40, 4, 18, 20, 21]
 solution : [8, 7, 10, 28, 5, 17]


Before reduction : 
 pending  : [38, 16, 19, 23, 40, 4, 18, 20, 21]
 solution : [8, 7, 10, 28, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 524288), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 18, 19}

After reduction : 
 pending  : [38, 23, 40, 4, 20, 21]
 solution : [8, 7, 10, 28, 5, 17]


Before reduction : 
 pending  : [38, 23, 40, 4, 20, 21]
 solution : [8, 7, 10, 28, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 524288), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 20, 21]
 solution : [8, 7, 10, 28, 5, 17]


Solution : [8, 7, 10, 28, 5, 17] has cost 29.


Before backtrack at level 13
 pending : [38, 23, 40, 4, 20, 21]
 solution : [8, 7, 10, 28, 5, 17]

After backtrack at level 13
 pending : [38, 23, 40, 4, 20, 21, 16, 19, 18]
 solution : [8, 7, 10, 28, 5, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [38, 23, 40, 4, 20, 21, 16, 19, 18]
 solution : [8, 7, 10, 28, 5]


Before reduction : 
 pending  : [38, 23, 40, 4, 20, 21, 16, 19, 18]
 solution : [8, 7, 10, 28, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 20, 21, 16, 19, 18]
 solution : [8, 7, 10, 28, 5]


Solution : [8, 7, 10, 28, 5] has cost 22.


Decide in level 13 among pending : [38, 23, 40, 4, 20, 21, 16, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [38, 23, 40, 4, 21, 16, 19, 18]
 solution : [8, 7, 10, 28, 5, 20]


New level: 14
 pending : [38, 23, 40, 4, 21, 16, 19, 18]
 solution : [8, 7, 10, 28, 5, 20]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 16, 19, 18]
 solution : [8, 7, 10, 28, 5, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, 0), (19, 8192), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {18, 4, 21}

After reduction : 
 pending  : [38, 23, 40, 16, 19]
 solution : [8, 7, 10, 28, 5, 20]


Before reduction : 
 pending  : [38, 23, 40, 16, 19]
 solution : [8, 7, 10, 28, 5, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, 0), (19, 8192), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 16, 19]
 solution : [8, 7, 10, 28, 5, 20]


Solution : [8, 7, 10, 28, 5, 20] has cost 31.


Before backtrack at level 14
 pending : [38, 23, 40, 16, 19]
 solution : [8, 7, 10, 28, 5, 20]

After backtrack at level 14
 pending : [38, 23, 40, 16, 19, 4, 21, 18]
 solution : [8, 7, 10, 28, 5, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [38, 23, 40, 16, 19, 4, 21, 18]
 solution : [8, 7, 10, 28, 5]


Before reduction : 
 pending  : [38, 23, 40, 16, 19, 4, 21, 18]
 solution : [8, 7, 10, 28, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, 32768), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 16, 19, 4, 21, 18]
 solution : [8, 7, 10, 28, 5]


Solution : [8, 7, 10, 28, 5] has cost 22.


Decide in level 14 among pending : [38, 23, 40, 16, 19, 4, 21, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, 32768), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 14

After decision at level 14
 pending : [38, 23, 40, 19, 4, 21, 18]
 solution : [8, 7, 10, 28, 5, 16]


New level: 15
 pending : [38, 23, 40, 19, 4, 21, 18]
 solution : [8, 7, 10, 28, 5, 16]


Before reduction : 
 pending  : [38, 23, 40, 19, 4, 21, 18]
 solution : [8, 7, 10, 28, 5, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, 32768), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {18, 19}

After reduction : 
 pending  : [38, 23, 40, 4, 21]
 solution : [8, 7, 10, 28, 5, 16]


Before reduction : 
 pending  : [38, 23, 40, 4, 21]
 solution : [8, 7, 10, 28, 5, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21]
 solution : [8, 7, 10, 28, 5, 16]


Solution : [8, 7, 10, 28, 5, 16] has cost 29.


Before backtrack at level 15
 pending : [38, 23, 40, 4, 21]
 solution : [8, 7, 10, 28, 5, 16]

After backtrack at level 15
 pending : [38, 23, 40, 4, 21, 19, 18]
 solution : [8, 7, 10, 28, 5, 16]


Invert decision for 16 at level 14


New level: 15
 pending : [38, 23, 40, 4, 21, 19, 18]
 solution : [8, 7, 10, 28, 5]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 19, 18]
 solution : [8, 7, 10, 28, 5]

Essensial at level 15 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18]
 solution : [8, 7, 10, 28, 5, 19]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18]
 solution : [8, 7, 10, 28, 5, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18]
 solution : [8, 7, 10, 28, 5, 19]


Solution : [8, 7, 10, 28, 5, 19] has cost 29.


Before backtrack at level 15
 pending : [38, 23, 40, 4, 21, 18]
 solution : [8, 7, 10, 28, 5, 19]

After backtrack at level 15
 pending : [38, 23, 40, 4, 21, 18, 19]
 solution : [8, 7, 10, 28, 5]


Before backtrack at level 14
 pending : [38, 23, 40, 4, 21, 18, 19]
 solution : [8, 7, 10, 28, 5]

After backtrack at level 14
 pending : [38, 23, 40, 4, 21, 18, 19, 16]
 solution : [8, 7, 10, 28, 5]


Before backtrack at level 13
 pending : [38, 23, 40, 4, 21, 18, 19, 16]
 solution : [8, 7, 10, 28, 5]

After backtrack at level 13
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20]
 solution : [8, 7, 10, 28, 5]


Before backtrack at level 12
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20]
 solution : [8, 7, 10, 28, 5]

After backtrack at level 12
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 10, 28, 5]


Before backtrack at level 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 10, 28, 5]

After backtrack at level 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15]
 solution : [8, 7, 10, 28]


Before backtrack at level 10
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15]
 solution : [8, 7, 10, 28]

After backtrack at level 10
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26]
 solution : [8, 7, 10, 28]


Before backtrack at level 9
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26]
 solution : [8, 7, 10, 28]

After backtrack at level 9
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22]
 solution : [8, 7, 10, 28]


Before backtrack at level 8
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22]
 solution : [8, 7, 10, 28]

After backtrack at level 8
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 27]
 solution : [8, 7, 10, 28]


Before backtrack at level 7
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 27]
 solution : [8, 7, 10, 28]

After backtrack at level 7
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 27, 39]
 solution : [8, 7, 10, 28]


Before backtrack at level 6
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 27, 39]
 solution : [8, 7, 10, 28]

After backtrack at level 6
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 27, 39, 14]
 solution : [8, 7, 10, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 27, 39, 14]
 solution : [8, 7, 10]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 27, 39, 14]
 solution : [8, 7, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 27, 39, 14]
 solution : [8, 7, 10]


Solution : [8, 7, 10] has cost 14.


Decide in level 6 among pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 27, 39, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39, 14]
 solution : [8, 7, 10, 27]


New level: 7
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39, 14]
 solution : [8, 7, 10, 27]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39, 14]
 solution : [8, 7, 10, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 512), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : {33, 30}

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 15, 26, 22, 39, 14]
 solution : [8, 7, 10, 27]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 15, 26, 22, 39, 14]
 solution : [8, 7, 10, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 512), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 512), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 15, 26, 22, 39, 14]
 solution : [8, 7, 10, 27]


Solution : [8, 7, 10, 27] has cost 21.


Decide in level 7 among pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 15, 26, 22, 39, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 512), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 14 with phase True at level 7

After decision at level 7
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 15, 26, 22, 39]
 solution : [8, 7, 10, 27, 14]


New level: 8
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 15, 26, 22, 39]
 solution : [8, 7, 10, 27, 14]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 15, 26, 22, 39]
 solution : [8, 7, 10, 27, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 512), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, 0), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : {4, 39, 40, 15, 16, 17, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 7, 10, 27, 14]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 7, 10, 27, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, 0), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 7, 10, 27, 14]


Solution : [8, 7, 10, 27, 14] has cost 28.


Before backtrack at level 8
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 7, 10, 27, 14]

After backtrack at level 8
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 39]
 solution : [8, 7, 10, 27, 14]


Invert decision for 14 at level 7


New level: 8
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 39]
 solution : [8, 7, 10, 27]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 39]
 solution : [8, 7, 10, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 512), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 39]
 solution : [8, 7, 10, 27]


Solution : [8, 7, 10, 27] has cost 21.


Decide in level 8 among pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 512), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27, 22]


New level: 9
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27, 22]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 512), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, 0), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : {4, 39, 40, 15, 16, 17, 18, 19, 20, 21, 23}

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 7, 10, 27, 22]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 7, 10, 27, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, 0), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 7, 10, 27, 22]


Solution : [8, 7, 10, 27, 22] has cost 28.


Before backtrack at level 9
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 7, 10, 27, 22]

After backtrack at level 9
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 512), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27]


Solution : [8, 7, 10, 27] has cost 21.


Decide in level 9 among pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 512), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 38 with phase True at level 9

After decision at level 9
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27, 38]


New level: 10
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27, 38]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 512), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, 4194304), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 131072), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, 512), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 0), (40, 131072), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : {39}

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 10, 27, 38]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 10, 27, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, 4194304), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 131072), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, 512), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 0), (40, 131072), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, 4194304), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 131072), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, 512), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 10, 27, 38]


Solution : [8, 7, 10, 27, 38] has cost 39.


Before backtrack at level 10
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 10, 27, 38]

After backtrack at level 10
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27, 38]


Invert decision for 38 at level 9


New level: 10
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, 4194304), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 131072), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, 512), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 512), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27]


Solution : [8, 7, 10, 27] has cost 21.


Decide in level 10 among pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 512), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27, 5]


New level: 11
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27, 5]


Before reduction : 
 pending  : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 512), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 512), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 37, 6, 41, 42, 43, 47, 48, 51, 26, 29}

After reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27, 5]


Before reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 512), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27, 5]


Solution : [8, 7, 10, 27, 5] has cost 25.


Before backtrack at level 11
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27, 5]

After backtrack at level 11
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 7, 10, 27, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 7, 10, 27]


Before reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 7, 10, 27]

Essensial at level 11 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 512), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 37, 6, 41, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27, 26]


Before reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 512), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27, 26]


Solution : [8, 7, 10, 27, 26] has cost 28.


Before backtrack at level 11
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 10, 27, 26]

After backtrack at level 11
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 27]


Before backtrack at level 10
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 10, 27]

After backtrack at level 10
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 27]


Before backtrack at level 9
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 10, 27]

After backtrack at level 9
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38]
 solution : [8, 7, 10, 27]


Before backtrack at level 8
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38]
 solution : [8, 7, 10, 27]

After backtrack at level 8
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 22]
 solution : [8, 7, 10, 27]


Before backtrack at level 7
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 22]
 solution : [8, 7, 10, 27]

After backtrack at level 7
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 22, 30, 33, 14]
 solution : [8, 7, 10, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 22, 30, 33, 14]
 solution : [8, 7, 10]


Before reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 22, 30, 33, 14]
 solution : [8, 7, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 22, 30, 33, 14]
 solution : [8, 7, 10]


Solution : [8, 7, 10] has cost 14.


Decide in level 7 among pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 22, 30, 33, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 14 with phase True at level 7

After decision at level 7
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 22, 30, 33]
 solution : [8, 7, 10, 14]


New level: 8
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 22, 30, 33]
 solution : [8, 7, 10, 14]


Before reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 22, 30, 33]
 solution : [8, 7, 10, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {4, 40, 15, 16, 17, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 30, 33]
 solution : [8, 7, 10, 14]


Before reduction : 
 pending  : [39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 30, 33]
 solution : [8, 7, 10, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 30, 33]
 solution : [8, 7, 10, 14]


Solution : [8, 7, 10, 14] has cost 21.


Decide in level 8 among pending : [39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 26 with phase True at level 8

After decision at level 8
 pending : [39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 30, 33]
 solution : [8, 7, 10, 14, 26]


New level: 9
 pending : [39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 30, 33]
 solution : [8, 7, 10, 14, 26]


Before reduction : 
 pending  : [39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 30, 33]
 solution : [8, 7, 10, 14, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {32, 33, 37, 6, 39, 5, 41, 42, 43, 38, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 7, 10, 14, 26]


Before reduction : 
 pending  : []
 solution : [8, 7, 10, 14, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 10, 14, 26]


Solution : [8, 7, 10, 14, 26] has cost 28.


Before backtrack at level 9
 pending : []
 solution : [8, 7, 10, 14, 26]

After backtrack at level 9
 pending : [39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 30, 33]
 solution : [8, 7, 10, 14, 26]


Invert decision for 26 at level 8


New level: 9
 pending : [39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 30, 33]
 solution : [8, 7, 10, 14]


Before reduction : 
 pending  : [39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 30, 33]
 solution : [8, 7, 10, 14]

Essensial at level 9 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {32, 33, 37, 6, 39, 38, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 7, 10, 14, 5]


Before reduction : 
 pending  : []
 solution : [8, 7, 10, 14, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 10, 14, 5]


Solution : [8, 7, 10, 14, 5] has cost 25.


Before backtrack at level 9
 pending : []
 solution : [8, 7, 10, 14, 5]

After backtrack at level 9
 pending : [5, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33]
 solution : [8, 7, 10, 14]


Before backtrack at level 8
 pending : [5, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33]
 solution : [8, 7, 10, 14]

After backtrack at level 8
 pending : [5, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 26]
 solution : [8, 7, 10, 14]


Invert decision for 14 at level 7


New level: 8
 pending : [5, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 26]
 solution : [8, 7, 10]


Before reduction : 
 pending  : [5, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 26]
 solution : [8, 7, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 26]
 solution : [8, 7, 10]


Solution : [8, 7, 10] has cost 14.


Decide in level 8 among pending : [5, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 39 with phase True at level 8

After decision at level 8
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 26]
 solution : [8, 7, 10, 39]


New level: 9
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 26]
 solution : [8, 7, 10, 39]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 26]
 solution : [8, 7, 10, 39]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 16777216), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 26]
 solution : [8, 7, 10, 39]


Solution : [8, 7, 10, 39] has cost 28.


Before backtrack at level 9
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 26]
 solution : [8, 7, 10, 39]

After backtrack at level 9
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 26]
 solution : [8, 7, 10, 39]


Invert decision for 39 at level 8


New level: 9
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 26]
 solution : [8, 7, 10]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 26]
 solution : [8, 7, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 16777216), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 26]
 solution : [8, 7, 10]


Solution : [8, 7, 10] has cost 14.


Decide in level 9 among pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26]
 solution : [8, 7, 10, 22]


New level: 10
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26]
 solution : [8, 7, 10, 22]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26]
 solution : [8, 7, 10, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, 134217728), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : {4, 40, 15, 16, 17, 18, 19, 20, 21, 23}

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26]
 solution : [8, 7, 10, 22]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26]
 solution : [8, 7, 10, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26]
 solution : [8, 7, 10, 22]


Solution : [8, 7, 10, 22] has cost 21.


Decide in level 10 among pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26]
 solution : [8, 7, 10, 22, 5]


New level: 11
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26]
 solution : [8, 7, 10, 22, 5]


Before reduction : 
 pending  : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26]
 solution : [8, 7, 10, 22, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 33, 37, 6, 38, 41, 42, 43, 47, 48, 51, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 7, 10, 22, 5]


Before reduction : 
 pending  : []
 solution : [8, 7, 10, 22, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 10, 22, 5]


Solution : [8, 7, 10, 22, 5] has cost 25.


Before backtrack at level 11
 pending : []
 solution : [8, 7, 10, 22, 5]

After backtrack at level 11
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26]
 solution : [8, 7, 10, 22, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26]
 solution : [8, 7, 10, 22]


Before reduction : 
 pending  : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26]
 solution : [8, 7, 10, 22]

Essensial at level 11 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 33, 37, 6, 38, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 7, 10, 22, 26]


Before reduction : 
 pending  : []
 solution : [8, 7, 10, 22, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 10, 22, 26]


Solution : [8, 7, 10, 22, 26] has cost 28.


Before backtrack at level 11
 pending : []
 solution : [8, 7, 10, 22, 26]

After backtrack at level 11
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33]
 solution : [8, 7, 10, 22]


Before backtrack at level 10
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33]
 solution : [8, 7, 10, 22]

After backtrack at level 10
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 5]
 solution : [8, 7, 10, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 5]
 solution : [8, 7, 10]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 5]
 solution : [8, 7, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 5]
 solution : [8, 7, 10]


Solution : [8, 7, 10] has cost 14.


Decide in level 10 among pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 26 with phase True at level 10

After decision at level 10
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 5]
 solution : [8, 7, 10, 26]


New level: 11
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 5]
 solution : [8, 7, 10, 26]


Before reduction : 
 pending  : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 5]
 solution : [8, 7, 10, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 1048576), (17, 2097152), (18, 65536), (19, 32768), (20, 4194304), (21, 196608), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 262144), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 33, 37, 6, 5, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 10, 26]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 10, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 262144), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 10, 26]


Solution : [8, 7, 10, 26] has cost 21.


Decide in level 11 among pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 11

After decision at level 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 10, 26, 15]


New level: 12
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 10, 26, 15]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 10, 26, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, 0), (19, 8192), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {18, 20, 4, 21}

After reduction : 
 pending  : [38, 23, 40, 19, 16, 17]
 solution : [8, 7, 10, 26, 15]


Before reduction : 
 pending  : [38, 23, 40, 19, 16, 17]
 solution : [8, 7, 10, 26, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, 0), (19, 8192), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 23, 40, 19, 16, 17]
 solution : [8, 7, 10, 26, 15]


Solution : [8, 7, 10, 26, 15] has cost 30.


Before backtrack at level 12
 pending : [38, 23, 40, 19, 16, 17]
 solution : [8, 7, 10, 26, 15]

After backtrack at level 12
 pending : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 7, 10, 26, 15]


Invert decision for 15 at level 11


New level: 12
 pending : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 7, 10, 26]


Before reduction : 
 pending  : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 7, 10, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 7, 10, 26]


Solution : [8, 7, 10, 26] has cost 21.


Decide in level 12 among pending : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [38, 23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 7, 10, 26, 17]


New level: 13
 pending : [38, 23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 7, 10, 26, 17]


Before reduction : 
 pending  : [38, 23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 7, 10, 26, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 524288), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 18, 19}

After reduction : 
 pending  : [38, 23, 40, 4, 21, 20]
 solution : [8, 7, 10, 26, 17]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 20]
 solution : [8, 7, 10, 26, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 524288), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 20]
 solution : [8, 7, 10, 26, 17]


Solution : [8, 7, 10, 26, 17] has cost 28.


Before backtrack at level 13
 pending : [38, 23, 40, 4, 21, 20]
 solution : [8, 7, 10, 26, 17]

After backtrack at level 13
 pending : [38, 23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 10, 26, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [38, 23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 10, 26]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 10, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 10, 26]


Solution : [8, 7, 10, 26] has cost 21.


Decide in level 13 among pending : [38, 23, 40, 4, 21, 20, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [38, 23, 40, 4, 21, 19, 16, 18]
 solution : [8, 7, 10, 26, 20]


New level: 14
 pending : [38, 23, 40, 4, 21, 19, 16, 18]
 solution : [8, 7, 10, 26, 20]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 19, 16, 18]
 solution : [8, 7, 10, 26, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, 0), (19, 8192), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {18, 4, 21}

After reduction : 
 pending  : [38, 23, 40, 19, 16]
 solution : [8, 7, 10, 26, 20]


Before reduction : 
 pending  : [38, 23, 40, 19, 16]
 solution : [8, 7, 10, 26, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, 0), (19, 8192), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 19, 16]
 solution : [8, 7, 10, 26, 20]


Solution : [8, 7, 10, 26, 20] has cost 30.


Before backtrack at level 14
 pending : [38, 23, 40, 19, 16]
 solution : [8, 7, 10, 26, 20]

After backtrack at level 14
 pending : [38, 23, 40, 19, 16, 4, 21, 18]
 solution : [8, 7, 10, 26, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [38, 23, 40, 19, 16, 4, 21, 18]
 solution : [8, 7, 10, 26]


Before reduction : 
 pending  : [38, 23, 40, 19, 16, 4, 21, 18]
 solution : [8, 7, 10, 26]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, 32768), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 19, 16, 4, 21, 18]
 solution : [8, 7, 10, 26]


Solution : [8, 7, 10, 26] has cost 21.


Decide in level 14 among pending : [38, 23, 40, 19, 16, 4, 21, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, 32768), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 14

After decision at level 14
 pending : [38, 23, 40, 19, 4, 21, 18]
 solution : [8, 7, 10, 26, 16]


New level: 15
 pending : [38, 23, 40, 19, 4, 21, 18]
 solution : [8, 7, 10, 26, 16]


Before reduction : 
 pending  : [38, 23, 40, 19, 4, 21, 18]
 solution : [8, 7, 10, 26, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, 32768), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {18, 19}

After reduction : 
 pending  : [38, 23, 40, 4, 21]
 solution : [8, 7, 10, 26, 16]


Before reduction : 
 pending  : [38, 23, 40, 4, 21]
 solution : [8, 7, 10, 26, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21]
 solution : [8, 7, 10, 26, 16]


Solution : [8, 7, 10, 26, 16] has cost 28.


Before backtrack at level 15
 pending : [38, 23, 40, 4, 21]
 solution : [8, 7, 10, 26, 16]

After backtrack at level 15
 pending : [38, 23, 40, 4, 21, 19, 18]
 solution : [8, 7, 10, 26, 16]


Invert decision for 16 at level 14


New level: 15
 pending : [38, 23, 40, 4, 21, 19, 18]
 solution : [8, 7, 10, 26]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 19, 18]
 solution : [8, 7, 10, 26]

Essensial at level 15 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18]
 solution : [8, 7, 10, 26, 19]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18]
 solution : [8, 7, 10, 26, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18]
 solution : [8, 7, 10, 26, 19]


Solution : [8, 7, 10, 26, 19] has cost 28.


Before backtrack at level 15
 pending : [38, 23, 40, 4, 21, 18]
 solution : [8, 7, 10, 26, 19]

After backtrack at level 15
 pending : [38, 23, 40, 4, 21, 18, 19]
 solution : [8, 7, 10, 26]


Before backtrack at level 14
 pending : [38, 23, 40, 4, 21, 18, 19]
 solution : [8, 7, 10, 26]

After backtrack at level 14
 pending : [38, 23, 40, 4, 21, 18, 19, 16]
 solution : [8, 7, 10, 26]


Before backtrack at level 13
 pending : [38, 23, 40, 4, 21, 18, 19, 16]
 solution : [8, 7, 10, 26]

After backtrack at level 13
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20]
 solution : [8, 7, 10, 26]


Before backtrack at level 12
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20]
 solution : [8, 7, 10, 26]

After backtrack at level 12
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 10, 26]


Before backtrack at level 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 10, 26]

After backtrack at level 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 15]
 solution : [8, 7, 10, 26]


Invert decision for 26 at level 10


New level: 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 15]
 solution : [8, 7, 10]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 15]
 solution : [8, 7, 10]

Essensial at level 11 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 33, 37, 6, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 10, 5]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 10, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 10, 5]


Solution : [8, 7, 10, 5] has cost 18.


Decide in level 11 among pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 11

After decision at level 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 10, 5, 15]


New level: 12
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 10, 5, 15]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 10, 5, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, 0), (19, 8192), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {18, 20, 4, 21}

After reduction : 
 pending  : [38, 23, 40, 19, 16, 17]
 solution : [8, 7, 10, 5, 15]


Before reduction : 
 pending  : [38, 23, 40, 19, 16, 17]
 solution : [8, 7, 10, 5, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, 0), (19, 8192), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 23, 40, 19, 16, 17]
 solution : [8, 7, 10, 5, 15]


Solution : [8, 7, 10, 5, 15] has cost 27.


Before backtrack at level 12
 pending : [38, 23, 40, 19, 16, 17]
 solution : [8, 7, 10, 5, 15]

After backtrack at level 12
 pending : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 7, 10, 5, 15]


Invert decision for 15 at level 11


New level: 12
 pending : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 7, 10, 5]


Before reduction : 
 pending  : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 7, 10, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 7, 10, 5]


Solution : [8, 7, 10, 5] has cost 18.


Decide in level 12 among pending : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [38, 23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 7, 10, 5, 17]


New level: 13
 pending : [38, 23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 7, 10, 5, 17]


Before reduction : 
 pending  : [38, 23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 7, 10, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, 2097152), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 524288), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 18, 19}

After reduction : 
 pending  : [38, 23, 40, 4, 21, 20]
 solution : [8, 7, 10, 5, 17]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 20]
 solution : [8, 7, 10, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 524288), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 20]
 solution : [8, 7, 10, 5, 17]


Solution : [8, 7, 10, 5, 17] has cost 25.


Before backtrack at level 13
 pending : [38, 23, 40, 4, 21, 20]
 solution : [8, 7, 10, 5, 17]

After backtrack at level 13
 pending : [38, 23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 10, 5, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [38, 23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 10, 5]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 10, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 10, 5]


Solution : [8, 7, 10, 5] has cost 18.


Decide in level 13 among pending : [38, 23, 40, 4, 21, 20, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [38, 23, 40, 4, 21, 19, 16, 18]
 solution : [8, 7, 10, 5, 20]


New level: 14
 pending : [38, 23, 40, 4, 21, 19, 16, 18]
 solution : [8, 7, 10, 5, 20]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 19, 16, 18]
 solution : [8, 7, 10, 5, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, 32768), (20, 2097152), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, 0), (19, 8192), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {18, 4, 21}

After reduction : 
 pending  : [38, 23, 40, 19, 16]
 solution : [8, 7, 10, 5, 20]


Before reduction : 
 pending  : [38, 23, 40, 19, 16]
 solution : [8, 7, 10, 5, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, 0), (19, 8192), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 19, 16]
 solution : [8, 7, 10, 5, 20]


Solution : [8, 7, 10, 5, 20] has cost 27.


Before backtrack at level 14
 pending : [38, 23, 40, 19, 16]
 solution : [8, 7, 10, 5, 20]

After backtrack at level 14
 pending : [38, 23, 40, 19, 16, 4, 21, 18]
 solution : [8, 7, 10, 5, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [38, 23, 40, 19, 16, 4, 21, 18]
 solution : [8, 7, 10, 5]


Before reduction : 
 pending  : [38, 23, 40, 19, 16, 4, 21, 18]
 solution : [8, 7, 10, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, 8192), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, 32768), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 19, 16, 4, 21, 18]
 solution : [8, 7, 10, 5]


Solution : [8, 7, 10, 5] has cost 18.


Decide in level 14 among pending : [38, 23, 40, 19, 16, 4, 21, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, 32768), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 14

After decision at level 14
 pending : [38, 23, 40, 19, 4, 21, 18]
 solution : [8, 7, 10, 5, 16]


New level: 15
 pending : [38, 23, 40, 19, 4, 21, 18]
 solution : [8, 7, 10, 5, 16]


Before reduction : 
 pending  : [38, 23, 40, 19, 4, 21, 18]
 solution : [8, 7, 10, 5, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, 32768), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {18, 19}

After reduction : 
 pending  : [38, 23, 40, 4, 21]
 solution : [8, 7, 10, 5, 16]


Before reduction : 
 pending  : [38, 23, 40, 4, 21]
 solution : [8, 7, 10, 5, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21]
 solution : [8, 7, 10, 5, 16]


Solution : [8, 7, 10, 5, 16] has cost 25.


Before backtrack at level 15
 pending : [38, 23, 40, 4, 21]
 solution : [8, 7, 10, 5, 16]

After backtrack at level 15
 pending : [38, 23, 40, 4, 21, 19, 18]
 solution : [8, 7, 10, 5, 16]


Invert decision for 16 at level 14


New level: 15
 pending : [38, 23, 40, 4, 21, 19, 18]
 solution : [8, 7, 10, 5]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 19, 18]
 solution : [8, 7, 10, 5]

Essensial at level 15 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18]
 solution : [8, 7, 10, 5, 19]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18]
 solution : [8, 7, 10, 5, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18]
 solution : [8, 7, 10, 5, 19]


Solution : [8, 7, 10, 5, 19] has cost 25.


Before backtrack at level 15
 pending : [38, 23, 40, 4, 21, 18]
 solution : [8, 7, 10, 5, 19]

After backtrack at level 15
 pending : [38, 23, 40, 4, 21, 18, 19]
 solution : [8, 7, 10, 5]


Before backtrack at level 14
 pending : [38, 23, 40, 4, 21, 18, 19]
 solution : [8, 7, 10, 5]

After backtrack at level 14
 pending : [38, 23, 40, 4, 21, 18, 19, 16]
 solution : [8, 7, 10, 5]


Before backtrack at level 13
 pending : [38, 23, 40, 4, 21, 18, 19, 16]
 solution : [8, 7, 10, 5]

After backtrack at level 13
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20]
 solution : [8, 7, 10, 5]


Before backtrack at level 12
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20]
 solution : [8, 7, 10, 5]

After backtrack at level 12
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 10, 5]


Before backtrack at level 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 10, 5]

After backtrack at level 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15]
 solution : [8, 7, 10]


Before backtrack at level 10
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15]
 solution : [8, 7, 10]

After backtrack at level 10
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26]
 solution : [8, 7, 10]


Before backtrack at level 9
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26]
 solution : [8, 7, 10]

After backtrack at level 9
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22]
 solution : [8, 7, 10]


Before backtrack at level 8
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22]
 solution : [8, 7, 10]

After backtrack at level 8
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39]
 solution : [8, 7, 10]


Before backtrack at level 7
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39]
 solution : [8, 7, 10]

After backtrack at level 7
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39, 14]
 solution : [8, 7, 10]


Before backtrack at level 6
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39, 14]
 solution : [8, 7, 10]

After backtrack at level 6
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39, 14, 27]
 solution : [8, 7, 10]


Before backtrack at level 5
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39, 14, 27]
 solution : [8, 7, 10]

After backtrack at level 5
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39, 14, 27, 28]
 solution : [8, 7, 10]


Before backtrack at level 4
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39, 14, 27, 28]
 solution : [8, 7, 10]

After backtrack at level 4
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39, 14, 27, 28, 35]
 solution : [8, 7, 10]


Before backtrack at level 3
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39, 14, 27, 28, 35]
 solution : [8, 7, 10]

After backtrack at level 3
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39, 14, 27, 28, 35, 24]
 solution : [8, 7, 10]


Invert decision for 10 at level 2


New level: 3
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39, 14, 27, 28, 35, 24]
 solution : [8, 7]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39, 14, 27, 28, 35, 24]
 solution : [8, 7]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 65536), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1073741824), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, 2147483648), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39, 14, 27, 28, 35, 24]
 solution : [8, 7]


Solution : [8, 7] has cost 9.


Decide in level 3 among pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39, 14, 27, 28, 35, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1073741824), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, 2147483648), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 24 with phase True at level 3

After decision at level 3
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39, 14, 27, 28, 35]
 solution : [8, 7, 24]


New level: 4
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39, 14, 27, 28, 35]
 solution : [8, 7, 24]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 22, 39, 14, 27, 28, 35]
 solution : [8, 7, 24]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1073741824), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, 2147483648), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 4 : {4, 40, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 39, 27, 28, 35]
 solution : [8, 7, 24]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 39, 27, 28, 35]
 solution : [8, 7, 24]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 39, 27, 28, 35]
 solution : [8, 7, 24]


Solution : [8, 7, 24] has cost 13.


Decide in level 4 among pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 39, 27, 28, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 39, 27, 35]
 solution : [8, 7, 24, 28]


New level: 5
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 39, 27, 35]
 solution : [8, 7, 24, 28]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 39, 27, 35]
 solution : [8, 7, 24, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 39, 27, 35]
 solution : [8, 7, 24, 28]


Solution : [8, 7, 24, 28] has cost 17.


Decide in level 5 among pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 39, 27, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 35 with phase True at level 5

After decision at level 5
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 39, 27]
 solution : [8, 7, 24, 28, 35]


New level: 6
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 39, 27]
 solution : [8, 7, 24, 28, 35]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 39, 27]
 solution : [8, 7, 24, 28, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : {33, 30, 39}

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27]
 solution : [8, 7, 24, 28, 35]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27]
 solution : [8, 7, 24, 28, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27]
 solution : [8, 7, 24, 28, 35]


Solution : [8, 7, 24, 28, 35] has cost 30.


Before backtrack at level 6
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27]
 solution : [8, 7, 24, 28, 35]

After backtrack at level 6
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 39]
 solution : [8, 7, 24, 28, 35]


Invert decision for 35 at level 5


New level: 6
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 39]
 solution : [8, 7, 24, 28]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 39]
 solution : [8, 7, 24, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 39]
 solution : [8, 7, 24, 28]


Solution : [8, 7, 24, 28] has cost 17.


Decide in level 6 among pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 39]
 solution : [8, 7, 24, 28, 27]


New level: 7
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 39]
 solution : [8, 7, 24, 28, 27]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 39]
 solution : [8, 7, 24, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : {33, 30, 39}

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 7, 24, 28, 27]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 7, 24, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 7, 24, 28, 27]


Solution : [8, 7, 24, 28, 27] has cost 24.


Before backtrack at level 7
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 7, 24, 28, 27]

After backtrack at level 7
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 39]
 solution : [8, 7, 24, 28, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 39]
 solution : [8, 7, 24, 28]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 39]
 solution : [8, 7, 24, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 39]
 solution : [8, 7, 24, 28]


Solution : [8, 7, 24, 28] has cost 17.


Decide in level 7 among pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 39]
 solution : [8, 7, 24, 28, 5]


New level: 8
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 39]
 solution : [8, 7, 24, 28, 5]


Before reduction : 
 pending  : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 39]
 solution : [8, 7, 24, 28, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 33, 37, 38, 6, 39, 41, 42, 43, 47, 48, 51, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 7, 24, 28, 5]


Before reduction : 
 pending  : []
 solution : [8, 7, 24, 28, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 24, 28, 5]


Solution : [8, 7, 24, 28, 5] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [8, 7, 24, 28, 5]

After backtrack at level 8
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 39]
 solution : [8, 7, 24, 28, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 39]
 solution : [8, 7, 24, 28]


Before reduction : 
 pending  : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 39]
 solution : [8, 7, 24, 28]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 33, 37, 38, 6, 39, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 7, 24, 28, 26]


Before reduction : 
 pending  : []
 solution : [8, 7, 24, 28, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 24, 28, 26]


Solution : [8, 7, 24, 28, 26] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [8, 7, 24, 28, 26]

After backtrack at level 8
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39]
 solution : [8, 7, 24, 28]


Before backtrack at level 7
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39]
 solution : [8, 7, 24, 28]

After backtrack at level 7
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 7, 24, 28]


Before backtrack at level 6
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 7, 24, 28]

After backtrack at level 6
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27]
 solution : [8, 7, 24, 28]


Before backtrack at level 5
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27]
 solution : [8, 7, 24, 28]

After backtrack at level 5
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35]
 solution : [8, 7, 24, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35]
 solution : [8, 7, 24]


Before reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35]
 solution : [8, 7, 24]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35]
 solution : [8, 7, 24]


Solution : [8, 7, 24] has cost 13.


Decide in level 5 among pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 35 with phase True at level 5

After decision at level 5
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27]
 solution : [8, 7, 24, 35]


New level: 6
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27]
 solution : [8, 7, 24, 35]


Before reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27]
 solution : [8, 7, 24, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : {33, 30, 39}

After reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27]
 solution : [8, 7, 24, 35]


Before reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27]
 solution : [8, 7, 24, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27]
 solution : [8, 7, 24, 35]


Solution : [8, 7, 24, 35] has cost 26.


Before backtrack at level 6
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27]
 solution : [8, 7, 24, 35]

After backtrack at level 6
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 7, 24, 35]


Invert decision for 35 at level 5


New level: 6
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 7, 24]


Before reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 7, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 7, 24]


Solution : [8, 7, 24] has cost 13.


Decide in level 6 among pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 7, 24, 27]


New level: 7
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 7, 24, 27]


Before reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 7, 24, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : {33, 30, 39}

After reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 24, 27]


Before reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 24, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 24, 27]


Solution : [8, 7, 24, 27] has cost 20.


Decide in level 7 among pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 24, 27, 26]


New level: 8
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 24, 27, 26]


Before reduction : 
 pending  : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 24, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 37, 38, 6, 5, 41, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : []
 solution : [8, 7, 24, 27, 26]


Before reduction : 
 pending  : []
 solution : [8, 7, 24, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 24, 27, 26]


Solution : [8, 7, 24, 27, 26] has cost 27.


Before backtrack at level 8
 pending : []
 solution : [8, 7, 24, 27, 26]

After backtrack at level 8
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 24, 27, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 24, 27]


Before reduction : 
 pending  : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 24, 27]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 37, 38, 6, 41, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : []
 solution : [8, 7, 24, 27, 5]


Before reduction : 
 pending  : []
 solution : [8, 7, 24, 27, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 24, 27, 5]


Solution : [8, 7, 24, 27, 5] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [8, 7, 24, 27, 5]

After backtrack at level 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 24, 27]


Before backtrack at level 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 24, 27]

After backtrack at level 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 24, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 24]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 24]


Solution : [8, 7, 24] has cost 13.


Decide in level 7 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 24, 5]


New level: 8
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 24, 5]


Before reduction : 
 pending  : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 24, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 33, 37, 38, 6, 39, 41, 42, 43, 47, 48, 51, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 7, 24, 5]


Before reduction : 
 pending  : []
 solution : [8, 7, 24, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 24, 5]


Solution : [8, 7, 24, 5] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [8, 7, 24, 5]

After backtrack at level 8
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 24, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 24]


Before reduction : 
 pending  : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 24]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 33, 37, 38, 6, 39, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 7, 24, 26]


Before reduction : 
 pending  : []
 solution : [8, 7, 24, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 24, 26]


Solution : [8, 7, 24, 26] has cost 20.


Before backtrack at level 8
 pending : []
 solution : [8, 7, 24, 26]

After backtrack at level 8
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39]
 solution : [8, 7, 24]


Before backtrack at level 7
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39]
 solution : [8, 7, 24]

After backtrack at level 7
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 7, 24]


Before backtrack at level 6
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 7, 24]

After backtrack at level 6
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27]
 solution : [8, 7, 24]


Before backtrack at level 5
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27]
 solution : [8, 7, 24]

After backtrack at level 5
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35]
 solution : [8, 7, 24]


Before backtrack at level 4
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35]
 solution : [8, 7, 24]

After backtrack at level 4
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 28]
 solution : [8, 7, 24]


Invert decision for 24 at level 3


New level: 4
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 28]
 solution : [8, 7]


Before reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 28]
 solution : [8, 7]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1073741824), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 28]
 solution : [8, 7]


Solution : [8, 7] has cost 9.


Decide in level 4 among pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1073741824), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 14 with phase True at level 4

After decision at level 4
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 28]
 solution : [8, 7, 14]


New level: 5
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 28]
 solution : [8, 7, 14]


Before reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 28]
 solution : [8, 7, 14]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1073741824), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 5 : {4, 40, 15, 16, 17, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35, 28]
 solution : [8, 7, 14]


Before reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35, 28]
 solution : [8, 7, 14]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35, 28]
 solution : [8, 7, 14]


Solution : [8, 7, 14] has cost 16.


Decide in level 5 among pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 35, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 35 with phase True at level 5

After decision at level 5
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 28]
 solution : [8, 7, 14, 35]


New level: 6
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 28]
 solution : [8, 7, 14, 35]


Before reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5, 27, 28]
 solution : [8, 7, 14, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, 536870912), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : {33, 30, 39}

After reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 28]
 solution : [8, 7, 14, 35]


Before reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 28]
 solution : [8, 7, 14, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, 536870912), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, 536870912), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 28]
 solution : [8, 7, 14, 35]


Solution : [8, 7, 14, 35] has cost 29.


Before backtrack at level 6
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 28]
 solution : [8, 7, 14, 35]

After backtrack at level 6
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 28, 30, 33, 39]
 solution : [8, 7, 14, 35]


Invert decision for 35 at level 5


New level: 6
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 28, 30, 33, 39]
 solution : [8, 7, 14]


Before reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 28, 30, 33, 39]
 solution : [8, 7, 14]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, 536870912), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 28, 30, 33, 39]
 solution : [8, 7, 14]


Solution : [8, 7, 14] has cost 16.


Decide in level 6 among pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 28, 30, 33, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 28 with phase True at level 6

After decision at level 6
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 7, 14, 28]


New level: 7
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 7, 14, 28]


Before reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 7, 14, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 7, 14, 28]


Solution : [8, 7, 14, 28] has cost 20.


Before backtrack at level 7
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 7, 14, 28]

After backtrack at level 7
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 7, 14, 28]


Invert decision for 28 at level 6


New level: 7
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 7, 14]


Before reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 7, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 7, 14]


Solution : [8, 7, 14] has cost 16.


Decide in level 7 among pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 27 with phase True at level 7

After decision at level 7
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 7, 14, 27]


New level: 8
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 7, 14, 27]


Before reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 7, 14, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : {33, 30, 39}

After reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 14, 27]


Before reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 14, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 14, 27]


Solution : [8, 7, 14, 27] has cost 23.


Before backtrack at level 8
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 14, 27]

After backtrack at level 8
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 7, 14, 27]


Invert decision for 27 at level 7


New level: 8
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 7, 14]


Before reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 7, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 7, 14]


Solution : [8, 7, 14] has cost 16.


Decide in level 8 among pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 26 with phase True at level 8

After decision at level 8
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 7, 14, 26]


New level: 9
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 7, 14, 26]


Before reduction : 
 pending  : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 7, 14, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {32, 33, 37, 38, 6, 5, 41, 42, 43, 39, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 7, 14, 26]


Before reduction : 
 pending  : []
 solution : [8, 7, 14, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 14, 26]


Solution : [8, 7, 14, 26] has cost 23.


Before backtrack at level 9
 pending : []
 solution : [8, 7, 14, 26]

After backtrack at level 9
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 7, 14, 26]


Invert decision for 26 at level 8


New level: 9
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 7, 14]


Before reduction : 
 pending  : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 7, 14]

Essensial at level 9 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {32, 33, 37, 38, 6, 39, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 7, 14, 5]


Before reduction : 
 pending  : []
 solution : [8, 7, 14, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 14, 5]


Solution : [8, 7, 14, 5] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [8, 7, 14, 5]

After backtrack at level 9
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39]
 solution : [8, 7, 14]


Before backtrack at level 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39]
 solution : [8, 7, 14]

After backtrack at level 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 14]


Before backtrack at level 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 7, 14]

After backtrack at level 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27]
 solution : [8, 7, 14]


Before backtrack at level 6
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27]
 solution : [8, 7, 14]

After backtrack at level 6
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 28]
 solution : [8, 7, 14]


Before backtrack at level 5
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 28]
 solution : [8, 7, 14]

After backtrack at level 5
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 28, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 35]
 solution : [8, 7, 14]


Invert decision for 14 at level 4


New level: 5
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 28, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 35]
 solution : [8, 7]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 28, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 35]
 solution : [8, 7]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 28, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 35]
 solution : [8, 7]


Solution : [8, 7] has cost 9.


Decide in level 5 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 28, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 35]
 solution : [8, 7, 28]


New level: 6
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 35]
 solution : [8, 7, 28]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 35]
 solution : [8, 7, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, 268435456), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 35]
 solution : [8, 7, 28]


Solution : [8, 7, 28] has cost 13.


Decide in level 6 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, 268435456), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 22 with phase True at level 6

After decision at level 6
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 35]
 solution : [8, 7, 28, 22]


New level: 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 35]
 solution : [8, 7, 28, 22]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 35]
 solution : [8, 7, 28, 22]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, 268435456), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : {4, 40, 15, 16, 17, 18, 19, 20, 21, 23}

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35]
 solution : [8, 7, 28, 22]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35]
 solution : [8, 7, 28, 22]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35]
 solution : [8, 7, 28, 22]


Solution : [8, 7, 28, 22] has cost 20.


Before backtrack at level 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35]
 solution : [8, 7, 28, 22]

After backtrack at level 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28, 22]


Invert decision for 22 at level 6


New level: 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, 268435456), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28]


Solution : [8, 7, 28] has cost 13.


Decide in level 7 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, 268435456), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 35 with phase True at level 7

After decision at level 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28, 35]


New level: 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28, 35]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28, 35]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, 268435456), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 8 : {33, 30}

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28, 35]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28, 35]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28, 35]


Solution : [8, 7, 28, 35] has cost 26.


Before backtrack at level 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28, 35]

After backtrack at level 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28, 35]


Invert decision for 35 at level 7


New level: 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28]


Solution : [8, 7, 28] has cost 13.


Decide in level 8 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 39 with phase True at level 8

After decision at level 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28, 39]


New level: 9
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28, 39]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28, 39]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 67108864), (28, -1), (29, 524288), (30, 262144), (31, -1), (32, 8192), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28, 39]


Solution : [8, 7, 28, 39] has cost 27.


Before backtrack at level 9
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28, 39]

After backtrack at level 9
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28, 39]


Invert decision for 39 at level 8


New level: 9
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 67108864), (28, -1), (29, 524288), (30, 262144), (31, -1), (32, 8192), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28]


Solution : [8, 7, 28] has cost 13.


Decide in level 9 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 27 with phase True at level 9

After decision at level 9
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28, 27]


New level: 10
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28, 27]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, -1), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : {33, 30}

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28, 27]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, -1), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, -1), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28, 27]


Solution : [8, 7, 28, 27] has cost 20.


Before backtrack at level 10
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28, 27]

After backtrack at level 10
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28, 27]


Invert decision for 27 at level 9


New level: 10
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, -1), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28]


Solution : [8, 7, 28] has cost 13.


Decide in level 10 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28, 5]


New level: 11
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28, 5]


Before reduction : 
 pending  : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 7, 28, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 65536), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 33, 37, 6, 41, 42, 43, 47, 48, 51, 26, 29, 30}

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28, 5]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 65536), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28, 5]


Solution : [8, 7, 28, 5] has cost 17.


Decide in level 11 among pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 11

After decision at level 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 28, 5, 15]


New level: 12
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 28, 5, 15]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 28, 5, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, 131072), (18, 0), (19, 32768), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {18, 20, 4, 21}

After reduction : 
 pending  : [38, 23, 40, 19, 16, 17]
 solution : [8, 7, 28, 5, 15]


Before reduction : 
 pending  : [38, 23, 40, 19, 16, 17]
 solution : [8, 7, 28, 5, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, 131072), (18, 0), (19, 32768), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, 131072), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 23, 40, 19, 16, 17]
 solution : [8, 7, 28, 5, 15]


Solution : [8, 7, 28, 5, 15] has cost 26.


Before backtrack at level 12
 pending : [38, 23, 40, 19, 16, 17]
 solution : [8, 7, 28, 5, 15]

After backtrack at level 12
 pending : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 7, 28, 5, 15]


Invert decision for 15 at level 11


New level: 12
 pending : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 7, 28, 5]


Before reduction : 
 pending  : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 7, 28, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, 131072), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 7, 28, 5]


Solution : [8, 7, 28, 5] has cost 17.


Decide in level 12 among pending : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [38, 23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 7, 28, 5, 17]


New level: 13
 pending : [38, 23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 7, 28, 5, 17]


Before reduction : 
 pending  : [38, 23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 7, 28, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 2097152), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 18, 19}

After reduction : 
 pending  : [38, 23, 40, 4, 21, 20]
 solution : [8, 7, 28, 5, 17]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 20]
 solution : [8, 7, 28, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 2097152), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 20]
 solution : [8, 7, 28, 5, 17]


Solution : [8, 7, 28, 5, 17] has cost 24.


Before backtrack at level 13
 pending : [38, 23, 40, 4, 21, 20]
 solution : [8, 7, 28, 5, 17]

After backtrack at level 13
 pending : [38, 23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 28, 5, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [38, 23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 28, 5]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 28, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 28, 5]


Solution : [8, 7, 28, 5] has cost 17.


Decide in level 13 among pending : [38, 23, 40, 4, 21, 20, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [38, 23, 40, 4, 21, 19, 16, 18]
 solution : [8, 7, 28, 5, 20]


New level: 14
 pending : [38, 23, 40, 4, 21, 19, 16, 18]
 solution : [8, 7, 28, 5, 20]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 19, 16, 18]
 solution : [8, 7, 28, 5, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, 0), (19, 32768), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {18, 4, 21}

After reduction : 
 pending  : [38, 23, 40, 19, 16]
 solution : [8, 7, 28, 5, 20]


Before reduction : 
 pending  : [38, 23, 40, 19, 16]
 solution : [8, 7, 28, 5, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, 0), (19, 32768), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 19, 16]
 solution : [8, 7, 28, 5, 20]


Solution : [8, 7, 28, 5, 20] has cost 26.


Before backtrack at level 14
 pending : [38, 23, 40, 19, 16]
 solution : [8, 7, 28, 5, 20]

After backtrack at level 14
 pending : [38, 23, 40, 19, 16, 4, 21, 18]
 solution : [8, 7, 28, 5, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [38, 23, 40, 19, 16, 4, 21, 18]
 solution : [8, 7, 28, 5]


Before reduction : 
 pending  : [38, 23, 40, 19, 16, 4, 21, 18]
 solution : [8, 7, 28, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, 131072), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 19, 16, 4, 21, 18]
 solution : [8, 7, 28, 5]


Solution : [8, 7, 28, 5] has cost 17.


Decide in level 14 among pending : [38, 23, 40, 19, 16, 4, 21, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, 131072), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 14

After decision at level 14
 pending : [38, 23, 40, 19, 4, 21, 18]
 solution : [8, 7, 28, 5, 16]


New level: 15
 pending : [38, 23, 40, 19, 4, 21, 18]
 solution : [8, 7, 28, 5, 16]


Before reduction : 
 pending  : [38, 23, 40, 19, 4, 21, 18]
 solution : [8, 7, 28, 5, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, 131072), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {18, 19}

After reduction : 
 pending  : [38, 23, 40, 4, 21]
 solution : [8, 7, 28, 5, 16]


Before reduction : 
 pending  : [38, 23, 40, 4, 21]
 solution : [8, 7, 28, 5, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21]
 solution : [8, 7, 28, 5, 16]


Solution : [8, 7, 28, 5, 16] has cost 24.


Before backtrack at level 15
 pending : [38, 23, 40, 4, 21]
 solution : [8, 7, 28, 5, 16]

After backtrack at level 15
 pending : [38, 23, 40, 4, 21, 19, 18]
 solution : [8, 7, 28, 5, 16]


Invert decision for 16 at level 14


New level: 15
 pending : [38, 23, 40, 4, 21, 19, 18]
 solution : [8, 7, 28, 5]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 19, 18]
 solution : [8, 7, 28, 5]

Essensial at level 15 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18]
 solution : [8, 7, 28, 5, 19]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18]
 solution : [8, 7, 28, 5, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18]
 solution : [8, 7, 28, 5, 19]


Solution : [8, 7, 28, 5, 19] has cost 24.


Before backtrack at level 15
 pending : [38, 23, 40, 4, 21, 18]
 solution : [8, 7, 28, 5, 19]

After backtrack at level 15
 pending : [38, 23, 40, 4, 21, 18, 19]
 solution : [8, 7, 28, 5]


Before backtrack at level 14
 pending : [38, 23, 40, 4, 21, 18, 19]
 solution : [8, 7, 28, 5]

After backtrack at level 14
 pending : [38, 23, 40, 4, 21, 18, 19, 16]
 solution : [8, 7, 28, 5]


Before backtrack at level 13
 pending : [38, 23, 40, 4, 21, 18, 19, 16]
 solution : [8, 7, 28, 5]

After backtrack at level 13
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20]
 solution : [8, 7, 28, 5]


Before backtrack at level 12
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20]
 solution : [8, 7, 28, 5]

After backtrack at level 12
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 28, 5]


Before backtrack at level 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 28, 5]

After backtrack at level 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 15]
 solution : [8, 7, 28, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 15]
 solution : [8, 7, 28]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 15]
 solution : [8, 7, 28]

Essensial at level 11 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 524288), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 33, 37, 6, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28, 26]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 524288), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28, 26]


Solution : [8, 7, 28, 26] has cost 20.


Before backtrack at level 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 28, 26]

After backtrack at level 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33]
 solution : [8, 7, 28]


Before backtrack at level 10
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33]
 solution : [8, 7, 28]

After backtrack at level 10
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5]
 solution : [8, 7, 28]


Before backtrack at level 9
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5]
 solution : [8, 7, 28]

After backtrack at level 9
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 27]
 solution : [8, 7, 28]


Before backtrack at level 8
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 27]
 solution : [8, 7, 28]

After backtrack at level 8
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 27, 39]
 solution : [8, 7, 28]


Before backtrack at level 7
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 27, 39]
 solution : [8, 7, 28]

After backtrack at level 7
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 27, 39, 35]
 solution : [8, 7, 28]


Before backtrack at level 6
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 27, 39, 35]
 solution : [8, 7, 28]

After backtrack at level 6
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 27, 39, 35, 22]
 solution : [8, 7, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 27, 39, 35, 22]
 solution : [8, 7]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 27, 39, 35, 22]
 solution : [8, 7]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 27, 39, 35, 22]
 solution : [8, 7]


Solution : [8, 7] has cost 9.


Decide in level 6 among pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 27, 39, 35, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 35 with phase True at level 6

After decision at level 6
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 27, 39, 22]
 solution : [8, 7, 35]


New level: 7
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 27, 39, 22]
 solution : [8, 7, 35]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 27, 39, 22]
 solution : [8, 7, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 8192), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {33, 30}

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 39, 22]
 solution : [8, 7, 35]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 39, 22]
 solution : [8, 7, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 8192), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 8192), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 39, 22]
 solution : [8, 7, 35]


Solution : [8, 7, 35] has cost 22.


Before backtrack at level 7
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 39, 22]
 solution : [8, 7, 35]

After backtrack at level 7
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 39, 22, 30, 33]
 solution : [8, 7, 35]


Invert decision for 35 at level 6


New level: 7
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 39, 22, 30, 33]
 solution : [8, 7]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 39, 22, 30, 33]
 solution : [8, 7]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 8192), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 39, 22, 30, 33]
 solution : [8, 7]


Solution : [8, 7] has cost 9.


Decide in level 7 among pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 39, 22, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 22 with phase True at level 7

After decision at level 7
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 39, 30, 33]
 solution : [8, 7, 22]


New level: 8
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 39, 30, 33]
 solution : [8, 7, 22]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 39, 30, 33]
 solution : [8, 7, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, 536870912), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {4, 40, 15, 16, 17, 18, 19, 20, 21, 23}

After reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 39, 30, 33]
 solution : [8, 7, 22]


Before reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 39, 30, 33]
 solution : [8, 7, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 39, 30, 33]
 solution : [8, 7, 22]


Solution : [8, 7, 22] has cost 16.


Decide in level 8 among pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 39, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 27 with phase True at level 8

After decision at level 8
 pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 39, 30, 33]
 solution : [8, 7, 22, 27]


New level: 9
 pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 39, 30, 33]
 solution : [8, 7, 22, 27]


Before reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 39, 30, 33]
 solution : [8, 7, 22, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : {33, 30, 39}

After reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 22, 27]


Before reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 22, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 22, 27]


Solution : [8, 7, 22, 27] has cost 23.


Before backtrack at level 9
 pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 22, 27]

After backtrack at level 9
 pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 39, 30, 33]
 solution : [8, 7, 22, 27]


Invert decision for 27 at level 8


New level: 9
 pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 39, 30, 33]
 solution : [8, 7, 22]


Before reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 39, 30, 33]
 solution : [8, 7, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 39, 30, 33]
 solution : [8, 7, 22]


Solution : [8, 7, 22] has cost 16.


Decide in level 9 among pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 39, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 26 with phase True at level 9

After decision at level 9
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 39, 30, 33]
 solution : [8, 7, 22, 26]


New level: 10
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 39, 30, 33]
 solution : [8, 7, 22, 26]


Before reduction : 
 pending  : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 39, 30, 33]
 solution : [8, 7, 22, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {32, 33, 37, 38, 6, 5, 41, 42, 43, 39, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 7, 22, 26]


Before reduction : 
 pending  : []
 solution : [8, 7, 22, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 22, 26]


Solution : [8, 7, 22, 26] has cost 23.


Before backtrack at level 10
 pending : []
 solution : [8, 7, 22, 26]

After backtrack at level 10
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 39, 30, 33]
 solution : [8, 7, 22, 26]


Invert decision for 26 at level 9


New level: 10
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 39, 30, 33]
 solution : [8, 7, 22]


Before reduction : 
 pending  : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 39, 30, 33]
 solution : [8, 7, 22]

Essensial at level 10 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {32, 33, 37, 38, 6, 39, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 7, 22, 5]


Before reduction : 
 pending  : []
 solution : [8, 7, 22, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [8, 7, 22, 5]


Solution : [8, 7, 22, 5] has cost 20.


Before backtrack at level 10
 pending : []
 solution : [8, 7, 22, 5]

After backtrack at level 10
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 30, 33]
 solution : [8, 7, 22]


Before backtrack at level 9
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 30, 33]
 solution : [8, 7, 22]

After backtrack at level 9
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 30, 33, 26]
 solution : [8, 7, 22]


Before backtrack at level 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 30, 33, 26]
 solution : [8, 7, 22]

After backtrack at level 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 27]
 solution : [8, 7, 22]


Invert decision for 22 at level 7


New level: 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 27]
 solution : [8, 7]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 27]
 solution : [8, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 27]
 solution : [8, 7]


Solution : [8, 7] has cost 9.


Decide in level 8 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 27 with phase True at level 8

After decision at level 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 27]


New level: 9
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 27]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 512), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : {33, 30}

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 27]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 512), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 512), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 27]


Solution : [8, 7, 27] has cost 16.


Decide in level 9 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 512), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 38 with phase True at level 9

After decision at level 9
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 27, 38]


New level: 10
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 27, 38]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 27, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 512), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 4194304), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, 512), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 0), (40, 524288), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : {39}

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 27, 38]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 27, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 4194304), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, 512), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 0), (40, 524288), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 4194304), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, 512), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 524288), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 27, 38]


Solution : [8, 7, 27, 38] has cost 34.


Before backtrack at level 10
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 27, 38]

After backtrack at level 10
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 27, 38]


Invert decision for 38 at level 9


New level: 10
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 27]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 4194304), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, 512), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 524288), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 512), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]
 solution : [8, 7, 27]


Solution : [8, 7, 27] has cost 16.


Decide in level 10 among pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 512), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 15 with phase True at level 10

After decision at level 10
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 39]
 solution : [8, 7, 27, 15]


New level: 11
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 39]
 solution : [8, 7, 27, 15]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 39]
 solution : [8, 7, 27, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 512), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, 131072), (18, 0), (19, 32768), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 2048), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 11 : {18, 20, 4, 21}

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 19, 16, 17, 39]
 solution : [8, 7, 27, 15]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 19, 16, 17, 39]
 solution : [8, 7, 27, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, 131072), (18, 0), (19, 32768), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 2048), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, 131072), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 2048), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 19, 16, 17, 39]
 solution : [8, 7, 27, 15]


Solution : [8, 7, 27, 15] has cost 25.


Before backtrack at level 11
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 19, 16, 17, 39]
 solution : [8, 7, 27, 15]

After backtrack at level 11
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 19, 16, 17, 39, 4, 21, 18, 20]
 solution : [8, 7, 27, 15]


Invert decision for 15 at level 10


New level: 11
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 19, 16, 17, 39, 4, 21, 18, 20]
 solution : [8, 7, 27]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 19, 16, 17, 39, 4, 21, 18, 20]
 solution : [8, 7, 27]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, 131072), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 2048), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 512), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 19, 16, 17, 39, 4, 21, 18, 20]
 solution : [8, 7, 27]


Solution : [8, 7, 27] has cost 16.


Decide in level 11 among pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 19, 16, 17, 39, 4, 21, 18, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 512), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 5 with phase True at level 11

After decision at level 11
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 19, 16, 17, 39, 4, 21, 18, 20]
 solution : [8, 7, 27, 5]


New level: 12
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 19, 16, 17, 39, 4, 21, 18, 20]
 solution : [8, 7, 27, 5]


Before reduction : 
 pending  : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 19, 16, 17, 39, 4, 21, 18, 20]
 solution : [8, 7, 27, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 16777216), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 512), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 512), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {32, 37, 6, 41, 42, 43, 47, 48, 51, 26, 29}

After reduction : 
 pending  : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20]
 solution : [8, 7, 27, 5]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20]
 solution : [8, 7, 27, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 512), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20]
 solution : [8, 7, 27, 5]


Solution : [8, 7, 27, 5] has cost 20.


Before backtrack at level 12
 pending : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20]
 solution : [8, 7, 27, 5]

After backtrack at level 12
 pending : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 7, 27, 5]


Invert decision for 5 at level 11


New level: 12
 pending : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 7, 27]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 7, 27]

Essensial at level 12 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 512), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {32, 37, 6, 41, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20]
 solution : [8, 7, 27, 26]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20]
 solution : [8, 7, 27, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 512), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20]
 solution : [8, 7, 27, 26]


Solution : [8, 7, 27, 26] has cost 23.


Before backtrack at level 12
 pending : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20]
 solution : [8, 7, 27, 26]

After backtrack at level 12
 pending : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 27]


Before backtrack at level 11
 pending : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51]
 solution : [8, 7, 27]

After backtrack at level 11
 pending : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 27]


Before backtrack at level 10
 pending : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 7, 27]

After backtrack at level 10
 pending : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15]
 solution : [8, 7, 27]


Before backtrack at level 9
 pending : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15]
 solution : [8, 7, 27]

After backtrack at level 9
 pending : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15, 30, 33, 38]
 solution : [8, 7, 27]


Invert decision for 27 at level 8


New level: 9
 pending : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15, 30, 33, 38]
 solution : [8, 7]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15, 30, 33, 38]
 solution : [8, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15, 30, 33, 38]
 solution : [8, 7]


Solution : [8, 7] has cost 9.


Decide in level 9 among pending : [23, 40, 19, 16, 17, 39, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15, 30, 33, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 39 with phase True at level 9

After decision at level 9
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15, 30, 33, 38]
 solution : [8, 7, 39]


New level: 10
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15, 30, 33, 38]
 solution : [8, 7, 39]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15, 30, 33, 38]
 solution : [8, 7, 39]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15, 30, 33, 38]
 solution : [8, 7, 39]


Solution : [8, 7, 39] has cost 23.


Before backtrack at level 10
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15, 30, 33, 38]
 solution : [8, 7, 39]

After backtrack at level 10
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15, 30, 33, 38]
 solution : [8, 7, 39]


Invert decision for 39 at level 9


New level: 10
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15, 30, 33, 38]
 solution : [8, 7]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15, 30, 33, 38]
 solution : [8, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15, 30, 33, 38]
 solution : [8, 7]


Solution : [8, 7] has cost 9.


Decide in level 10 among pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15, 30, 33, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 26 with phase True at level 10

After decision at level 10
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15, 30, 33, 38]
 solution : [8, 7, 26]


New level: 11
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15, 30, 33, 38]
 solution : [8, 7, 26]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 15, 30, 33, 38]
 solution : [8, 7, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 67108864), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 4194304), (17, 8388608), (18, 262144), (19, 131072), (20, 16777216), (21, 786432), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 524288), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 33, 37, 6, 5, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 15, 38]
 solution : [8, 7, 26]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 15, 38]
 solution : [8, 7, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 524288), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 15, 38]
 solution : [8, 7, 26]


Solution : [8, 7, 26] has cost 16.


Decide in level 11 among pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 15, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 11

After decision at level 11
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 38]
 solution : [8, 7, 26, 15]


New level: 12
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 38]
 solution : [8, 7, 26, 15]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 38]
 solution : [8, 7, 26, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, 131072), (18, 0), (19, 32768), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {18, 20, 4, 21}

After reduction : 
 pending  : [23, 40, 19, 16, 17, 38]
 solution : [8, 7, 26, 15]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 38]
 solution : [8, 7, 26, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, 131072), (18, 0), (19, 32768), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, 131072), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17, 38]
 solution : [8, 7, 26, 15]


Solution : [8, 7, 26, 15] has cost 25.


Before backtrack at level 12
 pending : [23, 40, 19, 16, 17, 38]
 solution : [8, 7, 26, 15]

After backtrack at level 12
 pending : [23, 40, 19, 16, 17, 38, 4, 21, 18, 20]
 solution : [8, 7, 26, 15]


Invert decision for 15 at level 11


New level: 12
 pending : [23, 40, 19, 16, 17, 38, 4, 21, 18, 20]
 solution : [8, 7, 26]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 38, 4, 21, 18, 20]
 solution : [8, 7, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, 131072), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17, 38, 4, 21, 18, 20]
 solution : [8, 7, 26]


Solution : [8, 7, 26] has cost 16.


Decide in level 12 among pending : [23, 40, 19, 16, 17, 38, 4, 21, 18, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [23, 40, 19, 16, 38, 4, 21, 18, 20]
 solution : [8, 7, 26, 17]


New level: 13
 pending : [23, 40, 19, 16, 38, 4, 21, 18, 20]
 solution : [8, 7, 26, 17]


Before reduction : 
 pending  : [23, 40, 19, 16, 38, 4, 21, 18, 20]
 solution : [8, 7, 26, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 2097152), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 18, 19}

After reduction : 
 pending  : [23, 40, 38, 4, 21, 20]
 solution : [8, 7, 26, 17]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 20]
 solution : [8, 7, 26, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 2097152), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 38, 4, 21, 20]
 solution : [8, 7, 26, 17]


Solution : [8, 7, 26, 17] has cost 23.


Before backtrack at level 13
 pending : [23, 40, 38, 4, 21, 20]
 solution : [8, 7, 26, 17]

After backtrack at level 13
 pending : [23, 40, 38, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 26, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [23, 40, 38, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 26]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 38, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 26]


Solution : [8, 7, 26] has cost 16.


Decide in level 13 among pending : [23, 40, 38, 4, 21, 20, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [23, 40, 38, 4, 21, 19, 16, 18]
 solution : [8, 7, 26, 20]


New level: 14
 pending : [23, 40, 38, 4, 21, 19, 16, 18]
 solution : [8, 7, 26, 20]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 19, 16, 18]
 solution : [8, 7, 26, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, 0), (19, 32768), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {18, 4, 21}

After reduction : 
 pending  : [23, 40, 38, 19, 16]
 solution : [8, 7, 26, 20]


Before reduction : 
 pending  : [23, 40, 38, 19, 16]
 solution : [8, 7, 26, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, 0), (19, 32768), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 38, 19, 16]
 solution : [8, 7, 26, 20]


Solution : [8, 7, 26, 20] has cost 25.


Before backtrack at level 14
 pending : [23, 40, 38, 19, 16]
 solution : [8, 7, 26, 20]

After backtrack at level 14
 pending : [23, 40, 38, 19, 16, 4, 21, 18]
 solution : [8, 7, 26, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [23, 40, 38, 19, 16, 4, 21, 18]
 solution : [8, 7, 26]


Before reduction : 
 pending  : [23, 40, 38, 19, 16, 4, 21, 18]
 solution : [8, 7, 26]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, 131072), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 38, 19, 16, 4, 21, 18]
 solution : [8, 7, 26]


Solution : [8, 7, 26] has cost 16.


Decide in level 14 among pending : [23, 40, 38, 19, 16, 4, 21, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, 131072), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 14

After decision at level 14
 pending : [23, 40, 38, 19, 4, 21, 18]
 solution : [8, 7, 26, 16]


New level: 15
 pending : [23, 40, 38, 19, 4, 21, 18]
 solution : [8, 7, 26, 16]


Before reduction : 
 pending  : [23, 40, 38, 19, 4, 21, 18]
 solution : [8, 7, 26, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, 131072), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {18, 19}

After reduction : 
 pending  : [23, 40, 38, 4, 21]
 solution : [8, 7, 26, 16]


Before reduction : 
 pending  : [23, 40, 38, 4, 21]
 solution : [8, 7, 26, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 38, 4, 21]
 solution : [8, 7, 26, 16]


Solution : [8, 7, 26, 16] has cost 23.


Before backtrack at level 15
 pending : [23, 40, 38, 4, 21]
 solution : [8, 7, 26, 16]

After backtrack at level 15
 pending : [23, 40, 38, 4, 21, 19, 18]
 solution : [8, 7, 26, 16]


Invert decision for 16 at level 14


New level: 15
 pending : [23, 40, 38, 4, 21, 19, 18]
 solution : [8, 7, 26]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 19, 18]
 solution : [8, 7, 26]

Essensial at level 15 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 38, 4, 21, 18]
 solution : [8, 7, 26, 19]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 18]
 solution : [8, 7, 26, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 38, 4, 21, 18]
 solution : [8, 7, 26, 19]


Solution : [8, 7, 26, 19] has cost 23.


Before backtrack at level 15
 pending : [23, 40, 38, 4, 21, 18]
 solution : [8, 7, 26, 19]

After backtrack at level 15
 pending : [23, 40, 38, 4, 21, 18, 19]
 solution : [8, 7, 26]


Before backtrack at level 14
 pending : [23, 40, 38, 4, 21, 18, 19]
 solution : [8, 7, 26]

After backtrack at level 14
 pending : [23, 40, 38, 4, 21, 18, 19, 16]
 solution : [8, 7, 26]


Before backtrack at level 13
 pending : [23, 40, 38, 4, 21, 18, 19, 16]
 solution : [8, 7, 26]

After backtrack at level 13
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20]
 solution : [8, 7, 26]


Before backtrack at level 12
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20]
 solution : [8, 7, 26]

After backtrack at level 12
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 26]


Before backtrack at level 11
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 26]

After backtrack at level 11
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 15]
 solution : [8, 7, 26]


Invert decision for 26 at level 10


New level: 11
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 15]
 solution : [8, 7]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 15]
 solution : [8, 7]

Essensial at level 11 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 65536), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 33, 37, 6, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 5]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 65536), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 7, 5]


Solution : [8, 7, 5] has cost 13.


Decide in level 11 among pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 11

After decision at level 11
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 5, 15]


New level: 12
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 5, 15]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 5, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, 131072), (18, 0), (19, 32768), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {18, 20, 4, 21}

After reduction : 
 pending  : [23, 40, 38, 19, 16, 17]
 solution : [8, 7, 5, 15]


Before reduction : 
 pending  : [23, 40, 38, 19, 16, 17]
 solution : [8, 7, 5, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, 131072), (18, 0), (19, 32768), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, 131072), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 38, 19, 16, 17]
 solution : [8, 7, 5, 15]


Solution : [8, 7, 5, 15] has cost 22.


Before backtrack at level 12
 pending : [23, 40, 38, 19, 16, 17]
 solution : [8, 7, 5, 15]

After backtrack at level 12
 pending : [23, 40, 38, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 7, 5, 15]


Invert decision for 15 at level 11


New level: 12
 pending : [23, 40, 38, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 7, 5]


Before reduction : 
 pending  : [23, 40, 38, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 7, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, 131072), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 38, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 7, 5]


Solution : [8, 7, 5] has cost 13.


Decide in level 12 among pending : [23, 40, 38, 19, 16, 17, 4, 21, 18, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [23, 40, 38, 19, 16, 4, 21, 18, 20]
 solution : [8, 7, 5, 17]


New level: 13
 pending : [23, 40, 38, 19, 16, 4, 21, 18, 20]
 solution : [8, 7, 5, 17]


Before reduction : 
 pending  : [23, 40, 38, 19, 16, 4, 21, 18, 20]
 solution : [8, 7, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, 8388608), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 2097152), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 18, 19}

After reduction : 
 pending  : [23, 40, 38, 4, 21, 20]
 solution : [8, 7, 5, 17]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 20]
 solution : [8, 7, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 2097152), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 38, 4, 21, 20]
 solution : [8, 7, 5, 17]


Solution : [8, 7, 5, 17] has cost 20.


Before backtrack at level 13
 pending : [23, 40, 38, 4, 21, 20]
 solution : [8, 7, 5, 17]

After backtrack at level 13
 pending : [23, 40, 38, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 5, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [23, 40, 38, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 5]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 38, 4, 21, 20, 19, 16, 18]
 solution : [8, 7, 5]


Solution : [8, 7, 5] has cost 13.


Decide in level 13 among pending : [23, 40, 38, 4, 21, 20, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [23, 40, 38, 4, 21, 19, 16, 18]
 solution : [8, 7, 5, 20]


New level: 14
 pending : [23, 40, 38, 4, 21, 19, 16, 18]
 solution : [8, 7, 5, 20]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 19, 16, 18]
 solution : [8, 7, 5, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, 131072), (20, 8388608), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, 0), (19, 32768), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {18, 4, 21}

After reduction : 
 pending  : [23, 40, 38, 19, 16]
 solution : [8, 7, 5, 20]


Before reduction : 
 pending  : [23, 40, 38, 19, 16]
 solution : [8, 7, 5, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, 0), (19, 32768), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 38, 19, 16]
 solution : [8, 7, 5, 20]


Solution : [8, 7, 5, 20] has cost 22.


Before backtrack at level 14
 pending : [23, 40, 38, 19, 16]
 solution : [8, 7, 5, 20]

After backtrack at level 14
 pending : [23, 40, 38, 19, 16, 4, 21, 18]
 solution : [8, 7, 5, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [23, 40, 38, 19, 16, 4, 21, 18]
 solution : [8, 7, 5]


Before reduction : 
 pending  : [23, 40, 38, 19, 16, 4, 21, 18]
 solution : [8, 7, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, 131072), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 38, 19, 16, 4, 21, 18]
 solution : [8, 7, 5]


Solution : [8, 7, 5] has cost 13.


Decide in level 14 among pending : [23, 40, 38, 19, 16, 4, 21, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, 131072), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 14

After decision at level 14
 pending : [23, 40, 38, 19, 4, 21, 18]
 solution : [8, 7, 5, 16]


New level: 15
 pending : [23, 40, 38, 19, 4, 21, 18]
 solution : [8, 7, 5, 16]


Before reduction : 
 pending  : [23, 40, 38, 19, 4, 21, 18]
 solution : [8, 7, 5, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, 131072), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {18, 19}

After reduction : 
 pending  : [23, 40, 38, 4, 21]
 solution : [8, 7, 5, 16]


Before reduction : 
 pending  : [23, 40, 38, 4, 21]
 solution : [8, 7, 5, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 38, 4, 21]
 solution : [8, 7, 5, 16]


Solution : [8, 7, 5, 16] has cost 20.


Before backtrack at level 15
 pending : [23, 40, 38, 4, 21]
 solution : [8, 7, 5, 16]

After backtrack at level 15
 pending : [23, 40, 38, 4, 21, 19, 18]
 solution : [8, 7, 5, 16]


Invert decision for 16 at level 14


New level: 15
 pending : [23, 40, 38, 4, 21, 19, 18]
 solution : [8, 7, 5]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 19, 18]
 solution : [8, 7, 5]

Essensial at level 15 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 38, 4, 21, 18]
 solution : [8, 7, 5, 19]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 18]
 solution : [8, 7, 5, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 38, 4, 21, 18]
 solution : [8, 7, 5, 19]


Solution : [8, 7, 5, 19] has cost 20.


Before backtrack at level 15
 pending : [23, 40, 38, 4, 21, 18]
 solution : [8, 7, 5, 19]

After backtrack at level 15
 pending : [23, 40, 38, 4, 21, 18, 19]
 solution : [8, 7, 5]


Before backtrack at level 14
 pending : [23, 40, 38, 4, 21, 18, 19]
 solution : [8, 7, 5]

After backtrack at level 14
 pending : [23, 40, 38, 4, 21, 18, 19, 16]
 solution : [8, 7, 5]


Before backtrack at level 13
 pending : [23, 40, 38, 4, 21, 18, 19, 16]
 solution : [8, 7, 5]

After backtrack at level 13
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20]
 solution : [8, 7, 5]


Before backtrack at level 12
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20]
 solution : [8, 7, 5]

After backtrack at level 12
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 5]


Before backtrack at level 11
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 7, 5]

After backtrack at level 11
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15]
 solution : [8, 7]


Before backtrack at level 10
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15]
 solution : [8, 7]

After backtrack at level 10
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26]
 solution : [8, 7]


Before backtrack at level 9
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26]
 solution : [8, 7]

After backtrack at level 9
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39]
 solution : [8, 7]


Before backtrack at level 8
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39]
 solution : [8, 7]

After backtrack at level 8
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27]
 solution : [8, 7]


Before backtrack at level 7
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27]
 solution : [8, 7]

After backtrack at level 7
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22]
 solution : [8, 7]


Before backtrack at level 6
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22]
 solution : [8, 7]

After backtrack at level 6
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35]
 solution : [8, 7]


Before backtrack at level 5
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35]
 solution : [8, 7]

After backtrack at level 5
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 28]
 solution : [8, 7]


Before backtrack at level 4
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 28]
 solution : [8, 7]

After backtrack at level 4
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 28, 14]
 solution : [8, 7]


Before backtrack at level 3
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 28, 14]
 solution : [8, 7]

After backtrack at level 3
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 28, 14, 24]
 solution : [8, 7]


Before backtrack at level 2
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 28, 14, 24]
 solution : [8, 7]

After backtrack at level 2
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 28, 14, 24, 10]
 solution : [8, 7]


Invert decision for 7 at level 1


New level: 2
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 28, 14, 24, 10]
 solution : [8]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 28, 14, 24, 10]
 solution : [8]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 28, 14, 24, 10]
 solution : [8]


Solution : [8] has cost 6.


Decide in level 2 among pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 28, 14, 24, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 10 with phase True at level 2

After decision at level 2
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 28, 14, 24]
 solution : [8, 10]


New level: 3
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 28, 14, 24]
 solution : [8, 10]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 28, 14, 24]
 solution : [8, 10]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 28, 14, 24]
 solution : [8, 10]


Solution : [8, 10] has cost 11.


Decide in level 3 among pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 28, 14, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 28 with phase True at level 3

After decision at level 3
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 14, 24]
 solution : [8, 10, 28]


New level: 4
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 14, 24]
 solution : [8, 10, 28]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 14, 24]
 solution : [8, 10, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, 1073741824), (36, -1), (37, 16384), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 14, 24]
 solution : [8, 10, 28]


Solution : [8, 10, 28] has cost 15.


Decide in level 4 among pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 35, 14, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, 1073741824), (36, -1), (37, 16384), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 35 with phase True at level 4

After decision at level 4
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 14, 24]
 solution : [8, 10, 28, 35]


New level: 5
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 14, 24]
 solution : [8, 10, 28, 35]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 26, 39, 27, 22, 14, 24]
 solution : [8, 10, 28, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, 1073741824), (36, -1), (37, 16384), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 67108864), (39, 4096), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : {33, 30}

After reduction : 
 pending  : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 15, 26, 39, 27, 22, 14, 24]
 solution : [8, 10, 28, 35]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 15, 26, 39, 27, 22, 14, 24]
 solution : [8, 10, 28, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 67108864), (39, 4096), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 67108864), (39, 4096), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 15, 26, 39, 27, 22, 14, 24]
 solution : [8, 10, 28, 35]


Solution : [8, 10, 28, 35] has cost 28.


Before backtrack at level 5
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 15, 26, 39, 27, 22, 14, 24]
 solution : [8, 10, 28, 35]

After backtrack at level 5
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 15, 26, 39, 27, 22, 14, 24, 30, 33]
 solution : [8, 10, 28, 35]


Invert decision for 35 at level 4


New level: 5
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 15, 26, 39, 27, 22, 14, 24, 30, 33]
 solution : [8, 10, 28]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 15, 26, 39, 27, 22, 14, 24, 30, 33]
 solution : [8, 10, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 67108864), (39, 4096), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 15, 26, 39, 27, 22, 14, 24, 30, 33]
 solution : [8, 10, 28]


Solution : [8, 10, 28] has cost 15.


Decide in level 5 among pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 15, 26, 39, 27, 22, 14, 24, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 24 with phase True at level 5

After decision at level 5
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 15, 26, 39, 27, 22, 14, 30, 33]
 solution : [8, 10, 28, 24]


New level: 6
 pending : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 15, 26, 39, 27, 22, 14, 30, 33]
 solution : [8, 10, 28, 24]


Before reduction : 
 pending  : [23, 40, 38, 4, 21, 18, 19, 16, 20, 17, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 15, 26, 39, 27, 22, 14, 30, 33]
 solution : [8, 10, 28, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 6 : {4, 40, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 27, 30, 33]
 solution : [8, 10, 28, 24]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 27, 30, 33]
 solution : [8, 10, 28, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 27, 30, 33]
 solution : [8, 10, 28, 24]


Solution : [8, 10, 28, 24] has cost 19.


Before backtrack at level 6
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 27, 30, 33]
 solution : [8, 10, 28, 24]

After backtrack at level 6
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14]
 solution : [8, 10, 28, 24]


Invert decision for 24 at level 5


New level: 6
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14]
 solution : [8, 10, 28]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14]
 solution : [8, 10, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14]
 solution : [8, 10, 28]


Solution : [8, 10, 28] has cost 15.


Decide in level 6 among pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14]
 solution : [8, 10, 28, 27]


New level: 7
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14]
 solution : [8, 10, 28, 27]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14]
 solution : [8, 10, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 512), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : {33, 30}

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14]
 solution : [8, 10, 28, 27]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14]
 solution : [8, 10, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 512), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 512), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14]
 solution : [8, 10, 28, 27]


Solution : [8, 10, 28, 27] has cost 22.


Before backtrack at level 7
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14]
 solution : [8, 10, 28, 27]

After backtrack at level 7
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 30, 33]
 solution : [8, 10, 28, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 30, 33]
 solution : [8, 10, 28]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 30, 33]
 solution : [8, 10, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 512), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 30, 33]
 solution : [8, 10, 28]


Solution : [8, 10, 28] has cost 15.


Decide in level 7 among pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 14 with phase True at level 7

After decision at level 7
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 30, 33]
 solution : [8, 10, 28, 14]


New level: 8
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 30, 33]
 solution : [8, 10, 28, 14]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 30, 33]
 solution : [8, 10, 28, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : {4, 40, 15, 16, 17, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33]
 solution : [8, 10, 28, 14]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33]
 solution : [8, 10, 28, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33]
 solution : [8, 10, 28, 14]


Solution : [8, 10, 28, 14] has cost 22.


Before backtrack at level 8
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33]
 solution : [8, 10, 28, 14]

After backtrack at level 8
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 10, 28, 14]


Invert decision for 14 at level 7


New level: 8
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 10, 28]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 10, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 10, 28]


Solution : [8, 10, 28] has cost 15.


Decide in level 8 among pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 28, 22]


New level: 9
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 28, 22]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 28, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : {4, 40, 15, 16, 17, 18, 19, 20, 21, 23}

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33]
 solution : [8, 10, 28, 22]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33]
 solution : [8, 10, 28, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33]
 solution : [8, 10, 28, 22]


Solution : [8, 10, 28, 22] has cost 22.


Before backtrack at level 9
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33]
 solution : [8, 10, 28, 22]

After backtrack at level 9
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 28, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 28]


Before reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 28]


Solution : [8, 10, 28] has cost 15.


Decide in level 9 among pending : [38, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 5 with phase True at level 9

After decision at level 9
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 28, 5]


New level: 10
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 28, 5]


Before reduction : 
 pending  : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 39, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 28, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, 512), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {32, 33, 37, 6, 41, 42, 43, 47, 48, 51, 26, 29, 30}

After reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 28, 5]


Before reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 28, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, 512), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 28, 5]


Solution : [8, 10, 28, 5] has cost 19.


Before backtrack at level 10
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 28, 5]

After backtrack at level 10
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33]
 solution : [8, 10, 28, 5]


Invert decision for 5 at level 9


New level: 10
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33]
 solution : [8, 10, 28]


Before reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33]
 solution : [8, 10, 28]

Essensial at level 10 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 262144), (39, 512), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {32, 33, 37, 6, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 28, 26]


Before reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 28, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 262144), (39, 512), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 28, 26]


Solution : [8, 10, 28, 26] has cost 22.


Before backtrack at level 10
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 28, 26]

After backtrack at level 10
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33]
 solution : [8, 10, 28]


Before backtrack at level 9
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33]
 solution : [8, 10, 28]

After backtrack at level 9
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5]
 solution : [8, 10, 28]


Before backtrack at level 8
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5]
 solution : [8, 10, 28]

After backtrack at level 8
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22]
 solution : [8, 10, 28]


Before backtrack at level 7
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22]
 solution : [8, 10, 28]

After backtrack at level 7
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 14]
 solution : [8, 10, 28]


Before backtrack at level 6
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 14]
 solution : [8, 10, 28]

After backtrack at level 6
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 14, 27]
 solution : [8, 10, 28]


Before backtrack at level 5
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 14, 27]
 solution : [8, 10, 28]

After backtrack at level 5
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 14, 27, 24]
 solution : [8, 10, 28]


Before backtrack at level 4
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 14, 27, 24]
 solution : [8, 10, 28]

After backtrack at level 4
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 14, 27, 24, 35]
 solution : [8, 10, 28]


Invert decision for 28 at level 3


New level: 4
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 14, 27, 24, 35]
 solution : [8, 10]


Before reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 14, 27, 24, 35]
 solution : [8, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 14, 27, 24, 35]
 solution : [8, 10]


Solution : [8, 10] has cost 11.


Decide in level 4 among pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 14, 27, 24, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 35 with phase True at level 4

After decision at level 4
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 14, 27, 24]
 solution : [8, 10, 35]


New level: 5
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 14, 27, 24]
 solution : [8, 10, 35]


Before reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 14, 27, 24]
 solution : [8, 10, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 67108864), (39, 8192), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : {33, 30}

After reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 27, 24]
 solution : [8, 10, 35]


Before reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 27, 24]
 solution : [8, 10, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 67108864), (39, 8192), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 67108864), (39, 8192), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 27, 24]
 solution : [8, 10, 35]


Solution : [8, 10, 35] has cost 24.


Before backtrack at level 5
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 27, 24]
 solution : [8, 10, 35]

After backtrack at level 5
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 27, 24, 30, 33]
 solution : [8, 10, 35]


Invert decision for 35 at level 4


New level: 5
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 27, 24, 30, 33]
 solution : [8, 10]


Before reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 27, 24, 30, 33]
 solution : [8, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 67108864), (39, 8192), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 27, 24, 30, 33]
 solution : [8, 10]


Solution : [8, 10] has cost 11.


Decide in level 5 among pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 27, 24, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 5

After decision at level 5
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 24, 30, 33]
 solution : [8, 10, 27]


New level: 6
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 24, 30, 33]
 solution : [8, 10, 27]


Before reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 24, 30, 33]
 solution : [8, 10, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 512), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : {33, 30}

After reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 24]
 solution : [8, 10, 27]


Before reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 24]
 solution : [8, 10, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 512), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 512), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 24]
 solution : [8, 10, 27]


Solution : [8, 10, 27] has cost 18.


Before backtrack at level 6
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 24]
 solution : [8, 10, 27]

After backtrack at level 6
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 24, 30, 33]
 solution : [8, 10, 27]


Invert decision for 27 at level 5


New level: 6
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 24, 30, 33]
 solution : [8, 10]


Before reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 24, 30, 33]
 solution : [8, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 512), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 24, 30, 33]
 solution : [8, 10]


Solution : [8, 10] has cost 11.


Decide in level 6 among pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 24, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 30, 33]
 solution : [8, 10, 24]


New level: 7
 pending : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 30, 33]
 solution : [8, 10, 24]


Before reduction : 
 pending  : [38, 39, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 22, 14, 30, 33]
 solution : [8, 10, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : {4, 40, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [38, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33]
 solution : [8, 10, 24]


Before reduction : 
 pending  : [38, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33]
 solution : [8, 10, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33]
 solution : [8, 10, 24]


Solution : [8, 10, 24] has cost 15.


Decide in level 7 among pending : [38, 39, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33]
 solution : [8, 10, 24, 26]


New level: 8
 pending : [38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33]
 solution : [8, 10, 24, 26]


Before reduction : 
 pending  : [38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33]
 solution : [8, 10, 24, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 33, 37, 6, 38, 39, 41, 42, 43, 5, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 10, 24, 26]


Before reduction : 
 pending  : []
 solution : [8, 10, 24, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 10, 24, 26]


Solution : [8, 10, 24, 26] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [8, 10, 24, 26]

After backtrack at level 8
 pending : [38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33]
 solution : [8, 10, 24, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33]
 solution : [8, 10, 24]


Before reduction : 
 pending  : [38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33]
 solution : [8, 10, 24]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 33, 37, 6, 38, 39, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 10, 24, 5]


Before reduction : 
 pending  : []
 solution : [8, 10, 24, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 10, 24, 5]


Solution : [8, 10, 24, 5] has cost 19.


Before backtrack at level 8
 pending : []
 solution : [8, 10, 24, 5]

After backtrack at level 8
 pending : [5, 38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33]
 solution : [8, 10, 24]


Before backtrack at level 7
 pending : [5, 38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33]
 solution : [8, 10, 24]

After backtrack at level 7
 pending : [5, 38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 26]
 solution : [8, 10, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [5, 38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 26]
 solution : [8, 10]


Before reduction : 
 pending  : [5, 38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 26]
 solution : [8, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 26]
 solution : [8, 10]


Solution : [8, 10] has cost 11.


Decide in level 7 among pending : [5, 38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 14 with phase True at level 7

After decision at level 7
 pending : [5, 38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 26]
 solution : [8, 10, 14]


New level: 8
 pending : [5, 38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 26]
 solution : [8, 10, 14]


Before reduction : 
 pending  : [5, 38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 26]
 solution : [8, 10, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : {4, 40, 15, 16, 17, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [5, 38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26]
 solution : [8, 10, 14]


Before reduction : 
 pending  : [5, 38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26]
 solution : [8, 10, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26]
 solution : [8, 10, 14]


Solution : [8, 10, 14] has cost 18.


Before backtrack at level 8
 pending : [5, 38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26]
 solution : [8, 10, 14]

After backtrack at level 8
 pending : [5, 38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 10, 14]


Invert decision for 14 at level 7


New level: 8
 pending : [5, 38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 10]


Before reduction : 
 pending  : [5, 38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 10]


Solution : [8, 10] has cost 11.


Decide in level 8 among pending : [5, 38, 39, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 39 with phase True at level 8

After decision at level 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 10, 39]


New level: 9
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 10, 39]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 10, 39]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 33554432), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 10, 39]


Solution : [8, 10, 39] has cost 25.


Before backtrack at level 9
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 10, 39]

After backtrack at level 9
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 10, 39]


Invert decision for 39 at level 8


New level: 9
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 10]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 33554432), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 10]


Solution : [8, 10] has cost 11.


Decide in level 9 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 22]


New level: 10
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 22]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, 268435456), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : {4, 40, 15, 16, 17, 18, 19, 20, 21, 23}

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26]
 solution : [8, 10, 22]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26]
 solution : [8, 10, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26]
 solution : [8, 10, 22]


Solution : [8, 10, 22] has cost 18.


Before backtrack at level 10
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26]
 solution : [8, 10, 22]

After backtrack at level 10
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10]


Solution : [8, 10] has cost 11.


Decide in level 10 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 5]


New level: 11
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 5]


Before reduction : 
 pending  : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 2097152), (17, 4194304), (18, 131072), (19, 65536), (20, 8388608), (21, 393216), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 33, 37, 6, 41, 42, 43, 47, 48, 51, 26, 29, 30}

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 5]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 5]


Solution : [8, 10, 5] has cost 15.


Decide in level 11 among pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 11

After decision at level 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 10, 5, 15]


New level: 12
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 10, 5, 15]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 10, 5, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, 65536), (18, 0), (19, 16384), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {18, 20, 4, 21}

After reduction : 
 pending  : [38, 23, 40, 19, 16, 17]
 solution : [8, 10, 5, 15]


Before reduction : 
 pending  : [38, 23, 40, 19, 16, 17]
 solution : [8, 10, 5, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, 65536), (18, 0), (19, 16384), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, 65536), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 23, 40, 19, 16, 17]
 solution : [8, 10, 5, 15]


Solution : [8, 10, 5, 15] has cost 24.


Before backtrack at level 12
 pending : [38, 23, 40, 19, 16, 17]
 solution : [8, 10, 5, 15]

After backtrack at level 12
 pending : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 10, 5, 15]


Invert decision for 15 at level 11


New level: 12
 pending : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 10, 5]


Before reduction : 
 pending  : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 10, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, 65536), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 10, 5]


Solution : [8, 10, 5] has cost 15.


Decide in level 12 among pending : [38, 23, 40, 19, 16, 17, 4, 21, 18, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [38, 23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 10, 5, 17]


New level: 13
 pending : [38, 23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 10, 5, 17]


Before reduction : 
 pending  : [38, 23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 10, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 1048576), (21, 65536), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 18, 19}

After reduction : 
 pending  : [38, 23, 40, 4, 21, 20]
 solution : [8, 10, 5, 17]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 20]
 solution : [8, 10, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 1048576), (21, 65536), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1048576), (21, 65536), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 20]
 solution : [8, 10, 5, 17]


Solution : [8, 10, 5, 17] has cost 22.


Before backtrack at level 13
 pending : [38, 23, 40, 4, 21, 20]
 solution : [8, 10, 5, 17]

After backtrack at level 13
 pending : [38, 23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 10, 5, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [38, 23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 10, 5]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 10, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1048576), (21, 65536), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2097152), (17, -1), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 10, 5]


Solution : [8, 10, 5] has cost 15.


Decide in level 13 among pending : [38, 23, 40, 4, 21, 20, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2097152), (17, -1), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [38, 23, 40, 4, 21, 19, 16, 18]
 solution : [8, 10, 5, 20]


New level: 14
 pending : [38, 23, 40, 4, 21, 19, 16, 18]
 solution : [8, 10, 5, 20]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 19, 16, 18]
 solution : [8, 10, 5, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2097152), (17, -1), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, 0), (19, 16384), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {18, 4, 21}

After reduction : 
 pending  : [38, 23, 40, 19, 16]
 solution : [8, 10, 5, 20]


Before reduction : 
 pending  : [38, 23, 40, 19, 16]
 solution : [8, 10, 5, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, 0), (19, 16384), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 19, 16]
 solution : [8, 10, 5, 20]


Solution : [8, 10, 5, 20] has cost 24.


Before backtrack at level 14
 pending : [38, 23, 40, 19, 16]
 solution : [8, 10, 5, 20]

After backtrack at level 14
 pending : [38, 23, 40, 19, 16, 4, 21, 18]
 solution : [8, 10, 5, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [38, 23, 40, 19, 16, 4, 21, 18]
 solution : [8, 10, 5]


Before reduction : 
 pending  : [38, 23, 40, 19, 16, 4, 21, 18]
 solution : [8, 10, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2097152), (17, -1), (18, 65536), (19, 65536), (20, -1), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 19, 16, 4, 21, 18]
 solution : [8, 10, 5]


Solution : [8, 10, 5] has cost 15.


Decide in level 14 among pending : [38, 23, 40, 19, 16, 4, 21, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2097152), (17, -1), (18, 65536), (19, 65536), (20, -1), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 14

After decision at level 14
 pending : [38, 23, 40, 19, 4, 21, 18]
 solution : [8, 10, 5, 16]


New level: 15
 pending : [38, 23, 40, 19, 4, 21, 18]
 solution : [8, 10, 5, 16]


Before reduction : 
 pending  : [38, 23, 40, 19, 4, 21, 18]
 solution : [8, 10, 5, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2097152), (17, -1), (18, 65536), (19, 65536), (20, -1), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 65536), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {18, 19}

After reduction : 
 pending  : [38, 23, 40, 4, 21]
 solution : [8, 10, 5, 16]


Before reduction : 
 pending  : [38, 23, 40, 4, 21]
 solution : [8, 10, 5, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 65536), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21]
 solution : [8, 10, 5, 16]


Solution : [8, 10, 5, 16] has cost 22.


Before backtrack at level 15
 pending : [38, 23, 40, 4, 21]
 solution : [8, 10, 5, 16]

After backtrack at level 15
 pending : [38, 23, 40, 4, 21, 19, 18]
 solution : [8, 10, 5, 16]


Invert decision for 16 at level 14


New level: 15
 pending : [38, 23, 40, 4, 21, 19, 18]
 solution : [8, 10, 5]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 19, 18]
 solution : [8, 10, 5]

Essensial at level 15 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18]
 solution : [8, 10, 5, 19]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18]
 solution : [8, 10, 5, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18]
 solution : [8, 10, 5, 19]


Solution : [8, 10, 5, 19] has cost 22.


Before backtrack at level 15
 pending : [38, 23, 40, 4, 21, 18]
 solution : [8, 10, 5, 19]

After backtrack at level 15
 pending : [38, 23, 40, 4, 21, 18, 19]
 solution : [8, 10, 5]


Before backtrack at level 14
 pending : [38, 23, 40, 4, 21, 18, 19]
 solution : [8, 10, 5]

After backtrack at level 14
 pending : [38, 23, 40, 4, 21, 18, 19, 16]
 solution : [8, 10, 5]


Before backtrack at level 13
 pending : [38, 23, 40, 4, 21, 18, 19, 16]
 solution : [8, 10, 5]

After backtrack at level 13
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20]
 solution : [8, 10, 5]


Before backtrack at level 12
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20]
 solution : [8, 10, 5]

After backtrack at level 12
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 10, 5]


Before backtrack at level 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 10, 5]

After backtrack at level 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 15]
 solution : [8, 10, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 15]
 solution : [8, 10]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 26, 15]
 solution : [8, 10]

Essensial at level 11 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 262144), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 33, 37, 6, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 26]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 262144), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 26]


Solution : [8, 10, 26] has cost 18.


Before backtrack at level 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 10, 26]

After backtrack at level 11
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33]
 solution : [8, 10]


Before backtrack at level 10
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33]
 solution : [8, 10]

After backtrack at level 10
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5]
 solution : [8, 10]


Before backtrack at level 9
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5]
 solution : [8, 10]

After backtrack at level 9
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22]
 solution : [8, 10]


Before backtrack at level 8
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22]
 solution : [8, 10]

After backtrack at level 8
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 39]
 solution : [8, 10]


Before backtrack at level 7
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 39]
 solution : [8, 10]

After backtrack at level 7
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 39, 14]
 solution : [8, 10]


Before backtrack at level 6
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 39, 14]
 solution : [8, 10]

After backtrack at level 6
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 39, 14, 24]
 solution : [8, 10]


Before backtrack at level 5
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 39, 14, 24]
 solution : [8, 10]

After backtrack at level 5
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 39, 14, 24, 27]
 solution : [8, 10]


Before backtrack at level 4
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 39, 14, 24, 27]
 solution : [8, 10]

After backtrack at level 4
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 39, 14, 24, 27, 35]
 solution : [8, 10]


Before backtrack at level 3
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 39, 14, 24, 27, 35]
 solution : [8, 10]

After backtrack at level 3
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 39, 14, 24, 27, 35, 28]
 solution : [8, 10]


Invert decision for 10 at level 2


New level: 3
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 39, 14, 24, 27, 35, 28]
 solution : [8]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 39, 14, 24, 27, 35, 28]
 solution : [8]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 2097152), (17, 4194304), (18, 65536), (19, 65536), (20, 4194304), (21, 131072), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 39, 14, 24, 27, 35, 28]
 solution : [8]


Solution : [8] has cost 6.


Decide in level 3 among pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 39, 14, 24, 27, 35, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 24 with phase True at level 3

After decision at level 3
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 39, 14, 27, 35, 28]
 solution : [8, 24]


New level: 4
 pending : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 39, 14, 27, 35, 28]
 solution : [8, 24]


Before reduction : 
 pending  : [38, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 22, 39, 14, 27, 35, 28]
 solution : [8, 24]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 2147483648), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 4 : {4, 40, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 39, 27, 35, 28]
 solution : [8, 24]


Before reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 39, 27, 35, 28]
 solution : [8, 24]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 2147483648), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 2147483648), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 39, 27, 35, 28]
 solution : [8, 24]


Solution : [8, 24] has cost 10.


Decide in level 4 among pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 39, 27, 35, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 2147483648), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 39, 27, 35]
 solution : [8, 24, 28]


New level: 5
 pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 39, 27, 35]
 solution : [8, 24, 28]


Before reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 39, 27, 35]
 solution : [8, 24, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 2147483648), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, 1073741824), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 39, 27, 35]
 solution : [8, 24, 28]


Solution : [8, 24, 28] has cost 14.


Decide in level 5 among pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 39, 27, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, 1073741824), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 35 with phase True at level 5

After decision at level 5
 pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 39, 27]
 solution : [8, 24, 28, 35]


New level: 6
 pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 39, 27]
 solution : [8, 24, 28, 35]


Before reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 39, 27]
 solution : [8, 24, 28, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, 1073741824), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 6 : {33, 30, 39}

After reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27]
 solution : [8, 24, 28, 35]


Before reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27]
 solution : [8, 24, 28, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27]
 solution : [8, 24, 28, 35]


Solution : [8, 24, 28, 35] has cost 27.


Before backtrack at level 6
 pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27]
 solution : [8, 24, 28, 35]

After backtrack at level 6
 pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 24, 28, 35]


Invert decision for 35 at level 5


New level: 6
 pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 24, 28]


Before reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 24, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]
 solution : [8, 24, 28]


Solution : [8, 24, 28] has cost 14.


Decide in level 6 among pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 27, 30, 33, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 24, 28, 27]


New level: 7
 pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 24, 28, 27]


Before reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 24, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {33, 30, 39}

After reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 24, 28, 27]


Before reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 24, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 24, 28, 27]


Solution : [8, 24, 28, 27] has cost 21.


Before backtrack at level 7
 pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 24, 28, 27]

After backtrack at level 7
 pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 24, 28, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 24, 28]


Before reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 24, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 24, 28]


Solution : [8, 24, 28] has cost 14.


Decide in level 7 among pending : [38, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 24, 28, 26]


New level: 8
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 24, 28, 26]


Before reduction : 
 pending  : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 24, 28, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 33, 37, 38, 6, 5, 41, 42, 43, 39, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 24, 28, 26]


Before reduction : 
 pending  : []
 solution : [8, 24, 28, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 24, 28, 26]


Solution : [8, 24, 28, 26] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [8, 24, 28, 26]

After backtrack at level 8
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 24, 28, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 24, 28]


Before reduction : 
 pending  : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 30, 33, 39]
 solution : [8, 24, 28]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 33, 37, 38, 6, 39, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 24, 28, 5]


Before reduction : 
 pending  : []
 solution : [8, 24, 28, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 24, 28, 5]


Solution : [8, 24, 28, 5] has cost 18.


Before backtrack at level 8
 pending : []
 solution : [8, 24, 28, 5]

After backtrack at level 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39]
 solution : [8, 24, 28]


Before backtrack at level 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39]
 solution : [8, 24, 28]

After backtrack at level 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 24, 28]


Before backtrack at level 6
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 24, 28]

After backtrack at level 6
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27]
 solution : [8, 24, 28]


Before backtrack at level 5
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27]
 solution : [8, 24, 28]

After backtrack at level 5
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35]
 solution : [8, 24, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35]
 solution : [8, 24]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35]
 solution : [8, 24]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 2147483648), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35]
 solution : [8, 24]


Solution : [8, 24] has cost 10.


Decide in level 5 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 2147483648), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 35 with phase True at level 5

After decision at level 5
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27]
 solution : [8, 24, 35]


New level: 6
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27]
 solution : [8, 24, 35]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27]
 solution : [8, 24, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, 2147483648), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 4096), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 6 : {33, 30, 39}

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27]
 solution : [8, 24, 35]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27]
 solution : [8, 24, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 4096), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27]
 solution : [8, 24, 35]


Solution : [8, 24, 35] has cost 23.


Before backtrack at level 6
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27]
 solution : [8, 24, 35]

After backtrack at level 6
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 39]
 solution : [8, 24, 35]


Invert decision for 35 at level 5


New level: 6
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 39]
 solution : [8, 24]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 39]
 solution : [8, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 39]
 solution : [8, 24]


Solution : [8, 24] has cost 10.


Decide in level 6 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 39]
 solution : [8, 24, 27]


New level: 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 39]
 solution : [8, 24, 27]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 39]
 solution : [8, 24, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {33, 30, 39}

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 24, 27]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 24, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 24, 27]


Solution : [8, 24, 27] has cost 17.


Decide in level 7 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 24, 27, 5]


New level: 8
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 24, 27, 5]


Before reduction : 
 pending  : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 24, 27, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 37, 38, 6, 41, 42, 43, 47, 48, 51, 26, 29}

After reduction : 
 pending  : []
 solution : [8, 24, 27, 5]


Before reduction : 
 pending  : []
 solution : [8, 24, 27, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 24, 27, 5]


Solution : [8, 24, 27, 5] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [8, 24, 27, 5]

After backtrack at level 8
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 24, 27, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 24, 27]


Before reduction : 
 pending  : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 24, 27]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 37, 38, 6, 41, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : []
 solution : [8, 24, 27, 26]


Before reduction : 
 pending  : []
 solution : [8, 24, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 24, 27, 26]


Solution : [8, 24, 27, 26] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [8, 24, 27, 26]

After backtrack at level 8
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51]
 solution : [8, 24, 27]


Before backtrack at level 7
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51]
 solution : [8, 24, 27]

After backtrack at level 7
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 24, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 24]


Before reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 24]


Solution : [8, 24] has cost 10.


Decide in level 7 among pending : [26, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 24, 26]


New level: 8
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 24, 26]


Before reduction : 
 pending  : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 24, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 33, 37, 38, 6, 39, 41, 42, 43, 5, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 24, 26]


Before reduction : 
 pending  : []
 solution : [8, 24, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 24, 26]


Solution : [8, 24, 26] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [8, 24, 26]

After backtrack at level 8
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 24, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 24]


Before reduction : 
 pending  : [38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 5]
 solution : [8, 24]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 33, 37, 38, 6, 39, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 24, 5]


Before reduction : 
 pending  : []
 solution : [8, 24, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [8, 24, 5]


Solution : [8, 24, 5] has cost 14.


Before backtrack at level 8
 pending : []
 solution : [8, 24, 5]

After backtrack at level 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39]
 solution : [8, 24]


Before backtrack at level 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39]
 solution : [8, 24]

After backtrack at level 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 24]


Before backtrack at level 6
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26]
 solution : [8, 24]

After backtrack at level 6
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27]
 solution : [8, 24]


Before backtrack at level 5
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27]
 solution : [8, 24]

After backtrack at level 5
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35]
 solution : [8, 24]


Before backtrack at level 4
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35]
 solution : [8, 24]

After backtrack at level 4
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 28]
 solution : [8, 24]


Invert decision for 24 at level 3


New level: 4
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 28]
 solution : [8]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 28]
 solution : [8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 28]
 solution : [8]


Solution : [8] has cost 6.


Decide in level 4 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14]
 solution : [8, 28]


New level: 5
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14]
 solution : [8, 28]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14]
 solution : [8, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, 1073741824), (36, -1), (37, 16384), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14]
 solution : [8, 28]


Solution : [8, 28] has cost 10.


Decide in level 5 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, 1073741824), (36, -1), (37, 16384), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 14 with phase True at level 5

After decision at level 5
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 28, 14]


New level: 6
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 28, 14]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 28, 14]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, 1073741824), (36, -1), (37, 16384), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, 1073741824), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : {4, 40, 15, 16, 17, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35]
 solution : [8, 28, 14]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35]
 solution : [8, 28, 14]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, 1073741824), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, 1073741824), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35]
 solution : [8, 28, 14]


Solution : [8, 28, 14] has cost 17.


Before backtrack at level 6
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35]
 solution : [8, 28, 14]

After backtrack at level 6
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 28, 14]


Invert decision for 14 at level 5


New level: 6
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 28]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, 1073741824), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, 1073741824), (36, -1), (37, 16384), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 28]


Solution : [8, 28] has cost 10.


Decide in level 6 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 35, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, 1073741824), (36, -1), (37, 16384), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 35 with phase True at level 6

After decision at level 6
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 28, 35]


New level: 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 28, 35]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 28, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, 1073741824), (36, -1), (37, 16384), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 268435456), (39, 16384), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : {33, 30}

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 28, 35]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 28, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 268435456), (39, 16384), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 268435456), (39, 16384), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 28, 35]


Solution : [8, 28, 35] has cost 23.


Before backtrack at level 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22]
 solution : [8, 28, 35]

After backtrack at level 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 30, 33]
 solution : [8, 28, 35]


Invert decision for 35 at level 6


New level: 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 30, 33]
 solution : [8, 28]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 30, 33]
 solution : [8, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 268435456), (39, 16384), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 30, 33]
 solution : [8, 28]


Solution : [8, 28] has cost 10.


Decide in level 7 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 22 with phase True at level 7

After decision at level 7
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 28, 22]


New level: 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 28, 22]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 28, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : {4, 40, 15, 16, 17, 18, 19, 20, 21, 23}

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 30, 33]
 solution : [8, 28, 22]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 30, 33]
 solution : [8, 28, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 30, 33]
 solution : [8, 28, 22]


Solution : [8, 28, 22] has cost 17.


Before backtrack at level 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 30, 33]
 solution : [8, 28, 22]

After backtrack at level 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 22]


Invert decision for 22 at level 7


New level: 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28]


Solution : [8, 28] has cost 10.


Decide in level 8 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 39, 26, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 39 with phase True at level 8

After decision at level 8
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 39]


New level: 9
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 39]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 39]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 268435456), (28, -1), (29, 1048576), (30, 1048576), (31, -1), (32, 16384), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 134217728), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 39]


Solution : [8, 28, 39] has cost 24.


Before backtrack at level 9
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 39]

After backtrack at level 9
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 39]


Invert decision for 39 at level 8


New level: 9
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 268435456), (28, -1), (29, 1048576), (30, 1048576), (31, -1), (32, 16384), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 134217728), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28]


Solution : [8, 28] has cost 10.


Decide in level 9 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 27, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 9

After decision at level 9
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 27]


New level: 10
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 27]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 134217728), (39, -1), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : {33, 30}

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 27]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 134217728), (39, -1), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 134217728), (39, -1), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 27]


Solution : [8, 28, 27] has cost 17.


Before backtrack at level 10
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 27]

After backtrack at level 10
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 28, 27]


Invert decision for 27 at level 9


New level: 10
 pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 28]


Before reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 134217728), (39, -1), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 28]


Solution : [8, 28] has cost 10.


Decide in level 10 among pending : [5, 38, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 28, 38]


New level: 11
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 28, 38]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 28, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, -1), (40, 1048576), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 28, 38]


Solution : [8, 28, 38] has cost 28.


Before backtrack at level 11
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 28, 38]

After backtrack at level 11
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 28, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 28]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, -1), (40, 1048576), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, -1), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 28]


Solution : [8, 28] has cost 10.


Decide in level 11 among pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, -1), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 5 with phase True at level 11

After decision at level 11
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 28, 5]


New level: 12
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 28, 5]


Before reduction : 
 pending  : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 30, 33]
 solution : [8, 28, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, -1), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {32, 33, 37, 6, 41, 42, 43, 47, 48, 51, 26, 29, 30}

After reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 5]


Before reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 5]


Solution : [8, 28, 5] has cost 14.


Decide in level 12 among pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 28, 5, 15]


New level: 13
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 28, 5, 15]


Before reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 28, 5, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, 262144), (18, 0), (19, 65536), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {18, 20, 4, 21}

After reduction : 
 pending  : [23, 40, 19, 16, 17]
 solution : [8, 28, 5, 15]


Before reduction : 
 pending  : [23, 40, 19, 16, 17]
 solution : [8, 28, 5, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, 262144), (18, 0), (19, 65536), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, 262144), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17]
 solution : [8, 28, 5, 15]


Solution : [8, 28, 5, 15] has cost 23.


Before backtrack at level 13
 pending : [23, 40, 19, 16, 17]
 solution : [8, 28, 5, 15]

After backtrack at level 13
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 28, 5, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 28, 5]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 28, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, 262144), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 28, 5]


Solution : [8, 28, 5] has cost 14.


Decide in level 13 among pending : [23, 40, 19, 16, 17, 4, 21, 18, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 28, 5, 17]


New level: 14
 pending : [23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 28, 5, 17]


Before reduction : 
 pending  : [23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 28, 5, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 4194304), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 18, 19}

After reduction : 
 pending  : [23, 40, 4, 21, 20]
 solution : [8, 28, 5, 17]


Before reduction : 
 pending  : [23, 40, 4, 21, 20]
 solution : [8, 28, 5, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 4194304), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 20]
 solution : [8, 28, 5, 17]


Solution : [8, 28, 5, 17] has cost 21.


Before backtrack at level 14
 pending : [23, 40, 4, 21, 20]
 solution : [8, 28, 5, 17]

After backtrack at level 14
 pending : [23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 28, 5, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 28, 5]


Before reduction : 
 pending  : [23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 28, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, -1), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 28, 5]


Solution : [8, 28, 5] has cost 14.


Decide in level 14 among pending : [23, 40, 4, 21, 20, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, -1), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [23, 40, 4, 21, 19, 16, 18]
 solution : [8, 28, 5, 20]


New level: 15
 pending : [23, 40, 4, 21, 19, 16, 18]
 solution : [8, 28, 5, 20]


Before reduction : 
 pending  : [23, 40, 4, 21, 19, 16, 18]
 solution : [8, 28, 5, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, -1), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, 0), (19, 65536), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {18, 4, 21}

After reduction : 
 pending  : [23, 40, 19, 16]
 solution : [8, 28, 5, 20]


Before reduction : 
 pending  : [23, 40, 19, 16]
 solution : [8, 28, 5, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, 0), (19, 65536), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 19, 16]
 solution : [8, 28, 5, 20]


Solution : [8, 28, 5, 20] has cost 23.


Before backtrack at level 15
 pending : [23, 40, 19, 16]
 solution : [8, 28, 5, 20]

After backtrack at level 15
 pending : [23, 40, 19, 16, 4, 21, 18]
 solution : [8, 28, 5, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [23, 40, 19, 16, 4, 21, 18]
 solution : [8, 28, 5]


Before reduction : 
 pending  : [23, 40, 19, 16, 4, 21, 18]
 solution : [8, 28, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, -1), (18, 262144), (19, 262144), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 4, 21, 18]
 solution : [8, 28, 5]


Solution : [8, 28, 5] has cost 14.


Decide in level 15 among pending : [23, 40, 19, 16, 4, 21, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, -1), (18, 262144), (19, 262144), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 15

After decision at level 15
 pending : [23, 40, 19, 4, 21, 18]
 solution : [8, 28, 5, 16]


New level: 16
 pending : [23, 40, 19, 4, 21, 18]
 solution : [8, 28, 5, 16]


Before reduction : 
 pending  : [23, 40, 19, 4, 21, 18]
 solution : [8, 28, 5, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, -1), (18, 262144), (19, 262144), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {18, 19}

After reduction : 
 pending  : [23, 40, 4, 21]
 solution : [8, 28, 5, 16]


Before reduction : 
 pending  : [23, 40, 4, 21]
 solution : [8, 28, 5, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 4, 21]
 solution : [8, 28, 5, 16]


Solution : [8, 28, 5, 16] has cost 21.


Before backtrack at level 16
 pending : [23, 40, 4, 21]
 solution : [8, 28, 5, 16]

After backtrack at level 16
 pending : [23, 40, 4, 21, 19, 18]
 solution : [8, 28, 5, 16]


Invert decision for 16 at level 15


New level: 16
 pending : [23, 40, 4, 21, 19, 18]
 solution : [8, 28, 5]


Before reduction : 
 pending  : [23, 40, 4, 21, 19, 18]
 solution : [8, 28, 5]

Essensial at level 16 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 18]
 solution : [8, 28, 5, 19]


Before reduction : 
 pending  : [23, 40, 4, 21, 18]
 solution : [8, 28, 5, 19]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 18]
 solution : [8, 28, 5, 19]


Solution : [8, 28, 5, 19] has cost 21.


Before backtrack at level 16
 pending : [23, 40, 4, 21, 18]
 solution : [8, 28, 5, 19]

After backtrack at level 16
 pending : [23, 40, 4, 21, 18, 19]
 solution : [8, 28, 5]


Before backtrack at level 15
 pending : [23, 40, 4, 21, 18, 19]
 solution : [8, 28, 5]

After backtrack at level 15
 pending : [23, 40, 4, 21, 18, 19, 16]
 solution : [8, 28, 5]


Before backtrack at level 14
 pending : [23, 40, 4, 21, 18, 19, 16]
 solution : [8, 28, 5]

After backtrack at level 14
 pending : [23, 40, 4, 21, 18, 19, 16, 20]
 solution : [8, 28, 5]


Before backtrack at level 13
 pending : [23, 40, 4, 21, 18, 19, 16, 20]
 solution : [8, 28, 5]

After backtrack at level 13
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 28, 5]


Before backtrack at level 12
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 28, 5]

After backtrack at level 12
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 15]
 solution : [8, 28, 5]


Invert decision for 5 at level 11


New level: 12
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 15]
 solution : [8, 28]


Before reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 15]
 solution : [8, 28]

Essensial at level 12 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {32, 33, 37, 6, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 26]


Before reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 26]


Solution : [8, 28, 26] has cost 17.


Before backtrack at level 12
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 28, 26]

After backtrack at level 12
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33]
 solution : [8, 28]


Before backtrack at level 11
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33]
 solution : [8, 28]

After backtrack at level 11
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5]
 solution : [8, 28]


Before backtrack at level 10
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5]
 solution : [8, 28]

After backtrack at level 10
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 38]
 solution : [8, 28]


Before backtrack at level 9
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 38]
 solution : [8, 28]

After backtrack at level 9
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 38, 27]
 solution : [8, 28]


Before backtrack at level 8
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 38, 27]
 solution : [8, 28]

After backtrack at level 8
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 38, 27, 39]
 solution : [8, 28]


Before backtrack at level 7
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 38, 27, 39]
 solution : [8, 28]

After backtrack at level 7
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 38, 27, 39, 22]
 solution : [8, 28]


Before backtrack at level 6
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 38, 27, 39, 22]
 solution : [8, 28]

After backtrack at level 6
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 38, 27, 39, 22, 35]
 solution : [8, 28]


Before backtrack at level 5
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 38, 27, 39, 22, 35]
 solution : [8, 28]

After backtrack at level 5
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 38, 27, 39, 22, 35, 14]
 solution : [8, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 38, 27, 39, 22, 35, 14]
 solution : [8]


Before reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 38, 27, 39, 22, 35, 14]
 solution : [8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 38, 27, 39, 22, 35, 14]
 solution : [8]


Solution : [8] has cost 6.


Decide in level 5 among pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 38, 27, 39, 22, 35, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 35 with phase True at level 5

After decision at level 5
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 38, 27, 39, 22, 14]
 solution : [8, 35]


New level: 6
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 38, 27, 39, 22, 14]
 solution : [8, 35]


Before reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 5, 38, 27, 39, 22, 14]
 solution : [8, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, 2147483648), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 268435456), (39, 32768), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 6 : {33, 30}

After reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 27, 39, 22, 14]
 solution : [8, 35]


Before reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 27, 39, 22, 14]
 solution : [8, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 268435456), (39, 32768), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 268435456), (39, 32768), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 27, 39, 22, 14]
 solution : [8, 35]


Solution : [8, 35] has cost 19.


Before backtrack at level 6
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 27, 39, 22, 14]
 solution : [8, 35]

After backtrack at level 6
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 27, 39, 22, 14, 30, 33]
 solution : [8, 35]


Invert decision for 35 at level 5


New level: 6
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 27, 39, 22, 14, 30, 33]
 solution : [8]


Before reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 27, 39, 22, 14, 30, 33]
 solution : [8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 268435456), (39, 32768), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 27, 39, 22, 14, 30, 33]
 solution : [8]


Solution : [8] has cost 6.


Decide in level 6 among pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 27, 39, 22, 14, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 14 with phase True at level 6

After decision at level 6
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 27, 39, 22, 30, 33]
 solution : [8, 14]


New level: 7
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 27, 39, 22, 30, 33]
 solution : [8, 14]


Before reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 27, 39, 22, 30, 33]
 solution : [8, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : {4, 40, 15, 16, 17, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 27, 39, 30, 33]
 solution : [8, 14]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 27, 39, 30, 33]
 solution : [8, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 27, 39, 30, 33]
 solution : [8, 14]


Solution : [8, 14] has cost 13.


Decide in level 7 among pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 27, 39, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 7

After decision at level 7
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 39, 30, 33]
 solution : [8, 14, 27]


New level: 8
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 39, 30, 33]
 solution : [8, 14, 27]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 39, 30, 33]
 solution : [8, 14, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {33, 30, 39}

After reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38]
 solution : [8, 14, 27]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38]
 solution : [8, 14, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38]
 solution : [8, 14, 27]


Solution : [8, 14, 27] has cost 20.


Before backtrack at level 8
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38]
 solution : [8, 14, 27]

After backtrack at level 8
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 39, 30, 33]
 solution : [8, 14, 27]


Invert decision for 27 at level 7


New level: 8
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 39, 30, 33]
 solution : [8, 14]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 39, 30, 33]
 solution : [8, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 39, 30, 33]
 solution : [8, 14]


Solution : [8, 14] has cost 13.


Decide in level 8 among pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 39, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 26 with phase True at level 8

After decision at level 8
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 39, 30, 33]
 solution : [8, 14, 26]


New level: 9
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 39, 30, 33]
 solution : [8, 14, 26]


Before reduction : 
 pending  : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 39, 30, 33]
 solution : [8, 14, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {32, 33, 37, 6, 5, 38, 41, 42, 43, 39, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 14, 26]


Before reduction : 
 pending  : []
 solution : [8, 14, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [8, 14, 26]


Solution : [8, 14, 26] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [8, 14, 26]

After backtrack at level 9
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 39, 30, 33]
 solution : [8, 14, 26]


Invert decision for 26 at level 8


New level: 9
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 39, 30, 33]
 solution : [8, 14]


Before reduction : 
 pending  : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 38, 39, 30, 33]
 solution : [8, 14]

Essensial at level 9 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {32, 33, 37, 6, 38, 39, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 14, 5]


Before reduction : 
 pending  : []
 solution : [8, 14, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [8, 14, 5]


Solution : [8, 14, 5] has cost 17.


Before backtrack at level 9
 pending : []
 solution : [8, 14, 5]

After backtrack at level 9
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 39, 30, 33]
 solution : [8, 14]


Before backtrack at level 8
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 39, 30, 33]
 solution : [8, 14]

After backtrack at level 8
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 39, 30, 33, 26]
 solution : [8, 14]


Before backtrack at level 7
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 39, 30, 33, 26]
 solution : [8, 14]

After backtrack at level 7
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 39, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 27]
 solution : [8, 14]


Invert decision for 14 at level 6


New level: 7
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 39, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 27]
 solution : [8]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 39, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 27]
 solution : [8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 39, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 27]
 solution : [8]


Solution : [8] has cost 6.


Decide in level 7 among pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 39, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 39 with phase True at level 7

After decision at level 7
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 27]
 solution : [8, 39]


New level: 8
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 27]
 solution : [8, 39]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 27]
 solution : [8, 39]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 134217728), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 27]
 solution : [8, 39]


Solution : [8, 39] has cost 20.


Before backtrack at level 8
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 27]
 solution : [8, 39]

After backtrack at level 8
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 27]
 solution : [8, 39]


Invert decision for 39 at level 7


New level: 8
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 27]
 solution : [8]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 27]
 solution : [8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 134217728), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 27]
 solution : [8]


Solution : [8] has cost 6.


Decide in level 8 among pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 22, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 27]
 solution : [8, 22]


New level: 9
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 27]
 solution : [8, 22]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 27]
 solution : [8, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, 1073741824), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : {4, 40, 15, 16, 17, 18, 19, 20, 21, 23}

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26, 27]
 solution : [8, 22]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26, 27]
 solution : [8, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26, 27]
 solution : [8, 22]


Solution : [8, 22] has cost 13.


Decide in level 9 among pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 9

After decision at level 9
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26]
 solution : [8, 22, 27]


New level: 10
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26]
 solution : [8, 22, 27]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 26]
 solution : [8, 22, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : {33, 30}

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 26]
 solution : [8, 22, 27]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 26]
 solution : [8, 22, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 26]
 solution : [8, 22, 27]


Solution : [8, 22, 27] has cost 20.


Before backtrack at level 10
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 26]
 solution : [8, 22, 27]

After backtrack at level 10
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 26, 30, 33]
 solution : [8, 22, 27]


Invert decision for 27 at level 9


New level: 10
 pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 26, 30, 33]
 solution : [8, 22]


Before reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 26, 30, 33]
 solution : [8, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 26, 30, 33]
 solution : [8, 22]


Solution : [8, 22] has cost 13.


Decide in level 10 among pending : [5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 26, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 26, 30, 33]
 solution : [8, 22, 5]


New level: 11
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 26, 30, 33]
 solution : [8, 22, 5]


Before reduction : 
 pending  : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 26, 30, 33]
 solution : [8, 22, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 8388608), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 33, 37, 6, 38, 41, 42, 43, 47, 48, 51, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 22, 5]


Before reduction : 
 pending  : []
 solution : [8, 22, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [8, 22, 5]


Solution : [8, 22, 5] has cost 17.


Before backtrack at level 11
 pending : []
 solution : [8, 22, 5]

After backtrack at level 11
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 26, 30, 33]
 solution : [8, 22, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 26, 30, 33]
 solution : [8, 22]


Before reduction : 
 pending  : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 26, 30, 33]
 solution : [8, 22]

Essensial at level 11 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 33, 37, 6, 38, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [8, 22, 26]


Before reduction : 
 pending  : []
 solution : [8, 22, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [8, 22, 26]


Solution : [8, 22, 26] has cost 20.


Before backtrack at level 11
 pending : []
 solution : [8, 22, 26]

After backtrack at level 11
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33]
 solution : [8, 22]


Before backtrack at level 10
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33]
 solution : [8, 22]

After backtrack at level 10
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 5]
 solution : [8, 22]


Before backtrack at level 9
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 5]
 solution : [8, 22]

After backtrack at level 9
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 27]
 solution : [8, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 27]
 solution : [8]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 27]
 solution : [8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 27]
 solution : [8]


Solution : [8] has cost 6.


Decide in level 9 among pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 9

After decision at level 9
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 27]


New level: 10
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 27]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 30, 33, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 134217728), (39, -1), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : {33, 30}

After reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 27]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 134217728), (39, -1), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 134217728), (39, -1), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 27]


Solution : [8, 27] has cost 13.


Decide in level 10 among pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 38, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 134217728), (39, -1), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 27, 38]


New level: 11
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 27, 38]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 27, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 134217728), (39, -1), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 8388608), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, 8388608), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 1048576), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 27, 38]


Solution : [8, 27, 38] has cost 31.


Before backtrack at level 11
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 27, 38]

After backtrack at level 11
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 27, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 27]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 27]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 8388608), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, 8388608), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 1048576), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, -1), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 27]


Solution : [8, 27] has cost 13.


Decide in level 11 among pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, -1), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 15 with phase True at level 11

After decision at level 11
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 27, 15]


New level: 12
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 27, 15]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 27, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, -1), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, 262144), (18, 0), (19, 65536), (20, 0), (21, 0), (22, -1), (23, 4096), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 4096), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 12 : {18, 20, 4, 21}

After reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 19, 16, 17]
 solution : [8, 27, 15]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 19, 16, 17]
 solution : [8, 27, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, 262144), (18, 0), (19, 65536), (20, 0), (21, 0), (22, -1), (23, 4096), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 4096), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, 262144), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 4096), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 4096), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 19, 16, 17]
 solution : [8, 27, 15]


Solution : [8, 27, 15] has cost 22.


Before backtrack at level 12
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 19, 16, 17]
 solution : [8, 27, 15]

After backtrack at level 12
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 27, 15]


Invert decision for 15 at level 11


New level: 12
 pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 27]


Before reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 27]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, 262144), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 4096), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 4096), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, -1), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 27]


Solution : [8, 27] has cost 13.


Decide in level 12 among pending : [26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 19, 16, 17, 4, 21, 18, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, -1), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 26 with phase True at level 12

After decision at level 12
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 27, 26]


New level: 13
 pending : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 27, 26]


Before reduction : 
 pending  : [6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5, 23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 27, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, -1), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 13 : {32, 37, 6, 5, 41, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 27, 26]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 27, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 27, 26]


Solution : [8, 27, 26] has cost 20.


Before backtrack at level 13
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 27, 26]

After backtrack at level 13
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 27, 26]


Invert decision for 26 at level 12


New level: 13
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 27]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 5]
 solution : [8, 27]

Essensial at level 13 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 13 : {32, 37, 6, 41, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 27, 5]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 27, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 27, 5]


Solution : [8, 27, 5] has cost 17.


Before backtrack at level 13
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 27, 5]

After backtrack at level 13
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51]
 solution : [8, 27]


Before backtrack at level 12
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51]
 solution : [8, 27]

After backtrack at level 12
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 27]


Before backtrack at level 11
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26]
 solution : [8, 27]

After backtrack at level 11
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15]
 solution : [8, 27]


Before backtrack at level 10
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15]
 solution : [8, 27]

After backtrack at level 10
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15, 30, 33, 38]
 solution : [8, 27]


Invert decision for 27 at level 9


New level: 10
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15, 30, 33, 38]
 solution : [8]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15, 30, 33, 38]
 solution : [8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15, 30, 33, 38]
 solution : [8]


Solution : [8] has cost 6.


Decide in level 10 among pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15, 30, 33, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15, 30, 33]
 solution : [8, 38]


New level: 11
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15, 30, 33]
 solution : [8, 38]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15, 30, 33]
 solution : [8, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, -1), (40, 1048576), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15, 30, 33]
 solution : [8, 38]


Solution : [8, 38] has cost 24.


Before backtrack at level 11
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15, 30, 33]
 solution : [8, 38]

After backtrack at level 11
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15, 30, 33]
 solution : [8, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15, 30, 33]
 solution : [8]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15, 30, 33]
 solution : [8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, 33554432), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 4194304), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, -1), (40, 1048576), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, -1), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15, 30, 33]
 solution : [8]


Solution : [8] has cost 6.


Decide in level 11 among pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 5, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, -1), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 5 with phase True at level 11

After decision at level 11
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15, 30, 33]
 solution : [8, 5]


New level: 12
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15, 30, 33]
 solution : [8, 5]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 15, 30, 33]
 solution : [8, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, 134217728), (6, 1048576), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 67108864), (16, 8388608), (17, 16777216), (18, 524288), (19, 262144), (20, 33554432), (21, 1572864), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, -1), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {32, 33, 37, 6, 41, 42, 43, 47, 48, 51, 26, 29, 30}

After reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 15]
 solution : [8, 5]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 15]
 solution : [8, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20, 15]
 solution : [8, 5]


Solution : [8, 5] has cost 10.


Decide in level 12 among pending : [23, 40, 19, 16, 17, 4, 21, 18, 20, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 5, 15]


New level: 13
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 5, 15]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 5, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, 262144), (18, 0), (19, 65536), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {18, 20, 4, 21}

After reduction : 
 pending  : [23, 40, 19, 16, 17]
 solution : [8, 5, 15]


Before reduction : 
 pending  : [23, 40, 19, 16, 17]
 solution : [8, 5, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, 262144), (18, 0), (19, 65536), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, 262144), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17]
 solution : [8, 5, 15]


Solution : [8, 5, 15] has cost 19.


Before backtrack at level 13
 pending : [23, 40, 19, 16, 17]
 solution : [8, 5, 15]

After backtrack at level 13
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 5, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 5]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, 262144), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 5]


Solution : [8, 5] has cost 10.


Decide in level 13 among pending : [23, 40, 19, 16, 17, 4, 21, 18, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 5, 17]


New level: 14
 pending : [23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 5, 17]


Before reduction : 
 pending  : [23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 5, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 4194304), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 18, 19}

After reduction : 
 pending  : [23, 40, 4, 21, 20]
 solution : [8, 5, 17]


Before reduction : 
 pending  : [23, 40, 4, 21, 20]
 solution : [8, 5, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 4194304), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 20]
 solution : [8, 5, 17]


Solution : [8, 5, 17] has cost 17.


Before backtrack at level 14
 pending : [23, 40, 4, 21, 20]
 solution : [8, 5, 17]

After backtrack at level 14
 pending : [23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 5, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 5]


Before reduction : 
 pending  : [23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, -1), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 5]


Solution : [8, 5] has cost 10.


Decide in level 14 among pending : [23, 40, 4, 21, 20, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, -1), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [23, 40, 4, 21, 19, 16, 18]
 solution : [8, 5, 20]


New level: 15
 pending : [23, 40, 4, 21, 19, 16, 18]
 solution : [8, 5, 20]


Before reduction : 
 pending  : [23, 40, 4, 21, 19, 16, 18]
 solution : [8, 5, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, -1), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, 0), (19, 65536), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {18, 4, 21}

After reduction : 
 pending  : [23, 40, 19, 16]
 solution : [8, 5, 20]


Before reduction : 
 pending  : [23, 40, 19, 16]
 solution : [8, 5, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, 0), (19, 65536), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 19, 16]
 solution : [8, 5, 20]


Solution : [8, 5, 20] has cost 19.


Before backtrack at level 15
 pending : [23, 40, 19, 16]
 solution : [8, 5, 20]

After backtrack at level 15
 pending : [23, 40, 19, 16, 4, 21, 18]
 solution : [8, 5, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [23, 40, 19, 16, 4, 21, 18]
 solution : [8, 5]


Before reduction : 
 pending  : [23, 40, 19, 16, 4, 21, 18]
 solution : [8, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, -1), (18, 262144), (19, 262144), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 4, 21, 18]
 solution : [8, 5]


Solution : [8, 5] has cost 10.


Decide in level 15 among pending : [23, 40, 19, 16, 4, 21, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, -1), (18, 262144), (19, 262144), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 15

After decision at level 15
 pending : [23, 40, 19, 4, 21, 18]
 solution : [8, 5, 16]


New level: 16
 pending : [23, 40, 19, 4, 21, 18]
 solution : [8, 5, 16]


Before reduction : 
 pending  : [23, 40, 19, 4, 21, 18]
 solution : [8, 5, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, -1), (18, 262144), (19, 262144), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {18, 19}

After reduction : 
 pending  : [23, 40, 4, 21]
 solution : [8, 5, 16]


Before reduction : 
 pending  : [23, 40, 4, 21]
 solution : [8, 5, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 4, 21]
 solution : [8, 5, 16]


Solution : [8, 5, 16] has cost 17.


Before backtrack at level 16
 pending : [23, 40, 4, 21]
 solution : [8, 5, 16]

After backtrack at level 16
 pending : [23, 40, 4, 21, 19, 18]
 solution : [8, 5, 16]


Invert decision for 16 at level 15


New level: 16
 pending : [23, 40, 4, 21, 19, 18]
 solution : [8, 5]


Before reduction : 
 pending  : [23, 40, 4, 21, 19, 18]
 solution : [8, 5]

Essensial at level 16 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 18]
 solution : [8, 5, 19]


Before reduction : 
 pending  : [23, 40, 4, 21, 18]
 solution : [8, 5, 19]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 18]
 solution : [8, 5, 19]


Solution : [8, 5, 19] has cost 17.


Before backtrack at level 16
 pending : [23, 40, 4, 21, 18]
 solution : [8, 5, 19]

After backtrack at level 16
 pending : [23, 40, 4, 21, 18, 19]
 solution : [8, 5]


Before backtrack at level 15
 pending : [23, 40, 4, 21, 18, 19]
 solution : [8, 5]

After backtrack at level 15
 pending : [23, 40, 4, 21, 18, 19, 16]
 solution : [8, 5]


Before backtrack at level 14
 pending : [23, 40, 4, 21, 18, 19, 16]
 solution : [8, 5]

After backtrack at level 14
 pending : [23, 40, 4, 21, 18, 19, 16, 20]
 solution : [8, 5]


Before backtrack at level 13
 pending : [23, 40, 4, 21, 18, 19, 16, 20]
 solution : [8, 5]

After backtrack at level 13
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 5]


Before backtrack at level 12
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 5]

After backtrack at level 12
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 15]
 solution : [8, 5]


Invert decision for 5 at level 11


New level: 12
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 15]
 solution : [8]


Before reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 26, 30, 33, 15]
 solution : [8]

Essensial at level 12 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {32, 33, 37, 6, 41, 42, 43, 47, 48, 51, 29, 30}

After reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 26]


Before reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15]
 solution : [8, 26]


Solution : [8, 26] has cost 13.


Decide in level 12 among pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 26, 15]


New level: 13
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 26, 15]


Before reduction : 
 pending  : [23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 26, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, 262144), (18, 0), (19, 65536), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {18, 20, 4, 21}

After reduction : 
 pending  : [23, 40, 19, 16, 17]
 solution : [8, 26, 15]


Before reduction : 
 pending  : [23, 40, 19, 16, 17]
 solution : [8, 26, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, 262144), (18, 0), (19, 65536), (20, 0), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, 262144), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17]
 solution : [8, 26, 15]


Solution : [8, 26, 15] has cost 22.


Before backtrack at level 13
 pending : [23, 40, 19, 16, 17]
 solution : [8, 26, 15]

After backtrack at level 13
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 26, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 26]


Before reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, 262144), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 17, 4, 21, 18, 20]
 solution : [8, 26]


Solution : [8, 26] has cost 13.


Decide in level 13 among pending : [23, 40, 19, 16, 17, 4, 21, 18, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 26, 17]


New level: 14
 pending : [23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 26, 17]


Before reduction : 
 pending  : [23, 40, 19, 16, 4, 21, 18, 20]
 solution : [8, 26, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, 16777216), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 4194304), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 18, 19}

After reduction : 
 pending  : [23, 40, 4, 21, 20]
 solution : [8, 26, 17]


Before reduction : 
 pending  : [23, 40, 4, 21, 20]
 solution : [8, 26, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 4194304), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 20]
 solution : [8, 26, 17]


Solution : [8, 26, 17] has cost 20.


Before backtrack at level 14
 pending : [23, 40, 4, 21, 20]
 solution : [8, 26, 17]

After backtrack at level 14
 pending : [23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 26, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 26]


Before reduction : 
 pending  : [23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 26]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, -1), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 20, 19, 16, 18]
 solution : [8, 26]


Solution : [8, 26] has cost 13.


Decide in level 14 among pending : [23, 40, 4, 21, 20, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, -1), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [23, 40, 4, 21, 19, 16, 18]
 solution : [8, 26, 20]


New level: 15
 pending : [23, 40, 4, 21, 19, 16, 18]
 solution : [8, 26, 20]


Before reduction : 
 pending  : [23, 40, 4, 21, 19, 16, 18]
 solution : [8, 26, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, -1), (18, 262144), (19, 262144), (20, 16777216), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, 0), (19, 65536), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {18, 4, 21}

After reduction : 
 pending  : [23, 40, 19, 16]
 solution : [8, 26, 20]


Before reduction : 
 pending  : [23, 40, 19, 16]
 solution : [8, 26, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, 0), (19, 65536), (20, -1), (21, 0), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 19, 16]
 solution : [8, 26, 20]


Solution : [8, 26, 20] has cost 22.


Before backtrack at level 15
 pending : [23, 40, 19, 16]
 solution : [8, 26, 20]

After backtrack at level 15
 pending : [23, 40, 19, 16, 4, 21, 18]
 solution : [8, 26, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [23, 40, 19, 16, 4, 21, 18]
 solution : [8, 26]


Before reduction : 
 pending  : [23, 40, 19, 16, 4, 21, 18]
 solution : [8, 26]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, -1), (18, 262144), (19, 262144), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 19, 16, 4, 21, 18]
 solution : [8, 26]


Solution : [8, 26] has cost 13.


Decide in level 15 among pending : [23, 40, 19, 16, 4, 21, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, -1), (18, 262144), (19, 262144), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 15

After decision at level 15
 pending : [23, 40, 19, 4, 21, 18]
 solution : [8, 26, 16]


New level: 16
 pending : [23, 40, 19, 4, 21, 18]
 solution : [8, 26, 16]


Before reduction : 
 pending  : [23, 40, 19, 4, 21, 18]
 solution : [8, 26, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8388608), (17, -1), (18, 262144), (19, 262144), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {18, 19}

After reduction : 
 pending  : [23, 40, 4, 21]
 solution : [8, 26, 16]


Before reduction : 
 pending  : [23, 40, 4, 21]
 solution : [8, 26, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 4, 21]
 solution : [8, 26, 16]


Solution : [8, 26, 16] has cost 20.


Before backtrack at level 16
 pending : [23, 40, 4, 21]
 solution : [8, 26, 16]

After backtrack at level 16
 pending : [23, 40, 4, 21, 19, 18]
 solution : [8, 26, 16]


Invert decision for 16 at level 15


New level: 16
 pending : [23, 40, 4, 21, 19, 18]
 solution : [8, 26]


Before reduction : 
 pending  : [23, 40, 4, 21, 19, 18]
 solution : [8, 26]

Essensial at level 16 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 18]
 solution : [8, 26, 19]


Before reduction : 
 pending  : [23, 40, 4, 21, 18]
 solution : [8, 26, 19]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 4, 21, 18]
 solution : [8, 26, 19]


Solution : [8, 26, 19] has cost 20.


Before backtrack at level 16
 pending : [23, 40, 4, 21, 18]
 solution : [8, 26, 19]

After backtrack at level 16
 pending : [23, 40, 4, 21, 18, 19]
 solution : [8, 26]


Before backtrack at level 15
 pending : [23, 40, 4, 21, 18, 19]
 solution : [8, 26]

After backtrack at level 15
 pending : [23, 40, 4, 21, 18, 19, 16]
 solution : [8, 26]


Before backtrack at level 14
 pending : [23, 40, 4, 21, 18, 19, 16]
 solution : [8, 26]

After backtrack at level 14
 pending : [23, 40, 4, 21, 18, 19, 16, 20]
 solution : [8, 26]


Before backtrack at level 13
 pending : [23, 40, 4, 21, 18, 19, 16, 20]
 solution : [8, 26]

After backtrack at level 13
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 26]


Before backtrack at level 12
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17]
 solution : [8, 26]

After backtrack at level 12
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15]
 solution : [8]


Before backtrack at level 11
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15]
 solution : [8]

After backtrack at level 11
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5]
 solution : [8]


Before backtrack at level 10
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5]
 solution : [8]

After backtrack at level 10
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5, 38]
 solution : [8]


Before backtrack at level 9
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5, 38]
 solution : [8]

After backtrack at level 9
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5, 38, 27]
 solution : [8]


Before backtrack at level 8
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5, 38, 27]
 solution : [8]

After backtrack at level 8
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5, 38, 27, 22]
 solution : [8]


Before backtrack at level 7
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5, 38, 27, 22]
 solution : [8]

After backtrack at level 7
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5, 38, 27, 22, 39]
 solution : [8]


Before backtrack at level 6
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5, 38, 27, 22, 39]
 solution : [8]

After backtrack at level 6
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5, 38, 27, 22, 39, 14]
 solution : [8]


Before backtrack at level 5
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5, 38, 27, 22, 39, 14]
 solution : [8]

After backtrack at level 5
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5, 38, 27, 22, 39, 14, 35]
 solution : [8]


Before backtrack at level 4
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5, 38, 27, 22, 39, 14, 35]
 solution : [8]

After backtrack at level 4
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5, 38, 27, 22, 39, 14, 35, 28]
 solution : [8]


Before backtrack at level 3
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5, 38, 27, 22, 39, 14, 35, 28]
 solution : [8]

After backtrack at level 3
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5, 38, 27, 22, 39, 14, 35, 28, 24]
 solution : [8]


Before backtrack at level 2
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5, 38, 27, 22, 39, 14, 35, 28, 24]
 solution : [8]

After backtrack at level 2
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5, 38, 27, 22, 39, 14, 35, 28, 24, 10]
 solution : [8]


Before backtrack at level 1
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5, 38, 27, 22, 39, 14, 35, 28, 24, 10]
 solution : [8]

After backtrack at level 1
 pending : [23, 40, 4, 21, 18, 19, 16, 20, 17, 26, 6, 29, 32, 37, 41, 42, 43, 47, 48, 51, 30, 33, 15, 5, 38, 27, 22, 39, 14, 35, 28, 24, 10, 7]
 solution : [8]


=====================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=====================================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: total qcost: 14

[MIN NOTE]: maximum branch and bound depth: 16

Definitions (length=2)

invariant [def_didNotPromise] didNotPromise(A) = forall P. ~promise(A,P) # definition

invariant [def_chosenAt] chosenAt(Q,P) = forall A. member(A,Q) -> promise(A,P) # definition

Equality Relations (length=0)

Solution 0 : [8, 24, 5] (length = 3)

invariant [invar_8] forall PROPOSER1,PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1 # qcost: 6

invariant [invar_24] forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) # qcost: 4

invariant [invar_5] forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) # qcost: 4




[QRM NOTE]: Time elapsed since start: 2.487 seconds

[QRM NOTE]: Time elapsed since last: 1.410 seconds

[QRM NOTE]: Peak memory: 2975436 bytes


=========================================================================================================

	[IVY_CHECK]: Ivy Check on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=========================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_8
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_24
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_8 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_24 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_24 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_24 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_24 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 49: assumption

OK
[IVY_CHECK RESULT]: PASS

[(R & P) & T & ~(R' & P')]: unsatisfiable

[Strengthening Assertion]: ((forall A. didNotPromise(A) <-> (forall P. ~promise(A,P))) & (forall P,Q. chosenAt(Q,P) <-> (forall A. member(A,Q) -> promise(A,P))) & (forall PROPOSER1,PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1) & (forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))) & (forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0)))

[QRM NOTE]: Time elapsed since start: 4.706 seconds

[QRM NOTE]: Time elapsed since last: 2.219 seconds

[QRM NOTE]: Peak memory: 1994303 bytes


********************************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3

********************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy -s acceptor=4,proposer=3 -f 2 -g -w -r -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=4,proposer=3]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 34

[FW NOTE]: number of interpreted atoms (e.g. member,le): 16

[FW NOTE]: symmetric group order: 144

[FW NOTE]: number of branching actions: 27

ivy_to_cpp target=qrm simple-election.acceptor_4_proposer_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_4_proposer_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_4_proposer_3.finite.cpp simple-election.acceptor_4_proposer_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_4_proposer_3.finite.o simple-election.acceptor_4_proposer_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 7.359 seconds

[QRM NOTE]: Time elapsed since last: 7.359 seconds

[QRM NOTE]: Peak memory: 1194689 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 8

[FW NOTE]: number of total reachable states:        656

[FW NOTE]: number of dfs representative states:     34

[FW NOTE]: number of dfs non-representative states: 622


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=4,proposer=3]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2', 'acceptor3']
sort: proposer=['proposer0', 'proposer1', 'proposer2']
sort: quorum=['quorum__acceptor0_acceptor1_acceptor2', 'quorum__acceptor0_acceptor1_acceptor3', 'quorum__acceptor0_acceptor2_acceptor3', 'quorum__acceptor1_acceptor2_acceptor3']
predicate: promise('acceptor', 'proposer')
predicate: didNotPromise('acceptor',)
predicate: leader('proposer',)
predicate: member('acceptor', 'quorum')
predicate: chosenAt('quorum', 'proposer')
predicate: start('proposer',)
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1_acceptor2)': '1', 'member(acceptor0,quorum__acceptor0_acceptor1_acceptor3)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2_acceptor3)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2_acceptor3)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1_acceptor2)': '1', 'member(acceptor1,quorum__acceptor0_acceptor1_acceptor3)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2_acceptor3)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2_acceptor3)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1_acceptor3)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2_acceptor3)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2_acceptor3)': '1', 'member(acceptor3,quorum__acceptor0_acceptor1_acceptor2)': '0', 'member(acceptor3,quorum__acceptor0_acceptor1_acceptor3)': '1', 'member(acceptor3,quorum__acceptor0_acceptor2_acceptor3)': '1', 'member(acceptor3,quorum__acceptor1_acceptor2_acceptor3)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor2,proposer2)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor3,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor3,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor3,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor3,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor3,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor3,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor3,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor3,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor3,proposer2)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'didNotPromise(acceptor3)', 'leader(proposer0)', 'leader(proposer1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)', 'promise(acceptor3,proposer0)', 'promise(acceptor3,proposer1)', 'promise(acceptor3,proposer2)', 'start(proposer0)', 'start(proposer1)', 'start(proposer2)']
representative states : 257698098615, 257698164151, 257698295223, 257698557367, 120528039351, 51842117047, 412355653047, 160803882790327, 160806030273975, 275453570487, 277601054135, 414503136695, 17490767287, 311946679, 312995255, 51875671479, 17532710327, 120527777207, 51841854903, 412355390903, 160803882528183, 160806030011831, 275453308343, 277600791991, 414502874551, 17490505143, 311684535, 51875409335, 120527646135, 51841723831, 412355259831, 160803882397111, 160806029880759, 414502743479


=== State Orbit 0 =====================
size : 1
repr state: 0000000000001111000000000000000000
lex min decimal: 257698098615
states:
0000000000001111000000000000000000




=== State Orbit 1 =====================
size : 3
repr state: 0000000000001111000000000000000100
lex min decimal: 257698164151
states:
0000000000001111000000000000000010
0000000000001111000000000000000001
0000000000001111000000000000000100




=== State Orbit 2 =====================
size : 3
repr state: 0000000000001111000000000000000110
lex min decimal: 257698295223
states:
0000000000001111000000000000000110
0000000000001111000000000000000101
0000000000001111000000000000000011




=== State Orbit 3 =====================
size : 1
repr state: 0000000000001111000000000000000111
lex min decimal: 257698557367
states:
0000000000001111000000000000000111




=== State Orbit 4 =====================
size : 12
repr state: 0000000000000111000100000000000111
lex min decimal: 120528039351
states:
0000000000000111000100000000000111
0000000000001101000000000001000111
0000000000000111000010000000000111
0000000000000111000001000000000111
0000000000001110000000000000010111
0000000000001011000000010000000111
0000000000001101000000000100000111
0000000000001101000000000010000111
0000000000001011000000100000000111
0000000000001110000000000000001111
0000000000001011000000001000000111
0000000000001110000000000000100111




=== State Orbit 5 =====================
size : 18
repr state: 0000000000000011000100100000000111
lex min decimal: 51842117047
states:
0000000000000110000010000000010111
0000000000001001000000100100000111
0000000000000011000100100000000111
0000000000001001000000010010000111
0000000000001100000000000001001111
0000000000001010000000001000001111
0000000000000101000100000100000111
0000000000001010000000010000010111
0000000000000011000001001000000111
0000000000000101000010000010000111
0000000000000110000100000000100111
0000000000000101000001000001000111
0000000000000011000010010000000111
0000000000000110000001000000001111
0000000000001001000000001001000111
0000000000001010000000100000100111
0000000000001100000000000010010111
0000000000001100000000000100100111




=== State Orbit 6 =====================
size : 12
repr state: 1000000000000001000100100100000111
lex min decimal: 412355653047
states:
0100000000000001000010010010000111
0000000000101000000000010010010111
0000000001001000000000100100100111
0001000000000010000100100000100111
0000010000000010000001001000001111
0000000100000100000010000010010111
0000000010000100000001000001001111
0000100000000010000010010000010111
0000001000000100000100000100100111
0000000000011000000000001001001111
1000000000000001000100100100000111
0010000000000001000001001001000111




=== State Orbit 7 =====================
size : 3
repr state: 1001001001000000000100100100100111
lex min decimal: 160803882790327
states:
1001001001000000000100100100100111
0100100100100000000010010010010111
0010010010010000000001001001001111




=== State Orbit 8 =====================
size : 3
repr state: 1001001001000000100100100100100111
lex min decimal: 160806030273975
states:
1001001001000000100100100100100111
0010010010010000001001001001001111
0100100100100000010010010010010111




=== State Orbit 9 =====================
size : 24
repr state: 1000000000000000000100100100010111
lex min decimal: 275453570487
states:
0000001000000000000100001100100111
0001000000000000000100100010100111
1000000000000000000100100100010111
0000010000000000000001001010001111
0000000000010000000010001001001111
0000000100000000000010001010010111
0000000001000000000001100100100111
0000000000100000000001010010010111
0100000000000000000010010010001111
0000001000000000000100010100100111
0100000000000000000010010010100111
0000000000100000000100010010010111
1000000000000000000100100100001111
0000000001000000000010100100100111
0000000010000000000001010001001111
0000100000000000000010010001010111
0001000000000000000100100001100111
0000010000000000000001001100001111
0000000010000000000001100001001111
0010000000000000000001001001100111
0000000000010000000100001001001111
0000100000000000000010010100010111
0000000100000000000010100010010111
0010000000000000000001001001010111




=== State Orbit 10 =====================
size : 24
repr state: 1000000000000000100100100100010111
lex min decimal: 277601054135
states:
0000000001000000100010100100100111
1000000000000000100100100100001111
0000010000000000001001001010001111
0000000000100000010100010010010111
0000000000100000010001010010010111
0100000000000000010010010010100111
0000000100000000010010001010010111
0000001000000000100100001100100111
0000000000010000001100001001001111
0000100000000000010010010001010111
0001000000000000100100100001100111
0100000000000000010010010010001111
0000100000000000010010010100010111
0000000010000000001001100001001111
1000000000000000100100100100010111
0000010000000000001001001100001111
0000001000000000100100010100100111
0000000010000000001001010001001111
0001000000000000100100100010100111
0010000000000000001001001001010111
0000000100000000010010100010010111
0010000000000000001001001001100111
0000000001000000100001100100100111
0000000000010000001010001001001111




=== State Orbit 11 =====================
size : 12
repr state: 1000000000000001100100100100000111
lex min decimal: 414503136695
states:
0000010000000010001001001000001111
0001000000000010100100100000100111
0010000000000001001001001001000111
1000000000000001100100100100000111
0000100000000010010010010000010111
0000000010000100001001000001001111
0000000001001000100000100100100111
0000000000011000001000001001001111
0000000000101000010000010010010111
0100000000000001010010010010000111
0000000100000100010010000010010111
0000001000000100100100000100100111




=== State Orbit 12 =====================
size : 72
repr state: 0000000000000001000100100010000111
lex min decimal: 17490767287
states:
0000000000000100000010000100010111
0000000000001000000000010010001111
0000000000000010000010001000010111
0000000000001000000000010010100111
0000000000000100000010000010100111
0000000000000010000001010000010111
0000000000000100000001000010010111
0000000000000001000100100001000111
0000000000000010000001001000100111
0000000000000100000100000010100111
0000000000001000000000001001010111
0000000000001000000000001100001111
0000000000001000000000001010010111
0000000000000100000010000001010111
0000000000000010000001010000001111
0000000000001000000000100100001111
0000000000000100000010000100100111
0000000000000100000010000010001111
0000000000000010000100010000100111
0000000000001000000000010001010111
0000000000001000000000100010100111
0000000000000001000010001001000111
0000000000001000000000010001001111
0000000000000001000100100010000111
0000000000000100000100000100010111
0000000000000010000010100000100111
0000000000000100000100000001100111
0000000000000001000001100001000111
0000000000001000000000001001100111
0000000000000010000100100000010111
0000000000000001000001001100000111
0000000000000001000001010010000111
0000000000000100000100000001001111
0000000000000100000010000001001111
0000000000000010000010100000010111
0000000000000100000001000100001111
0000000000000010000001100000001111
0000000000000100000001000010001111
0000000000000001000001100100000111
0000000000000001000100001001000111
0000000000000001000100010010000111
0000000000001000000000001010001111
0000000000000010000100001000001111
0000000000000001000010100010000111
0000000000000001000010001010000111
0000000000000001000010010100000111
0000000000000010000100100000001111
0000000000001000000000001100100111
0000000000001000000000100001001111
0000000000001000000000100010010111
0000000000000010000100010000010111
0000000000001000000000100001100111
0000000000000010000010010000001111
0000000000000001000001010001000111
0000000000000100000100000100001111
0000000000000001000010100100000111
0000000000000001000010010001000111
0000000000001000000000010100010111
0000000000001000000000100100010111
0000000000000010000100001000100111
0000000000000010000010001000001111
0000000000001000000000010100100111
0000000000000010000001001000010111
0000000000000001000100010100000111
0000000000000100000100000010010111
0000000000000010000001100000100111
0000000000000010000010010000100111
0000000000000001000100001100000111
0000000000000001000001001010000111
0000000000000100000001000001010111
0000000000000100000001000001100111
0000000000000100000001000100100111




=== State Orbit 13 =====================
size : 18
repr state: 0000000000000000000100100010010111
lex min decimal: 311946679
states:
0000000000000000000100010100010111
0000000000000000000100100010010111
0000000000000000000100010010100111
0000000000000000000010001001010111
0000000000000000000100001001100111
0000000000000000000010100100010111
0000000000000000000001100001100111
0000000000000000000001010010001111
0000000000000000000010010100100111
0000000000000000000001001010010111
0000000000000000000010010001001111
0000000000000000000100001100001111
0000000000000000000001010001010111
0000000000000000000001001100100111
0000000000000000000010001010001111
0000000000000000000010100010100111
0000000000000000000001100100001111
0000000000000000000100100001001111




=== State Orbit 14 =====================
size : 36
repr state: 0000000000000000000100100010001111
lex min decimal: 312995255
states:
0000000000000000000010010100001111
0000000000000000000010001010100111
0000000000000000000001100010001111
0000000000000000000100010001010111
0000000000000000000100001010010111
0000000000000000000100010001001111
0000000000000000000010001001100111
0000000000000000000010001100001111
0000000000000000000001010001100111
0000000000000000000001010100100111
0000000000000000000001100010010111
0000000000000000000001100001010111
0000000000000000000010100001010111
0000000000000000000001100100010111
0000000000000000000001100010100111
0000000000000000000100010010001111
0000000000000000000010100001001111
0000000000000000000001001010100111
0000000000000000000001010010100111
0000000000000000000010001100100111
0000000000000000000100001001010111
0000000000000000000010001100010111
0000000000000000000100100010001111
0000000000000000000001010100001111
0000000000000000000010010001100111
0000000000000000000100010001100111
0000000000000000000010100100001111
0000000000000000000100001010001111
0000000000000000000100010100001111
0000000000000000000010100010001111
0000000000000000000100001010100111
0000000000000000000001001100010111
0000000000000000000100100001010111
0000000000000000000010100001100111
0000000000000000000001010100010111
0000000000000000000100001100010111




=== State Orbit 15 =====================
size : 36
repr state: 0000000000000011000100010000000111
lex min decimal: 51875671479
states:
0000000000001010000000001000010111
0000000000000011000010001000000111
0000000000000011000100010000000111
0000000000001001000000001100000111
0000000000001010000000010000100111
0000000000001100000000000010100111
0000000000001100000000000001010111
0000000000001001000000010100000111
0000000000001010000000100000001111
0000000000000101000100000010000111
0000000000000101000100000001000111
0000000000000110000001000000100111
0000000000001100000000000010001111
0000000000001100000000000001100111
0000000000000101000010000100000111
0000000000000110000100000000001111
0000000000001001000000100010000111
0000000000001010000000010000001111
0000000000000110000010000000001111
0000000000000110000100000000010111
0000000000000011000010100000000111
0000000000000011000100001000000111
0000000000001010000000001000100111
0000000000001100000000000100010111
0000000000001100000000000100001111
0000000000000110000001000000010111
0000000000000101000010000001000111
0000000000000110000010000000100111
0000000000000101000001000010000111
0000000000000011000001010000000111
0000000000000011000001100000000111
0000000000000101000001000100000111
0000000000001001000000001010000111
0000000000001001000000100001000111
0000000000001001000000010001000111
0000000000001010000000100000010111




=== State Orbit 16 =====================
size : 24
repr state: 0000000000000001000100010001000111
lex min decimal: 17532710327
states:
0000000000000100000100000010001111
0000000000000001000001100010000111
0000000000001000000000001010100111
0000000000000001000010100001000111
0000000000001000000000010001100111
0000000000000010000010001000100111
0000000000000010000100001000010111
0000000000000100000010000001100111
0000000000000001000100010001000111
0000000000000010000001010000100111
0000000000000100000001000010100111
0000000000001000000000010100001111
0000000000000010000010100000001111
0000000000000001000010001100000111
0000000000001000000000100010001111
0000000000000100000100000001010111
0000000000000100000001000100010111
0000000000000001000001010100000111
0000000000001000000000001100010111
0000000000000001000100001010000111
0000000000000010000001100000010111
0000000000000010000100010000001111
0000000000000100000010000100001111
0000000000001000000000100001010111




=== State Orbit 17 =====================
size : 24
repr state: 0000000000000111000100000000000110
lex min decimal: 120527777207
states:
0000000000001011000000001000000011
0000000000001101000000000010000011
0000000000001011000000010000000110
0000000000000111000010000000000110
0000000000000111000001000000000101
0000000000001101000000000001000101
0000000000001101000000000100000101
0000000000001011000000100000000110
0000000000001110000000000000100101
0000000000001011000000010000000011
0000000000001110000000000000001101
0000000000001110000000000000010011
0000000000001101000000000010000110
0000000000001101000000000001000011
0000000000001101000000000100000110
0000000000001110000000000000001011
0000000000001110000000000000010110
0000000000001011000000100000000101
0000000000000111000100000000000110
0000000000000111000001000000000011
0000000000000111000100000000000101
0000000000001011000000001000000101
0000000000001110000000000000100110
0000000000000111000010000000000011




=== State Orbit 18 =====================
size : 36
repr state: 0000000000000011000100100000000110
lex min decimal: 51841854903
states:
0000000000000110000100000000100101
0000000000001001000000010010000110
0000000000001010000000001000001101
0000000000000101000100000100000110
0000000000000110000010000000010110
0000000000001100000000000001001101
0000000000000011000001001000000101
0000000000001001000000001001000101
0000000000001100000000000010010110
0000000000001010000000100000100101
0000000000000110000100000000100110
0000000000000101000010000010000110
0000000000001100000000000010010011
0000000000000110000001000000001011
0000000000001010000000010000010110
0000000000001100000000000100100101
0000000000000101000010000010000011
0000000000001001000000001001000011
0000000000000101000001000001000101
0000000000001010000000001000001011
0000000000000011000010010000000110
0000000000000101000001000001000011
0000000000001001000000010010000011
0000000000000011000010010000000011
0000000000000011000100100000000110
0000000000000110000010000000010011
0000000000001001000000100100000110
0000000000000011000100100000000101
0000000000001010000000010000010011
0000000000000011000001001000000011
0000000000000110000001000000001101
0000000000001010000000100000100110
0000000000000101000100000100000101
0000000000001100000000000100100110
0000000000001100000000000001001011
0000000000001001000000100100000101




=== State Orbit 19 =====================
size : 24
repr state: 1000000000000001000100100100000110
lex min decimal: 412355390903
states:
1000000000000001000100100100000101
0100000000000001000010010010000011
0010000000000001000001001001000011
0001000000000010000100100000100101
0001000000000010000100100000100110
0000000000101000000000010010010110
0000001000000100000100000100100110
0000000001001000000000100100100101
0000010000000010000001001000001101
0100000000000001000010010010000110
0000010000000010000001001000001011
0000100000000010000010010000010011
0000000100000100000010000010010110
0000000001001000000000100100100110
0010000000000001000001001001000101
0000000010000100000001000001001101
0000000000011000000000001001001101
0000100000000010000010010000010110
0000000100000100000010000010010011
0000000000011000000000001001001011
1000000000000001000100100100000110
0000001000000100000100000100100101
0000000010000100000001000001001011
0000000000101000000000010010010011




=== State Orbit 20 =====================
size : 6
repr state: 1001001001000000000100100100100110
lex min decimal: 160803882528183
states:
0010010010010000000001001001001011
1001001001000000000100100100100110
0100100100100000000010010010010110
0100100100100000000010010010010011
0010010010010000000001001001001101
1001001001000000000100100100100101




=== State Orbit 21 =====================
size : 6
repr state: 1001001001000000100100100100100110
lex min decimal: 160806030011831
states:
0010010010010000001001001001001101
1001001001000000100100100100100110
1001001001000000100100100100100101
0010010010010000001001001001001011
0100100100100000010010010010010011
0100100100100000010010010010010110




=== State Orbit 22 =====================
size : 24
repr state: 1000000000000000000100100100010110
lex min decimal: 275453308343
states:
0000000010000000000001100001001101
0000000010000000000001010001001011
0001000000000000000100100010100110
1000000000000000000100100100010110
0000100000000000000010010100010110
0000000000010000000100001001001101
1000000000000000000100100100001101
0000000000100000000100010010010110
0010000000000000000001001001100101
0000010000000000000001001010001011
0010000000000000000001001001010011
0000001000000000000100001100100101
0000000100000000000010100010010110
0000100000000000000010010001010011
0100000000000000000010010010100110
0000000001000000000001100100100101
0000001000000000000100010100100110
0000000100000000000010001010010011
0100000000000000000010010010001011
0000000000010000000010001001001011
0000000000100000000001010010010011
0000010000000000000001001100001101
0000000001000000000010100100100110
0001000000000000000100100001100101




=== State Orbit 23 =====================
size : 24
repr state: 1000000000000000100100100100010110
lex min decimal: 277600791991
states:
0000000000100000010001010010010011
0000010000000000001001001100001101
0000000000010000001010001001001011
0000010000000000001001001010001011
0010000000000000001001001001100101
0000100000000000010010010100010110
0000000001000000100010100100100110
0000000001000000100001100100100101
0001000000000000100100100001100101
0001000000000000100100100010100110
0000000000100000010100010010010110
0000000010000000001001100001001101
1000000000000000100100100100010110
0000001000000000100100010100100110
0010000000000000001001001001010011
0000000100000000010010001010010011
0100000000000000010010010010100110
0100000000000000010010010010001011
0000000010000000001001010001001011
0000000100000000010010100010010110
1000000000000000100100100100001101
0000001000000000100100001100100101
0000100000000000010010010001010011
0000000000010000001100001001001101




=== State Orbit 24 =====================
size : 24
repr state: 1000000000000001100100100100000110
lex min decimal: 414502874551
states:
0000000100000100010010000010010011
0000000100000100010010000010010110
0100000000000001010010010010000110
0000001000000100100100000100100101
0000000000101000010000010010010011
0010000000000001001001001001000011
1000000000000001100100100100000110
0000000010000100001001000001001011
0010000000000001001001001001000101
0000000000011000001000001001001101
0000000010000100001001000001001101
0100000000000001010010010010000011
0000001000000100100100000100100110
0000100000000010010010010000010011
0000100000000010010010010000010110
0000010000000010001001001000001101
0000000001001000100000100100100101
1000000000000001100100100100000101
0000000000011000001000001001001011
0001000000000010100100100000100101
0001000000000010100100100000100110
0000010000000010001001001000001011
0000000001001000100000100100100110
0000000000101000010000010010010110




=== State Orbit 25 =====================
size : 72
repr state: 0000000000000001000100100010000110
lex min decimal: 17490505143
states:
0000000000000001000010010001000011
0000000000000001000100001100000101
0000000000000001000010001010000011
0000000000000010000010001000010011
0000000000000010000001001000100101
0000000000001000000000010010100110
0000000000000010000001010000001011
0000000000001000000000010100010110
0000000000001000000000001010001011
0000000000001000000000001001010011
0000000000000010000100100000010110
0000000000000001000100010100000110
0000000000000010000010010000001011
0000000000000001000001100001000101
0000000000000100000010000100010110
0000000000001000000000100001100101
0000000000000010000100010000100110
0000000000000100000100000001001101
0000000000000100000010000010100110
0000000000000010000100001000001101
0000000000000100000010000100100110
0000000000000100000010000001001011
0000000000000010000100010000010110
0000000000000001000100010010000110
0000000000000001000100100001000101
0000000000000010000100100000001101
0000000000000100000100000001100101
0000000000000100000001000010010011
0000000000000100000100000010100110
0000000000000010000001001000010011
0000000000001000000000100100001101
0000000000001000000000001100001101
0000000000001000000000100010100110
0000000000001000000000010001001011
0000000000000001000001010010000011
0000000000001000000000010001010011
0000000000000010000100001000100101
0000000000001000000000001001100101
0000000000000100000001000100100101
0000000000000100000001000001010011
0000000000001000000000010010001011
0000000000000100000001000010001011
0000000000000100000001000001100101
0000000000000010000010100000010110
0000000000000100000100000100010110
0000000000001000000000100001001101
0000000000000100000010000001010011
0000000000001000000000001100100101
0000000000000100000001000100001101
0000000000000001000010100010000110
0000000000001000000000001010010011
0000000000000010000001100000001101
0000000000000001000100001001000101
0000000000000001000010001001000011
0000000000000001000010010100000110
0000000000000010000001010000010011
0000000000000010000010100000100110
0000000000000001000100100010000110
0000000000000010000010001000001011
0000000000000001000001010001000011
0000000000000001000001001010000011
0000000000000001000010100100000110
0000000000000100000100000100001101
0000000000001000000000100100010110
0000000000001000000000100010010110
0000000000000100000010000010001011
0000000000000001000001001100000101
0000000000000010000001100000100101
0000000000001000000000010100100110
0000000000000001000001100100000101
0000000000000010000010010000100110
0000000000000100000100000010010110




=== State Orbit 26 =====================
size : 18
repr state: 0000000000000000000100100010010110
lex min decimal: 311684535
states:
0000000000000000000001010001010011
0000000000000000000001001100100101
0000000000000000000010100010100110
0000000000000000000010001001010011
0000000000000000000001100001100101
0000000000000000000010010100100110
0000000000000000000001100100001101
0000000000000000000100100010010110
0000000000000000000100001100001101
0000000000000000000001001010010011
0000000000000000000010100100010110
0000000000000000000100010100010110
0000000000000000000100001001100101
0000000000000000000010010001001011
0000000000000000000100100001001101
0000000000000000000001010010001011
0000000000000000000010001010001011
0000000000000000000100010010100110




=== State Orbit 27 =====================
size : 36
repr state: 0000000000000011000100010000000110
lex min decimal: 51875409335
states:
0000000000000011000100010000000110
0000000000000110000100000000001101
0000000000001100000000000100010110
0000000000000101000010000001000011
0000000000000110000001000000100101
0000000000000101000100000010000110
0000000000000110000010000000100110
0000000000000011000010100000000110
0000000000000011000001100000000101
0000000000000011000010001000000011
0000000000001001000000010001000011
0000000000001100000000000010100110
0000000000000101000001000010000011
0000000000001100000000000001010011
0000000000001010000000100000010110
0000000000001010000000010000100110
0000000000001100000000000100001101
0000000000001100000000000010001011
0000000000001001000000100010000110
0000000000001010000000001000100101
0000000000000011000001010000000011
0000000000001010000000010000001011
0000000000000101000010000100000110
0000000000000110000001000000010011
0000000000001001000000001010000011
0000000000001100000000000001100101
0000000000001010000000001000010011
0000000000001001000000010100000110
0000000000000110000100000000010110
0000000000000101000100000001000101
0000000000000101000001000100000101
0000000000000011000100001000000101
0000000000001001000000001100000101
0000000000001010000000100000001101
0000000000001001000000100001000101
0000000000000110000010000000001011




=== State Orbit 28 =====================
size : 12
repr state: 0000000000000111000100000000000100
lex min decimal: 120527646135
states:
0000000000001110000000000000001001
0000000000001101000000000100000100
0000000000000111000100000000000100
0000000000001110000000000000100100
0000000000001011000000010000000010
0000000000001110000000000000010010
0000000000000111000010000000000010
0000000000001101000000000010000010
0000000000001011000000100000000100
0000000000000111000001000000000001
0000000000001011000000001000000001
0000000000001101000000000001000001




=== State Orbit 29 =====================
size : 18
repr state: 0000000000000011000100100000000100
lex min decimal: 51841723831
states:
0000000000001001000000100100000100
0000000000001010000000001000001001
0000000000001001000000010010000010
0000000000000011000100100000000100
0000000000001010000000010000010010
0000000000001100000000000001001001
0000000000001100000000000010010010
0000000000000101000001000001000001
0000000000000110000100000000100100
0000000000001010000000100000100100
0000000000000110000001000000001001
0000000000000011000001001000000001
0000000000001100000000000100100100
0000000000001001000000001001000001
0000000000000101000010000010000010
0000000000000011000010010000000010
0000000000000110000010000000010010
0000000000000101000100000100000100




=== State Orbit 30 =====================
size : 12
repr state: 1000000000000001000100100100000100
lex min decimal: 412355259831
states:
0000010000000010000001001000001001
0010000000000001000001001001000001
0000001000000100000100000100100100
0100000000000001000010010010000010
0000000000101000000000010010010010
0000100000000010000010010000010010
0000000010000100000001000001001001
0001000000000010000100100000100100
0000000001001000000000100100100100
0000000100000100000010000010010010
0000000000011000000000001001001001
1000000000000001000100100100000100




=== State Orbit 31 =====================
size : 3
repr state: 1001001001000000000100100100100100
lex min decimal: 160803882397111
states:
0100100100100000000010010010010010
1001001001000000000100100100100100
0010010010010000000001001001001001




=== State Orbit 32 =====================
size : 3
repr state: 1001001001000000100100100100100100
lex min decimal: 160806029880759
states:
0100100100100000010010010010010010
1001001001000000100100100100100100
0010010010010000001001001001001001




=== State Orbit 33 =====================
size : 12
repr state: 1000000000000001100100100100000100
lex min decimal: 414502743479
states:
0001000000000010100100100000100100
0000000100000100010010000010010010
0100000000000001010010010010000010
0000010000000010001001001000001001
0000000000101000010000010010010010
1000000000000001100100100100000100
0000001000000100100100000100100100
0000000010000100001001000001001001
0010000000000001001001001001000001
0000000000011000001000001001001001
0000100000000010010010010000010010
0000000001001000100000100100100100



[QRM NOTE]: Time elapsed since start: 9.489 seconds

[QRM NOTE]: Time elapsed since last: 2.130 seconds

[QRM NOTE]: Peak memory: 1405387 bytes


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=4,proposer=3]

=========================================================================================================================================

[REACH_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 11.714 seconds

[QRM NOTE]: Time elapsed since last: 2.225 seconds

[QRM NOTE]: Peak memory: 560893 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy -s acceptor=3,proposer=4 -f 2 -g -w -r -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=4]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 35

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: symmetric group order: 144

[FW NOTE]: number of branching actions: 28

ivy_to_cpp target=qrm simple-election.acceptor_3_proposer_4.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_3_proposer_4.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_3_proposer_4.finite.cpp simple-election.acceptor_3_proposer_4.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_3_proposer_4.finite.o simple-election.acceptor_3_proposer_4.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 7.451 seconds

[QRM NOTE]: Time elapsed since last: 7.451 seconds

[QRM NOTE]: Peak memory: 1192385 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 8

[FW NOTE]: number of total reachable states:        848

[FW NOTE]: number of dfs representative states:     36

[FW NOTE]: number of dfs non-representative states: 812


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=4]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0', 'proposer1', 'proposer2', 'proposer3']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: promise('acceptor', 'proposer')
predicate: member('acceptor', 'quorum')
predicate: start('proposer',)
predicate: didNotPromise('acceptor',)
predicate: leader('proposer',)
predicate: chosenAt('quorum', 'proposer')
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor1,proposer3)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer3)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer3)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'leader(proposer1)', 'leader(proposer2)', 'leader(proposer3)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor0,proposer3)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor1,proposer3)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)', 'promise(acceptor2,proposer3)', 'start(proposer0)', 'start(proposer1)', 'start(proposer2)', 'start(proposer3)']
representative states : 3758096811, 3758097323, 3758098347, 3758100395, 3758104491, 1612717995, 6442598315, 1172528316331, 1172561870763, 4299308971, 4332863403, 6476152747, 539238315, 2400171, 1612713899, 6442594219, 1172528312235, 1172561866667, 4299304875, 4332859307, 6476148651, 539234219, 2396075, 1612711851, 6442592171, 1172528310187, 1172561864619, 4299302827, 4332857259, 6476146603, 539232171, 1612710827, 6442591147, 1172528309163, 1172561863595, 6476145579


=== State Orbit 0 =====================
size : 1
repr state: 00000000000011100000000000000000000
lex min decimal: 3758096811
states:
00000000000011100000000000000000000




=== State Orbit 1 =====================
size : 4
repr state: 00000000000011100000000000000001000
lex min decimal: 3758097323
states:
00000000000011100000000000000000001
00000000000011100000000000000000100
00000000000011100000000000000000010
00000000000011100000000000000001000




=== State Orbit 2 =====================
size : 6
repr state: 00000000000011100000000000000001100
lex min decimal: 3758098347
states:
00000000000011100000000000000000101
00000000000011100000000000000000011
00000000000011100000000000000001100
00000000000011100000000000000001001
00000000000011100000000000000001010
00000000000011100000000000000000110




=== State Orbit 3 =====================
size : 4
repr state: 00000000000011100000000000000001110
lex min decimal: 3758100395
states:
00000000000011100000000000000001101
00000000000011100000000000000000111
00000000000011100000000000000001110
00000000000011100000000000000001011




=== State Orbit 4 =====================
size : 1
repr state: 00000000000011100000000000000001111
lex min decimal: 3758104491
states:
00000000000011100000000000000001111




=== State Orbit 5 =====================
size : 12
repr state: 00000000000001100001000000000001111
lex min decimal: 1612717995
states:
00000000000011000000000000000101111
00000000000011000000000000010001111
00000000000011000000000000000011111
00000000000001100000100000000001111
00000000000010100000000100000001111
00000000000010100000000010000001111
00000000000010100000000001000001111
00000000000001100000010000000001111
00000000000001100001000000000001111
00000000000010100000000000100001111
00000000000011000000000000001001111
00000000000001100000001000000001111




=== State Orbit 6 =====================
size : 12
repr state: 10000000000000100001000100000001111
lex min decimal: 6442598315
states:
00000100000001000000100000001001111
01000000000000100000100010000001111
00000010000001000000010000000101111
00000001000001000000001000000011111
00001000000001000001000000010001111
00100000000000100000010001000001111
00010000000000100000001000100001111
10000000000000100001000100000001111
00000000010010000000000010001001111
00000000100010000000000100010001111
00000000001010000000000001000101111
00000000000110000000000000100011111




=== State Orbit 7 =====================
size : 4
repr state: 10001000100000000001000100010001111
lex min decimal: 1172528316331
states:
00100010001000000000010001000101111
01000100010000000000100010001001111
10001000100000000001000100010001111
00010001000100000000001000100011111




=== State Orbit 8 =====================
size : 4
repr state: 10001000100000010001000100010001111
lex min decimal: 1172561870763
states:
00010001000100000010001000100011111
00100010001000000100010001000101111
01000100010000001000100010001001111
10001000100000010001000100010001111




=== State Orbit 9 =====================
size : 36
repr state: 10000000000000000001000100001001111
lex min decimal: 4299308971
states:
00000000000100000001000000100011111
00000000100000000000100100010001111
00000010000000000000010000100101111
10000000000000000001000100001001111
10000000000000000001000100000101111
00001000000000000001000000110001111
00000010000000000000010010000101111
00100000000000000000010001000011111
00100000000000000000010001010001111
00000100000000000000100001001001111
00001000000000000001000001010001111
00100000000000000000010001001001111
00000000001000000000001001000101111
00000000000100000000010000100011111
00000000100000000000001100010001111
00000001000000000000001010000011111
00000000001000000001000001000101111
01000000000000000000100010010001111
00010000000000000000001000101001111
00000000010000000001000010001001111
00000000010000000000001010001001111
00000001000000000000001001000011111
00000001000000000000001100000011111
00000000100000000000010100010001111
00010000000000000000001000100101111
00000010000000000000010100000101111
10000000000000000001000100000011111
00000000010000000000010010001001111
00010000000000000000001000110001111
00000000000100000000100000100011111
00000100000000000000100000101001111
00001000000000000001000010010001111
00000100000000000000100100001001111
00000000001000000000100001000101111
01000000000000000000100010000011111
01000000000000000000100010000101111




=== State Orbit 10 =====================
size : 36
repr state: 10000000000000010001000100001001111
lex min decimal: 4332863403
states:
00000000100000010000100100010001111
00000001000000000010001100000011111
00000001000000000010001010000011111
00000100000000001000100000101001111
00000000001000000100100001000101111
00001000000000010001000010010001111
00000000001000000101000001000101111
00000000000100000010100000100011111
00000000001000000100001001000101111
00000100000000001000100100001001111
00000000000100000010010000100011111
00000010000000000100010000100101111
00000000100000010000010100010001111
00100000000000000100010001000011111
01000000000000001000100010000011111
00100000000000000100010001010001111
00010000000000000010001000110001111
00100000000000000100010001001001111
00010000000000000010001000101001111
00001000000000010001000000110001111
10000000000000010001000100000011111
00000000010000001000001010001001111
01000000000000001000100010010001111
00000000000100000011000000100011111
00000000010000001001000010001001111
00000100000000001000100001001001111
00000010000000000100010010000101111
00000001000000000010001001000011111
00010000000000000010001000100101111
00001000000000010001000001010001111
10000000000000010001000100000101111
00000010000000000100010100000101111
00000000100000010000001100010001111
01000000000000001000100010000101111
10000000000000010001000100001001111
00000000010000001000010010001001111




=== State Orbit 11 =====================
size : 12
repr state: 10000000000000110001000100000001111
lex min decimal: 6476152747
states:
00000000000110000010000000100011111
00000001000001000010001000000011111
01000000000000101000100010000001111
00010000000000100010001000100001111
00000000100010010000000100010001111
00001000000001010001000000010001111
00100000000000100100010001000001111
00000000010010001000000010001001111
10000000000000110001000100000001111
00000010000001000100010000000101111
00000000001010000100000001000101111
00000100000001001000100000001001111




=== State Orbit 12 =====================
size : 36
repr state: 00000000000000100001000010000001111
lex min decimal: 539238315
states:
00000000000010000000000001001001111
00000000000010000000000100000101111
00000000000000100000100100000001111
00000000000001000000001000000101111
00000000000010000000000010000011111
00000000000000100000010000100001111
00000000000000100001000001000001111
00000000000000100000001001000001111
00000000000010000000000010000101111
00000000000001000000100000000101111
00000000000010000000000001010001111
00000000000001000000010000001001111
00000000000001000000001000001001111
00000000000010000000000100001001111
00000000000010000000000010010001111
00000000000010000000000000110001111
00000000000001000000100000010001111
00000000000001000000100000000011111
00000000000000100000001100000001111
00000000000001000001000000001001111
00000000000000100000001010000001111
00000000000000100001000000100001111
00000000000010000000000000100101111
00000000000010000000000000101001111
00000000000000100001000010000001111
00000000000000100000010010000001111
00000000000001000001000000000101111
00000000000000100000100001000001111
00000000000001000000010000010001111
00000000000000100000010100000001111
00000000000010000000000100000011111
00000000000001000000001000010001111
00000000000000100000100000100001111
00000000000010000000000001000011111
00000000000001000001000000000011111
00000000000001000000010000000011111




=== State Orbit 13 =====================
size : 24
repr state: 00000000000000000001000010000101111
lex min decimal: 2400171
states:
00000000000000000000010010010001111
00000000000000000000100100000011111
00000000000000000000100100000101111
00000000000000000000100000100101111
00000000000000000000001010000101111
00000000000000000001000001001001111
00000000000000000000001001010001111
00000000000000000000100001010001111
00000000000000000000010000101001111
00000000000000000000001010010001111
00000000000000000001000000101001111
00000000000000000000100000110001111
00000000000000000000001100000101111
00000000000000000000100001000011111
00000000000000000000010100000011111
00000000000000000000001100001001111
00000000000000000000001001001001111
00000000000000000000010100001001111
00000000000000000001000000100101111
00000000000000000000010000110001111
00000000000000000001000001000011111
00000000000000000001000010000011111
00000000000000000000010010000011111
00000000000000000001000010000101111




=== State Orbit 14 =====================
size : 36
repr state: 00000000000001100001000000000001110
lex min decimal: 1612713899
states:
00000000000001100000100000000000111
00000000000001100000100000000001101
00000000000011000000000000000011101
00000000000001100001000000000001110
00000000000011000000000000001001101
00000000000010100000000100000001110
00000000000011000000000000000101011
00000000000011000000000000000101110
00000000000001100000001000000000111
00000000000001100000001000000001101
00000000000010100000000000100001011
00000000000011000000000000000011011
00000000000010100000000001000001011
00000000000010100000000000100000111
00000000000001100001000000000001011
00000000000010100000000001000000111
00000000000010100000000100000001011
00000000000011000000000000001001110
00000000000010100000000001000001110
00000000000011000000000000001000111
00000000000010100000000010000001110
00000000000010100000000100000001101
00000000000011000000000000000010111
00000000000010100000000000100001101
00000000000001100000010000000001011
00000000000001100000010000000000111
00000000000011000000000000010001110
00000000000011000000000000010001011
00000000000001100000010000000001110
00000000000010100000000010000000111
00000000000001100001000000000001101
00000000000011000000000000010001101
00000000000010100000000010000001101
00000000000001100000100000000001110
00000000000011000000000000000100111
00000000000001100000001000000001011




=== State Orbit 15 =====================
size : 36
repr state: 10000000000000100001000100000001110
lex min decimal: 6442594219
states:
00001000000001000001000000010001110
00000100000001000000100000001001110
00000000100010000000000100010001101
00000000000110000000000000100011011
01000000000000100000100010000000111
00000010000001000000010000000101110
00001000000001000001000000010001011
01000000000000100000100010000001101
10000000000000100001000100000001101
10000000000000100001000100000001110
00000000100010000000000100010001110
00010000000000100000001000100001011
00000010000001000000010000000101011
00000000010010000000000010001001110
00010000000000100000001000100000111
00100000000000100000010001000001110
00000010000001000000010000000100111
00000001000001000000001000000010111
00000000001010000000000001000101011
01000000000000100000100010000001110
00000000000110000000000000100010111
00100000000000100000010001000001011
00000000000110000000000000100011101
00000001000001000000001000000011011
00000000010010000000000010001001101
00010000000000100000001000100001101
00000100000001000000100000001000111
10000000000000100001000100000001011
00000001000001000000001000000011101
00000000100010000000000100010001011
00000000001010000000000001000101110
00100000000000100000010001000000111
00001000000001000001000000010001101
00000100000001000000100000001001101
00000000001010000000000001000100111
00000000010010000000000010001000111




=== State Orbit 16 =====================
size : 12
repr state: 10001000100000000001000100010001110
lex min decimal: 1172528312235
states:
00100010001000000000010001000101011
10001000100000000001000100010001101
00010001000100000000001000100010111
10001000100000000001000100010001110
00010001000100000000001000100011011
00010001000100000000001000100011101
01000100010000000000100010001000111
01000100010000000000100010001001101
01000100010000000000100010001001110
00100010001000000000010001000101110
00100010001000000000010001000100111
10001000100000000001000100010001011




=== State Orbit 17 =====================
size : 12
repr state: 10001000100000010001000100010001110
lex min decimal: 1172561866667
states:
00100010001000000100010001000101011
00010001000100000010001000100011011
10001000100000010001000100010001110
10001000100000010001000100010001011
10001000100000010001000100010001101
00100010001000000100010001000101110
00100010001000000100010001000100111
00010001000100000010001000100010111
01000100010000001000100010001000111
01000100010000001000100010001001110
01000100010000001000100010001001101
00010001000100000010001000100011101




=== State Orbit 18 =====================
size : 72
repr state: 10000000000000000001000100001001110
lex min decimal: 4299304875
states:
00000010000000000000010010000100111
00000100000000000000100100001001110
00001000000000000001000010010001101
00001000000000000001000000110001101
00000010000000000000010000100101011
00000000001000000000100001000101110
00000000000100000001000000100011101
00000000000100000001000000100011011
00000000000100000000100000100011101
00000001000000000000001010000010111
00010000000000000000001000100101011
00000000001000000001000001000101110
00000100000000000000100000101001101
00100000000000000000010001001001110
00000000100000000000010100010001011
00000000010000000000010010001001110
00000000001000000000001001000100111
01000000000000000000100010000010111
00010000000000000000001000100100111
00000010000000000000010000100100111
00100000000000000000010001000011011
00000000010000000000001010001001101
00000000100000000000001100010001101
00000000001000000001000001000101011
00100000000000000000010001000010111
00000000001000000000001001000101011
01000000000000000000100010000101110
00001000000000000001000001010001110
00000010000000000000010100000101110
00000010000000000000010010000101110
00000000010000000001000010001001110
00000000010000000001000010001001101
00000000100000000000100100010001110
01000000000000000000100010000011101
00000000100000000000001100010001011
00000000001000000000100001000100111
10000000000000000001000100000011101
00000000100000000000100100010001101
00000000000100000000010000100011011
00000000010000000000010010001000111
00010000000000000000001000101000111
00000000000100000000010000100010111
00100000000000000000010001010001011
00100000000000000000010001010001110
00001000000000000001000001010001011
00000001000000000000001001000010111
00000010000000000000010100000101011
00000100000000000000100100001001101
10000000000000000001000100000011011
10000000000000000001000100001001101
00000100000000000000100001001001110
00000001000000000000001010000011101
00000001000000000000001001000011011
00100000000000000000010001001000111
00000001000000000000001100000011101
10000000000000000001000100000101110
00000100000000000000100000101000111
10000000000000000001000100000101011
01000000000000000000100010000100111
00010000000000000000001000101001101
00000001000000000000001100000011011
00010000000000000000001000110001011
01000000000000000000100010010001110
00001000000000000001000000110001011
01000000000000000000100010010001101
00000000010000000000001010001000111
00000000100000000000010100010001110
00000000000100000000100000100010111
10000000000000000001000100001001110
00010000000000000000001000110001101
00000100000000000000100001001000111
00001000000000000001000010010001110




=== State Orbit 19 =====================
size : 72
repr state: 10000000000000010001000100001001110
lex min decimal: 4332859307
states:
00000001000000000010001100000011101
01000000000000001000100010010001110
01000000000000001000100010000100111
00100000000000000100010001010001011
00010000000000000010001000100100111
00000000100000010000001100010001101
00000000001000000101000001000101110
10000000000000010001000100001001110
00000000010000001000001010001001101
00000001000000000010001010000010111
00000000010000001000010010001001110
00000000100000010000010100010001011
00000000000100000010010000100011011
01000000000000001000100010000101110
00000000000100000010100000100011101
00100000000000000100010001010001110
00000000100000010000100100010001110
00010000000000000010001000100101011
00100000000000000100010001001000111
00000100000000001000100000101001101
00010000000000000010001000110001101
00010000000000000010001000101000111
00001000000000010001000001010001110
00100000000000000100010001000011011
00000010000000000100010100000101011
00000001000000000010001010000011101
00000000001000000100100001000101110
00000000000100000011000000100011101
00000001000000000010001001000011011
01000000000000001000100010000011101
00001000000000010001000000110001101
00100000000000000100010001000010111
00010000000000000010001000101001101
00000000000100000010100000100010111
00000100000000001000100100001001101
00000000010000001001000010001001101
00000000001000000100001001000100111
01000000000000001000100010000010111
00000100000000001000100100001001110
00001000000000010001000001010001011
00000000001000000100001001000101011
00000100000000001000100001001000111
00000000010000001001000010001001110
10000000000000010001000100000011011
00010000000000000010001000110001011
10000000000000010001000100000101011
00100000000000000100010001001001110
00000001000000000010001100000011011
00000000001000000100100001000100111
10000000000000010001000100000011101
00000000001000000101000001000101011
00001000000000010001000000110001011
00000010000000000100010010000101110
00000000010000001000010010001000111
00000100000000001000100000101000111
00000000100000010000100100010001101
00000010000000000100010000100101011
00000000000100000011000000100011011
00001000000000010001000010010001101
10000000000000010001000100001001101
00000000100000010000001100010001011
00000010000000000100010010000100111
00001000000000010001000010010001110
10000000000000010001000100000101110
00000000000100000010010000100010111
00000010000000000100010100000101110
00000000100000010000010100010001110
01000000000000001000100010010001101
00000000010000001000001010001000111
00000100000000001000100001001001110
00000010000000000100010000100100111
00000001000000000010001001000010111




=== State Orbit 20 =====================
size : 36
repr state: 10000000000000110001000100000001110
lex min decimal: 6476148651
states:
10000000000000110001000100000001110
00000000000110000010000000100010111
00000000010010001000000010001001101
10000000000000110001000100000001011
00100000000000100100010001000001011
01000000000000101000100010000000111
00000000001010000100000001000101110
00010000000000100010001000100000111
00000000100010010000000100010001110
00000000001010000100000001000100111
00000000000110000010000000100011011
00000000100010010000000100010001101
00100000000000100100010001000001110
00001000000001010001000000010001101
00000000001010000100000001000101011
00010000000000100010001000100001011
00000000100010010000000100010001011
10000000000000110001000100000001101
00010000000000100010001000100001101
00100000000000100100010001000000111
00001000000001010001000000010001110
00000001000001000010001000000011101
00000001000001000010001000000011011
00000000010010001000000010001000111
01000000000000101000100010000001110
00000000000110000010000000100011101
00000010000001000100010000000100111
00001000000001010001000000010001011
00000010000001000100010000000101110
00000010000001000100010000000101011
00000100000001001000100000001001101
00000000010010001000000010001001110
00000100000001001000100000001001110
00000001000001000010001000000010111
01000000000000101000100010000001101
00000100000001001000100000001000111




=== State Orbit 21 =====================
size : 72
repr state: 00000000000000100001000010000001110
lex min decimal: 539234219
states:
00000000000000100000001001000001011
00000000000000100000001001000000111
00000000000000100000001010000001101
00000000000000100000100001000001110
00000000000001000000001000001000111
00000000000001000000001000001001101
00000000000010000000000000100100111
00000000000001000000001000010001101
00000000000010000000000001001001110
00000000000001000001000000001001110
00000000000001000000100000000011101
00000000000010000000000100001001101
00000000000001000000001000010001011
00000000000001000001000000000011011
00000000000000100000100100000001110
00000000000010000000000001000010111
00000000000000100000001100000001011
00000000000010000000000010000100111
00000000000010000000000001001000111
00000000000010000000000000110001101
00000000000001000000001000000100111
00000000000010000000000010010001101
00000000000001000000001000000101011
00000000000010000000000100001001110
00000000000000100000010010000000111
00000000000010000000000100000011101
00000000000010000000000100000101110
00000000000001000001000000001001101
00000000000000100000010000100001011
00000000000010000000000000101000111
00000000000000100000100000100000111
00000000000000100001000010000001110
00000000000000100000010100000001110
00000000000001000001000000000011101
00000000000001000001000000000101110
00000000000001000000100000010001110
00000000000001000000010000001001110
00000000000010000000000001010001110
00000000000001000000100000010001101
00000000000001000000100000000100111
00000000000000100001000000100001011
00000000000001000000010000001000111
00000000000000100000100100000001101
00000000000000100000001100000001101
00000000000000100001000001000001110
00000000000000100001000010000001101
00000000000000100000010000100000111
00000000000010000000000100000011011
00000000000010000000000010000010111
00000000000010000000000001000011011
00000000000000100000100000100001101
00000000000000100001000001000001011
00000000000000100000010100000001011
00000000000010000000000000110001011
00000000000001000000100000000010111
00000000000010000000000000100101011
00000000000010000000000010000101110
00000000000001000001000000000101011
00000000000010000000000001010001011
00000000000010000000000100000101011
00000000000001000000010000010001011
00000000000010000000000010010001110
00000000000000100000100001000000111
00000000000001000000100000000101110
00000000000001000000010000000010111
00000000000010000000000000101001101
00000000000000100001000000100001101
00000000000010000000000010000011101
00000000000000100000010010000001110
00000000000000100000001010000000111
00000000000001000000010000010001110
00000000000001000000010000000011011




=== State Orbit 22 =====================
size : 24
repr state: 00000000000000000001000010000101110
lex min decimal: 2396075
states:
00000000000000000000001001001000111
00000000000000000000100100000011101
00000000000000000000001010000100111
00000000000000000000001010010001101
00000000000000000000100100000101110
00000000000000000000010000110001011
00000000000000000000010010010001110
00000000000000000000001100001001101
00000000000000000001000010000101110
00000000000000000000010000101000111
00000000000000000000001100000101011
00000000000000000000100001010001110
00000000000000000000010100001001110
00000000000000000000010010000010111
00000000000000000001000001001001110
00000000000000000001000000101001101
00000000000000000000100000110001101
00000000000000000001000000100101011
00000000000000000000100001000010111
00000000000000000000100000100100111
00000000000000000001000010000011101
00000000000000000000010100000011011
00000000000000000000001001010001011
00000000000000000001000001000011011




=== State Orbit 23 =====================
size : 36
repr state: 00000000000001100001000000000001100
lex min decimal: 1612711851
states:
00000000000011000000000000010001100
00000000000001100000001000000000011
00000000000011000000000000001000110
00000000000010100000000100000001001
00000000000011000000000000000010011
00000000000011000000000000001000101
00000000000011000000000000010001010
00000000000010100000000010000000101
00000000000010100000000001000001010
00000000000001100000010000000000011
00000000000010100000000010000000110
00000000000011000000000000000101010
00000000000001100000001000000001001
00000000000011000000000000000100110
00000000000010100000000001000000011
00000000000010100000000000100000011
00000000000011000000000000001001100
00000000000001100000100000000000110
00000000000001100001000000000001001
00000000000001100000001000000000101
00000000000010100000000001000000110
00000000000001100001000000000001100
00000000000001100000100000000000101
00000000000011000000000000010001001
00000000000001100000010000000001010
00000000000010100000000100000001010
00000000000010100000000000100001001
00000000000011000000000000000011001
00000000000001100000010000000000110
00000000000010100000000100000001100
00000000000010100000000010000001100
00000000000010100000000000100000101
00000000000001100000100000000001100
00000000000001100001000000000001010
00000000000011000000000000000010101
00000000000011000000000000000100011




=== State Orbit 24 =====================
size : 36
repr state: 10000000000000100001000100000001100
lex min decimal: 6442592171
states:
01000000000000100000100010000000101
10000000000000100001000100000001001
00000010000001000000010000000100011
00000000100010000000000100010001100
00000000001010000000000001000100011
00000000001010000000000001000100110
00010000000000100000001000100000101
10000000000000100001000100000001100
00000100000001000000100000001000101
00000000010010000000000010001000101
00000001000001000000001000000010101
00000000100010000000000100010001010
00000000000110000000000000100011001
00000000000110000000000000100010011
10000000000000100001000100000001010
00010000000000100000001000100000011
00100000000000100000010001000000011
00000000010010000000000010001000110
00000010000001000000010000000101010
00000000100010000000000100010001001
00100000000000100000010001000000110
00000000001010000000000001000101010
00000100000001000000100000001001100
00010000000000100000001000100001001
00001000000001000001000000010001010
00000001000001000000001000000011001
00000000010010000000000010001001100
01000000000000100000100010000000110
00001000000001000001000000010001001
00001000000001000001000000010001100
00000010000001000000010000000100110
00000000000110000000000000100010101
00100000000000100000010001000001010
01000000000000100000100010000001100
00000001000001000000001000000010011
00000100000001000000100000001000110




=== State Orbit 25 =====================
size : 12
repr state: 10001000100000000001000100010001100
lex min decimal: 1172528310187
states:
00010001000100000000001000100011001
00010001000100000000001000100010101
01000100010000000000100010001000101
10001000100000000001000100010001010
00100010001000000000010001000101010
00100010001000000000010001000100110
10001000100000000001000100010001001
01000100010000000000100010001000110
10001000100000000001000100010001100
01000100010000000000100010001001100
00010001000100000000001000100010011
00100010001000000000010001000100011




=== State Orbit 26 =====================
size : 12
repr state: 10001000100000010001000100010001100
lex min decimal: 1172561864619
states:
00010001000100000010001000100011001
01000100010000001000100010001000101
10001000100000010001000100010001010
00010001000100000010001000100010011
00010001000100000010001000100010101
00100010001000000100010001000100110
00100010001000000100010001000100011
10001000100000010001000100010001100
10001000100000010001000100010001001
01000100010000001000100010001001100
00100010001000000100010001000101010
01000100010000001000100010001000110




=== State Orbit 27 =====================
size : 36
repr state: 10000000000000000001000100001001100
lex min decimal: 4299302827
states:
10000000000000000001000100001001100
01000000000000000000100010010001100
00000000010000000001000010001001100
00000100000000000000100000101000101
00000000000100000000010000100010011
00000000100000000000010100010001010
00000000100000000000001100010001001
00000001000000000000001010000010101
00000000001000000001000001000101010
00000010000000000000010010000100110
00010000000000000000001000101000101
00000010000000000000010000100100011
00000000010000000000010010001000110
01000000000000000000100010000010101
00010000000000000000001000110001001
10000000000000000001000100000101010
00000010000000000000010100000101010
00000000000100000000100000100010101
00100000000000000000010001001000110
00001000000000000001000001010001010
00000100000000000000100100001001100
00000100000000000000100001001000110
00000000100000000000100100010001100
00000000001000000000100001000100110
00000001000000000000001100000011001
00001000000000000001000000110001001
00100000000000000000010001000010011
01000000000000000000100010000100110
00010000000000000000001000100100011
00000000001000000000001001000100011
00001000000000000001000010010001100
10000000000000000001000100000011001
00000001000000000000001001000010011
00000000010000000000001010001000101
00000000000100000001000000100011001
00100000000000000000010001010001010




=== State Orbit 28 =====================
size : 36
repr state: 10000000000000010001000100001001100
lex min decimal: 4332857259
states:
00100000000000000100010001000010011
00000010000000000100010010000100110
00100000000000000100010001001000110
00000010000000000100010100000101010
00000000100000010000010100010001010
00000100000000001000100001001000110
00010000000000000010001000110001001
10000000000000010001000100000101010
00000010000000000100010000100100011
00000000000100000011000000100011001
00000001000000000010001100000011001
00010000000000000010001000101000101
01000000000000001000100010010001100
00000000000100000010100000100010101
01000000000000001000100010000100110
00000000001000000100100001000100110
00000000000100000010010000100010011
00100000000000000100010001010001010
00000000001000000101000001000101010
00000000010000001000010010001000110
00000001000000000010001001000010011
00000000010000001000001010001000101
00000100000000001000100000101000101
00000001000000000010001010000010101
00010000000000000010001000100100011
10000000000000010001000100001001100
00001000000000010001000001010001010
00000000100000010000001100010001001
00000000010000001001000010001001100
00001000000000010001000000110001001
00000000001000000100001001000100011
00000100000000001000100100001001100
00000000100000010000100100010001100
01000000000000001000100010000010101
10000000000000010001000100000011001
00001000000000010001000010010001100




=== State Orbit 29 =====================
size : 36
repr state: 10000000000000110001000100000001100
lex min decimal: 6476146603
states:
10000000000000110001000100000001001
00001000000001010001000000010001001
00000001000001000010001000000011001
00010000000000100010001000100000101
00000010000001000100010000000101010
01000000000000101000100010000000110
10000000000000110001000100000001010
00100000000000100100010001000000110
00010000000000100010001000100000011
00000000010010001000000010001000110
00000010000001000100010000000100011
00000000100010010000000100010001001
00000000010010001000000010001000101
00001000000001010001000000010001100
00100000000000100100010001000001010
00000100000001001000100000001001100
00000000001010000100000001000101010
00010000000000100010001000100001001
00000001000001000010001000000010101
00000000010010001000000010001001100
00000000100010010000000100010001010
01000000000000101000100010000001100
10000000000000110001000100000001100
00000010000001000100010000000100110
00000100000001001000100000001000101
00000001000001000010001000000010011
00000000100010010000000100010001100
01000000000000101000100010000000101
00000000001010000100000001000100110
00001000000001010001000000010001010
00000000000110000010000000100010101
00000000001010000100000001000100011
00000000000110000010000000100010011
00100000000000100100010001000000011
00000100000001001000100000001000110
00000000000110000010000000100011001




=== State Orbit 30 =====================
size : 36
repr state: 00000000000000100001000010000001100
lex min decimal: 539232171
states:
00000000000010000000000000101000101
00000000000000100000001100000001001
00000000000001000001000000000011001
00000000000010000000000010010001100
00000000000001000001000000001001100
00000000000000100000010010000000110
00000000000001000000001000001000101
00000000000010000000000100000101010
00000000000010000000000100001001100
00000000000000100000100100000001100
00000000000000100000010000100000011
00000000000010000000000000100100011
00000000000000100000100001000000110
00000000000010000000000001001000110
00000000000010000000000001010001010
00000000000010000000000001000010011
00000000000010000000000100000011001
00000000000000100001000000100001001
00000000000001000000010000001000110
00000000000001000000100000000010101
00000000000010000000000010000010101
00000000000000100000010100000001010
00000000000000100001000001000001010
00000000000001000000010000000010011
00000000000001000000001000000100011
00000000000010000000000010000100110
00000000000001000000010000010001010
00000000000001000000100000010001100
00000000000000100000001001000000011
00000000000000100000100000100000101
00000000000000100001000010000001100
00000000000001000000001000010001001
00000000000001000000100000000100110
00000000000001000001000000000101010
00000000000010000000000000110001001
00000000000000100000001010000000101




=== State Orbit 31 =====================
size : 12
repr state: 00000000000001100001000000000001000
lex min decimal: 1612710827
states:
00000000000001100000001000000000001
00000000000010100000000001000000010
00000000000011000000000000000010001
00000000000001100000010000000000010
00000000000011000000000000000100010
00000000000001100000100000000000100
00000000000010100000000010000000100
00000000000010100000000000100000001
00000000000011000000000000001000100
00000000000010100000000100000001000
00000000000011000000000000010001000
00000000000001100001000000000001000




=== State Orbit 32 =====================
size : 12
repr state: 10000000000000100001000100000001000
lex min decimal: 6442591147
states:
00000000000110000000000000100010001
01000000000000100000100010000000100
00100000000000100000010001000000010
00000100000001000000100000001000100
00000000010010000000000010001000100
00000000100010000000000100010001000
00000001000001000000001000000010001
00000000001010000000000001000100010
00001000000001000001000000010001000
00000010000001000000010000000100010
00010000000000100000001000100000001
10000000000000100001000100000001000




=== State Orbit 33 =====================
size : 4
repr state: 10001000100000000001000100010001000
lex min decimal: 1172528309163
states:
01000100010000000000100010001000100
10001000100000000001000100010001000
00100010001000000000010001000100010
00010001000100000000001000100010001




=== State Orbit 34 =====================
size : 4
repr state: 10001000100000010001000100010001000
lex min decimal: 1172561863595
states:
10001000100000010001000100010001000
00010001000100000010001000100010001
00100010001000000100010001000100010
01000100010000001000100010001000100




=== State Orbit 35 =====================
size : 12
repr state: 10000000000000110001000100000001000
lex min decimal: 6476145579
states:
00000100000001001000100000001000100
00001000000001010001000000010001000
00000000000110000010000000100010001
00100000000000100100010001000000010
00000000100010010000000100010001000
00000000001010000100000001000100010
00000001000001000010001000000010001
01000000000000101000100010000000100
00010000000000100010001000100000001
10000000000000110001000100000001000
00000010000001000100010000000100010
00000000010010001000000010001000100



[QRM NOTE]: Time elapsed since start: 9.673 seconds

[QRM NOTE]: Time elapsed since last: 2.222 seconds

[QRM NOTE]: Peak memory: 1426361 bytes


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=4]

=========================================================================================================================================

[REACH_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 11.942 seconds

[QRM NOTE]: Time elapsed since last: 2.269 seconds

[QRM NOTE]: Peak memory: 550314 bytes

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_8
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_24
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_8 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_24 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_24 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_24 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_24 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 49: assumption

OK
[IVY_CHECK RESULT]: PASS


**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************

[RMIN NUM]: 1

[RMIN RESULT]: ['ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy']

[CUTOFF]: acceptor=3,proposer=3

[QRM RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 150.776 seconds

[QRM NOTE]: Time elapsed since last: 150.776 seconds

