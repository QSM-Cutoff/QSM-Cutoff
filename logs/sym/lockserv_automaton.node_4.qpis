
=== Orbit 0 =====================
size : 16
num_suborbits: 2
0 (*) : ----1-------1----
0     : ['holds_lock(node3)', 'unlock_msg(node3)']
1     : ---1-------1-----
1     : ['holds_lock(node2)', 'unlock_msg(node2)']
2     : --1-------1------
2     : ['holds_lock(node1)', 'unlock_msg(node1)']
3     : -1-------1-------
3     : ['holds_lock(node0)', 'unlock_msg(node0)']
16 (*) : ---1--------1----
16     : ['holds_lock(node2)', 'unlock_msg(node3)']
17     : ----1------1-----
17     : ['holds_lock(node3)', 'unlock_msg(node2)']
18     : --1---------1----
18     : ['holds_lock(node1)', 'unlock_msg(node3)']
19     : ----1-----1------
19     : ['holds_lock(node3)', 'unlock_msg(node1)']
20     : --1--------1-----
20     : ['holds_lock(node1)', 'unlock_msg(node2)']
21     : ---1------1------
21     : ['holds_lock(node2)', 'unlock_msg(node1)']
22     : -1----------1----
22     : ['holds_lock(node0)', 'unlock_msg(node3)']
23     : ----1----1-------
23     : ['holds_lock(node3)', 'unlock_msg(node0)']
24     : -1---------1-----
24     : ['holds_lock(node0)', 'unlock_msg(node2)']
25     : ---1-----1-------
25     : ['holds_lock(node2)', 'unlock_msg(node0)']
26     : -1--------1------
26     : ['holds_lock(node0)', 'unlock_msg(node1)']
27     : --1------1-------
27     : ['holds_lock(node1)', 'unlock_msg(node0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : (forall N0, N1 . (~unlock_msg(N0) | ~holds_lock(N1)))
qcost : 4


=== Orbit 1 =====================
size : 16
num_suborbits: 2
4 (*) : -------1----1----
4     : ['grant_msg(node2)', 'unlock_msg(node3)']
5     : --------1--1-----
5     : ['grant_msg(node3)', 'unlock_msg(node2)']
6     : ------1-----1----
6     : ['grant_msg(node1)', 'unlock_msg(node3)']
7     : --------1-1------
7     : ['grant_msg(node3)', 'unlock_msg(node1)']
8     : ------1----1-----
8     : ['grant_msg(node1)', 'unlock_msg(node2)']
9     : -------1--1------
9     : ['grant_msg(node2)', 'unlock_msg(node1)']
10     : -----1------1----
10     : ['grant_msg(node0)', 'unlock_msg(node3)']
11     : --------11-------
11     : ['grant_msg(node3)', 'unlock_msg(node0)']
12     : -----1-----1-----
12     : ['grant_msg(node0)', 'unlock_msg(node2)']
13     : -------1-1-------
13     : ['grant_msg(node2)', 'unlock_msg(node0)']
14     : -----1----1------
14     : ['grant_msg(node0)', 'unlock_msg(node1)']
15     : ------1--1-------
15     : ['grant_msg(node1)', 'unlock_msg(node0)']
32 (*) : --------1---1----
32     : ['grant_msg(node3)', 'unlock_msg(node3)']
33     : -------1---1-----
33     : ['grant_msg(node2)', 'unlock_msg(node2)']
34     : ------1---1------
34     : ['grant_msg(node1)', 'unlock_msg(node1)']
35     : -----1---1-------
35     : ['grant_msg(node0)', 'unlock_msg(node0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : (forall N0, N1 . (~grant_msg(N0) | ~unlock_msg(N1)))
qcost : 4


=== Orbit 2 =====================
size : 4
num_suborbits: 1
28 (*) : 0-----------1----
28     : ['unlock_msg(node3)', '~held()']
29     : 0----------1-----
29     : ['unlock_msg(node2)', '~held()']
30     : 0---------1------
30     : ['unlock_msg(node1)', '~held()']
31     : 0--------1-------
31     : ['unlock_msg(node0)', '~held()']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : (forall N0 . (held | ~unlock_msg(N0)))
qcost : 3


=== Orbit 3 =====================
size : 6
num_suborbits: 1
36 (*) : ---------1--1----
36     : ['unlock_msg(node0)', 'unlock_msg(node3)']
37     : ---------1-1-----
37     : ['unlock_msg(node0)', 'unlock_msg(node2)']
38     : ---------11------
38     : ['unlock_msg(node0)', 'unlock_msg(node1)']
39     : ----------1-1----
39     : ['unlock_msg(node1)', 'unlock_msg(node3)']
40     : ----------11-----
40     : ['unlock_msg(node1)', 'unlock_msg(node2)']
41     : -----------11----
41     : ['unlock_msg(node2)', 'unlock_msg(node3)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : (forall N0, N1 . ((N0 = N1) | ~unlock_msg(N0) | ~unlock_msg(N1)))
qcost : 5


=== Orbit 4 =====================
size : 6
num_suborbits: 1
42 (*) : -------11--------
42     : ['grant_msg(node2)', 'grant_msg(node3)']
43     : ------1-1--------
43     : ['grant_msg(node1)', 'grant_msg(node3)']
44     : ------11---------
44     : ['grant_msg(node1)', 'grant_msg(node2)']
45     : -----1--1--------
45     : ['grant_msg(node0)', 'grant_msg(node3)']
46     : -----1-1---------
46     : ['grant_msg(node0)', 'grant_msg(node2)']
47     : -----11----------
47     : ['grant_msg(node0)', 'grant_msg(node1)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : (forall N0, N1 . (~grant_msg(N1) | ~grant_msg(N0) | (N0 = N1)))
qcost : 5


=== Orbit 5 =====================
size : 16
num_suborbits: 2
48 (*) : ----1--1---------
48     : ['grant_msg(node2)', 'holds_lock(node3)']
49     : ---1----1--------
49     : ['grant_msg(node3)', 'holds_lock(node2)']
50     : ----1-1----------
50     : ['grant_msg(node1)', 'holds_lock(node3)']
51     : --1-----1--------
51     : ['grant_msg(node3)', 'holds_lock(node1)']
52     : ---1--1----------
52     : ['grant_msg(node1)', 'holds_lock(node2)']
53     : --1----1---------
53     : ['grant_msg(node2)', 'holds_lock(node1)']
54     : ----11-----------
54     : ['grant_msg(node0)', 'holds_lock(node3)']
55     : -1------1--------
55     : ['grant_msg(node3)', 'holds_lock(node0)']
56     : ---1-1-----------
56     : ['grant_msg(node0)', 'holds_lock(node2)']
57     : -1-----1---------
57     : ['grant_msg(node2)', 'holds_lock(node0)']
58     : --1--1-----------
58     : ['grant_msg(node0)', 'holds_lock(node1)']
59     : -1----1----------
59     : ['grant_msg(node1)', 'holds_lock(node0)']
60 (*) : ----1---1--------
60     : ['grant_msg(node3)', 'holds_lock(node3)']
61     : ---1---1---------
61     : ['grant_msg(node2)', 'holds_lock(node2)']
62     : --1---1----------
62     : ['grant_msg(node1)', 'holds_lock(node1)']
63     : -1---1-----------
63     : ['grant_msg(node0)', 'holds_lock(node0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : (forall N0, N1 . (~holds_lock(N0) | ~grant_msg(N1)))
qcost : 4


=== Orbit 6 =====================
size : 6
num_suborbits: 1
64 (*) : ---11------------
64     : ['holds_lock(node2)', 'holds_lock(node3)']
65     : --1-1------------
65     : ['holds_lock(node1)', 'holds_lock(node3)']
66     : --11-------------
66     : ['holds_lock(node1)', 'holds_lock(node2)']
67     : -1--1------------
67     : ['holds_lock(node0)', 'holds_lock(node3)']
68     : -1-1-------------
68     : ['holds_lock(node0)', 'holds_lock(node2)']
69     : -11--------------
69     : ['holds_lock(node0)', 'holds_lock(node1)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : (forall N0, N1 . ((N0 = N1) | ~holds_lock(N1) | ~holds_lock(N0)))
qcost : 5


=== Orbit 7 =====================
size : 4
num_suborbits: 1
70 (*) : 0--1-------------
70     : ['holds_lock(node2)', '~held()']
71     : 0---1------------
71     : ['holds_lock(node3)', '~held()']
72     : 0-1--------------
72     : ['holds_lock(node1)', '~held()']
73     : 01---------------
73     : ['holds_lock(node0)', '~held()']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : (forall N0 . (held | ~holds_lock(N0)))
qcost : 3


=== Orbit 8 =====================
size : 4
num_suborbits: 1
74 (*) : 0------1---------
74     : ['grant_msg(node2)', '~held()']
75     : 0-------1--------
75     : ['grant_msg(node3)', '~held()']
76     : 0-----1----------
76     : ['grant_msg(node1)', '~held()']
77     : 0----1-----------
77     : ['grant_msg(node0)', '~held()']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : (forall N0 . (held | ~grant_msg(N0)))
qcost : 3


=== Orbit 9 =====================
size : 1
num_suborbits: 1
78 (*) : 1000000000000----
78     : ['held()', '~grant_msg(node0)', '~grant_msg(node1)', '~grant_msg(node2)', '~grant_msg(node3)', '~holds_lock(node0)', '~holds_lock(node1)', '~holds_lock(node2)', '~holds_lock(node3)', '~unlock_msg(node0)', '~unlock_msg(node1)', '~unlock_msg(node2)', '~unlock_msg(node3)']
num_forall :   0
num_exists :   1
num_literals : 4
quantified form : (~held | (exists N0 . (grant_msg(N0) | holds_lock(N0) | unlock_msg(N0))))
qcost : 5


