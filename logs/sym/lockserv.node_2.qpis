
=== Orbit 0 =====================
size : 1
num_suborbits: 1
0 (*) : -----11--
0     : ['grant_msg(node0)', 'grant_msg(node1)']
num_forall :   0
num_exists :   1
num_literals : 1
quantified form : (exists N0 . ~grant_msg(N0))
qcost : 2


=== Orbit 1 =====================
size : 4
num_suborbits: 2
1 (*) : ---1--1--
1     : ['grant_msg(node1)', 'unlock_msg(node0)']
2     : ----11---
2     : ['grant_msg(node0)', 'unlock_msg(node1)']
9 (*) : ----1-1--
9     : ['grant_msg(node1)', 'unlock_msg(node1)']
10     : ---1-1---
10     : ['grant_msg(node0)', 'unlock_msg(node0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : (forall N0, N1 . (~grant_msg(N1) | ~unlock_msg(N0)))
qcost : 4


=== Orbit 2 =====================
size : 2
num_suborbits: 1
3 (*) : 1-----1--
3     : ['grant_msg(node1)', 'server_holds_lock()']
4     : 1----1---
4     : ['grant_msg(node0)', 'server_holds_lock()']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : (forall N0 . (~server_holds_lock | ~grant_msg(N0)))
qcost : 3


=== Orbit 3 =====================
size : 4
num_suborbits: 2
5 (*) : -1----1--
5     : ['grant_msg(node1)', 'holds_lock(node0)']
6     : --1--1---
6     : ['grant_msg(node0)', 'holds_lock(node1)']
7 (*) : --1---1--
7     : ['grant_msg(node1)', 'holds_lock(node1)']
8     : -1---1---
8     : ['grant_msg(node0)', 'holds_lock(node0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : (forall N0, N1 . (~grant_msg(N1) | ~holds_lock(N0)))
qcost : 4


=== Orbit 4 =====================
size : 2
num_suborbits: 1
11 (*) : 1--1-----
11     : ['server_holds_lock()', 'unlock_msg(node0)']
12     : 1---1----
12     : ['server_holds_lock()', 'unlock_msg(node1)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : (forall N0 . (~server_holds_lock | ~unlock_msg(N0)))
qcost : 3


=== Orbit 5 =====================
size : 2
num_suborbits: 1
13 (*) : 11-------
13     : ['holds_lock(node0)', 'server_holds_lock()']
14     : 1-1------
14     : ['holds_lock(node1)', 'server_holds_lock()']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : (forall N0 . (~server_holds_lock | ~holds_lock(N0)))
qcost : 3


=== Orbit 6 =====================
size : 4
num_suborbits: 2
15 (*) : -1-1-----
15     : ['holds_lock(node0)', 'unlock_msg(node0)']
16     : --1-1----
16     : ['holds_lock(node1)', 'unlock_msg(node1)']
18 (*) : --11-----
18     : ['holds_lock(node1)', 'unlock_msg(node0)']
19     : -1--1----
19     : ['holds_lock(node0)', 'unlock_msg(node1)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : (forall N0, N1 . (~holds_lock(N1) | ~unlock_msg(N0)))
qcost : 4


=== Orbit 7 =====================
size : 1
num_suborbits: 1
17 (*) : -11------
17     : ['holds_lock(node0)', 'holds_lock(node1)']
num_forall :   0
num_exists :   1
num_literals : 1
quantified form : (exists N0 . ~holds_lock(N0))
qcost : 2


=== Orbit 8 =====================
size : 1
num_suborbits: 1
20 (*) : ---11----
20     : ['unlock_msg(node0)', 'unlock_msg(node1)']
num_forall :   0
num_exists :   1
num_literals : 1
quantified form : (exists N0 . ~unlock_msg(N0))
qcost : 2


=== Orbit 9 =====================
size : 1
num_suborbits: 1
21 (*) : 0000000--
21     : ['~grant_msg(node0)', '~grant_msg(node1)', '~holds_lock(node0)', '~holds_lock(node1)', '~server_holds_lock()', '~unlock_msg(node0)', '~unlock_msg(node1)']
num_forall :   0
num_exists :   1
num_literals : 4
quantified form : (server_holds_lock | (exists N0 . (grant_msg(N0) | holds_lock(N0) | unlock_msg(N0))))
qcost : 5


