
=== Orbit 0 =====================
size : 1
num_suborbits: 1
0 (*) : ------11
0     : ['(start_node=node0)', '(start_node=node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : 
qcost : 0


=== Orbit 1 =====================
size : 1
num_suborbits: 1
1 (*) : ----11--
1     : ['has_lock(node0)', 'has_lock(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : 
qcost : 0


=== Orbit 2 =====================
size : 8
num_suborbits: 4
2 (*) : -1--1---
2     : ['has_lock(node0)', 'message(node0,node1)']
3     : --1--1--
3     : ['has_lock(node1)', 'message(node1,node0)']
4 (*) : 1---1---
4     : ['has_lock(node0)', 'message(node0,node0)']
5     : ---1-1--
5     : ['has_lock(node1)', 'message(node1,node1)']
6 (*) : --1-1---
6     : ['has_lock(node0)', 'message(node1,node0)']
7     : -1---1--
7     : ['has_lock(node1)', 'message(node0,node1)']
8 (*) : ---11---
8     : ['has_lock(node0)', 'message(node1,node1)']
9     : 1----1--
9     : ['has_lock(node1)', 'message(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : 
qcost : 0


=== Orbit 3 =====================
size : 1
num_suborbits: 1
10 (*) : ------00
10     : ['~(start_node=node0)', '~(start_node=node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : 
qcost : 0


=== Orbit 4 =====================
size : 6
num_suborbits: 4
11 (*) : 11------
11     : ['message(node0,node0)', 'message(node0,node1)']
12     : --11----
12     : ['message(node1,node0)', 'message(node1,node1)']
13 (*) : 1-1-----
13     : ['message(node0,node0)', 'message(node1,node0)']
14     : -1-1----
14     : ['message(node0,node1)', 'message(node1,node1)']
15 (*) : -11-----
15     : ['message(node0,node1)', 'message(node1,node0)']
16 (*) : 1--1----
16     : ['message(node0,node0)', 'message(node1,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : 
qcost : 0


=== Orbit 5 =====================
size : 1
num_suborbits: 1
17 (*) : 000000--
17     : ['~has_lock(node0)', '~has_lock(node1)', '~message(node0,node0)', '~message(node0,node1)', '~message(node1,node0)', '~message(node1,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : 
qcost : 0


