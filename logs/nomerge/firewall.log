
********************************************************

	[QRM]: ivybench/sym/ivy/firewall.ivy

********************************************************


************************************************************************

	[Synthesize Rmin]: ivybench/sym/ivy/firewall: node=1

************************************************************************

python3 qrm.py ivybench/sym/ivy/firewall.ivy -s node=1 -f 1 -g -w -r -m -v 5 -w -l ivybench/sym/ivy/firewall.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/firewall: node=1]

================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 3

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: symmetric group order: 1

[FW NOTE]: number of branching actions: 2

ivy_to_cpp target=qrm firewall.node_1.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o firewall.node_1.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 firewall.node_1.finite.cpp firewall.node_1.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared firewall.node_1.finite.o firewall.node_1.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 6.765 seconds

[QRM NOTE]: Time elapsed since last: 6.765 seconds

[QRM NOTE]: Peak memory: 1174265 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 0

[FW NOTE]: number of total reachable states:        2

[FW NOTE]: number of dfs representative states:     2

[FW NOTE]: number of dfs non-representative states: 0


=======================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/firewall: node=1]

=======================================================================================

sort: node=['node0']
predicate: internal('node',)
predicate: sent('node', 'node')
predicate: allowed_in('node',)
interpreted atoms: {}
state atoms: ['allowed_in(node0)', 'internal(node0)', 'sent(node0,node0)']
representative states : 0, 2


=== State Orbit 0 =====================
size : 1
repr state: 000
lex min decimal: 0
states:
000




=== State Orbit 1 =====================
size : 1
repr state: 010
lex min decimal: 2
states:
010



[QRM NOTE]: Time elapsed since start: 6.850 seconds

[QRM NOTE]: Time elapsed since last: 0.085 seconds

[QRM NOTE]: Peak memory: 1198853 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 6.853 seconds

[QRM NOTE]: Time elapsed since last: 0.004 seconds

[QRM NOTE]: Peak memory: 149770 bytes


=======================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym/ivy/firewall: node=1]

=======================================================================================


==================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym/ivy/firewall: node=1]

==================================================================================


=== Prime Orbit 0 =====================
size : 1
num_suborbits: 1
0 (*) : --1
0     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 1
num_suborbits: 1
1 (*) : 1--
1     : ['allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 2

[PRIME NOTE]: number of orbits before merging: 2

[PRIME NOTE]: number of primes: 2

[QRM NOTE]: Time elapsed since start: 6.864 seconds

[QRM NOTE]: Time elapsed since last: 0.010 seconds

[QRM NOTE]: Peak memory: 1204906 bytes


============================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym/ivy/firewall: node=1]

============================================================================

definition primes: set()


New level: 0
 pending : [0, 1]
 solution : []


Before reduction : 
 pending  : [0, 1]
 solution : []

Essensial at level 0 : {0, 1}

Before removed
 coverage : [(0, -1), (1, -1)]

After removed
 coverage : [(0, -1), (1, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : []
 solution : [0, 1]


Before reduction : 
 pending  : []
 solution : [0, 1]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, -1)]

After removed
 coverage : [(0, -1), (1, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : []
 solution : [0, 1]

[QRM NOTE]: Time elapsed since start: 6.865 seconds

[QRM NOTE]: Time elapsed since last: 0.001 seconds

[QRM NOTE]: Peak memory: 157348 bytes


================================================================================

	[QI]: Quantifier Inference on [ivybench/sym/ivy/firewall: node=1]

================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 1
num_suborbits: 1
0 (*) : --1
0     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node0,node0)']

sign_func_name2args: {'0$sent': [(Const('node0', EnumeratedSort('node', ('node0',))), Const('node0', EnumeratedSort('node', ('node0',))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0',))): [node$0$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0',))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0',)): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0',)): node$0$sent$0$0; node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['sent(node0,node0)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0',)), EnumeratedSort('node', ('node0',)), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0',)), EnumeratedSort('node', ('node0',)))}

sign_func_name2count:  {'0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0',)): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0',)): node$0$sent$0$0; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1': node$0$sent$0$0; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0',))), Var('NODE0', EnumeratedSort('node', ('node0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~sent(NODE0,NODE0)


=== Prime Orbit 1 =====================
size : 1
num_suborbits: 1
1 (*) : 1--
1     : ['allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0',))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0',))): [node$0$allowed_in$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0',)): [node$0$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0',)): node$0$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0',)), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0',)),)}

sign_func_name2count:  {'0$allowed_in': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0',)): [node$0$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0',)): node$0$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~allowed_in(NODE0)


==========================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym/ivy/firewall: node=1]

==========================================================================================


=== Prime Orbit 0 =====================
size : 1
num_suborbits: 1
0 (*) : --1
0     : ['sent(node0,node0)']
num_forall :   1
num_exists :   0
num_literals : 1
quantified form : forall NODE0. ~sent(NODE0,NODE0)
qcost : 2




=== Prime Orbit 1 =====================
size : 1
num_suborbits: 1
1 (*) : 1--
1     : ['allowed_in(node0)']
num_forall :   1
num_exists :   0
num_literals : 1
quantified form : forall NODE0. ~allowed_in(NODE0)
qcost : 2



[QRM NOTE]: Time elapsed since start: 6.934 seconds

[QRM NOTE]: Time elapsed since last: 0.069 seconds

[QRM NOTE]: Peak memory: 1813552 bytes


=========================================================================

	[MIN]: Minimization on [ivybench/sym/ivy/firewall: node=1]

=========================================================================


New level: 1
 pending : []
 solution : [0, 1]


Before reduction : 
 pending  : []
 solution : [0, 1]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1)]

After removed
 coverage : [(0, -1), (1, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : []
 solution : [0, 1]


Solution : [0, 1] has cost 4.


Before backtrack at level 1
 pending : []
 solution : [0, 1]

After backtrack at level 1
 pending : []
 solution : [0, 1]


========================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym/ivy/firewall: node=1]

========================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: total qcost: 4

[MIN NOTE]: maximum branch and bound depth: 1

Definitions (length=0)

Equality Relations (length=0)

Solution 0 : [0, 1] (length = 2)

invariant [invar_0] forall NODE0. ~sent(NODE0,NODE0) # qcost: 2

invariant [invar_1] forall NODE0. ~allowed_in(NODE0) # qcost: 2




[QRM NOTE]: Time elapsed since start: 6.977 seconds

[QRM NOTE]: Time elapsed since last: 0.043 seconds

[QRM NOTE]: Peak memory: 1805284 bytes


============================================================================

	[IVY_CHECK]: Ivy Check on [ivybench/sym/ivy/firewall: node=1]

============================================================================

ivy_check complete=fo ivybench/sym/ivy/firewall.node_1.0.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/firewall.node_1.0.ivy: line 38: invar_0
        ivybench/sym/ivy/firewall.node_1.0.ivy: line 39: invar_1

    The following action implementations are present:
        ivybench/sym/ivy/firewall.node_1.0.ivy: line 15: implementation of send_from_internal
        ivybench/sym/ivy/firewall.node_1.0.ivy: line 23: implementation of send_to_internal

    The following initializers are present:
        ivybench/sym/ivy/firewall.node_1.0.ivy: line 10: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/firewall.node_1.0.ivy: line 38: invar_0 ... PASS
        ivybench/sym/ivy/firewall.node_1.0.ivy: line 39: invar_1 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:send_from_internal
            ivybench/sym/ivy/firewall.node_1.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_1.0.ivy: line 39: invar_1 ... FAIL
        (internal) ext:send_to_internal
            ivybench/sym/ivy/firewall.node_1.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_1.0.ivy: line 39: invar_1 ... PASS

    The following program assertions are treated as assumptions:
        in action send_from_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_1.0.ivy: line 16: assumption
            ivybench/sym/ivy/firewall.node_1.0.ivy: line 17: assumption
        in action send_to_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_1.0.ivy: line 24: assumption
            ivybench/sym/ivy/firewall.node_1.0.ivy: line 25: assumption
            ivybench/sym/ivy/firewall.node_1.0.ivy: line 26: assumption

error: failed checks: 1
[IVY_CHECK RESULT]: FAIL ... exit with return code 1

[QRM NOTE]: Time elapsed since start: 8.817 seconds

[QRM NOTE]: Time elapsed since last: 1.840 seconds

[QRM NOTE]: Peak memory: 807443 bytes


***************************************************************************************

	[Reachability Convergence Check]: ivybench/sym/ivy/firewall: node=1

***************************************************************************************

python3 qrm.py ivybench/sym/ivy/firewall.node_1.0.ivy -s node=2 -f 2 -g -w -r -m -v 5 -w -l ivybench/sym/ivy/firewall.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/firewall: node=2]

================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 8

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: symmetric group order: 2

[FW NOTE]: number of branching actions: 8

ivy_to_cpp target=qrm firewall.node_2.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o firewall.node_2.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 firewall.node_2.finite.cpp firewall.node_2.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared firewall.node_2.finite.o firewall.node_2.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 10.137 seconds

[QRM NOTE]: Time elapsed since last: 10.137 seconds

[QRM NOTE]: Peak memory: 1177234 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 2

[FW NOTE]: number of total reachable states:        8

[FW NOTE]: number of dfs representative states:     5

[FW NOTE]: number of dfs non-representative states: 3


=======================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/firewall: node=2]

=======================================================================================

sort: node=['node0', 'node1']
predicate: allowed_in('node',)
predicate: internal('node',)
predicate: sent('node', 'node')
interpreted atoms: {}
state atoms: ['allowed_in(node0)', 'allowed_in(node1)', 'internal(node0)', 'internal(node1)', 'sent(node0,node0)', 'sent(node0,node1)', 'sent(node1,node0)', 'sent(node1,node1)']
representative states : 0, 48, 16, 100, 102


=== State Orbit 0 =====================
size : 1
repr state: 00000000
lex min decimal: 0
states:
00000000




=== State Orbit 1 =====================
size : 1
repr state: 00110000
lex min decimal: 48
states:
00110000




=== State Orbit 2 =====================
size : 2
repr state: 00100000
lex min decimal: 16
states:
00100000
00010000




=== State Orbit 3 =====================
size : 2
repr state: 01100100
lex min decimal: 100
states:
01100100
10010010




=== State Orbit 4 =====================
size : 2
repr state: 01100110
lex min decimal: 102
states:
01100110
10010110



[QRM NOTE]: Time elapsed since start: 10.289 seconds

[QRM NOTE]: Time elapsed since last: 0.152 seconds

[QRM NOTE]: Peak memory: 1205634 bytes


============================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym/ivy/firewall: node=2]

============================================================================================================

Found a representative state in Rmin not in reachability: decimal: 54, binary: 00110110

Found a representative state in Rmin not in reachability: decimal: 50, binary: 00110010

Found a representative state in Rmin not in reachability: decimal: 2, binary: 00000010

Found a representative state in Rmin not in reachability: decimal: 22, binary: 00010110

Found a representative state in Rmin not in reachability: decimal: 6, binary: 00000110

Found a representative state in Rmin not in reachability: decimal: 20, binary: 00010100

Found a representative state in Rmin not in reachability: decimal: 18, binary: 00010010

Representatitive states in reachability not in Rmin

{100, 102}

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 10.294 seconds

[QRM NOTE]: Time elapsed since last: 0.005 seconds

[QRM NOTE]: Peak memory: 158350 bytes

next size: node=2


************************************************************************

	[Synthesize Rmin]: ivybench/sym/ivy/firewall: node=2

************************************************************************

python3 qrm.py ivybench/sym/ivy/firewall.ivy -s node=2 -f 1 -g -w -r -m -v 5 -w -l ivybench/sym/ivy/firewall.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 0.235 seconds

[QRM NOTE]: Time elapsed since last: 0.235 seconds

[QRM NOTE]: Peak memory: 2296 bytes


=======================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym/ivy/firewall: node=2]

=======================================================================================


==================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym/ivy/firewall: node=2]

==================================================================================


=== Prime Orbit 0 =====================
size : 2
num_suborbits: 1
0 (*) : ----1---
0     : ['sent(node0,node0)']
1     : -------1
1     : ['sent(node1,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
2 (*) : -1-1----
2     : ['allowed_in(node1)', 'internal(node1)']
3     : 1-1-----
3     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
4 (*) : 1-----0-
4     : ['allowed_in(node0)', '~sent(node1,node0)']
5     : -1---0--
5     : ['allowed_in(node1)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 1
num_suborbits: 1
6 (*) : 11------
6     : ['allowed_in(node0)', 'allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 2
num_suborbits: 1
7 (*) : 1--0----
7     : ['allowed_in(node0)', '~internal(node1)']
8     : -10-----
8     : ['allowed_in(node1)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 2
num_suborbits: 1
9 (*) : -0---10-
9     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
10     : 0----01-
10     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 2
num_suborbits: 1
11 (*) : --0--10-
11     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
12     : ---0-01-
12     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 2
num_suborbits: 1
13 (*) : 00---1--
13     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
14     : 00----1-
14     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 2
num_suborbits: 1
15 (*) : -01--1--
15     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
16     : 0--1--1-
16     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 2
num_suborbits: 1
17 (*) : -0-0-1--
17     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
18     : 0-0---1-
18     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 2
num_suborbits: 1
19 (*) : 0-0--1--
19     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
20     : -0-0--1-
20     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 2
num_suborbits: 1
21 (*) : --00-1--
21     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
22     : --00--1-
22     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 2
num_suborbits: 1
23 (*) : -01---1-
23     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
24     : 0--1-1--
24     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 2
num_suborbits: 1
25 (*) : --1--01-
25     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
26     : ---1-10-
26     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 2
num_suborbits: 1
27 (*) : --11--1-
27     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
28     : --11-1--
28     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 15

[PRIME NOTE]: number of orbits before merging: 15

[PRIME NOTE]: number of primes: 29

[QRM NOTE]: Time elapsed since start: 0.264 seconds

[QRM NOTE]: Time elapsed since last: 0.028 seconds

[QRM NOTE]: Peak memory: 1103645 bytes


============================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym/ivy/firewall: node=2]

============================================================================

definition primes: set()


New level: 0
 pending : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
 solution : []

Essensial at level 0 : {0, 2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, 8), (2, -1), (3, 4), (4, 8), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, 8), (12, 8), (13, 4), (14, 8)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
 solution : [0, 2]


Before reduction : 
 pending  : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
 solution : [0, 2]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, 8), (2, -1), (3, 4), (4, 8), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, 8), (12, 8), (13, 4), (14, 8)]

After removed
 coverage : [(0, -1), (1, 8), (2, -1), (3, 4), (4, 8), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, 8), (12, 8), (13, 4), (14, 8)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
 solution : [0, 2]

[QRM NOTE]: Time elapsed since start: 0.269 seconds

[QRM NOTE]: Time elapsed since last: 0.005 seconds

[QRM NOTE]: Peak memory: 54071 bytes


================================================================================

	[QI]: Quantifier Inference on [ivybench/sym/ivy/firewall: node=2]

================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 2
num_suborbits: 1
0 (*) : ----1---
0     : ['sent(node0,node0)']
1     : -------1
1     : ['sent(node1,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node0,node0)']

sign_func_name2args: {'0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['sent(node0,node0)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1': node$0$sent$0$0; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~sent(NODE0,NODE0)


=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
4 (*) : 1-----0-
4     : ['allowed_in(node0)', '~sent(node1,node0)']
5     : -1---0--
5     : ['allowed_in(node1)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. sent(NODE1,NODE0) | ~allowed_in(NODE0) | NODE0 = NODE1


=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
2 (*) : -1-1----
2     : ['allowed_in(node1)', 'internal(node1)']
3     : 1-1-----
3     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$allowed_in$0$0, node$0$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0; node$0$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'internal(node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'internal': (EnumeratedSort('node', ('node0', 'node1')),)}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0; node$0$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$internal$0': [node$0$allowed_in$0$0; node$0$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$internal$0': node$0$allowed_in$0$0; node$0$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)', 'internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~allowed_in(NODE0) | ~internal(NODE0)


=== Prime Orbit 3 =====================
size : 1
num_suborbits: 1
6 (*) : 11------
6     : ['allowed_in(node0)', 'allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$allowed_in$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),)}

sign_func_name2count:  {'0$allowed_in': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: set()

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: exists NODE0. ~allowed_in(NODE0)


=== Prime Orbit 4 =====================
size : 2
num_suborbits: 1
7 (*) : 1--0----
7     : ['allowed_in(node0)', '~internal(node1)']
8     : -10-----
8     : ['allowed_in(node1)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~internal(node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0 | node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~internal(node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'internal': (EnumeratedSort('node', ('node0', 'node1')),)}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. internal(NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1


=== Prime Orbit 5 =====================
size : 2
num_suborbits: 1
9 (*) : -0---10-
9     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
10     : 0----01-
10     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE1)', '~sent(NODE1,NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. allowed_in(NODE1) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 6 =====================
size : 2
num_suborbits: 1
11 (*) : --0--10-
11     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
12     : ---0-01-
12     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$sent$1$0, node$1$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', '~internal(NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. sent(NODE1,NODE0) | internal(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 7 =====================
size : 2
num_suborbits: 1
13 (*) : 00---1--
13     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
14     : 00----1-
14     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~allowed_in(node1)', 'sent(node0,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$1, node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$1$0; node$1$allowed_in$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$allowed_in$0$1}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$allowed_in$0$1',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~allowed_in(node1)', 'sent(node0,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$allowed_in': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$1$0; node$1$allowed_in$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$allowed_in$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$0; node$1$allowed_in$0$0], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$0; node$1$allowed_in$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$0; node$1$allowed_in$0$0, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$0; node$1$allowed_in$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE1)', '~allowed_in(NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. allowed_in(NODE1) | allowed_in(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 8 =====================
size : 2
num_suborbits: 1
15 (*) : -01--1--
15     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
16     : 0--1--1-
16     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'internal(node0)', 'sent(node0,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$internal$0$0, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'internal(node0)', 'sent(node0,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$0': [node$0$internal$0$0; node$0$sent$0$0], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$0; node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$0': node$0$internal$0$0; node$0$sent$0$0, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$0; node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE1)', 'sent(NODE0,NODE1)', 'internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. allowed_in(NODE1) | ~sent(NODE0,NODE1) | ~internal(NODE0) | NODE0 = NODE1


=== Prime Orbit 9 =====================
size : 2
num_suborbits: 1
17 (*) : -0-0-1--
17     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
18     : 0-0---1-
18     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node1)', 'sent(node0,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', '~internal(node1)', 'sent(node0,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$internal$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$internal$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE1)', '~internal(NODE1)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. allowed_in(NODE1) | internal(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 10 =====================
size : 2
num_suborbits: 1
19 (*) : 0-0--1--
19     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
20     : -0-0--1-
20     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~internal(node0)', 'sent(node0,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~internal(node0)', 'sent(node0,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$allowed_in$0; node$1$internal$0': [node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0], 'node$0$sent$1': [node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$1$allowed_in$0; node$1$internal$0': node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0, 'node$0$sent$1': node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE0)', '~internal(NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. allowed_in(NODE0) | internal(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 11 =====================
size : 2
num_suborbits: 1
21 (*) : --00-1--
21     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
22     : --00--1-
22     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', '~internal(node1)', 'sent(node0,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$internal$0$1, node$0$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$internal$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$1$0; node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$1$internal$0$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$1$internal$0$1',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', '~internal(node1)', 'sent(node0,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$1$0; node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$1$internal$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$0], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$0; node$1$internal$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$0, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$0; node$1$internal$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', '~internal(NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. internal(NODE1) | internal(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 12 =====================
size : 2
num_suborbits: 1
23 (*) : -01---1-
23     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
24     : 0--1-1--
24     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'internal(node0)', 'sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$internal$0$0, node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'internal(node0)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1': [node$0$internal$0$0; node$0$sent$1$0], 'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$0; node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1': node$0$internal$0$0; node$0$sent$1$0, 'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$0; node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE1)', 'sent(NODE1,NODE0)', 'internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. allowed_in(NODE1) | ~sent(NODE1,NODE0) | ~internal(NODE0) | NODE0 = NODE1


=== Prime Orbit 13 =====================
size : 2
num_suborbits: 1
25 (*) : --1--01-
25     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
26     : ---1-10-
26     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', '~sent(node0,node1)', 'sent(node1,node0)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$sent$1$0, node$0$sent$0$0]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0',)


---------- SigGenerator ----------

terms:  ['internal(node0)', '~sent(node0,node1)', 'sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'0$internal': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE0,NODE1)', 'sent(NODE1,NODE0)', 'internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. sent(NODE0,NODE1) | ~sent(NODE1,NODE0) | ~internal(NODE0) | NODE0 = NODE1


=== Prime Orbit 14 =====================
size : 2
num_suborbits: 1
27 (*) : --11--1-
27     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
28     : --11-1--
28     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$internal$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$internal$0$1, node$0$sent$0$0]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$internal$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$1$0, node$0$internal$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$1$0 | node$0$internal$0$1; node$0$sent$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$internal$0$1; node$0$sent$0$0',)


---------- SigGenerator ----------

terms:  ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'0$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$1$0, node$0$internal$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$1$0 | node$0$internal$0$1; node$0$sent$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1': [node$0$internal$0$0; node$0$sent$1$0], 'node$0$internal$0; node$0$sent$0': [node$0$internal$0$1; node$0$sent$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1': node$0$internal$0$0; node$0$sent$1$0, 'node$0$internal$0; node$0$sent$0': node$0$internal$0$1; node$0$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE1)', 'sent(NODE1,NODE0)', 'internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~internal(NODE1) | ~sent(NODE1,NODE0) | ~internal(NODE0) | NODE0 = NODE1


==========================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym/ivy/firewall: node=2]

==========================================================================================


=== Prime Orbit 0 =====================
size : 2
num_suborbits: 1
0 (*) : ----1---
0     : ['sent(node0,node0)']
1     : -------1
1     : ['sent(node1,node1)']
num_forall :   1
num_exists :   0
num_literals : 1
quantified form : forall NODE0. ~sent(NODE0,NODE0)
qcost : 2




=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
4 (*) : 1-----0-
4     : ['allowed_in(node0)', '~sent(node1,node0)']
5     : -1---0--
5     : ['allowed_in(node1)', '~sent(node0,node1)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE0,NODE1. sent(NODE1,NODE0) | ~allowed_in(NODE0) | NODE0 = NODE1
qcost : 5




=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
2 (*) : -1-1----
2     : ['allowed_in(node1)', 'internal(node1)']
3     : 1-1-----
3     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall NODE0. ~allowed_in(NODE0) | ~internal(NODE0)
qcost : 3




=== Prime Orbit 3 =====================
size : 1
num_suborbits: 1
6 (*) : 11------
6     : ['allowed_in(node0)', 'allowed_in(node1)']
num_forall :   0
num_exists :   1
num_literals : 1
quantified form : exists NODE0. ~allowed_in(NODE0)
qcost : 2




=== Prime Orbit 4 =====================
size : 2
num_suborbits: 1
7 (*) : 1--0----
7     : ['allowed_in(node0)', '~internal(node1)']
8     : -10-----
8     : ['allowed_in(node1)', '~internal(node0)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE0,NODE1. internal(NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1
qcost : 5




=== Prime Orbit 5 =====================
size : 2
num_suborbits: 1
9 (*) : -0---10-
9     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
10     : 0----01-
10     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. allowed_in(NODE1) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 6 =====================
size : 2
num_suborbits: 1
11 (*) : --0--10-
11     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
12     : ---0-01-
12     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. sent(NODE1,NODE0) | internal(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 7 =====================
size : 2
num_suborbits: 1
13 (*) : 00---1--
13     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
14     : 00----1-
14     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. allowed_in(NODE1) | allowed_in(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 8 =====================
size : 2
num_suborbits: 1
15 (*) : -01--1--
15     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
16     : 0--1--1-
16     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. allowed_in(NODE1) | ~sent(NODE0,NODE1) | ~internal(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 9 =====================
size : 2
num_suborbits: 1
17 (*) : -0-0-1--
17     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
18     : 0-0---1-
18     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. allowed_in(NODE1) | internal(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 10 =====================
size : 2
num_suborbits: 1
19 (*) : 0-0--1--
19     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
20     : -0-0--1-
20     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. allowed_in(NODE0) | internal(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 11 =====================
size : 2
num_suborbits: 1
21 (*) : --00-1--
21     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
22     : --00--1-
22     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. internal(NODE1) | internal(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 12 =====================
size : 2
num_suborbits: 1
23 (*) : -01---1-
23     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
24     : 0--1-1--
24     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. allowed_in(NODE1) | ~sent(NODE1,NODE0) | ~internal(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 13 =====================
size : 2
num_suborbits: 1
25 (*) : --1--01-
25     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
26     : ---1-10-
26     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. sent(NODE0,NODE1) | ~sent(NODE1,NODE0) | ~internal(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 14 =====================
size : 2
num_suborbits: 1
27 (*) : --11--1-
27     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
28     : --11-1--
28     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~internal(NODE1) | ~sent(NODE1,NODE0) | ~internal(NODE0) | NODE0 = NODE1
qcost : 6



[QRM NOTE]: Time elapsed since start: 0.422 seconds

[QRM NOTE]: Time elapsed since last: 0.153 seconds

[QRM NOTE]: Peak memory: 1756004 bytes


=========================================================================

	[MIN]: Minimization on [ivybench/sym/ivy/firewall: node=2]

=========================================================================


New level: 1
 pending : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
 solution : [0, 2]


Before reduction : 
 pending  : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
 solution : [0, 2]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, 8), (2, -1), (3, 4), (4, 8), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, 8), (12, 8), (13, 4), (14, 8)]

After removed
 coverage : [(0, -1), (1, 8), (2, -1), (3, 4), (4, 8), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, 8), (12, 8), (13, 4), (14, 8)]

Covered at level 1 : set()

After reduction : 
 pending  : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
 solution : [0, 2]


Solution : [0, 2] has cost 7.


Decide in level 1 among pending : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]

Coverage : [(0, -1), (1, 8), (2, -1), (3, 4), (4, 8), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, 8), (12, 8), (13, 4), (14, 8)]

Decide 1 with phase True at level 1

After decision at level 1
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
 solution : [0, 2, 1]


New level: 2
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
 solution : [0, 2, 1]


Before reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
 solution : [0, 2, 1]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, 8), (2, -1), (3, 4), (4, 8), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, 8), (12, 8), (13, 4), (14, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, 4), (6, 4), (7, 8), (8, 4), (9, 8), (10, 8), (11, 8), (12, 4), (13, 2), (14, 2)]

Covered at level 2 : set()

After reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
 solution : [0, 2, 1]


Solution : [0, 2, 1] has cost 10.


Decide in level 2 among pending : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, 4), (6, 4), (7, 8), (8, 4), (9, 8), (10, 8), (11, 8), (12, 4), (13, 2), (14, 2)]

Decide 7 with phase True at level 2

After decision at level 2
 pending : [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14]
 solution : [0, 2, 1, 7]


New level: 3
 pending : [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14]
 solution : [0, 2, 1, 7]


Before reduction : 
 pending  : [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14]
 solution : [0, 2, 1, 7]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, 4), (6, 4), (7, 8), (8, 4), (9, 8), (10, 8), (11, 8), (12, 4), (13, 2), (14, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, 0), (6, 1), (7, -1), (8, 0), (9, 1), (10, 2), (11, 8), (12, 0), (13, 0), (14, 0)]

Covered at level 3 : {5, 8, 12, 13, 14}

After reduction : 
 pending  : [3, 4, 6, 9, 10, 11]
 solution : [0, 2, 1, 7]


Before reduction : 
 pending  : [3, 4, 6, 9, 10, 11]
 solution : [0, 2, 1, 7]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, 0), (6, 1), (7, -1), (8, 0), (9, 1), (10, 2), (11, 8), (12, 0), (13, 0), (14, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, -1), (6, 1), (7, -1), (8, -1), (9, 1), (10, 2), (11, 8), (12, -1), (13, -1), (14, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [3, 4, 6, 9, 10, 11]
 solution : [0, 2, 1, 7]


Solution : [0, 2, 1, 7] has cost 16.


Decide in level 3 among pending : [3, 4, 6, 9, 10, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, -1), (6, 1), (7, -1), (8, -1), (9, 1), (10, 2), (11, 8), (12, -1), (13, -1), (14, -1)]

Decide 11 with phase True at level 3

After decision at level 3
 pending : [3, 4, 6, 9, 10]
 solution : [0, 2, 1, 7, 11]


New level: 4
 pending : [3, 4, 6, 9, 10]
 solution : [0, 2, 1, 7, 11]


Before reduction : 
 pending  : [3, 4, 6, 9, 10]
 solution : [0, 2, 1, 7, 11]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, -1), (6, 1), (7, -1), (8, -1), (9, 1), (10, 2), (11, 8), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 4 : {3, 4, 6, 9, 10}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11]


Solution : [0, 2, 1, 7, 11] has cost 22.


Before backtrack at level 4
 pending : []
 solution : [0, 2, 1, 7, 11]

After backtrack at level 4
 pending : [3, 4, 6, 9, 10]
 solution : [0, 2, 1, 7, 11]


Invert decision for 11 at level 3


New level: 4
 pending : [3, 4, 6, 9, 10]
 solution : [0, 2, 1, 7]


Before reduction : 
 pending  : [3, 4, 6, 9, 10]
 solution : [0, 2, 1, 7]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, -1), (6, 1), (7, -1), (8, -1), (9, 1), (10, 2), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [3, 4, 6, 9, 10]
 solution : [0, 2, 1, 7]


Solution : [0, 2, 1, 7] has cost 16.


Decide in level 4 among pending : [3, 4, 6, 9, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, -1), (6, 1), (7, -1), (8, -1), (9, 1), (10, 2), (11, -1), (12, -1), (13, -1), (14, -1)]

Decide 4 with phase True at level 4

After decision at level 4
 pending : [3, 6, 9, 10]
 solution : [0, 2, 1, 7, 4]


New level: 5
 pending : [3, 6, 9, 10]
 solution : [0, 2, 1, 7, 4]


Before reduction : 
 pending  : [3, 6, 9, 10]
 solution : [0, 2, 1, 7, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, -1), (6, 1), (7, -1), (8, -1), (9, 1), (10, 2), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 5 : {9, 10, 3, 6}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 4]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 4]


Solution : [0, 2, 1, 7, 4] has cost 21.


Before backtrack at level 5
 pending : []
 solution : [0, 2, 1, 7, 4]

After backtrack at level 5
 pending : [3, 6, 9, 10]
 solution : [0, 2, 1, 7, 4]


Invert decision for 4 at level 4


New level: 5
 pending : [3, 6, 9, 10]
 solution : [0, 2, 1, 7]


Before reduction : 
 pending  : [3, 6, 9, 10]
 solution : [0, 2, 1, 7]

Essensial at level 5 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 1), (10, 2), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [6, 9, 10]
 solution : [0, 2, 1, 7, 3]


Before reduction : 
 pending  : [6, 9, 10]
 solution : [0, 2, 1, 7, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 1), (10, 2), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 1), (10, 2), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [6, 9, 10]
 solution : [0, 2, 1, 7, 3]


Solution : [0, 2, 1, 7, 3] has cost 18.


Decide in level 5 among pending : [6, 9, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 1), (10, 2), (11, -1), (12, -1), (13, -1), (14, -1)]

Decide 10 with phase True at level 5

After decision at level 5
 pending : [6, 9]
 solution : [0, 2, 1, 7, 3, 10]


New level: 6
 pending : [6, 9]
 solution : [0, 2, 1, 7, 3, 10]


Before reduction : 
 pending  : [6, 9]
 solution : [0, 2, 1, 7, 3, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 1), (10, 2), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 6 : {9, 6}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 3, 10]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 3, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 3, 10]


Solution : [0, 2, 1, 7, 3, 10] has cost 24.


Before backtrack at level 6
 pending : []
 solution : [0, 2, 1, 7, 3, 10]

After backtrack at level 6
 pending : [6, 9]
 solution : [0, 2, 1, 7, 3, 10]


Invert decision for 10 at level 5


New level: 6
 pending : [6, 9]
 solution : [0, 2, 1, 7, 3]


Before reduction : 
 pending  : [6, 9]
 solution : [0, 2, 1, 7, 3]

Essensial at level 6 : {9, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 3, 9, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 3, 9, 6]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 3, 9, 6]


Solution : [0, 2, 1, 7, 3, 9, 6] has cost 30.


Before backtrack at level 6
 pending : []
 solution : [0, 2, 1, 7, 3, 9, 6]

After backtrack at level 6
 pending : [6, 9]
 solution : [0, 2, 1, 7, 3]


Before backtrack at level 5
 pending : [6, 9]
 solution : [0, 2, 1, 7, 3]

After backtrack at level 5
 pending : [6, 9, 3, 10]
 solution : [0, 2, 1, 7]


Before backtrack at level 4
 pending : [6, 9, 3, 10]
 solution : [0, 2, 1, 7]

After backtrack at level 4
 pending : [6, 9, 3, 10, 4]
 solution : [0, 2, 1, 7]


Before backtrack at level 3
 pending : [6, 9, 3, 10, 4]
 solution : [0, 2, 1, 7]

After backtrack at level 3
 pending : [6, 9, 3, 10, 4, 5, 8, 12, 13, 14, 11]
 solution : [0, 2, 1, 7]


Invert decision for 7 at level 2


New level: 3
 pending : [6, 9, 3, 10, 4, 5, 8, 12, 13, 14, 11]
 solution : [0, 2, 1]


Before reduction : 
 pending  : [6, 9, 3, 10, 4, 5, 8, 12, 13, 14, 11]
 solution : [0, 2, 1]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, 4), (6, 4), (7, -1), (8, 4), (9, 8), (10, 8), (11, 8), (12, 4), (13, 2), (14, 2)]

Covered at level 3 : set()

After reduction : 
 pending  : [6, 9, 3, 10, 4, 5, 8, 12, 13, 14, 11]
 solution : [0, 2, 1]


Solution : [0, 2, 1] has cost 10.


Decide in level 3 among pending : [6, 9, 3, 10, 4, 5, 8, 12, 13, 14, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, 4), (6, 4), (7, -1), (8, 4), (9, 8), (10, 8), (11, 8), (12, 4), (13, 2), (14, 2)]

Decide 9 with phase True at level 3

After decision at level 3
 pending : [6, 3, 10, 4, 5, 8, 12, 13, 14, 11]
 solution : [0, 2, 1, 9]


New level: 4
 pending : [6, 3, 10, 4, 5, 8, 12, 13, 14, 11]
 solution : [0, 2, 1, 9]


Before reduction : 
 pending  : [6, 3, 10, 4, 5, 8, 12, 13, 14, 11]
 solution : [0, 2, 1, 9]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, 4), (6, 4), (7, -1), (8, 4), (9, 8), (10, 8), (11, 8), (12, 4), (13, 2), (14, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, 2), (6, 4), (7, -1), (8, 2), (9, -1), (10, 4), (11, 4), (12, 4), (13, 2), (14, 2)]

Covered at level 4 : set()

After reduction : 
 pending  : [6, 3, 10, 4, 5, 8, 12, 13, 14, 11]
 solution : [0, 2, 1, 9]


Solution : [0, 2, 1, 9] has cost 16.


Decide in level 4 among pending : [6, 3, 10, 4, 5, 8, 12, 13, 14, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, 2), (6, 4), (7, -1), (8, 2), (9, -1), (10, 4), (11, 4), (12, 4), (13, 2), (14, 2)]

Decide 6 with phase True at level 4

After decision at level 4
 pending : [3, 10, 4, 5, 8, 12, 13, 14, 11]
 solution : [0, 2, 1, 9, 6]


New level: 5
 pending : [3, 10, 4, 5, 8, 12, 13, 14, 11]
 solution : [0, 2, 1, 9, 6]


Before reduction : 
 pending  : [3, 10, 4, 5, 8, 12, 13, 14, 11]
 solution : [0, 2, 1, 9, 6]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, 2), (6, 4), (7, -1), (8, 2), (9, -1), (10, 4), (11, 4), (12, 4), (13, 2), (14, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, 1), (6, -1), (7, -1), (8, 2), (9, -1), (10, 0), (11, 1), (12, 4), (13, 1), (14, 2)]

Covered at level 5 : {10}

After reduction : 
 pending  : [3, 4, 5, 8, 12, 13, 14, 11]
 solution : [0, 2, 1, 9, 6]


Before reduction : 
 pending  : [3, 4, 5, 8, 12, 13, 14, 11]
 solution : [0, 2, 1, 9, 6]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, 1), (6, -1), (7, -1), (8, 2), (9, -1), (10, 0), (11, 1), (12, 4), (13, 1), (14, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, 1), (6, -1), (7, -1), (8, 2), (9, -1), (10, -1), (11, 1), (12, 4), (13, 1), (14, 2)]

Covered at level 5 : set()

After reduction : 
 pending  : [3, 4, 5, 8, 12, 13, 14, 11]
 solution : [0, 2, 1, 9, 6]


Solution : [0, 2, 1, 9, 6] has cost 22.


Before backtrack at level 5
 pending : [3, 4, 5, 8, 12, 13, 14, 11]
 solution : [0, 2, 1, 9, 6]

After backtrack at level 5
 pending : [3, 4, 5, 8, 12, 13, 14, 11, 10]
 solution : [0, 2, 1, 9, 6]


Invert decision for 6 at level 4


New level: 5
 pending : [3, 4, 5, 8, 12, 13, 14, 11, 10]
 solution : [0, 2, 1, 9]


Before reduction : 
 pending  : [3, 4, 5, 8, 12, 13, 14, 11, 10]
 solution : [0, 2, 1, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, 1), (6, -1), (7, -1), (8, 2), (9, -1), (10, -1), (11, 1), (12, 4), (13, 1), (14, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, 2), (6, -1), (7, -1), (8, 2), (9, -1), (10, 4), (11, 4), (12, 4), (13, 2), (14, 2)]

Covered at level 5 : set()

After reduction : 
 pending  : [3, 4, 5, 8, 12, 13, 14, 11, 10]
 solution : [0, 2, 1, 9]


Solution : [0, 2, 1, 9] has cost 16.


Decide in level 5 among pending : [3, 4, 5, 8, 12, 13, 14, 11, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, 2), (6, -1), (7, -1), (8, 2), (9, -1), (10, 4), (11, 4), (12, 4), (13, 2), (14, 2)]

Decide 4 with phase True at level 5

After decision at level 5
 pending : [3, 5, 8, 12, 13, 14, 11, 10]
 solution : [0, 2, 1, 9, 4]


New level: 6
 pending : [3, 5, 8, 12, 13, 14, 11, 10]
 solution : [0, 2, 1, 9, 4]


Before reduction : 
 pending  : [3, 5, 8, 12, 13, 14, 11, 10]
 solution : [0, 2, 1, 9, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, 2), (6, -1), (7, -1), (8, 2), (9, -1), (10, 4), (11, 4), (12, 4), (13, 2), (14, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 2), (6, -1), (7, -1), (8, 2), (9, -1), (10, 1), (11, 0), (12, 4), (13, 2), (14, 2)]

Covered at level 6 : {11, 3}

After reduction : 
 pending  : [5, 8, 12, 13, 14, 10]
 solution : [0, 2, 1, 9, 4]


Before reduction : 
 pending  : [5, 8, 12, 13, 14, 10]
 solution : [0, 2, 1, 9, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 2), (6, -1), (7, -1), (8, 2), (9, -1), (10, 1), (11, 0), (12, 4), (13, 2), (14, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, -1), (7, -1), (8, 2), (9, -1), (10, 1), (11, -1), (12, 4), (13, 2), (14, 2)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 8, 12, 13, 14, 10]
 solution : [0, 2, 1, 9, 4]


Solution : [0, 2, 1, 9, 4] has cost 21.


Decide in level 6 among pending : [5, 8, 12, 13, 14, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, -1), (7, -1), (8, 2), (9, -1), (10, 1), (11, -1), (12, 4), (13, 2), (14, 2)]

Decide 12 with phase True at level 6

After decision at level 6
 pending : [5, 8, 13, 14, 10]
 solution : [0, 2, 1, 9, 4, 12]


New level: 7
 pending : [5, 8, 13, 14, 10]
 solution : [0, 2, 1, 9, 4, 12]


Before reduction : 
 pending  : [5, 8, 13, 14, 10]
 solution : [0, 2, 1, 9, 4, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, -1), (7, -1), (8, 2), (9, -1), (10, 1), (11, -1), (12, 4), (13, 2), (14, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0)]

Covered at level 7 : {5, 8, 10, 13, 14}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 9, 4, 12]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 9, 4, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 9, 4, 12]


Solution : [0, 2, 1, 9, 4, 12] has cost 27.


Before backtrack at level 7
 pending : []
 solution : [0, 2, 1, 9, 4, 12]

After backtrack at level 7
 pending : [5, 8, 13, 14, 10]
 solution : [0, 2, 1, 9, 4, 12]


Invert decision for 12 at level 6


New level: 7
 pending : [5, 8, 13, 14, 10]
 solution : [0, 2, 1, 9, 4]


Before reduction : 
 pending  : [5, 8, 13, 14, 10]
 solution : [0, 2, 1, 9, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, -1), (7, -1), (8, 2), (9, -1), (10, 1), (11, -1), (12, -1), (13, 2), (14, 2)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 8, 13, 14, 10]
 solution : [0, 2, 1, 9, 4]


Solution : [0, 2, 1, 9, 4] has cost 21.


Decide in level 7 among pending : [5, 8, 13, 14, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, -1), (7, -1), (8, 2), (9, -1), (10, 1), (11, -1), (12, -1), (13, 2), (14, 2)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [8, 13, 14, 10]
 solution : [0, 2, 1, 9, 4, 5]


New level: 8
 pending : [8, 13, 14, 10]
 solution : [0, 2, 1, 9, 4, 5]


Before reduction : 
 pending  : [8, 13, 14, 10]
 solution : [0, 2, 1, 9, 4, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, -1), (7, -1), (8, 2), (9, -1), (10, 1), (11, -1), (12, -1), (13, 2), (14, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 1)]

Covered at level 8 : {10, 13}

After reduction : 
 pending  : [8, 14]
 solution : [0, 2, 1, 9, 4, 5]


Before reduction : 
 pending  : [8, 14]
 solution : [0, 2, 1, 9, 4, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 14]
 solution : [0, 2, 1, 9, 4, 5]


Solution : [0, 2, 1, 9, 4, 5] has cost 27.


Before backtrack at level 8
 pending : [8, 14]
 solution : [0, 2, 1, 9, 4, 5]

After backtrack at level 8
 pending : [8, 14, 13, 10]
 solution : [0, 2, 1, 9, 4, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [8, 14, 13, 10]
 solution : [0, 2, 1, 9, 4]


Before reduction : 
 pending  : [8, 14, 13, 10]
 solution : [0, 2, 1, 9, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2), (9, -1), (10, 1), (11, -1), (12, -1), (13, 2), (14, 2)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 14, 13, 10]
 solution : [0, 2, 1, 9, 4]


Solution : [0, 2, 1, 9, 4] has cost 21.


Decide in level 8 among pending : [8, 14, 13, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2), (9, -1), (10, 1), (11, -1), (12, -1), (13, 2), (14, 2)]

Decide 8 with phase True at level 8

After decision at level 8
 pending : [14, 13, 10]
 solution : [0, 2, 1, 9, 4, 8]


New level: 9
 pending : [14, 13, 10]
 solution : [0, 2, 1, 9, 4, 8]


Before reduction : 
 pending  : [14, 13, 10]
 solution : [0, 2, 1, 9, 4, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2), (9, -1), (10, 1), (11, -1), (12, -1), (13, 2), (14, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, 0)]

Covered at level 9 : {14}

After reduction : 
 pending  : [13, 10]
 solution : [0, 2, 1, 9, 4, 8]


Before reduction : 
 pending  : [13, 10]
 solution : [0, 2, 1, 9, 4, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [13, 10]
 solution : [0, 2, 1, 9, 4, 8]


Solution : [0, 2, 1, 9, 4, 8] has cost 27.


Before backtrack at level 9
 pending : [13, 10]
 solution : [0, 2, 1, 9, 4, 8]

After backtrack at level 9
 pending : [13, 10, 14]
 solution : [0, 2, 1, 9, 4, 8]


Invert decision for 8 at level 8


New level: 9
 pending : [13, 10, 14]
 solution : [0, 2, 1, 9, 4]


Before reduction : 
 pending  : [13, 10, 14]
 solution : [0, 2, 1, 9, 4]

Essensial at level 9 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [13, 10]
 solution : [0, 2, 1, 9, 4, 14]


Before reduction : 
 pending  : [13, 10]
 solution : [0, 2, 1, 9, 4, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [13, 10]
 solution : [0, 2, 1, 9, 4, 14]


Solution : [0, 2, 1, 9, 4, 14] has cost 27.


Before backtrack at level 9
 pending : [13, 10]
 solution : [0, 2, 1, 9, 4, 14]

After backtrack at level 9
 pending : [13, 10, 14]
 solution : [0, 2, 1, 9, 4]


Before backtrack at level 8
 pending : [13, 10, 14]
 solution : [0, 2, 1, 9, 4]

After backtrack at level 8
 pending : [13, 10, 14, 8]
 solution : [0, 2, 1, 9, 4]


Before backtrack at level 7
 pending : [13, 10, 14, 8]
 solution : [0, 2, 1, 9, 4]

After backtrack at level 7
 pending : [13, 10, 14, 8, 5]
 solution : [0, 2, 1, 9, 4]


Before backtrack at level 6
 pending : [13, 10, 14, 8, 5]
 solution : [0, 2, 1, 9, 4]

After backtrack at level 6
 pending : [13, 10, 14, 8, 5, 3, 11, 12]
 solution : [0, 2, 1, 9, 4]


Invert decision for 4 at level 5


New level: 6
 pending : [13, 10, 14, 8, 5, 3, 11, 12]
 solution : [0, 2, 1, 9]


Before reduction : 
 pending  : [13, 10, 14, 8, 5, 3, 11, 12]
 solution : [0, 2, 1, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 2), (6, -1), (7, -1), (8, 2), (9, -1), (10, 4), (11, 4), (12, 4), (13, 2), (14, 2)]

Covered at level 6 : set()

After reduction : 
 pending  : [13, 10, 14, 8, 5, 3, 11, 12]
 solution : [0, 2, 1, 9]


Solution : [0, 2, 1, 9] has cost 16.


Decide in level 6 among pending : [13, 10, 14, 8, 5, 3, 11, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 2), (6, -1), (7, -1), (8, 2), (9, -1), (10, 4), (11, 4), (12, 4), (13, 2), (14, 2)]

Decide 10 with phase True at level 6

After decision at level 6
 pending : [13, 14, 8, 5, 3, 11, 12]
 solution : [0, 2, 1, 9, 10]


New level: 7
 pending : [13, 14, 8, 5, 3, 11, 12]
 solution : [0, 2, 1, 9, 10]


Before reduction : 
 pending  : [13, 14, 8, 5, 3, 11, 12]
 solution : [0, 2, 1, 9, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 2), (6, -1), (7, -1), (8, 2), (9, -1), (10, 4), (11, 4), (12, 4), (13, 2), (14, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 1), (6, -1), (7, -1), (8, 2), (9, -1), (10, -1), (11, 1), (12, 2), (13, 1), (14, 2)]

Covered at level 7 : set()

After reduction : 
 pending  : [13, 14, 8, 5, 3, 11, 12]
 solution : [0, 2, 1, 9, 10]


Solution : [0, 2, 1, 9, 10] has cost 22.


Before backtrack at level 7
 pending : [13, 14, 8, 5, 3, 11, 12]
 solution : [0, 2, 1, 9, 10]

After backtrack at level 7
 pending : [13, 14, 8, 5, 3, 11, 12]
 solution : [0, 2, 1, 9, 10]


Invert decision for 10 at level 6


New level: 7
 pending : [13, 14, 8, 5, 3, 11, 12]
 solution : [0, 2, 1, 9]


Before reduction : 
 pending  : [13, 14, 8, 5, 3, 11, 12]
 solution : [0, 2, 1, 9]

Essensial at level 7 : {11}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 1), (6, -1), (7, -1), (8, 2), (9, -1), (10, -1), (11, 1), (12, 2), (13, 1), (14, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 2), (6, -1), (7, -1), (8, 2), (9, -1), (10, -1), (11, -1), (12, 4), (13, 2), (14, 2)]

Covered at level 7 : {3}

After reduction : 
 pending  : [13, 14, 8, 5, 12]
 solution : [0, 2, 1, 9, 11]


Before reduction : 
 pending  : [13, 14, 8, 5, 12]
 solution : [0, 2, 1, 9, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 2), (6, -1), (7, -1), (8, 2), (9, -1), (10, -1), (11, -1), (12, 4), (13, 2), (14, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, -1), (7, -1), (8, 2), (9, -1), (10, -1), (11, -1), (12, 4), (13, 2), (14, 2)]

Covered at level 7 : set()

After reduction : 
 pending  : [13, 14, 8, 5, 12]
 solution : [0, 2, 1, 9, 11]


Solution : [0, 2, 1, 9, 11] has cost 22.


Before backtrack at level 7
 pending : [13, 14, 8, 5, 12]
 solution : [0, 2, 1, 9, 11]

After backtrack at level 7
 pending : [13, 14, 8, 5, 12, 11, 3]
 solution : [0, 2, 1, 9]


Before backtrack at level 6
 pending : [13, 14, 8, 5, 12, 11, 3]
 solution : [0, 2, 1, 9]

After backtrack at level 6
 pending : [13, 14, 8, 5, 12, 11, 3, 10]
 solution : [0, 2, 1, 9]


Before backtrack at level 5
 pending : [13, 14, 8, 5, 12, 11, 3, 10]
 solution : [0, 2, 1, 9]

After backtrack at level 5
 pending : [13, 14, 8, 5, 12, 11, 3, 10, 4]
 solution : [0, 2, 1, 9]


Before backtrack at level 4
 pending : [13, 14, 8, 5, 12, 11, 3, 10, 4]
 solution : [0, 2, 1, 9]

After backtrack at level 4
 pending : [13, 14, 8, 5, 12, 11, 3, 10, 4, 6]
 solution : [0, 2, 1, 9]


Invert decision for 9 at level 3


New level: 4
 pending : [13, 14, 8, 5, 12, 11, 3, 10, 4, 6]
 solution : [0, 2, 1]


Before reduction : 
 pending  : [13, 14, 8, 5, 12, 11, 3, 10, 4, 6]
 solution : [0, 2, 1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, -1), (7, -1), (8, 2), (9, -1), (10, -1), (11, -1), (12, 4), (13, 2), (14, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, 4), (6, 4), (7, -1), (8, 4), (9, -1), (10, 8), (11, 8), (12, 4), (13, 2), (14, 2)]

Covered at level 4 : set()

After reduction : 
 pending  : [13, 14, 8, 5, 12, 11, 3, 10, 4, 6]
 solution : [0, 2, 1]


Solution : [0, 2, 1] has cost 10.


Decide in level 4 among pending : [13, 14, 8, 5, 12, 11, 3, 10, 4, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, 4), (6, 4), (7, -1), (8, 4), (9, -1), (10, 8), (11, 8), (12, 4), (13, 2), (14, 2)]

Decide 11 with phase True at level 4

After decision at level 4
 pending : [13, 14, 8, 5, 12, 3, 10, 4, 6]
 solution : [0, 2, 1, 11]


New level: 5
 pending : [13, 14, 8, 5, 12, 3, 10, 4, 6]
 solution : [0, 2, 1, 11]


Before reduction : 
 pending  : [13, 14, 8, 5, 12, 3, 10, 4, 6]
 solution : [0, 2, 1, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 4), (5, 4), (6, 4), (7, -1), (8, 4), (9, -1), (10, 8), (11, 8), (12, 4), (13, 2), (14, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 4), (6, 1), (7, -1), (8, 4), (9, -1), (10, 2), (11, -1), (12, 4), (13, 2), (14, 2)]

Covered at level 5 : {3, 4}

After reduction : 
 pending  : [13, 14, 8, 5, 12, 10, 6]
 solution : [0, 2, 1, 11]


Before reduction : 
 pending  : [13, 14, 8, 5, 12, 10, 6]
 solution : [0, 2, 1, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 4), (6, 1), (7, -1), (8, 4), (9, -1), (10, 2), (11, -1), (12, 4), (13, 2), (14, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 1), (7, -1), (8, 4), (9, -1), (10, 2), (11, -1), (12, 4), (13, 2), (14, 2)]

Covered at level 5 : set()

After reduction : 
 pending  : [13, 14, 8, 5, 12, 10, 6]
 solution : [0, 2, 1, 11]


Solution : [0, 2, 1, 11] has cost 16.


Decide in level 5 among pending : [13, 14, 8, 5, 12, 10, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 1), (7, -1), (8, 4), (9, -1), (10, 2), (11, -1), (12, 4), (13, 2), (14, 2)]

Decide 8 with phase True at level 5

After decision at level 5
 pending : [13, 14, 5, 12, 10, 6]
 solution : [0, 2, 1, 11, 8]


New level: 6
 pending : [13, 14, 5, 12, 10, 6]
 solution : [0, 2, 1, 11, 8]


Before reduction : 
 pending  : [13, 14, 5, 12, 10, 6]
 solution : [0, 2, 1, 11, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 1), (7, -1), (8, 4), (9, -1), (10, 2), (11, -1), (12, 4), (13, 2), (14, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, 1), (14, 0)]

Covered at level 6 : {14}

After reduction : 
 pending  : [13, 5, 12, 10, 6]
 solution : [0, 2, 1, 11, 8]


Before reduction : 
 pending  : [13, 5, 12, 10, 6]
 solution : [0, 2, 1, 11, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, 1), (14, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, 1), (14, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [13, 5, 12, 10, 6]
 solution : [0, 2, 1, 11, 8]


Solution : [0, 2, 1, 11, 8] has cost 22.


Before backtrack at level 6
 pending : [13, 5, 12, 10, 6]
 solution : [0, 2, 1, 11, 8]

After backtrack at level 6
 pending : [13, 5, 12, 10, 6, 14]
 solution : [0, 2, 1, 11, 8]


Invert decision for 8 at level 5


New level: 6
 pending : [13, 5, 12, 10, 6, 14]
 solution : [0, 2, 1, 11]


Before reduction : 
 pending  : [13, 5, 12, 10, 6, 14]
 solution : [0, 2, 1, 11]

Essensial at level 6 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, 1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 2), (13, 0), (14, 1)]

Covered at level 6 : {13, 6}

After reduction : 
 pending  : [12, 10, 14]
 solution : [0, 2, 1, 11, 5]


Before reduction : 
 pending  : [12, 10, 14]
 solution : [0, 2, 1, 11, 5]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 2), (13, 0), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 2), (13, -1), (14, 1)]

Covered at level 6 : set()

After reduction : 
 pending  : [12, 10, 14]
 solution : [0, 2, 1, 11, 5]


Solution : [0, 2, 1, 11, 5] has cost 22.


Before backtrack at level 6
 pending : [12, 10, 14]
 solution : [0, 2, 1, 11, 5]

After backtrack at level 6
 pending : [12, 10, 14, 5, 13, 6]
 solution : [0, 2, 1, 11]


Before backtrack at level 5
 pending : [12, 10, 14, 5, 13, 6]
 solution : [0, 2, 1, 11]

After backtrack at level 5
 pending : [12, 10, 14, 5, 13, 6, 3, 4, 8]
 solution : [0, 2, 1, 11]


Invert decision for 11 at level 4


New level: 5
 pending : [12, 10, 14, 5, 13, 6, 3, 4, 8]
 solution : [0, 2, 1]


Before reduction : 
 pending  : [12, 10, 14, 5, 13, 6, 3, 4, 8]
 solution : [0, 2, 1]

Essensial at level 5 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 2), (13, -1), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, 2), (6, 0), (7, -1), (8, 4), (9, -1), (10, -1), (11, -1), (12, 2), (13, 1), (14, 2)]

Covered at level 5 : {6}

After reduction : 
 pending  : [12, 14, 5, 13, 3, 4, 8]
 solution : [0, 2, 1, 10]


Before reduction : 
 pending  : [12, 14, 5, 13, 3, 4, 8]
 solution : [0, 2, 1, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, 2), (6, 0), (7, -1), (8, 4), (9, -1), (10, -1), (11, -1), (12, 2), (13, 1), (14, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, 2), (6, -1), (7, -1), (8, 4), (9, -1), (10, -1), (11, -1), (12, 2), (13, 1), (14, 2)]

Covered at level 5 : set()

After reduction : 
 pending  : [12, 14, 5, 13, 3, 4, 8]
 solution : [0, 2, 1, 10]


Solution : [0, 2, 1, 10] has cost 16.


Decide in level 5 among pending : [12, 14, 5, 13, 3, 4, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, 2), (6, -1), (7, -1), (8, 4), (9, -1), (10, -1), (11, -1), (12, 2), (13, 1), (14, 2)]

Decide 8 with phase True at level 5

After decision at level 5
 pending : [12, 14, 5, 13, 3, 4]
 solution : [0, 2, 1, 10, 8]


New level: 6
 pending : [12, 14, 5, 13, 3, 4]
 solution : [0, 2, 1, 10, 8]


Before reduction : 
 pending  : [12, 14, 5, 13, 3, 4]
 solution : [0, 2, 1, 10, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, 2), (6, -1), (7, -1), (8, 4), (9, -1), (10, -1), (11, -1), (12, 2), (13, 1), (14, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0)]

Covered at level 6 : {13, 12, 5, 14}

After reduction : 
 pending  : [3, 4]
 solution : [0, 2, 1, 10, 8]


Before reduction : 
 pending  : [3, 4]
 solution : [0, 2, 1, 10, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 4]
 solution : [0, 2, 1, 10, 8]


Solution : [0, 2, 1, 10, 8] has cost 22.


Before backtrack at level 6
 pending : [3, 4]
 solution : [0, 2, 1, 10, 8]

After backtrack at level 6
 pending : [3, 4, 12, 14, 5, 13]
 solution : [0, 2, 1, 10, 8]


Invert decision for 8 at level 5


New level: 6
 pending : [3, 4, 12, 14, 5, 13]
 solution : [0, 2, 1, 10]


Before reduction : 
 pending  : [3, 4, 12, 14, 5, 13]
 solution : [0, 2, 1, 10]

Essensial at level 6 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1), (13, 0), (14, 1)]

Covered at level 6 : {13}

After reduction : 
 pending  : [3, 4, 12, 14]
 solution : [0, 2, 1, 10, 5]


Before reduction : 
 pending  : [3, 4, 12, 14]
 solution : [0, 2, 1, 10, 5]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1), (13, 0), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1), (13, -1), (14, 1)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 4, 12, 14]
 solution : [0, 2, 1, 10, 5]


Solution : [0, 2, 1, 10, 5] has cost 22.


Before backtrack at level 6
 pending : [3, 4, 12, 14]
 solution : [0, 2, 1, 10, 5]

After backtrack at level 6
 pending : [3, 4, 12, 14, 5, 13]
 solution : [0, 2, 1, 10]


Before backtrack at level 5
 pending : [3, 4, 12, 14, 5, 13]
 solution : [0, 2, 1, 10]

After backtrack at level 5
 pending : [3, 4, 12, 14, 5, 13, 10, 6, 8]
 solution : [0, 2, 1]


Before backtrack at level 4
 pending : [3, 4, 12, 14, 5, 13, 10, 6, 8]
 solution : [0, 2, 1]

After backtrack at level 4
 pending : [3, 4, 12, 14, 5, 13, 10, 6, 8, 11]
 solution : [0, 2, 1]


Before backtrack at level 3
 pending : [3, 4, 12, 14, 5, 13, 10, 6, 8, 11]
 solution : [0, 2, 1]

After backtrack at level 3
 pending : [3, 4, 12, 14, 5, 13, 10, 6, 8, 11, 9]
 solution : [0, 2, 1]


Before backtrack at level 2
 pending : [3, 4, 12, 14, 5, 13, 10, 6, 8, 11, 9]
 solution : [0, 2, 1]

After backtrack at level 2
 pending : [3, 4, 12, 14, 5, 13, 10, 6, 8, 11, 9, 7]
 solution : [0, 2, 1]


Invert decision for 1 at level 1


New level: 2
 pending : [3, 4, 12, 14, 5, 13, 10, 6, 8, 11, 9, 7]
 solution : [0, 2]


Before reduction : 
 pending  : [3, 4, 12, 14, 5, 13, 10, 6, 8, 11, 9, 7]
 solution : [0, 2]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1), (13, -1), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 4), (4, 8), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, 8), (12, 8), (13, 4), (14, 8)]

Covered at level 2 : set()

After reduction : 
 pending  : [3, 4, 12, 14, 5, 13, 10, 6, 8, 11, 9, 7]
 solution : [0, 2]


Solution : [0, 2] has cost 7.


Decide in level 2 among pending : [3, 4, 12, 14, 5, 13, 10, 6, 8, 11, 9, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 4), (4, 8), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, 8), (12, 8), (13, 4), (14, 8)]

Decide 4 with phase True at level 2

After decision at level 2
 pending : [3, 12, 14, 5, 13, 10, 6, 8, 11, 9, 7]
 solution : [0, 2, 4]


New level: 3
 pending : [3, 12, 14, 5, 13, 10, 6, 8, 11, 9, 7]
 solution : [0, 2, 4]


Before reduction : 
 pending  : [3, 12, 14, 5, 13, 10, 6, 8, 11, 9, 7]
 solution : [0, 2, 4]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 4), (4, 8), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, 8), (12, 8), (13, 4), (14, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 4), (6, 2), (7, 8), (8, 8), (9, 4), (10, 4), (11, 2), (12, 8), (13, 4), (14, 8)]

Covered at level 3 : set()

After reduction : 
 pending  : [3, 12, 14, 5, 13, 10, 6, 8, 11, 9, 7]
 solution : [0, 2, 4]


Solution : [0, 2, 4] has cost 12.


Decide in level 3 among pending : [3, 12, 14, 5, 13, 10, 6, 8, 11, 9, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 4), (6, 2), (7, 8), (8, 8), (9, 4), (10, 4), (11, 2), (12, 8), (13, 4), (14, 8)]

Decide 12 with phase True at level 3

After decision at level 3
 pending : [3, 14, 5, 13, 10, 6, 8, 11, 9, 7]
 solution : [0, 2, 4, 12]


New level: 4
 pending : [3, 14, 5, 13, 10, 6, 8, 11, 9, 7]
 solution : [0, 2, 4, 12]


Before reduction : 
 pending  : [3, 14, 5, 13, 10, 6, 8, 11, 9, 7]
 solution : [0, 2, 4, 12]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 4), (6, 2), (7, 8), (8, 8), (9, 4), (10, 4), (11, 2), (12, 8), (13, 4), (14, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 2), (6, 1), (7, 4), (8, 1), (9, 4), (10, 2), (11, 2), (12, -1), (13, 0), (14, 1)]

Covered at level 4 : {13}

After reduction : 
 pending  : [3, 14, 5, 10, 6, 8, 11, 9, 7]
 solution : [0, 2, 4, 12]


Before reduction : 
 pending  : [3, 14, 5, 10, 6, 8, 11, 9, 7]
 solution : [0, 2, 4, 12]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 2), (6, 1), (7, 4), (8, 1), (9, 4), (10, 2), (11, 2), (12, -1), (13, 0), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 2), (6, 1), (7, 4), (8, 1), (9, 4), (10, 2), (11, 2), (12, -1), (13, -1), (14, 1)]

Covered at level 4 : set()

After reduction : 
 pending  : [3, 14, 5, 10, 6, 8, 11, 9, 7]
 solution : [0, 2, 4, 12]


Solution : [0, 2, 4, 12] has cost 18.


Decide in level 4 among pending : [3, 14, 5, 10, 6, 8, 11, 9, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 2), (6, 1), (7, 4), (8, 1), (9, 4), (10, 2), (11, 2), (12, -1), (13, -1), (14, 1)]

Decide 9 with phase True at level 4

After decision at level 4
 pending : [3, 14, 5, 10, 6, 8, 11, 7]
 solution : [0, 2, 4, 12, 9]


New level: 5
 pending : [3, 14, 5, 10, 6, 8, 11, 7]
 solution : [0, 2, 4, 12, 9]


Before reduction : 
 pending  : [3, 14, 5, 10, 6, 8, 11, 7]
 solution : [0, 2, 4, 12, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 2), (6, 1), (7, 4), (8, 1), (9, 4), (10, 2), (11, 2), (12, -1), (13, -1), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 0), (6, 0), (7, 0), (8, 0), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, 1)]

Covered at level 5 : {5, 6, 7, 8, 10, 11}

After reduction : 
 pending  : [3, 14]
 solution : [0, 2, 4, 12, 9]


Before reduction : 
 pending  : [3, 14]
 solution : [0, 2, 4, 12, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 0), (6, 0), (7, 0), (8, 0), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1)]

Covered at level 5 : set()

After reduction : 
 pending  : [3, 14]
 solution : [0, 2, 4, 12, 9]


Solution : [0, 2, 4, 12, 9] has cost 24.


Before backtrack at level 5
 pending : [3, 14]
 solution : [0, 2, 4, 12, 9]

After backtrack at level 5
 pending : [3, 14, 5, 10, 6, 8, 11, 7]
 solution : [0, 2, 4, 12, 9]


Invert decision for 9 at level 4


New level: 5
 pending : [3, 14, 5, 10, 6, 8, 11, 7]
 solution : [0, 2, 4, 12]


Before reduction : 
 pending  : [3, 14, 5, 10, 6, 8, 11, 7]
 solution : [0, 2, 4, 12]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 2), (6, 1), (7, 4), (8, 1), (9, -1), (10, 2), (11, 2), (12, -1), (13, -1), (14, 1)]

Covered at level 5 : set()

After reduction : 
 pending  : [3, 14, 5, 10, 6, 8, 11, 7]
 solution : [0, 2, 4, 12]


Solution : [0, 2, 4, 12] has cost 18.


Decide in level 5 among pending : [3, 14, 5, 10, 6, 8, 11, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 2), (6, 1), (7, 4), (8, 1), (9, -1), (10, 2), (11, 2), (12, -1), (13, -1), (14, 1)]

Decide 7 with phase True at level 5

After decision at level 5
 pending : [3, 14, 5, 10, 6, 8, 11]
 solution : [0, 2, 4, 12, 7]


New level: 6
 pending : [3, 14, 5, 10, 6, 8, 11]
 solution : [0, 2, 4, 12, 7]


Before reduction : 
 pending  : [3, 14, 5, 10, 6, 8, 11]
 solution : [0, 2, 4, 12, 7]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 2), (6, 1), (7, 4), (8, 1), (9, -1), (10, 2), (11, 2), (12, -1), (13, -1), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 0), (6, 0), (7, -1), (8, 0), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, 1)]

Covered at level 6 : {5, 6, 8, 10, 11}

After reduction : 
 pending  : [3, 14]
 solution : [0, 2, 4, 12, 7]


Before reduction : 
 pending  : [3, 14]
 solution : [0, 2, 4, 12, 7]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 0), (6, 0), (7, -1), (8, 0), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 14]
 solution : [0, 2, 4, 12, 7]


Solution : [0, 2, 4, 12, 7] has cost 24.


Before backtrack at level 6
 pending : [3, 14]
 solution : [0, 2, 4, 12, 7]

After backtrack at level 6
 pending : [3, 14, 5, 10, 6, 8, 11]
 solution : [0, 2, 4, 12, 7]


Invert decision for 7 at level 5


New level: 6
 pending : [3, 14, 5, 10, 6, 8, 11]
 solution : [0, 2, 4, 12]


Before reduction : 
 pending  : [3, 14, 5, 10, 6, 8, 11]
 solution : [0, 2, 4, 12]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 2), (6, 1), (7, -1), (8, 1), (9, -1), (10, 2), (11, 2), (12, -1), (13, -1), (14, 1)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 14, 5, 10, 6, 8, 11]
 solution : [0, 2, 4, 12]


Solution : [0, 2, 4, 12] has cost 18.


Decide in level 6 among pending : [3, 14, 5, 10, 6, 8, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 2), (6, 1), (7, -1), (8, 1), (9, -1), (10, 2), (11, 2), (12, -1), (13, -1), (14, 1)]

Decide 5 with phase True at level 6

After decision at level 6
 pending : [3, 14, 10, 6, 8, 11]
 solution : [0, 2, 4, 12, 5]


New level: 7
 pending : [3, 14, 10, 6, 8, 11]
 solution : [0, 2, 4, 12, 5]


Before reduction : 
 pending  : [3, 14, 10, 6, 8, 11]
 solution : [0, 2, 4, 12, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 2), (6, 1), (7, -1), (8, 1), (9, -1), (10, 2), (11, 2), (12, -1), (13, -1), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, 0), (7, -1), (8, 0), (9, -1), (10, 1), (11, 1), (12, -1), (13, -1), (14, 1)]

Covered at level 7 : {8, 6}

After reduction : 
 pending  : [3, 14, 10, 11]
 solution : [0, 2, 4, 12, 5]


Before reduction : 
 pending  : [3, 14, 10, 11]
 solution : [0, 2, 4, 12, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, 0), (7, -1), (8, 0), (9, -1), (10, 1), (11, 1), (12, -1), (13, -1), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, 1), (12, -1), (13, -1), (14, 1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 14, 10, 11]
 solution : [0, 2, 4, 12, 5]


Solution : [0, 2, 4, 12, 5] has cost 24.


Before backtrack at level 7
 pending : [3, 14, 10, 11]
 solution : [0, 2, 4, 12, 5]

After backtrack at level 7
 pending : [3, 14, 10, 11, 6, 8]
 solution : [0, 2, 4, 12, 5]


Invert decision for 5 at level 6


New level: 7
 pending : [3, 14, 10, 11, 6, 8]
 solution : [0, 2, 4, 12]


Before reduction : 
 pending  : [3, 14, 10, 11, 6, 8]
 solution : [0, 2, 4, 12]

Essensial at level 7 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, 1), (12, -1), (13, -1), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, 2), (11, 2), (12, -1), (13, -1), (14, 1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 14, 10, 11, 6]
 solution : [0, 2, 4, 12, 8]


Before reduction : 
 pending  : [3, 14, 10, 11, 6]
 solution : [0, 2, 4, 12, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, 2), (11, 2), (12, -1), (13, -1), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, 2), (11, 2), (12, -1), (13, -1), (14, 1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 14, 10, 11, 6]
 solution : [0, 2, 4, 12, 8]


Solution : [0, 2, 4, 12, 8] has cost 24.


Before backtrack at level 7
 pending : [3, 14, 10, 11, 6]
 solution : [0, 2, 4, 12, 8]

After backtrack at level 7
 pending : [3, 14, 10, 11, 6, 8]
 solution : [0, 2, 4, 12]


Before backtrack at level 6
 pending : [3, 14, 10, 11, 6, 8]
 solution : [0, 2, 4, 12]

After backtrack at level 6
 pending : [3, 14, 10, 11, 6, 8, 5]
 solution : [0, 2, 4, 12]


Before backtrack at level 5
 pending : [3, 14, 10, 11, 6, 8, 5]
 solution : [0, 2, 4, 12]

After backtrack at level 5
 pending : [3, 14, 10, 11, 6, 8, 5, 7]
 solution : [0, 2, 4, 12]


Before backtrack at level 4
 pending : [3, 14, 10, 11, 6, 8, 5, 7]
 solution : [0, 2, 4, 12]

After backtrack at level 4
 pending : [3, 14, 10, 11, 6, 8, 5, 7, 13, 9]
 solution : [0, 2, 4, 12]


Invert decision for 12 at level 3


New level: 4
 pending : [3, 14, 10, 11, 6, 8, 5, 7, 13, 9]
 solution : [0, 2, 4]


Before reduction : 
 pending  : [3, 14, 10, 11, 6, 8, 5, 7, 13, 9]
 solution : [0, 2, 4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, 2), (11, 2), (12, -1), (13, -1), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 4), (6, 2), (7, 8), (8, 8), (9, 4), (10, 4), (11, 2), (12, -1), (13, 4), (14, 8)]

Covered at level 4 : set()

After reduction : 
 pending  : [3, 14, 10, 11, 6, 8, 5, 7, 13, 9]
 solution : [0, 2, 4]


Solution : [0, 2, 4] has cost 12.


Decide in level 4 among pending : [3, 14, 10, 11, 6, 8, 5, 7, 13, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 4), (6, 2), (7, 8), (8, 8), (9, 4), (10, 4), (11, 2), (12, -1), (13, 4), (14, 8)]

Decide 14 with phase True at level 4

After decision at level 4
 pending : [3, 10, 11, 6, 8, 5, 7, 13, 9]
 solution : [0, 2, 4, 14]


New level: 5
 pending : [3, 10, 11, 6, 8, 5, 7, 13, 9]
 solution : [0, 2, 4, 14]


Before reduction : 
 pending  : [3, 10, 11, 6, 8, 5, 7, 13, 9]
 solution : [0, 2, 4, 14]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, 4), (6, 2), (7, 8), (8, 8), (9, 4), (10, 4), (11, 2), (12, -1), (13, 4), (14, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 4), (6, 2), (7, 8), (8, 2), (9, 4), (10, 4), (11, 2), (12, -1), (13, 1), (14, -1)]

Covered at level 5 : {3}

After reduction : 
 pending  : [10, 11, 6, 8, 5, 7, 13, 9]
 solution : [0, 2, 4, 14]


Before reduction : 
 pending  : [10, 11, 6, 8, 5, 7, 13, 9]
 solution : [0, 2, 4, 14]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 4), (6, 2), (7, 8), (8, 2), (9, 4), (10, 4), (11, 2), (12, -1), (13, 1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, 8), (8, 2), (9, 4), (10, 4), (11, 2), (12, -1), (13, 1), (14, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [10, 11, 6, 8, 5, 7, 13, 9]
 solution : [0, 2, 4, 14]


Solution : [0, 2, 4, 14] has cost 18.


Decide in level 5 among pending : [10, 11, 6, 8, 5, 7, 13, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, 8), (8, 2), (9, 4), (10, 4), (11, 2), (12, -1), (13, 1), (14, -1)]

Decide 7 with phase True at level 5

After decision at level 5
 pending : [10, 11, 6, 8, 5, 13, 9]
 solution : [0, 2, 4, 14, 7]


New level: 6
 pending : [10, 11, 6, 8, 5, 13, 9]
 solution : [0, 2, 4, 14, 7]


Before reduction : 
 pending  : [10, 11, 6, 8, 5, 13, 9]
 solution : [0, 2, 4, 14, 7]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, 8), (8, 2), (9, 4), (10, 4), (11, 2), (12, -1), (13, 1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, 0), (9, 0), (10, 0), (11, 0), (12, -1), (13, 0), (14, -1)]

Covered at level 6 : {5, 6, 8, 9, 10, 11, 13}

After reduction : 
 pending  : []
 solution : [0, 2, 4, 14, 7]


Before reduction : 
 pending  : []
 solution : [0, 2, 4, 14, 7]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, 0), (9, 0), (10, 0), (11, 0), (12, -1), (13, 0), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 4, 14, 7]


Solution : [0, 2, 4, 14, 7] has cost 24.


Before backtrack at level 6
 pending : []
 solution : [0, 2, 4, 14, 7]

After backtrack at level 6
 pending : [10, 11, 6, 8, 5, 13, 9]
 solution : [0, 2, 4, 14, 7]


Invert decision for 7 at level 5


New level: 6
 pending : [10, 11, 6, 8, 5, 13, 9]
 solution : [0, 2, 4, 14]


Before reduction : 
 pending  : [10, 11, 6, 8, 5, 13, 9]
 solution : [0, 2, 4, 14]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, -1), (8, 2), (9, 4), (10, 4), (11, 2), (12, -1), (13, 1), (14, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 11, 6, 8, 5, 13, 9]
 solution : [0, 2, 4, 14]


Solution : [0, 2, 4, 14] has cost 18.


Decide in level 6 among pending : [10, 11, 6, 8, 5, 13, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, -1), (8, 2), (9, 4), (10, 4), (11, 2), (12, -1), (13, 1), (14, -1)]

Decide 10 with phase True at level 6

After decision at level 6
 pending : [11, 6, 8, 5, 13, 9]
 solution : [0, 2, 4, 14, 10]


New level: 7
 pending : [11, 6, 8, 5, 13, 9]
 solution : [0, 2, 4, 14, 10]


Before reduction : 
 pending  : [11, 6, 8, 5, 13, 9]
 solution : [0, 2, 4, 14, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, -1), (8, 2), (9, 4), (10, 4), (11, 2), (12, -1), (13, 1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 0), (7, -1), (8, 1), (9, 1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1)]

Covered at level 7 : {11, 13, 6}

After reduction : 
 pending  : [8, 5, 9]
 solution : [0, 2, 4, 14, 10]


Before reduction : 
 pending  : [8, 5, 9]
 solution : [0, 2, 4, 14, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 0), (7, -1), (8, 1), (9, 1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, -1), (8, 1), (9, 1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 5, 9]
 solution : [0, 2, 4, 14, 10]


Solution : [0, 2, 4, 14, 10] has cost 24.


Before backtrack at level 7
 pending : [8, 5, 9]
 solution : [0, 2, 4, 14, 10]

After backtrack at level 7
 pending : [8, 5, 9, 11, 6, 13]
 solution : [0, 2, 4, 14, 10]


Invert decision for 10 at level 6


New level: 7
 pending : [8, 5, 9, 11, 6, 13]
 solution : [0, 2, 4, 14]


Before reduction : 
 pending  : [8, 5, 9, 11, 6, 13]
 solution : [0, 2, 4, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, -1), (8, 1), (9, 1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, -1), (8, 2), (9, 4), (10, -1), (11, 2), (12, -1), (13, 1), (14, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 5, 9, 11, 6, 13]
 solution : [0, 2, 4, 14]


Solution : [0, 2, 4, 14] has cost 18.


Decide in level 7 among pending : [8, 5, 9, 11, 6, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, -1), (8, 2), (9, 4), (10, -1), (11, 2), (12, -1), (13, 1), (14, -1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [8, 9, 11, 6, 13]
 solution : [0, 2, 4, 14, 5]


New level: 8
 pending : [8, 9, 11, 6, 13]
 solution : [0, 2, 4, 14, 5]


Before reduction : 
 pending  : [8, 9, 11, 6, 13]
 solution : [0, 2, 4, 14, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, -1), (8, 2), (9, 4), (10, -1), (11, 2), (12, -1), (13, 1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, 1), (9, 2), (10, -1), (11, 1), (12, -1), (13, 0), (14, -1)]

Covered at level 8 : {13, 6}

After reduction : 
 pending  : [8, 9, 11]
 solution : [0, 2, 4, 14, 5]


Before reduction : 
 pending  : [8, 9, 11]
 solution : [0, 2, 4, 14, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, 1), (9, 2), (10, -1), (11, 1), (12, -1), (13, 0), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1), (9, 2), (10, -1), (11, 1), (12, -1), (13, -1), (14, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 9, 11]
 solution : [0, 2, 4, 14, 5]


Solution : [0, 2, 4, 14, 5] has cost 24.


Before backtrack at level 8
 pending : [8, 9, 11]
 solution : [0, 2, 4, 14, 5]

After backtrack at level 8
 pending : [8, 9, 11, 6, 13]
 solution : [0, 2, 4, 14, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [8, 9, 11, 6, 13]
 solution : [0, 2, 4, 14]


Before reduction : 
 pending  : [8, 9, 11, 6, 13]
 solution : [0, 2, 4, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1), (9, 2), (10, -1), (11, 1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, 2), (9, 4), (10, -1), (11, 2), (12, -1), (13, 1), (14, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 9, 11, 6, 13]
 solution : [0, 2, 4, 14]


Solution : [0, 2, 4, 14] has cost 18.


Decide in level 8 among pending : [8, 9, 11, 6, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, 2), (9, 4), (10, -1), (11, 2), (12, -1), (13, 1), (14, -1)]

Decide 9 with phase True at level 8

After decision at level 8
 pending : [8, 11, 6, 13]
 solution : [0, 2, 4, 14, 9]


New level: 9
 pending : [8, 11, 6, 13]
 solution : [0, 2, 4, 14, 9]


Before reduction : 
 pending  : [8, 11, 6, 13]
 solution : [0, 2, 4, 14, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, 2), (9, 4), (10, -1), (11, 2), (12, -1), (13, 1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, 0), (9, -1), (10, -1), (11, 0), (12, -1), (13, 1), (14, -1)]

Covered at level 9 : {8, 11}

After reduction : 
 pending  : [6, 13]
 solution : [0, 2, 4, 14, 9]


Before reduction : 
 pending  : [6, 13]
 solution : [0, 2, 4, 14, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, 0), (9, -1), (10, -1), (11, 0), (12, -1), (13, 1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1), (14, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 13]
 solution : [0, 2, 4, 14, 9]


Solution : [0, 2, 4, 14, 9] has cost 24.


Before backtrack at level 9
 pending : [6, 13]
 solution : [0, 2, 4, 14, 9]

After backtrack at level 9
 pending : [6, 13, 8, 11]
 solution : [0, 2, 4, 14, 9]


Invert decision for 9 at level 8


New level: 9
 pending : [6, 13, 8, 11]
 solution : [0, 2, 4, 14]


Before reduction : 
 pending  : [6, 13, 8, 11]
 solution : [0, 2, 4, 14]

Essensial at level 9 : {8, 11}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1), (14, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 13]
 solution : [0, 2, 4, 14, 8, 11]


Before reduction : 
 pending  : [6, 13]
 solution : [0, 2, 4, 14, 8, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1), (14, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 13]
 solution : [0, 2, 4, 14, 8, 11]


Solution : [0, 2, 4, 14, 8, 11] has cost 30.


Before backtrack at level 9
 pending : [6, 13]
 solution : [0, 2, 4, 14, 8, 11]

After backtrack at level 9
 pending : [6, 13, 8, 11]
 solution : [0, 2, 4, 14]


Before backtrack at level 8
 pending : [6, 13, 8, 11]
 solution : [0, 2, 4, 14]

After backtrack at level 8
 pending : [6, 13, 8, 11, 9]
 solution : [0, 2, 4, 14]


Before backtrack at level 7
 pending : [6, 13, 8, 11, 9]
 solution : [0, 2, 4, 14]

After backtrack at level 7
 pending : [6, 13, 8, 11, 9, 5]
 solution : [0, 2, 4, 14]


Before backtrack at level 6
 pending : [6, 13, 8, 11, 9, 5]
 solution : [0, 2, 4, 14]

After backtrack at level 6
 pending : [6, 13, 8, 11, 9, 5, 10]
 solution : [0, 2, 4, 14]


Before backtrack at level 5
 pending : [6, 13, 8, 11, 9, 5, 10]
 solution : [0, 2, 4, 14]

After backtrack at level 5
 pending : [6, 13, 8, 11, 9, 5, 10, 3, 7]
 solution : [0, 2, 4, 14]


Invert decision for 14 at level 4


New level: 5
 pending : [6, 13, 8, 11, 9, 5, 10, 3, 7]
 solution : [0, 2, 4]


Before reduction : 
 pending  : [6, 13, 8, 11, 9, 5, 10, 3, 7]
 solution : [0, 2, 4]

Essensial at level 5 : {8, 3, 13}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 1), (7, 4), (8, -1), (9, 2), (10, 4), (11, 2), (12, -1), (13, -1), (14, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [6, 11, 9, 5, 10, 7]
 solution : [0, 2, 4, 8, 3, 13]


Before reduction : 
 pending  : [6, 11, 9, 5, 10, 7]
 solution : [0, 2, 4, 8, 3, 13]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 1), (7, 4), (8, -1), (9, 2), (10, 4), (11, 2), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 1), (7, 4), (8, -1), (9, 2), (10, 4), (11, 2), (12, -1), (13, -1), (14, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [6, 11, 9, 5, 10, 7]
 solution : [0, 2, 4, 8, 3, 13]


Solution : [0, 2, 4, 8, 3, 13] has cost 26.


Before backtrack at level 5
 pending : [6, 11, 9, 5, 10, 7]
 solution : [0, 2, 4, 8, 3, 13]

After backtrack at level 5
 pending : [6, 11, 9, 5, 10, 7, 13, 8, 3]
 solution : [0, 2, 4]


Before backtrack at level 4
 pending : [6, 11, 9, 5, 10, 7, 13, 8, 3]
 solution : [0, 2, 4]

After backtrack at level 4
 pending : [6, 11, 9, 5, 10, 7, 13, 8, 3, 14]
 solution : [0, 2, 4]


Before backtrack at level 3
 pending : [6, 11, 9, 5, 10, 7, 13, 8, 3, 14]
 solution : [0, 2, 4]

After backtrack at level 3
 pending : [6, 11, 9, 5, 10, 7, 13, 8, 3, 14, 12]
 solution : [0, 2, 4]


Invert decision for 4 at level 2


New level: 3
 pending : [6, 11, 9, 5, 10, 7, 13, 8, 3, 14, 12]
 solution : [0, 2]


Before reduction : 
 pending  : [6, 11, 9, 5, 10, 7, 13, 8, 3, 14, 12]
 solution : [0, 2]

Essensial at level 3 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 1), (7, 4), (8, -1), (9, 2), (10, 4), (11, 2), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, 8), (12, 8), (13, 4), (14, 8)]

Covered at level 3 : set()

After reduction : 
 pending  : [6, 11, 9, 5, 10, 7, 13, 8, 14, 12]
 solution : [0, 2, 3]


Before reduction : 
 pending  : [6, 11, 9, 5, 10, 7, 13, 8, 14, 12]
 solution : [0, 2, 3]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, 8), (12, 8), (13, 4), (14, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, 8), (12, 8), (13, 4), (14, 8)]

Covered at level 3 : set()

After reduction : 
 pending  : [6, 11, 9, 5, 10, 7, 13, 8, 14, 12]
 solution : [0, 2, 3]


Solution : [0, 2, 3] has cost 9.


Decide in level 3 among pending : [6, 11, 9, 5, 10, 7, 13, 8, 14, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, 8), (12, 8), (13, 4), (14, 8)]

Decide 11 with phase True at level 3

After decision at level 3
 pending : [6, 9, 5, 10, 7, 13, 8, 14, 12]
 solution : [0, 2, 3, 11]


New level: 4
 pending : [6, 9, 5, 10, 7, 13, 8, 14, 12]
 solution : [0, 2, 3, 11]


Before reduction : 
 pending  : [6, 9, 5, 10, 7, 13, 8, 14, 12]
 solution : [0, 2, 3, 11]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, 8), (12, 8), (13, 4), (14, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, 8), (8, 8), (9, 4), (10, 4), (11, -1), (12, 8), (13, 4), (14, 8)]

Covered at level 4 : set()

After reduction : 
 pending  : [6, 9, 5, 10, 7, 13, 8, 14, 12]
 solution : [0, 2, 3, 11]


Solution : [0, 2, 3, 11] has cost 15.


Decide in level 4 among pending : [6, 9, 5, 10, 7, 13, 8, 14, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, 8), (8, 8), (9, 4), (10, 4), (11, -1), (12, 8), (13, 4), (14, 8)]

Decide 7 with phase True at level 4

After decision at level 4
 pending : [6, 9, 5, 10, 13, 8, 14, 12]
 solution : [0, 2, 3, 11, 7]


New level: 5
 pending : [6, 9, 5, 10, 13, 8, 14, 12]
 solution : [0, 2, 3, 11, 7]


Before reduction : 
 pending  : [6, 9, 5, 10, 13, 8, 14, 12]
 solution : [0, 2, 3, 11, 7]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, 8), (8, 8), (9, 4), (10, 4), (11, -1), (12, 8), (13, 4), (14, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 1), (7, -1), (8, 2), (9, 1), (10, 2), (11, -1), (12, 4), (13, 2), (14, 8)]

Covered at level 5 : {5}

After reduction : 
 pending  : [6, 9, 10, 13, 8, 14, 12]
 solution : [0, 2, 3, 11, 7]


Before reduction : 
 pending  : [6, 9, 10, 13, 8, 14, 12]
 solution : [0, 2, 3, 11, 7]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 1), (7, -1), (8, 2), (9, 1), (10, 2), (11, -1), (12, 4), (13, 2), (14, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, 2), (9, 1), (10, 2), (11, -1), (12, 4), (13, 2), (14, 8)]

Covered at level 5 : set()

After reduction : 
 pending  : [6, 9, 10, 13, 8, 14, 12]
 solution : [0, 2, 3, 11, 7]


Solution : [0, 2, 3, 11, 7] has cost 21.


Decide in level 5 among pending : [6, 9, 10, 13, 8, 14, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, 2), (9, 1), (10, 2), (11, -1), (12, 4), (13, 2), (14, 8)]

Decide 14 with phase True at level 5

After decision at level 5
 pending : [6, 9, 10, 13, 8, 12]
 solution : [0, 2, 3, 11, 7, 14]


New level: 6
 pending : [6, 9, 10, 13, 8, 12]
 solution : [0, 2, 3, 11, 7, 14]


Before reduction : 
 pending  : [6, 9, 10, 13, 8, 12]
 solution : [0, 2, 3, 11, 7, 14]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, 2), (9, 1), (10, 2), (11, -1), (12, 4), (13, 2), (14, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, 1), (9, 1), (10, 2), (11, -1), (12, 2), (13, 1), (14, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [6, 9, 10, 13, 8, 12]
 solution : [0, 2, 3, 11, 7, 14]


Solution : [0, 2, 3, 11, 7, 14] has cost 27.


Before backtrack at level 6
 pending : [6, 9, 10, 13, 8, 12]
 solution : [0, 2, 3, 11, 7, 14]

After backtrack at level 6
 pending : [6, 9, 10, 13, 8, 12]
 solution : [0, 2, 3, 11, 7, 14]


Invert decision for 14 at level 5


New level: 6
 pending : [6, 9, 10, 13, 8, 12]
 solution : [0, 2, 3, 11, 7]


Before reduction : 
 pending  : [6, 9, 10, 13, 8, 12]
 solution : [0, 2, 3, 11, 7]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, 1), (9, 1), (10, 2), (11, -1), (12, 2), (13, 1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, 2), (9, 1), (10, 2), (11, -1), (12, 4), (13, 2), (14, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [6, 9, 10, 13, 8, 12]
 solution : [0, 2, 3, 11, 7]


Solution : [0, 2, 3, 11, 7] has cost 21.


Decide in level 6 among pending : [6, 9, 10, 13, 8, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, 2), (9, 1), (10, 2), (11, -1), (12, 4), (13, 2), (14, -1)]

Decide 12 with phase True at level 6

After decision at level 6
 pending : [6, 9, 10, 13, 8]
 solution : [0, 2, 3, 11, 7, 12]


New level: 7
 pending : [6, 9, 10, 13, 8]
 solution : [0, 2, 3, 11, 7, 12]


Before reduction : 
 pending  : [6, 9, 10, 13, 8]
 solution : [0, 2, 3, 11, 7, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, 2), (9, 1), (10, 2), (11, -1), (12, 4), (13, 2), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, 0), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1)]

Covered at level 7 : {6, 8, 9, 10, 13}

After reduction : 
 pending  : []
 solution : [0, 2, 3, 11, 7, 12]


Before reduction : 
 pending  : []
 solution : [0, 2, 3, 11, 7, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, 0), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 11, 7, 12]


Solution : [0, 2, 3, 11, 7, 12] has cost 27.


Before backtrack at level 7
 pending : []
 solution : [0, 2, 3, 11, 7, 12]

After backtrack at level 7
 pending : [6, 9, 10, 13, 8]
 solution : [0, 2, 3, 11, 7, 12]


Invert decision for 12 at level 6


New level: 7
 pending : [6, 9, 10, 13, 8]
 solution : [0, 2, 3, 11, 7]


Before reduction : 
 pending  : [6, 9, 10, 13, 8]
 solution : [0, 2, 3, 11, 7]

Essensial at level 7 : {8, 13}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 7 : {9, 10, 6}

After reduction : 
 pending  : []
 solution : [0, 2, 3, 11, 7, 8, 13]


Before reduction : 
 pending  : []
 solution : [0, 2, 3, 11, 7, 8, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 11, 7, 8, 13]


Solution : [0, 2, 3, 11, 7, 8, 13] has cost 33.


Before backtrack at level 7
 pending : []
 solution : [0, 2, 3, 11, 7, 8, 13]

After backtrack at level 7
 pending : [13, 8, 6, 9, 10]
 solution : [0, 2, 3, 11, 7]


Before backtrack at level 6
 pending : [13, 8, 6, 9, 10]
 solution : [0, 2, 3, 11, 7]

After backtrack at level 6
 pending : [13, 8, 6, 9, 10, 12]
 solution : [0, 2, 3, 11, 7]


Before backtrack at level 5
 pending : [13, 8, 6, 9, 10, 12]
 solution : [0, 2, 3, 11, 7]

After backtrack at level 5
 pending : [13, 8, 6, 9, 10, 12, 5, 14]
 solution : [0, 2, 3, 11, 7]


Invert decision for 7 at level 4


New level: 5
 pending : [13, 8, 6, 9, 10, 12, 5, 14]
 solution : [0, 2, 3, 11]


Before reduction : 
 pending  : [13, 8, 6, 9, 10, 12, 5, 14]
 solution : [0, 2, 3, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, -1), (8, 8), (9, 4), (10, 4), (11, -1), (12, 8), (13, 4), (14, 8)]

Covered at level 5 : set()

After reduction : 
 pending  : [13, 8, 6, 9, 10, 12, 5, 14]
 solution : [0, 2, 3, 11]


Solution : [0, 2, 3, 11] has cost 15.


Decide in level 5 among pending : [13, 8, 6, 9, 10, 12, 5, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, -1), (8, 8), (9, 4), (10, 4), (11, -1), (12, 8), (13, 4), (14, 8)]

Decide 8 with phase True at level 5

After decision at level 5
 pending : [13, 6, 9, 10, 12, 5, 14]
 solution : [0, 2, 3, 11, 8]


New level: 6
 pending : [13, 6, 9, 10, 12, 5, 14]
 solution : [0, 2, 3, 11, 8]


Before reduction : 
 pending  : [13, 6, 9, 10, 12, 5, 14]
 solution : [0, 2, 3, 11, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, -1), (8, 8), (9, 4), (10, 4), (11, -1), (12, 8), (13, 4), (14, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 2), (7, -1), (8, -1), (9, 0), (10, 2), (11, -1), (12, 4), (13, 4), (14, 1)]

Covered at level 6 : {9}

After reduction : 
 pending  : [13, 6, 10, 12, 5, 14]
 solution : [0, 2, 3, 11, 8]


Before reduction : 
 pending  : [13, 6, 10, 12, 5, 14]
 solution : [0, 2, 3, 11, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 2), (7, -1), (8, -1), (9, 0), (10, 2), (11, -1), (12, 4), (13, 4), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 2), (7, -1), (8, -1), (9, -1), (10, 2), (11, -1), (12, 4), (13, 4), (14, 1)]

Covered at level 6 : set()

After reduction : 
 pending  : [13, 6, 10, 12, 5, 14]
 solution : [0, 2, 3, 11, 8]


Solution : [0, 2, 3, 11, 8] has cost 21.


Decide in level 6 among pending : [13, 6, 10, 12, 5, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 2), (7, -1), (8, -1), (9, -1), (10, 2), (11, -1), (12, 4), (13, 4), (14, 1)]

Decide 13 with phase True at level 6

After decision at level 6
 pending : [6, 10, 12, 5, 14]
 solution : [0, 2, 3, 11, 8, 13]


New level: 7
 pending : [6, 10, 12, 5, 14]
 solution : [0, 2, 3, 11, 8, 13]


Before reduction : 
 pending  : [6, 10, 12, 5, 14]
 solution : [0, 2, 3, 11, 8, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 2), (7, -1), (8, -1), (9, -1), (10, 2), (11, -1), (12, 4), (13, 4), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0)]

Covered at level 7 : {5, 6, 10, 12, 14}

After reduction : 
 pending  : []
 solution : [0, 2, 3, 11, 8, 13]


Before reduction : 
 pending  : []
 solution : [0, 2, 3, 11, 8, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 11, 8, 13]


Solution : [0, 2, 3, 11, 8, 13] has cost 27.


Before backtrack at level 7
 pending : []
 solution : [0, 2, 3, 11, 8, 13]

After backtrack at level 7
 pending : [6, 10, 12, 5, 14]
 solution : [0, 2, 3, 11, 8, 13]


Invert decision for 13 at level 6


New level: 7
 pending : [6, 10, 12, 5, 14]
 solution : [0, 2, 3, 11, 8]


Before reduction : 
 pending  : [6, 10, 12, 5, 14]
 solution : [0, 2, 3, 11, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 2), (7, -1), (8, -1), (9, -1), (10, 2), (11, -1), (12, 4), (13, -1), (14, 1)]

Covered at level 7 : set()

After reduction : 
 pending  : [6, 10, 12, 5, 14]
 solution : [0, 2, 3, 11, 8]


Solution : [0, 2, 3, 11, 8] has cost 21.


Decide in level 7 among pending : [6, 10, 12, 5, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 2), (7, -1), (8, -1), (9, -1), (10, 2), (11, -1), (12, 4), (13, -1), (14, 1)]

Decide 12 with phase True at level 7

After decision at level 7
 pending : [6, 10, 5, 14]
 solution : [0, 2, 3, 11, 8, 12]


New level: 8
 pending : [6, 10, 5, 14]
 solution : [0, 2, 3, 11, 8, 12]


Before reduction : 
 pending  : [6, 10, 5, 14]
 solution : [0, 2, 3, 11, 8, 12]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 2), (7, -1), (8, -1), (9, -1), (10, 2), (11, -1), (12, 4), (13, -1), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0)]

Covered at level 8 : {10, 5, 6, 14}

After reduction : 
 pending  : []
 solution : [0, 2, 3, 11, 8, 12]


Before reduction : 
 pending  : []
 solution : [0, 2, 3, 11, 8, 12]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 11, 8, 12]


Solution : [0, 2, 3, 11, 8, 12] has cost 27.


Before backtrack at level 8
 pending : []
 solution : [0, 2, 3, 11, 8, 12]

After backtrack at level 8
 pending : [6, 10, 5, 14]
 solution : [0, 2, 3, 11, 8, 12]


Invert decision for 12 at level 7


New level: 8
 pending : [6, 10, 5, 14]
 solution : [0, 2, 3, 11, 8]


Before reduction : 
 pending  : [6, 10, 5, 14]
 solution : [0, 2, 3, 11, 8]

Essensial at level 8 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 2), (7, -1), (8, -1), (9, -1), (10, 2), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [6, 10, 5]
 solution : [0, 2, 3, 11, 8, 14]


Before reduction : 
 pending  : [6, 10, 5]
 solution : [0, 2, 3, 11, 8, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 2), (7, -1), (8, -1), (9, -1), (10, 2), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 2), (7, -1), (8, -1), (9, -1), (10, 2), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [6, 10, 5]
 solution : [0, 2, 3, 11, 8, 14]


Solution : [0, 2, 3, 11, 8, 14] has cost 27.


Before backtrack at level 8
 pending : [6, 10, 5]
 solution : [0, 2, 3, 11, 8, 14]

After backtrack at level 8
 pending : [6, 10, 5, 14]
 solution : [0, 2, 3, 11, 8]


Before backtrack at level 7
 pending : [6, 10, 5, 14]
 solution : [0, 2, 3, 11, 8]

After backtrack at level 7
 pending : [6, 10, 5, 14, 12]
 solution : [0, 2, 3, 11, 8]


Before backtrack at level 6
 pending : [6, 10, 5, 14, 12]
 solution : [0, 2, 3, 11, 8]

After backtrack at level 6
 pending : [6, 10, 5, 14, 12, 9, 13]
 solution : [0, 2, 3, 11, 8]


Invert decision for 8 at level 5


New level: 6
 pending : [6, 10, 5, 14, 12, 9, 13]
 solution : [0, 2, 3, 11]


Before reduction : 
 pending  : [6, 10, 5, 14, 12, 9, 13]
 solution : [0, 2, 3, 11]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 2), (7, -1), (8, -1), (9, -1), (10, 2), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, -1), (8, -1), (9, 4), (10, 4), (11, -1), (12, 8), (13, 4), (14, 8)]

Covered at level 6 : set()

After reduction : 
 pending  : [6, 10, 5, 14, 12, 9, 13]
 solution : [0, 2, 3, 11]


Solution : [0, 2, 3, 11] has cost 15.


Decide in level 6 among pending : [6, 10, 5, 14, 12, 9, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, -1), (8, -1), (9, 4), (10, 4), (11, -1), (12, 8), (13, 4), (14, 8)]

Decide 14 with phase True at level 6

After decision at level 6
 pending : [6, 10, 5, 12, 9, 13]
 solution : [0, 2, 3, 11, 14]


New level: 7
 pending : [6, 10, 5, 12, 9, 13]
 solution : [0, 2, 3, 11, 14]


Before reduction : 
 pending  : [6, 10, 5, 12, 9, 13]
 solution : [0, 2, 3, 11, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, -1), (8, -1), (9, 4), (10, 4), (11, -1), (12, 8), (13, 4), (14, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, -1), (8, -1), (9, 4), (10, 4), (11, -1), (12, 4), (13, 2), (14, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [6, 10, 5, 12, 9, 13]
 solution : [0, 2, 3, 11, 14]


Solution : [0, 2, 3, 11, 14] has cost 21.


Decide in level 7 among pending : [6, 10, 5, 12, 9, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, -1), (8, -1), (9, 4), (10, 4), (11, -1), (12, 4), (13, 2), (14, -1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [6, 5, 12, 9, 13]
 solution : [0, 2, 3, 11, 14, 10]


New level: 8
 pending : [6, 5, 12, 9, 13]
 solution : [0, 2, 3, 11, 14, 10]


Before reduction : 
 pending  : [6, 5, 12, 9, 13]
 solution : [0, 2, 3, 11, 14, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, -1), (8, -1), (9, 4), (10, 4), (11, -1), (12, 4), (13, 2), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 0), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1)]

Covered at level 8 : {12, 13, 6}

After reduction : 
 pending  : [5, 9]
 solution : [0, 2, 3, 11, 14, 10]


Before reduction : 
 pending  : [5, 9]
 solution : [0, 2, 3, 11, 14, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 0), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 9]
 solution : [0, 2, 3, 11, 14, 10]


Solution : [0, 2, 3, 11, 14, 10] has cost 27.


Before backtrack at level 8
 pending : [5, 9]
 solution : [0, 2, 3, 11, 14, 10]

After backtrack at level 8
 pending : [5, 9, 6, 12, 13]
 solution : [0, 2, 3, 11, 14, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [5, 9, 6, 12, 13]
 solution : [0, 2, 3, 11, 14]


Before reduction : 
 pending  : [5, 9, 6, 12, 13]
 solution : [0, 2, 3, 11, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, -1), (8, -1), (9, 4), (10, -1), (11, -1), (12, 4), (13, 2), (14, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 9, 6, 12, 13]
 solution : [0, 2, 3, 11, 14]


Solution : [0, 2, 3, 11, 14] has cost 21.


Decide in level 8 among pending : [5, 9, 6, 12, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, -1), (8, -1), (9, 4), (10, -1), (11, -1), (12, 4), (13, 2), (14, -1)]

Decide 5 with phase True at level 8

After decision at level 8
 pending : [9, 6, 12, 13]
 solution : [0, 2, 3, 11, 14, 5]


New level: 9
 pending : [9, 6, 12, 13]
 solution : [0, 2, 3, 11, 14, 5]


Before reduction : 
 pending  : [9, 6, 12, 13]
 solution : [0, 2, 3, 11, 14, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 2), (7, -1), (8, -1), (9, 4), (10, -1), (11, -1), (12, 4), (13, 2), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 2), (10, -1), (11, -1), (12, 4), (13, 1), (14, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 6, 12, 13]
 solution : [0, 2, 3, 11, 14, 5]


Solution : [0, 2, 3, 11, 14, 5] has cost 27.


Before backtrack at level 9
 pending : [9, 6, 12, 13]
 solution : [0, 2, 3, 11, 14, 5]

After backtrack at level 9
 pending : [9, 6, 12, 13]
 solution : [0, 2, 3, 11, 14, 5]


Invert decision for 5 at level 8


New level: 9
 pending : [9, 6, 12, 13]
 solution : [0, 2, 3, 11, 14]


Before reduction : 
 pending  : [9, 6, 12, 13]
 solution : [0, 2, 3, 11, 14]

Essensial at level 9 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 2), (10, -1), (11, -1), (12, 4), (13, 1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, 2), (14, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 12, 13]
 solution : [0, 2, 3, 11, 14, 9]


Before reduction : 
 pending  : [6, 12, 13]
 solution : [0, 2, 3, 11, 14, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, 2), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, 2), (14, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 12, 13]
 solution : [0, 2, 3, 11, 14, 9]


Solution : [0, 2, 3, 11, 14, 9] has cost 27.


Before backtrack at level 9
 pending : [6, 12, 13]
 solution : [0, 2, 3, 11, 14, 9]

After backtrack at level 9
 pending : [6, 12, 13, 9]
 solution : [0, 2, 3, 11, 14]


Before backtrack at level 8
 pending : [6, 12, 13, 9]
 solution : [0, 2, 3, 11, 14]

After backtrack at level 8
 pending : [6, 12, 13, 9, 5]
 solution : [0, 2, 3, 11, 14]


Before backtrack at level 7
 pending : [6, 12, 13, 9, 5]
 solution : [0, 2, 3, 11, 14]

After backtrack at level 7
 pending : [6, 12, 13, 9, 5, 10]
 solution : [0, 2, 3, 11, 14]


Invert decision for 14 at level 6


New level: 7
 pending : [6, 12, 13, 9, 5, 10]
 solution : [0, 2, 3, 11]


Before reduction : 
 pending  : [6, 12, 13, 9, 5, 10]
 solution : [0, 2, 3, 11]

Essensial at level 7 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, 2), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 0), (7, -1), (8, -1), (9, 1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1)]

Covered at level 7 : {10, 13, 6}

After reduction : 
 pending  : [9, 5]
 solution : [0, 2, 3, 11, 12]


Before reduction : 
 pending  : [9, 5]
 solution : [0, 2, 3, 11, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 0), (7, -1), (8, -1), (9, 1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [9, 5]
 solution : [0, 2, 3, 11, 12]


Solution : [0, 2, 3, 11, 12] has cost 21.


Decide in level 7 among pending : [9, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Decide 9 with phase True at level 7

After decision at level 7
 pending : [5]
 solution : [0, 2, 3, 11, 12, 9]


New level: 8
 pending : [5]
 solution : [0, 2, 3, 11, 12, 9]


Before reduction : 
 pending  : [5]
 solution : [0, 2, 3, 11, 12, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 8 : {5}

After reduction : 
 pending  : []
 solution : [0, 2, 3, 11, 12, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 3, 11, 12, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 11, 12, 9]


Solution : [0, 2, 3, 11, 12, 9] has cost 27.


Before backtrack at level 8
 pending : []
 solution : [0, 2, 3, 11, 12, 9]

After backtrack at level 8
 pending : [5]
 solution : [0, 2, 3, 11, 12, 9]


Invert decision for 9 at level 7


New level: 8
 pending : [5]
 solution : [0, 2, 3, 11, 12]


Before reduction : 
 pending  : [5]
 solution : [0, 2, 3, 11, 12]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 11, 12, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 3, 11, 12, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 11, 12, 5]


Solution : [0, 2, 3, 11, 12, 5] has cost 27.


Before backtrack at level 8
 pending : []
 solution : [0, 2, 3, 11, 12, 5]

After backtrack at level 8
 pending : [5]
 solution : [0, 2, 3, 11, 12]


Before backtrack at level 7
 pending : [5]
 solution : [0, 2, 3, 11, 12]

After backtrack at level 7
 pending : [5, 12, 6, 13, 10, 9]
 solution : [0, 2, 3, 11]


Before backtrack at level 6
 pending : [5, 12, 6, 13, 10, 9]
 solution : [0, 2, 3, 11]

After backtrack at level 6
 pending : [5, 12, 6, 13, 10, 9, 14]
 solution : [0, 2, 3, 11]


Before backtrack at level 5
 pending : [5, 12, 6, 13, 10, 9, 14]
 solution : [0, 2, 3, 11]

After backtrack at level 5
 pending : [5, 12, 6, 13, 10, 9, 14, 8]
 solution : [0, 2, 3, 11]


Before backtrack at level 4
 pending : [5, 12, 6, 13, 10, 9, 14, 8]
 solution : [0, 2, 3, 11]

After backtrack at level 4
 pending : [5, 12, 6, 13, 10, 9, 14, 8, 7]
 solution : [0, 2, 3, 11]


Invert decision for 11 at level 3


New level: 4
 pending : [5, 12, 6, 13, 10, 9, 14, 8, 7]
 solution : [0, 2, 3]


Before reduction : 
 pending  : [5, 12, 6, 13, 10, 9, 14, 8, 7]
 solution : [0, 2, 3]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, -1), (12, 8), (13, 4), (14, 8)]

Covered at level 4 : set()

After reduction : 
 pending  : [5, 12, 6, 13, 10, 9, 14, 8, 7]
 solution : [0, 2, 3]


Solution : [0, 2, 3] has cost 9.


Decide in level 4 among pending : [5, 12, 6, 13, 10, 9, 14, 8, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, -1), (12, 8), (13, 4), (14, 8)]

Decide 12 with phase True at level 4

After decision at level 4
 pending : [5, 6, 13, 10, 9, 14, 8, 7]
 solution : [0, 2, 3, 12]


New level: 5
 pending : [5, 6, 13, 10, 9, 14, 8, 7]
 solution : [0, 2, 3, 12]


Before reduction : 
 pending  : [5, 6, 13, 10, 9, 14, 8, 7]
 solution : [0, 2, 3, 12]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, -1), (12, 8), (13, 4), (14, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 2), (7, 4), (8, 1), (9, 8), (10, 4), (11, -1), (12, -1), (13, 0), (14, 0)]

Covered at level 5 : {13, 14}

After reduction : 
 pending  : [5, 6, 10, 9, 8, 7]
 solution : [0, 2, 3, 12]


Before reduction : 
 pending  : [5, 6, 10, 9, 8, 7]
 solution : [0, 2, 3, 12]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 2), (7, 4), (8, 1), (9, 8), (10, 4), (11, -1), (12, -1), (13, 0), (14, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 2), (7, 4), (8, 1), (9, 8), (10, 4), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 6, 10, 9, 8, 7]
 solution : [0, 2, 3, 12]


Solution : [0, 2, 3, 12] has cost 15.


Decide in level 5 among pending : [5, 6, 10, 9, 8, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 2), (7, 4), (8, 1), (9, 8), (10, 4), (11, -1), (12, -1), (13, -1), (14, -1)]

Decide 9 with phase True at level 5

After decision at level 5
 pending : [5, 6, 10, 8, 7]
 solution : [0, 2, 3, 12, 9]


New level: 6
 pending : [5, 6, 10, 8, 7]
 solution : [0, 2, 3, 12, 9]


Before reduction : 
 pending  : [5, 6, 10, 8, 7]
 solution : [0, 2, 3, 12, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 2), (7, 4), (8, 1), (9, 8), (10, 4), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 1), (7, 0), (8, 0), (9, -1), (10, 1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 6 : {8, 5, 7}

After reduction : 
 pending  : [6, 10]
 solution : [0, 2, 3, 12, 9]


Before reduction : 
 pending  : [6, 10]
 solution : [0, 2, 3, 12, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 1), (7, 0), (8, 0), (9, -1), (10, 1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [6, 10]
 solution : [0, 2, 3, 12, 9]


Solution : [0, 2, 3, 12, 9] has cost 21.


Decide in level 6 among pending : [6, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, -1), (14, -1)]

Decide 6 with phase True at level 6

After decision at level 6
 pending : [10]
 solution : [0, 2, 3, 12, 9, 6]


New level: 7
 pending : [10]
 solution : [0, 2, 3, 12, 9, 6]


Before reduction : 
 pending  : [10]
 solution : [0, 2, 3, 12, 9, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 7 : {10}

After reduction : 
 pending  : []
 solution : [0, 2, 3, 12, 9, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 3, 12, 9, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 12, 9, 6]


Solution : [0, 2, 3, 12, 9, 6] has cost 27.


Before backtrack at level 7
 pending : []
 solution : [0, 2, 3, 12, 9, 6]

After backtrack at level 7
 pending : [10]
 solution : [0, 2, 3, 12, 9, 6]


Invert decision for 6 at level 6


New level: 7
 pending : [10]
 solution : [0, 2, 3, 12, 9]


Before reduction : 
 pending  : [10]
 solution : [0, 2, 3, 12, 9]

Essensial at level 7 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 12, 9, 10]


Before reduction : 
 pending  : []
 solution : [0, 2, 3, 12, 9, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 12, 9, 10]


Solution : [0, 2, 3, 12, 9, 10] has cost 27.


Before backtrack at level 7
 pending : []
 solution : [0, 2, 3, 12, 9, 10]

After backtrack at level 7
 pending : [10]
 solution : [0, 2, 3, 12, 9]


Before backtrack at level 6
 pending : [10]
 solution : [0, 2, 3, 12, 9]

After backtrack at level 6
 pending : [10, 5, 8, 7, 6]
 solution : [0, 2, 3, 12, 9]


Invert decision for 9 at level 5


New level: 6
 pending : [10, 5, 8, 7, 6]
 solution : [0, 2, 3, 12]


Before reduction : 
 pending  : [10, 5, 8, 7, 6]
 solution : [0, 2, 3, 12]

Essensial at level 6 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 0), (7, 1), (8, 1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 6 : {6}

After reduction : 
 pending  : [5, 8, 7]
 solution : [0, 2, 3, 12, 10]


Before reduction : 
 pending  : [5, 8, 7]
 solution : [0, 2, 3, 12, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 0), (7, 1), (8, 1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, 1), (8, 1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 8, 7]
 solution : [0, 2, 3, 12, 10]


Solution : [0, 2, 3, 12, 10] has cost 21.


Decide in level 6 among pending : [5, 8, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, 1), (8, 1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Decide 5 with phase True at level 6

After decision at level 6
 pending : [8, 7]
 solution : [0, 2, 3, 12, 10, 5]


New level: 7
 pending : [8, 7]
 solution : [0, 2, 3, 12, 10, 5]


Before reduction : 
 pending  : [8, 7]
 solution : [0, 2, 3, 12, 10, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, 1), (8, 1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 7 : {8, 7}

After reduction : 
 pending  : []
 solution : [0, 2, 3, 12, 10, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 3, 12, 10, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 12, 10, 5]


Solution : [0, 2, 3, 12, 10, 5] has cost 27.


Before backtrack at level 7
 pending : []
 solution : [0, 2, 3, 12, 10, 5]

After backtrack at level 7
 pending : [8, 7]
 solution : [0, 2, 3, 12, 10, 5]


Invert decision for 5 at level 6


New level: 7
 pending : [8, 7]
 solution : [0, 2, 3, 12, 10]


Before reduction : 
 pending  : [8, 7]
 solution : [0, 2, 3, 12, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, 1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 7]
 solution : [0, 2, 3, 12, 10]


Solution : [0, 2, 3, 12, 10] has cost 21.


Decide in level 7 among pending : [8, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, 1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [7]
 solution : [0, 2, 3, 12, 10, 8]


New level: 8
 pending : [7]
 solution : [0, 2, 3, 12, 10, 8]


Before reduction : 
 pending  : [7]
 solution : [0, 2, 3, 12, 10, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, 1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 8 : {7}

After reduction : 
 pending  : []
 solution : [0, 2, 3, 12, 10, 8]


Before reduction : 
 pending  : []
 solution : [0, 2, 3, 12, 10, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 12, 10, 8]


Solution : [0, 2, 3, 12, 10, 8] has cost 27.


Before backtrack at level 8
 pending : []
 solution : [0, 2, 3, 12, 10, 8]

After backtrack at level 8
 pending : [7]
 solution : [0, 2, 3, 12, 10, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [7]
 solution : [0, 2, 3, 12, 10]


Before reduction : 
 pending  : [7]
 solution : [0, 2, 3, 12, 10]

Essensial at level 8 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 12, 10, 7]


Before reduction : 
 pending  : []
 solution : [0, 2, 3, 12, 10, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 12, 10, 7]


Solution : [0, 2, 3, 12, 10, 7] has cost 27.


Before backtrack at level 8
 pending : []
 solution : [0, 2, 3, 12, 10, 7]

After backtrack at level 8
 pending : [7]
 solution : [0, 2, 3, 12, 10]


Before backtrack at level 7
 pending : [7]
 solution : [0, 2, 3, 12, 10]

After backtrack at level 7
 pending : [7, 8]
 solution : [0, 2, 3, 12, 10]


Before backtrack at level 6
 pending : [7, 8]
 solution : [0, 2, 3, 12, 10]

After backtrack at level 6
 pending : [7, 8, 10, 6, 5]
 solution : [0, 2, 3, 12]


Before backtrack at level 5
 pending : [7, 8, 10, 6, 5]
 solution : [0, 2, 3, 12]

After backtrack at level 5
 pending : [7, 8, 10, 6, 5, 13, 14, 9]
 solution : [0, 2, 3, 12]


Invert decision for 12 at level 4


New level: 5
 pending : [7, 8, 10, 6, 5, 13, 14, 9]
 solution : [0, 2, 3]


Before reduction : 
 pending  : [7, 8, 10, 6, 5, 13, 14, 9]
 solution : [0, 2, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, -1), (12, -1), (13, 4), (14, 8)]

Covered at level 5 : set()

After reduction : 
 pending  : [7, 8, 10, 6, 5, 13, 14, 9]
 solution : [0, 2, 3]


Solution : [0, 2, 3] has cost 9.


Decide in level 5 among pending : [7, 8, 10, 6, 5, 13, 14, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, -1), (12, -1), (13, 4), (14, 8)]

Decide 7 with phase True at level 5

After decision at level 5
 pending : [8, 10, 6, 5, 13, 14, 9]
 solution : [0, 2, 3, 7]


New level: 6
 pending : [8, 10, 6, 5, 13, 14, 9]
 solution : [0, 2, 3, 7]


Before reduction : 
 pending  : [8, 10, 6, 5, 13, 14, 9]
 solution : [0, 2, 3, 7]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, 8), (8, 8), (9, 8), (10, 8), (11, -1), (12, -1), (13, 4), (14, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 2), (7, -1), (8, 2), (9, 2), (10, 4), (11, -1), (12, -1), (13, 2), (14, 8)]

Covered at level 6 : {5}

After reduction : 
 pending  : [8, 10, 6, 13, 14, 9]
 solution : [0, 2, 3, 7]


Before reduction : 
 pending  : [8, 10, 6, 13, 14, 9]
 solution : [0, 2, 3, 7]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 2), (7, -1), (8, 2), (9, 2), (10, 4), (11, -1), (12, -1), (13, 2), (14, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, 2), (9, 2), (10, 4), (11, -1), (12, -1), (13, 2), (14, 8)]

Covered at level 6 : set()

After reduction : 
 pending  : [8, 10, 6, 13, 14, 9]
 solution : [0, 2, 3, 7]


Solution : [0, 2, 3, 7] has cost 15.


Decide in level 6 among pending : [8, 10, 6, 13, 14, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, 2), (9, 2), (10, 4), (11, -1), (12, -1), (13, 2), (14, 8)]

Decide 14 with phase True at level 6

After decision at level 6
 pending : [8, 10, 6, 13, 9]
 solution : [0, 2, 3, 7, 14]


New level: 7
 pending : [8, 10, 6, 13, 9]
 solution : [0, 2, 3, 7, 14]


Before reduction : 
 pending  : [8, 10, 6, 13, 9]
 solution : [0, 2, 3, 7, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, 2), (9, 2), (10, 4), (11, -1), (12, -1), (13, 2), (14, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, 1), (9, 2), (10, 4), (11, -1), (12, -1), (13, 1), (14, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 10, 6, 13, 9]
 solution : [0, 2, 3, 7, 14]


Solution : [0, 2, 3, 7, 14] has cost 21.


Decide in level 7 among pending : [8, 10, 6, 13, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, 1), (9, 2), (10, 4), (11, -1), (12, -1), (13, 1), (14, -1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [8, 6, 13, 9]
 solution : [0, 2, 3, 7, 14, 10]


New level: 8
 pending : [8, 6, 13, 9]
 solution : [0, 2, 3, 7, 14, 10]


Before reduction : 
 pending  : [8, 6, 13, 9]
 solution : [0, 2, 3, 7, 14, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, 1), (9, 2), (10, 4), (11, -1), (12, -1), (13, 1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1)]

Covered at level 8 : {8, 9, 13, 6}

After reduction : 
 pending  : []
 solution : [0, 2, 3, 7, 14, 10]


Before reduction : 
 pending  : []
 solution : [0, 2, 3, 7, 14, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 7, 14, 10]


Solution : [0, 2, 3, 7, 14, 10] has cost 27.


Before backtrack at level 8
 pending : []
 solution : [0, 2, 3, 7, 14, 10]

After backtrack at level 8
 pending : [8, 6, 13, 9]
 solution : [0, 2, 3, 7, 14, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [8, 6, 13, 9]
 solution : [0, 2, 3, 7, 14]


Before reduction : 
 pending  : [8, 6, 13, 9]
 solution : [0, 2, 3, 7, 14]

Essensial at level 8 : {9, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1)]

Covered at level 8 : {8, 13}

After reduction : 
 pending  : []
 solution : [0, 2, 3, 7, 14, 9, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 3, 7, 14, 9, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 7, 14, 9, 6]


Solution : [0, 2, 3, 7, 14, 9, 6] has cost 33.


Before backtrack at level 8
 pending : []
 solution : [0, 2, 3, 7, 14, 9, 6]

After backtrack at level 8
 pending : [6, 9, 8, 13]
 solution : [0, 2, 3, 7, 14]


Before backtrack at level 7
 pending : [6, 9, 8, 13]
 solution : [0, 2, 3, 7, 14]

After backtrack at level 7
 pending : [6, 9, 8, 13, 10]
 solution : [0, 2, 3, 7, 14]


Invert decision for 14 at level 6


New level: 7
 pending : [6, 9, 8, 13, 10]
 solution : [0, 2, 3, 7]


Before reduction : 
 pending  : [6, 9, 8, 13, 10]
 solution : [0, 2, 3, 7]

Essensial at level 7 : {8, 13}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 1), (10, 4), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [6, 9, 10]
 solution : [0, 2, 3, 7, 8, 13]


Before reduction : 
 pending  : [6, 9, 10]
 solution : [0, 2, 3, 7, 8, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 1), (10, 4), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 1), (10, 4), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [6, 9, 10]
 solution : [0, 2, 3, 7, 8, 13]


Solution : [0, 2, 3, 7, 8, 13] has cost 27.


Before backtrack at level 7
 pending : [6, 9, 10]
 solution : [0, 2, 3, 7, 8, 13]

After backtrack at level 7
 pending : [6, 9, 10, 8, 13]
 solution : [0, 2, 3, 7]


Before backtrack at level 6
 pending : [6, 9, 10, 8, 13]
 solution : [0, 2, 3, 7]

After backtrack at level 6
 pending : [6, 9, 10, 8, 13, 5, 14]
 solution : [0, 2, 3, 7]


Invert decision for 7 at level 5


New level: 6
 pending : [6, 9, 10, 8, 13, 5, 14]
 solution : [0, 2, 3]


Before reduction : 
 pending  : [6, 9, 10, 8, 13, 5, 14]
 solution : [0, 2, 3]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 1), (10, 4), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, 8), (9, 8), (10, 8), (11, -1), (12, -1), (13, 4), (14, 8)]

Covered at level 6 : set()

After reduction : 
 pending  : [6, 9, 10, 8, 13, 5, 14]
 solution : [0, 2, 3]


Solution : [0, 2, 3] has cost 9.


Decide in level 6 among pending : [6, 9, 10, 8, 13, 5, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, 8), (9, 8), (10, 8), (11, -1), (12, -1), (13, 4), (14, 8)]

Decide 9 with phase True at level 6

After decision at level 6
 pending : [6, 10, 8, 13, 5, 14]
 solution : [0, 2, 3, 9]


New level: 7
 pending : [6, 10, 8, 13, 5, 14]
 solution : [0, 2, 3, 9]


Before reduction : 
 pending  : [6, 10, 8, 13, 5, 14]
 solution : [0, 2, 3, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, 8), (9, 8), (10, 8), (11, -1), (12, -1), (13, 4), (14, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 4), (7, -1), (8, 4), (9, -1), (10, 4), (11, -1), (12, -1), (13, 4), (14, 8)]

Covered at level 7 : set()

After reduction : 
 pending  : [6, 10, 8, 13, 5, 14]
 solution : [0, 2, 3, 9]


Solution : [0, 2, 3, 9] has cost 15.


Decide in level 7 among pending : [6, 10, 8, 13, 5, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 4), (7, -1), (8, 4), (9, -1), (10, 4), (11, -1), (12, -1), (13, 4), (14, 8)]

Decide 14 with phase True at level 7

After decision at level 7
 pending : [6, 10, 8, 13, 5]
 solution : [0, 2, 3, 9, 14]


New level: 8
 pending : [6, 10, 8, 13, 5]
 solution : [0, 2, 3, 9, 14]


Before reduction : 
 pending  : [6, 10, 8, 13, 5]
 solution : [0, 2, 3, 9, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 4), (7, -1), (8, 4), (9, -1), (10, 4), (11, -1), (12, -1), (13, 4), (14, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 4), (7, -1), (8, 0), (9, -1), (10, 4), (11, -1), (12, -1), (13, 2), (14, -1)]

Covered at level 8 : {8}

After reduction : 
 pending  : [6, 10, 13, 5]
 solution : [0, 2, 3, 9, 14]


Before reduction : 
 pending  : [6, 10, 13, 5]
 solution : [0, 2, 3, 9, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 4), (7, -1), (8, 0), (9, -1), (10, 4), (11, -1), (12, -1), (13, 2), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 4), (7, -1), (8, -1), (9, -1), (10, 4), (11, -1), (12, -1), (13, 2), (14, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [6, 10, 13, 5]
 solution : [0, 2, 3, 9, 14]


Solution : [0, 2, 3, 9, 14] has cost 21.


Decide in level 8 among pending : [6, 10, 13, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 4), (7, -1), (8, -1), (9, -1), (10, 4), (11, -1), (12, -1), (13, 2), (14, -1)]

Decide 6 with phase True at level 8

After decision at level 8
 pending : [10, 13, 5]
 solution : [0, 2, 3, 9, 14, 6]


New level: 9
 pending : [10, 13, 5]
 solution : [0, 2, 3, 9, 14, 6]


Before reduction : 
 pending  : [10, 13, 5]
 solution : [0, 2, 3, 9, 14, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, 4), (7, -1), (8, -1), (9, -1), (10, 4), (11, -1), (12, -1), (13, 2), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1)]

Covered at level 9 : {10, 5, 13}

After reduction : 
 pending  : []
 solution : [0, 2, 3, 9, 14, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 3, 9, 14, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 9, 14, 6]


Solution : [0, 2, 3, 9, 14, 6] has cost 27.


Before backtrack at level 9
 pending : []
 solution : [0, 2, 3, 9, 14, 6]

After backtrack at level 9
 pending : [10, 13, 5]
 solution : [0, 2, 3, 9, 14, 6]


Invert decision for 6 at level 8


New level: 9
 pending : [10, 13, 5]
 solution : [0, 2, 3, 9, 14]


Before reduction : 
 pending  : [10, 13, 5]
 solution : [0, 2, 3, 9, 14]

Essensial at level 9 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1)]

Covered at level 9 : {5, 13}

After reduction : 
 pending  : []
 solution : [0, 2, 3, 9, 14, 10]


Before reduction : 
 pending  : []
 solution : [0, 2, 3, 9, 14, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 9, 14, 10]


Solution : [0, 2, 3, 9, 14, 10] has cost 27.


Before backtrack at level 9
 pending : []
 solution : [0, 2, 3, 9, 14, 10]

After backtrack at level 9
 pending : [10, 13, 5]
 solution : [0, 2, 3, 9, 14]


Before backtrack at level 8
 pending : [10, 13, 5]
 solution : [0, 2, 3, 9, 14]

After backtrack at level 8
 pending : [10, 13, 5, 8, 6]
 solution : [0, 2, 3, 9, 14]


Invert decision for 14 at level 7


New level: 8
 pending : [10, 13, 5, 8, 6]
 solution : [0, 2, 3, 9]


Before reduction : 
 pending  : [10, 13, 5, 8, 6]
 solution : [0, 2, 3, 9]

Essensial at level 8 : {8, 13}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 8 : {5}

After reduction : 
 pending  : [10, 6]
 solution : [0, 2, 3, 9, 8, 13]


Before reduction : 
 pending  : [10, 6]
 solution : [0, 2, 3, 9, 8, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 6]
 solution : [0, 2, 3, 9, 8, 13]


Solution : [0, 2, 3, 9, 8, 13] has cost 27.


Before backtrack at level 8
 pending : [10, 6]
 solution : [0, 2, 3, 9, 8, 13]

After backtrack at level 8
 pending : [10, 6, 13, 8, 5]
 solution : [0, 2, 3, 9]


Before backtrack at level 7
 pending : [10, 6, 13, 8, 5]
 solution : [0, 2, 3, 9]

After backtrack at level 7
 pending : [10, 6, 13, 8, 5, 14]
 solution : [0, 2, 3, 9]


Invert decision for 9 at level 6


New level: 7
 pending : [10, 6, 13, 8, 5, 14]
 solution : [0, 2, 3]


Before reduction : 
 pending  : [10, 6, 13, 8, 5, 14]
 solution : [0, 2, 3]

Essensial at level 7 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 0), (7, -1), (8, 8), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2), (14, 8)]

Covered at level 7 : {6}

After reduction : 
 pending  : [13, 8, 5, 14]
 solution : [0, 2, 3, 10]


Before reduction : 
 pending  : [13, 8, 5, 14]
 solution : [0, 2, 3, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 0), (7, -1), (8, 8), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2), (14, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, -1), (7, -1), (8, 8), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2), (14, 8)]

Covered at level 7 : set()

After reduction : 
 pending  : [13, 8, 5, 14]
 solution : [0, 2, 3, 10]


Solution : [0, 2, 3, 10] has cost 15.


Decide in level 7 among pending : [13, 8, 5, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, -1), (7, -1), (8, 8), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2), (14, 8)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [13, 5, 14]
 solution : [0, 2, 3, 10, 8]


New level: 8
 pending : [13, 5, 14]
 solution : [0, 2, 3, 10, 8]


Before reduction : 
 pending  : [13, 5, 14]
 solution : [0, 2, 3, 10, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, -1), (7, -1), (8, 8), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2), (14, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1), (14, 1)]

Covered at level 8 : {5}

After reduction : 
 pending  : [13, 14]
 solution : [0, 2, 3, 10, 8]


Before reduction : 
 pending  : [13, 14]
 solution : [0, 2, 3, 10, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1), (14, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [13, 14]
 solution : [0, 2, 3, 10, 8]


Solution : [0, 2, 3, 10, 8] has cost 21.


Decide in level 8 among pending : [13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1), (14, 1)]

Decide 13 with phase True at level 8

After decision at level 8
 pending : [14]
 solution : [0, 2, 3, 10, 8, 13]


New level: 9
 pending : [14]
 solution : [0, 2, 3, 10, 8, 13]


Before reduction : 
 pending  : [14]
 solution : [0, 2, 3, 10, 8, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1), (14, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0)]

Covered at level 9 : {14}

After reduction : 
 pending  : []
 solution : [0, 2, 3, 10, 8, 13]


Before reduction : 
 pending  : []
 solution : [0, 2, 3, 10, 8, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 10, 8, 13]


Solution : [0, 2, 3, 10, 8, 13] has cost 27.


Before backtrack at level 9
 pending : []
 solution : [0, 2, 3, 10, 8, 13]

After backtrack at level 9
 pending : [14]
 solution : [0, 2, 3, 10, 8, 13]


Invert decision for 13 at level 8


New level: 9
 pending : [14]
 solution : [0, 2, 3, 10, 8]


Before reduction : 
 pending  : [14]
 solution : [0, 2, 3, 10, 8]

Essensial at level 9 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 10, 8, 14]


Before reduction : 
 pending  : []
 solution : [0, 2, 3, 10, 8, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 10, 8, 14]


Solution : [0, 2, 3, 10, 8, 14] has cost 27.


Before backtrack at level 9
 pending : []
 solution : [0, 2, 3, 10, 8, 14]

After backtrack at level 9
 pending : [14]
 solution : [0, 2, 3, 10, 8]


Before backtrack at level 8
 pending : [14]
 solution : [0, 2, 3, 10, 8]

After backtrack at level 8
 pending : [14, 5, 13]
 solution : [0, 2, 3, 10, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [14, 5, 13]
 solution : [0, 2, 3, 10]


Before reduction : 
 pending  : [14, 5, 13]
 solution : [0, 2, 3, 10]

Essensial at level 8 : {5, 14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1)]

Covered at level 8 : {13}

After reduction : 
 pending  : []
 solution : [0, 2, 3, 10, 5, 14]


Before reduction : 
 pending  : []
 solution : [0, 2, 3, 10, 5, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 3, 10, 5, 14]


Solution : [0, 2, 3, 10, 5, 14] has cost 27.


Before backtrack at level 8
 pending : []
 solution : [0, 2, 3, 10, 5, 14]

After backtrack at level 8
 pending : [14, 5, 13]
 solution : [0, 2, 3, 10]


Before backtrack at level 7
 pending : [14, 5, 13]
 solution : [0, 2, 3, 10]

After backtrack at level 7
 pending : [14, 5, 13, 10, 6, 8]
 solution : [0, 2, 3]


Before backtrack at level 6
 pending : [14, 5, 13, 10, 6, 8]
 solution : [0, 2, 3]

After backtrack at level 6
 pending : [14, 5, 13, 10, 6, 8, 9]
 solution : [0, 2, 3]


Before backtrack at level 5
 pending : [14, 5, 13, 10, 6, 8, 9]
 solution : [0, 2, 3]

After backtrack at level 5
 pending : [14, 5, 13, 10, 6, 8, 9, 7]
 solution : [0, 2, 3]


Before backtrack at level 4
 pending : [14, 5, 13, 10, 6, 8, 9, 7]
 solution : [0, 2, 3]

After backtrack at level 4
 pending : [14, 5, 13, 10, 6, 8, 9, 7, 12]
 solution : [0, 2, 3]


Before backtrack at level 3
 pending : [14, 5, 13, 10, 6, 8, 9, 7, 12]
 solution : [0, 2, 3]

After backtrack at level 3
 pending : [14, 5, 13, 10, 6, 8, 9, 7, 12, 3, 11]
 solution : [0, 2]


Before backtrack at level 2
 pending : [14, 5, 13, 10, 6, 8, 9, 7, 12, 3, 11]
 solution : [0, 2]

After backtrack at level 2
 pending : [14, 5, 13, 10, 6, 8, 9, 7, 12, 3, 11, 4]
 solution : [0, 2]


Before backtrack at level 1
 pending : [14, 5, 13, 10, 6, 8, 9, 7, 12, 3, 11, 4]
 solution : [0, 2]

After backtrack at level 1
 pending : [14, 5, 13, 10, 6, 8, 9, 7, 12, 3, 11, 4, 1]
 solution : [0, 2]


========================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym/ivy/firewall: node=2]

========================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: total qcost: 21

[MIN NOTE]: maximum branch and bound depth: 9

Definitions (length=0)

Equality Relations (length=0)

Solution 0 : [0, 2, 1, 7, 4] (length = 5)

invariant [invar_0] forall NODE0. ~sent(NODE0,NODE0) # qcost: 2

invariant [invar_2] forall NODE0,NODE1. sent(NODE1,NODE0) | ~allowed_in(NODE0) | NODE0 = NODE1 # qcost: 5

invariant [invar_1] forall NODE0. ~allowed_in(NODE0) | ~internal(NODE0) # qcost: 3

invariant [invar_7] forall NODE0,NODE1. allowed_in(NODE1) | allowed_in(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1 # qcost: 6

invariant [invar_4] forall NODE0,NODE1. internal(NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1 # qcost: 5




[QRM NOTE]: Time elapsed since start: 0.686 seconds

[QRM NOTE]: Time elapsed since last: 0.264 seconds

[QRM NOTE]: Peak memory: 1736151 bytes


============================================================================

	[IVY_CHECK]: Ivy Check on [ivybench/sym/ivy/firewall: node=2]

============================================================================

ivy_check complete=fo ivybench/sym/ivy/firewall.node_2.0.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/firewall.node_2.0.ivy: line 38: invar_0
        ivybench/sym/ivy/firewall.node_2.0.ivy: line 39: invar_2
        ivybench/sym/ivy/firewall.node_2.0.ivy: line 40: invar_1
        ivybench/sym/ivy/firewall.node_2.0.ivy: line 41: invar_7
        ivybench/sym/ivy/firewall.node_2.0.ivy: line 42: invar_4

    The following action implementations are present:
        ivybench/sym/ivy/firewall.node_2.0.ivy: line 15: implementation of send_from_internal
        ivybench/sym/ivy/firewall.node_2.0.ivy: line 23: implementation of send_to_internal

    The following initializers are present:
        ivybench/sym/ivy/firewall.node_2.0.ivy: line 10: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/firewall.node_2.0.ivy: line 38: invar_0 ... PASS
        ivybench/sym/ivy/firewall.node_2.0.ivy: line 39: invar_2 ... PASS
        ivybench/sym/ivy/firewall.node_2.0.ivy: line 40: invar_1 ... PASS
        ivybench/sym/ivy/firewall.node_2.0.ivy: line 41: invar_7 ... PASS
        ivybench/sym/ivy/firewall.node_2.0.ivy: line 42: invar_4 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:send_from_internal
            ivybench/sym/ivy/firewall.node_2.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_2.0.ivy: line 39: invar_2 ... FAIL
            ivybench/sym/ivy/firewall.node_2.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_2.0.ivy: line 41: invar_7 ... PASS
            ivybench/sym/ivy/firewall.node_2.0.ivy: line 42: invar_4 ... FAIL
        (internal) ext:send_to_internal
            ivybench/sym/ivy/firewall.node_2.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_2.0.ivy: line 39: invar_2 ... PASS
            ivybench/sym/ivy/firewall.node_2.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_2.0.ivy: line 41: invar_7 ... PASS
            ivybench/sym/ivy/firewall.node_2.0.ivy: line 42: invar_4 ... PASS

    The following program assertions are treated as assumptions:
        in action send_from_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_2.0.ivy: line 16: assumption
            ivybench/sym/ivy/firewall.node_2.0.ivy: line 17: assumption
        in action send_to_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_2.0.ivy: line 24: assumption
            ivybench/sym/ivy/firewall.node_2.0.ivy: line 25: assumption
            ivybench/sym/ivy/firewall.node_2.0.ivy: line 26: assumption

error: failed checks: 2
[IVY_CHECK RESULT]: FAIL ... exit with return code 1

[QRM NOTE]: Time elapsed since start: 4.439 seconds

[QRM NOTE]: Time elapsed since last: 3.753 seconds

[QRM NOTE]: Peak memory: 737620 bytes


***************************************************************************************

	[Reachability Convergence Check]: ivybench/sym/ivy/firewall: node=2

***************************************************************************************

python3 qrm.py ivybench/sym/ivy/firewall.node_2.0.ivy -s node=3 -f 2 -g -w -r -m -v 5 -w -l ivybench/sym/ivy/firewall.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/firewall: node=3]

================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 15

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: symmetric group order: 6

[FW NOTE]: number of branching actions: 18

ivy_to_cpp target=qrm firewall.node_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o firewall.node_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 firewall.node_3.finite.cpp firewall.node_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared firewall.node_3.finite.o firewall.node_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 10.229 seconds

[QRM NOTE]: Time elapsed since last: 10.229 seconds

[QRM NOTE]: Peak memory: 1178994 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 4

[FW NOTE]: number of total reachable states:        68

[FW NOTE]: number of dfs representative states:     16

[FW NOTE]: number of dfs non-representative states: 52


=======================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/firewall: node=3]

=======================================================================================

sort: node=['node0', 'node1', 'node2']
predicate: internal('node',)
predicate: sent('node', 'node')
predicate: allowed_in('node',)
interpreted atoms: {}
state atoms: ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)', 'internal(node0)', 'internal(node1)', 'internal(node2)', 'sent(node0,node0)', 'sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node1)', 'sent(node1,node2)', 'sent(node2,node0)', 'sent(node2,node1)', 'sent(node2,node2)']
representative states : 0, 3584, 1536, 512, 7176, 7240, 7242, 7246, 7178, 7182, 7180, 5128, 14528, 14532, 14564, 5130


=== State Orbit 0 =====================
size : 1
repr state: 000000000000000
lex min decimal: 0
states:
000000000000000




=== State Orbit 1 =====================
size : 1
repr state: 000111000000000
lex min decimal: 3584
states:
000111000000000




=== State Orbit 2 =====================
size : 3
repr state: 000011000000000
lex min decimal: 1536
states:
000011000000000
000110000000000
000101000000000




=== State Orbit 3 =====================
size : 3
repr state: 000010000000000
lex min decimal: 512
states:
000010000000000
000001000000000
000100000000000




=== State Orbit 4 =====================
size : 6
repr state: 100011000100000
lex min decimal: 7176
states:
001110001000000
100011000100000
001110000001000
010101010000000
100011000000100
010101000000010




=== State Orbit 5 =====================
size : 3
repr state: 100011000100100
lex min decimal: 7240
states:
001110001001000
100011000100100
010101010000010




=== State Orbit 6 =====================
size : 6
repr state: 100011010100100
lex min decimal: 7242
states:
100011010100100
100011001100100
010101010001010
001110001001010
001110001001100
010101010100010




=== State Orbit 7 =====================
size : 3
repr state: 100011011100100
lex min decimal: 7246
states:
010101010101010
100011011100100
001110001001110




=== State Orbit 8 =====================
size : 6
repr state: 100011010100000
lex min decimal: 7178
states:
010101000001010
100011001000100
100011010100000
001110000001010
010101010100000
001110001000100




=== State Orbit 9 =====================
size : 6
repr state: 100011011100000
lex min decimal: 7182
states:
010101010101000
100011011100000
100011011000100
001110001000110
010101000101010
001110000001110




=== State Orbit 10 =====================
size : 6
repr state: 100011001100000
lex min decimal: 7180
states:
100011001100000
001110001000010
010101010001000
100011010000100
010101000100010
001110000001100




=== State Orbit 11 =====================
size : 6
repr state: 100010000100000
lex min decimal: 5128
states:
100001000000100
010100010000000
001100001000000
001010000001000
100010000100000
010001000000010




=== State Orbit 12 =====================
size : 3
repr state: 101010000101000
lex min decimal: 14528
states:
110001000000110
101010000101000
011100011000000




=== State Orbit 13 =====================
size : 6
repr state: 101010010101000
lex min decimal: 14532
states:
011100011100000
101010000101010
011100011000100
101010010101000
110001000001110
110001001000110




=== State Orbit 14 =====================
size : 3
repr state: 101010010101010
lex min decimal: 14564
states:
011100011100100
101010010101010
110001001001110




=== State Orbit 15 =====================
size : 6
repr state: 100010010100000
lex min decimal: 5130
states:
100010010100000
001100001000100
010100010100000
010001000001010
100001001000100
001010000001010



[QRM NOTE]: Time elapsed since start: 10.550 seconds

[QRM NOTE]: Time elapsed since last: 0.321 seconds

[QRM NOTE]: Peak memory: 1226833 bytes


============================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym/ivy/firewall: node=3]

============================================================================================================

Representatitive states in reachability not in Rmin

{14528, 14564, 14532, 7176, 5128, 7178, 5130, 7180, 7182}

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 10.590 seconds

[QRM NOTE]: Time elapsed since last: 0.040 seconds

[QRM NOTE]: Peak memory: 195950 bytes

next size: node=3


************************************************************************

	[Synthesize Rmin]: ivybench/sym/ivy/firewall: node=3

************************************************************************

python3 qrm.py ivybench/sym/ivy/firewall.ivy -s node=3 -f 1 -g -w -r -m -v 5 -w -l ivybench/sym/ivy/firewall.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 0.066 seconds

[QRM NOTE]: Time elapsed since last: 0.066 seconds

[QRM NOTE]: Peak memory: 19660 bytes


=======================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym/ivy/firewall: node=3]

=======================================================================================


==================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym/ivy/firewall: node=3]

==================================================================================


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : 1--1-----------
3     : ['allowed_in(node0)', 'internal(node0)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : --1--1---------
5     : ['allowed_in(node2)', 'internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 6
num_suborbits: 1
6 (*) : --10--------1--
6     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
7     : -1-0-----1-----
7     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
8     : --1-0--------1-
8     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
9     : 1---0--1-------
9     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
10     : -1---0-----1---
10     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
11     : 1----0--1------
11     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 6
num_suborbits: 1
12 (*) : 1-1---------1--
12     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
13     : 11-------1-----
13     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
14     : -11----------1-
14     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
15     : 11-----1-------
15     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
16     : -11--------1---
16     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
17     : 1-1-----1------
17     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 6
num_suborbits: 1
18 (*) : -11-----0------
18     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
19     : -11----0-------
19     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
20     : 1-1--------0---
20     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
21     : 1-1------0-----
21     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
22     : 11-----------0-
22     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
23     : 11----------0--
23     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 3
num_suborbits: 1
24 (*) : -110-----------
24     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
25     : 1-1-0----------
25     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
26     : 11---0---------
26     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 1
num_suborbits: 1
27 (*) : 111------------
27     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 6
num_suborbits: 1
28 (*) : --1-0---0------
28     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
29     : -1---0-0-------
29     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
30     : --10-------0---
30     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
31     : 1----0---0-----
31     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
32     : -1-0---------0-
32     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
33     : 1---0-------0--
33     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 3
num_suborbits: 1
34 (*) : --1-----0--0---
34     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
35     : -1-----0-----0-
35     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
36     : 1--------0--0--
36     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
37 (*) : --10----1------
37     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
38     : -1-0---1-------
38     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
39     : --1-0------1---
39     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
40     : 1---0----1-----
40     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
41     : -1---0-------1-
41     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
42     : 1----0------1--
42     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
43 (*) : --100----------
43     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
44     : -1-0-0---------
44     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
45     : 1---00---------
45     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 6
num_suborbits: 1
46 (*) : ---0-0--1------
46     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
47     : ---00--1-------
47     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
48     : ----00-----1---
48     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
49     : ---00----1-----
49     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
50     : ----00-------1-
50     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
51     : ---0-0------1--
51     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 6
num_suborbits: 1
52 (*) : --0--0--1------
52     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
53     : -0--0--1-------
53     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
54     : --0--0-----1---
54     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
55     : 0--0-----1-----
55     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
56     : -0--0--------1-
56     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
57     : 0--0--------1--
57     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 6
num_suborbits: 1
58 (*) : 0--0----1------
58     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
59     : 0--0---1-------
59     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
60     : -0--0------1---
60     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
61     : -0--0----1-----
61     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
62     : --0--0-------1-
62     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
63     : --0--0------1--
63     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 6
num_suborbits: 1
64 (*) : 0-0-----1------
64     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
65     : 00-----1-------
65     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
66     : -00--------1---
66     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
67     : 00-------1-----
67     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
68     : -00----------1-
68     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
69     : 0-0---------1--
69     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 6
num_suborbits: 1
70 (*) : 0----1--1------
70     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
71     : 0---1--1-------
71     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
72     : -0---1-----1---
72     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
73     : -0-1-----1-----
73     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
74     : --0-1--------1-
74     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
75     : --01--------1--
75     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 6
num_suborbits: 1
76 (*) : --01----1------
76     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
77     : -0-1---1-------
77     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
78     : --0-1------1---
78     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
79     : 0---1----1-----
79     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
80     : -0---1-------1-
80     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
81     : 0----1------1--
81     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 6
num_suborbits: 1
82 (*) : ---1-1--1------
82     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
83     : ---11--1-------
83     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
84     : ----11-----1---
84     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
85     : ---11----1-----
85     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
86     : ----11-------1-
86     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
87     : ---1-1------1--
87     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 6
num_suborbits: 1
88 (*) : --------11-1---
88     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
89     : -------1----11-
89     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
90     : -------11--1---
90     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
91     : ---------1--11-
91     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
92     : -------11----1-
92     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
93     : ---------1-11--
93     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 2
num_suborbits: 1
94 (*) : --------11---1-
94     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
95     : -------1---11--
95     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 6
num_suborbits: 1
96 (*) : ----10-1-0-----
96     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
97     : ----01--1---0--
97     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
98     : ---1-0-0-1-----
98     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
99     : ---0-1-----1-0-
99     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
100     : ---10---0---1--
100     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
101     : ---01------0-1-
101     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 6
num_suborbits: 1
102 (*) : ----00-0-1-----
102     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
103     : ----00--0---1--
103     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
104     : ---0-0-1-0-----
104     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
105     : ---0-0-----0-1-
105     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
106     : ---00---1---0--
106     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
107     : ---00------1-0-
107     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 6
num_suborbits: 1
108 (*) : 0----0-0-1-----
108     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
109     : 0---0---0---1--
109     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
110     : -0---0-1-0-----
110     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
111     : -0-0-------0-1-
111     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
112     : --0-0---1---0--
112     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
113     : --00-------1-0-
113     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 6
num_suborbits: 1
114 (*) : -----0-011-----
114     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
115     : ----0--10---1--
115     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
116     : -----0-1-0-1---
116     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
117     : ---0-----1-0-1-
117     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
118     : ----0---1---01-
118     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
119     : ---0-------110-
119     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 6
num_suborbits: 1
120 (*) : 0------0-1---0-
120     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
121     : 0-------0--01--
121     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
122     : -0-----1-0--0--
122     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
123     : -0------0--0-1-
123     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
124     : --0-----10--0--
124     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
125     : --0----0---1-0-
125     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 6
num_suborbits: 1
126 (*) : ----0--0-1---0-
126     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
127     : -----0--0--01--
127     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
128     : ---0---1-0--0--
128     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
129     : -----0--0--0-1-
129     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
130     : ---0----10--0--
130     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
131     : ----0--0---1-0-
131     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 6
num_suborbits: 1
132 (*) : ---1---0-1---0-
132     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
133     : ---1----0--01--
133     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
134     : ----1--1-0--0--
134     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
135     : ----1---0--0-1-
135     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
136     : -----1--10--0--
136     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
137     : -----1-0---1-0-
137     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
138 (*) : ---1---011-----
138     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
139     : ---1---10---1--
139     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
140     : ----1--1-0-1---
140     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
141     : ----1----1-0-1-
141     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
142     : -----1--1---01-
142     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
143     : -----1-----110-
143     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
144 (*) : 0------011-----
144     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
145     : 0------10---1--
145     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
146     : -0-----1-0-1---
146     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
147     : -0-------1-0-1-
147     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
148     : --0-----1---01-
148     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
149     : --0--------110-
149     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
150 (*) : ----0--011-----
150     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
151     : -----0-10---1--
151     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
152     : ---0---1-0-1---
152     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
153     : -----0---1-0-1-
153     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
154     : ---0----1---01-
154     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
155     : ----0------110-
155     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
156 (*) : -1-----01---0--
156     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
157     : --1----100-----
157     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
158     : 1--------0-1-0-
158     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
159     : --1----0-1-0---
159     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
160     : 1----------001-
160     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
161     : -1------0---10-
161     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
162 (*) : 01-----01------
162     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
163     : 0-1----10------
163     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
164     : 10-------0-1---
164     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
165     : -01------1-0---
165     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
166     : 1-0---------01-
166     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
167     : -10---------10-
167     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
168 (*) : -1-1---01------
168     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
169     : --11---10------
169     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
170     : 1---1----0-1---
170     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
171     : --1-1----1-0---
171     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
172     : 1----1------01-
172     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
173     : -1---1------10-
173     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
174 (*) : 01-----0----1--
174     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
175     : 0-1-----01-----
175     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
176     : 10-------0---1-
176     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
177     : -01----1---0---
177     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
178     : 1-0--------10--
178     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
179     : -10-----1----0-
179     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 34 =====================
size : 6
num_suborbits: 1
180 (*) : -1-1---0----1--
180     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
181     : --11----01-----
181     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
182     : 1---1----0---1-
182     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
183     : --1-1--1---0---
183     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
184     : 1----1-----10--
184     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
185     : -1---1--1----0-
185     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 35 =====================
size : 6
num_suborbits: 1
186 (*) : -1-----0-1--1--
186     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
187     : --1-----01--1--
187     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
188     : 1------1-0---1-
188     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
189     : --1----1---0-1-
189     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
190     : 1-------1--10--
190     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
191     : -1------1--1-0-
191     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 36 =====================
size : 6
num_suborbits: 1
192 (*) : -1-----011-----
192     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
193     : --1----10---1--
193     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
194     : 1------1-0-1---
194     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
195     : --1------1-0-1-
195     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
196     : 1-------1---01-
196     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
197     : -1---------110-
197     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 37 =====================
size : 6
num_suborbits: 1
198 (*) : ----0--0-1--1--
198     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
199     : -----0--01--1--
199     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
200     : ---0---1-0---1-
200     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
201     : -----0-1---0-1-
201     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
202     : ---0----1--10--
202     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
203     : ----0---1--1-0-
203     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 38 =====================
size : 6
num_suborbits: 1
204 (*) : 0------0-1--1--
204     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
205     : 0-------01--1--
205     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
206     : -0-----1-0---1-
206     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
207     : -0-----1---0-1-
207     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
208     : --0-----1--10--
208     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
209     : --0-----1--1-0-
209     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 39 =====================
size : 6
num_suborbits: 1
210 (*) : ---1---0-1--1--
210     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
211     : ---1----01--1--
211     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
212     : ----1--1-0---1-
212     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
213     : ----1--1---0-1-
213     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
214     : -----1--1--10--
214     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
215     : -----1--1--1-0-
215     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 40 =====================
size : 6
num_suborbits: 1
216 (*) : -----0-0-1--1--
216     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
217     : ----0---01--1--
217     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
218     : -----0-1-0---1-
218     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
219     : ---0---1---0-1-
219     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
220     : ----0---1--10--
220     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
221     : ---0----1--1-0-
221     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 41 =====================
size : 6
num_suborbits: 1
222 (*) : -1-1----1--1---
222     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
223     : --11---1-----1-
223     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
224     : 1---1---1--1---
224     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
225     : --1-1----1--1--
225     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
226     : 1----1-1-----1-
226     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
227     : -1---1---1--1--
227     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 42 =====================
size : 6
num_suborbits: 1
228 (*) : 01------1--1---
228     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
229     : 0-1----1-----1-
229     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
230     : 10------1--1---
230     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
231     : -01------1--1--
231     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
232     : 1-0----1-----1-
232     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
233     : -10------1--1--
233     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 43 =====================
size : 6
num_suborbits: 1
234 (*) : -1------1--10--
234     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
235     : --1----1-0---1-
235     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
236     : 1-------1--1-0-
236     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
237     : --1----0-1--1--
237     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
238     : 1------1---0-1-
238     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
239     : -1------01--1--
239     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 44 =====================
size : 6
num_suborbits: 1
240 (*) : ---01---1--1---
240     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
241     : ---0-1-1-----1-
241     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
242     : ---10---1--1---
242     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
243     : ----01---1--1--
243     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
244     : ---1-0-1-----1-
244     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
245     : ----10---1--1--
245     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 45 =====================
size : 6
num_suborbits: 1
246 (*) : -0-0----1--1---
246     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
247     : --00---1-----1-
247     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
248     : 0---0---1--1---
248     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
249     : --0-0----1--1--
249     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
250     : 0----0-1-----1-
250     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
251     : -0---0---1--1--
251     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 46 =====================
size : 6
num_suborbits: 1
252 (*) : 1-0--------1-0-
252     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
253     : 10---------0-1-
253     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
254     : -10-----1---0--
254     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
255     : 01------0---1--
255     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
256     : -01----1-0-----
256     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
257     : 0-1----0-1-----
257     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 47 =====================
size : 6
num_suborbits: 1
258 (*) : 1---0------1-0-
258     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
259     : 1----0-----0-1-
259     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
260     : -1-0----1---0--
260     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
261     : -1---0--0---1--
261     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
262     : --10---1-0-----
262     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
263     : --1-0--0-1-----
263     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 48 =====================
size : 6
num_suborbits: 1
264 (*) : 1----1-----1-0-
264     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
265     : 1---1------0-1-
265     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
266     : -1---1--1---0--
266     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
267     : -1-1----0---1--
267     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
268     : --1-1--1-0-----
268     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
269     : --11---0-1-----
269     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 49 =====================
size : 6
num_suborbits: 1
270 (*) : 1----------110-
270     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
271     : 1--------1-0-1-
271     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
272     : -1------1---01-
272     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
273     : -1-----10---1--
273     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
274     : --1----1-0-1---
274     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
275     : --1----011-----
275     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 50 =====================
size : 6
num_suborbits: 1
276 (*) : 01---------11--
276     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
277     : 0-1------1---1-
277     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
278     : 10------1----1-
278     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
279     : -01----1----1--
279     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
280     : 1-0----1---1---
280     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
281     : -10-----11-----
281     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 51 =====================
size : 6
num_suborbits: 1
282 (*) : -1-1-------11--
282     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
283     : --11-----1---1-
283     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
284     : 1---1---1----1-
284     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
285     : --1-1--1----1--
285     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
286     : 1----1-1---1---
286     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
287     : -1---1--11-----
287     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 52 =====================
size : 6
num_suborbits: 1
288 (*) : 0---0------11--
288     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
289     : 0----0---1---1-
289     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
290     : -0-0----1----1-
290     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
291     : -0---0-1----1--
291     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
292     : --00---1---1---
292     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
293     : --0-0---11-----
293     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 53 =====================
size : 6
num_suborbits: 1
294 (*) : ---10------11--
294     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
295     : ---1-0---1---1-
295     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
296     : ---01---1----1-
296     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
297     : ----10-1----1--
297     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
298     : ---0-1-1---1---
298     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
299     : ----01--11-----
299     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 54 =====================
size : 6
num_suborbits: 1
300 (*) : ---01------11--
300     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
301     : ---0-1---1---1-
301     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
302     : ---10---1----1-
302     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
303     : ----01-1----1--
303     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
304     : ---1-0-1---1---
304     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
305     : ----10--11-----
305     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 55 =====================
size : 6
num_suborbits: 1
306 (*) : 1---1------11--
306     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
307     : 1----1---1---1-
307     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
308     : -1-1----1----1-
308     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
309     : -1---1-1----1--
309     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
310     : --11---1---1---
310     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
311     : --1-1---11-----
311     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 56 =====================
size : 6
num_suborbits: 1
312 (*) : -0-0-------11--
312     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
313     : --00-----1---1-
313     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
314     : 0---0---1----1-
314     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
315     : --0-0--1----1--
315     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
316     : 0----0-1---1---
316     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
317     : -0---0--11-----
317     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 57 =====================
size : 6
num_suborbits: 1
318 (*) : 10---------11--
318     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
319     : 1-0------1---1-
319     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
320     : 01------1----1-
320     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
321     : -10----1----1--
321     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
322     : 0-1----1---1---
322     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
323     : -01-----11-----
323     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 58 =====================
size : 6
num_suborbits: 1
324 (*) : 0----0---1-1---
324     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
325     : 0---0-------11-
325     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
326     : -0---0-11------
326     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
327     : -0-0--------11-
327     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
328     : --0-0--11------
328     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
329     : --00-----1-1---
329     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 59 =====================
size : 6
num_suborbits: 1
330 (*) : ---1-0---1-1---
330     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
331     : ---10-------11-
331     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
332     : ----10-11------
332     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
333     : ---01-------11-
333     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
334     : ----01-11------
334     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
335     : ---0-1---1-1---
335     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 60 =====================
size : 6
num_suborbits: 1
336 (*) : 1----1---1-1---
336     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
337     : 1---1-------11-
337     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
338     : -1---1-11------
338     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
339     : -1-1--------11-
339     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
340     : --1-1--11------
340     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
341     : --11-----1-1---
341     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 61 =====================
size : 6
num_suborbits: 1
342 (*) : 1-0------1-1---
342     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
343     : 10----------11-
343     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
344     : -10----11------
344     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
345     : 01----------11-
345     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
346     : -01----11------
346     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
347     : 0-1------1-1---
347     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 62

[PRIME NOTE]: number of orbits before merging: 62

[PRIME NOTE]: number of primes: 348

[QRM NOTE]: Time elapsed since start: 0.146 seconds

[QRM NOTE]: Time elapsed since last: 0.079 seconds

[QRM NOTE]: Peak memory: 1405280 bytes


============================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym/ivy/firewall: node=3]

============================================================================

definition primes: set()


New level: 0
 pending : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : []

Essensial at level 0 : {0, 8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, 1024), (2, 512), (3, 512), (4, 256), (5, 512), (6, 512), (7, 256), (8, -1), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8]


Before reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, 512), (3, 512), (4, 256), (5, 512), (6, 512), (7, 256), (8, -1), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, 1024), (2, 512), (3, 512), (4, 256), (5, 512), (6, 512), (7, 256), (8, -1), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8]

[QRM NOTE]: Time elapsed since start: 0.167 seconds

[QRM NOTE]: Time elapsed since last: 0.021 seconds

[QRM NOTE]: Peak memory: 341609 bytes


================================================================================

	[QI]: Quantifier Inference on [ivybench/sym/ivy/firewall: node=3]

================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node2,node2)']

sign_func_name2args: {'0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['sent(node2,node2)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1': node$0$sent$0$0; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~sent(NODE0,NODE0)


=== Prime Orbit 8 =====================
size : 3
num_suborbits: 1
34 (*) : --1-----0--0---
34     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
35     : -1-----0-----0-
35     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
36     : 1--------0--0--
36     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$1$sent$0': [node$1$sent$0$0, node$1$sent$0$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1}

	identical_multi_classes: {'node$1$sent$0': [node$1$sent$0$0, node$1$sent$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE1)', '~sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1))


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : 1--1-----------
3     : ['allowed_in(node0)', 'internal(node0)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : --1--1---------
5     : ['allowed_in(node2)', 'internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'internal(node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'internal(node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$internal$0': [node$0$allowed_in$0$0; node$0$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$internal$0': node$0$allowed_in$0$0; node$0$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0)


=== Prime Orbit 2 =====================
size : 6
num_suborbits: 1
6 (*) : --10--------1--
6     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
7     : -1-0-----1-----
7     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
8     : --1-0--------1-
8     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
9     : 1---0--1-------
9     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
10     : -1---0-----1---
10     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
11     : 1----0--1------
11     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~internal(node0)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~internal(node0)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$0; node$0$sent$0$0], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$0; node$0$sent$0$0, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', 'sent(NODE0,NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. internal(NODE1) | ~sent(NODE0,NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1


=== Prime Orbit 3 =====================
size : 6
num_suborbits: 1
12 (*) : 1-1---------1--
12     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
13     : 11-------1-----
13     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
14     : -11----------1-
14     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
15     : 11-----1-------
15     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
16     : -11--------1---
16     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
17     : 1-1-----1------
17     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1, node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$allowed_in$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$allowed_in$0$1; node$0$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$allowed_in$0$1; node$0$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$allowed_in$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$allowed_in$0$1; node$0$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$0; node$0$sent$1$0], 'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$1; node$0$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$0; node$0$sent$1$0, 'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$1; node$0$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', 'allowed_in(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~sent(NODE1,NODE0) | ~allowed_in(NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1


=== Prime Orbit 4 =====================
size : 6
num_suborbits: 1
18 (*) : -11-----0------
18     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
19     : -11----0-------
19     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
20     : 1-1--------0---
20     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
21     : 1-1------0-----
21     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
22     : 11-----------0-
22     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
23     : 11----------0--
23     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1; node$1$sent$1$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1; node$1$sent$1$0 | node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1; node$1$sent$1$0 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1; node$1$sent$1$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1; node$1$sent$1$0 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$1; node$1$sent$1$0], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$1; node$1$sent$1$0, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE2,NODE1)', 'allowed_in(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. sent(NODE2,NODE1) | ~allowed_in(NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 5 =====================
size : 3
num_suborbits: 1
24 (*) : -110-----------
24     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
25     : 1-1-0----------
25     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
26     : 11---0---------
26     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 2, '1$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. internal(NODE1) | (exists NODE0. (~allowed_in(NODE0) & NODE0 ~= NODE1))


=== Prime Orbit 6 =====================
size : 1
num_suborbits: 1
27 (*) : 111------------
27     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$2]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: set()

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: exists NODE0. ~allowed_in(NODE0)


=== Prime Orbit 7 =====================
size : 6
num_suborbits: 1
28 (*) : --1-0---0------
28     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
29     : -1---0-0-------
29     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
30     : --10-------0---
30     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
31     : 1----0---0-----
31     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
32     : -1-0---------0-
32     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
33     : 1---0-------0--
33     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$internal$0$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$internal$0$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$1$internal$0': node$1$internal$0$0, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', '~sent(NODE2,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. internal(NODE1) | sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
37 (*) : --10----1------
37     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
38     : -1-0---1-------
38     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
39     : --1-0------1---
39     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
40     : 1---0----1-----
40     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
41     : -1---0-------1-
41     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
42     : 1----0------1--
42     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~internal(node0)', 'sent(node0,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~internal(node0)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$0; node$0$sent$1$0], 'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$0; node$0$sent$1$0, 'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', '~internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~sent(NODE1,NODE0) | internal(NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1


=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
43 (*) : --100----------
43     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
44     : -1-0-0---------
44     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
45     : 1---00---------
45     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$1$internal$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1}

part_sig: ('node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$1$internal$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$1$internal$0': [node$1$internal$0$0, node$1$internal$0$1]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0}

	identical_multi_classes: {'node$1$internal$0': [node$1$internal$0$0, node$1$internal$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', 'allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (internal(NODE0) & NODE0 ~= NODE1))


=== Prime Orbit 11 =====================
size : 6
num_suborbits: 1
46 (*) : ---0-0--1------
46     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
47     : ---00--1-------
47     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
48     : ----00-----1---
48     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
49     : ---00----1-----
49     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
50     : ----00-------1-
50     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
51     : ---0-0------1--
51     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', '~internal(node2)', 'sent(node0,node2)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1, node$0$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$1$0; node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$1$internal$0$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$1$internal$0$1',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', '~internal(node2)', 'sent(node0,node2)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$1$0; node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$1$internal$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$0], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$0; node$1$internal$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$0, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$0; node$1$internal$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', '~internal(NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. internal(NODE1) | internal(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 12 =====================
size : 6
num_suborbits: 1
52 (*) : --0--0--1------
52     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
53     : -0--0--1-------
53     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
54     : --0--0-----1---
54     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
55     : 0--0-----1-----
55     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
56     : -0--0--------1-
56     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
57     : 0--0--------1--
57     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node2)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node2)', '~internal(node2)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$internal$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$internal$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', '~allowed_in(NODE1)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. internal(NODE1) | allowed_in(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 13 =====================
size : 6
num_suborbits: 1
58 (*) : 0--0----1------
58     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
59     : 0--0---1-------
59     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
60     : -0--0------1---
60     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
61     : -0--0----1-----
61     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
62     : --0--0-------1-
62     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
63     : --0--0------1--
63     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~internal(node0)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~internal(node0)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$allowed_in$0; node$1$internal$0': [node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0], 'node$0$sent$1': [node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$1$allowed_in$0; node$1$internal$0': node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0, 'node$0$sent$1': node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE0)', '~internal(NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. allowed_in(NODE0) | internal(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 14 =====================
size : 6
num_suborbits: 1
64 (*) : 0-0-----1------
64     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
65     : 00-----1-------
65     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
66     : -00--------1---
66     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
67     : 00-------1-----
67     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
68     : -00----------1-
68     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
69     : 0-0---------1--
69     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~allowed_in(node2)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$1, node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$1$0; node$1$allowed_in$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$allowed_in$0$1}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$allowed_in$0$1',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~allowed_in(node2)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$1$0; node$1$allowed_in$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$allowed_in$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$0; node$1$allowed_in$0$0], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$0; node$1$allowed_in$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$0; node$1$allowed_in$0$0, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$0; node$1$allowed_in$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE1)', '~allowed_in(NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. allowed_in(NODE1) | allowed_in(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 15 =====================
size : 6
num_suborbits: 1
70 (*) : 0----1--1------
70     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
71     : 0---1--1-------
71     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
72     : -0---1-----1---
72     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
73     : -0-1-----1-----
73     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
74     : --0-1--------1-
74     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
75     : --01--------1--
75     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'internal(node2)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', 'internal(node2)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1': [node$0$internal$0$0; node$0$sent$1$0], 'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$0; node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1': node$0$internal$0$0; node$0$sent$1$0, 'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$0; node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', '~allowed_in(NODE1)', 'sent(NODE1,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~internal(NODE0) | allowed_in(NODE1) | ~sent(NODE1,NODE0) | NODE0 = NODE1


=== Prime Orbit 16 =====================
size : 6
num_suborbits: 1
76 (*) : --01----1------
76     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
77     : -0-1---1-------
77     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
78     : --0-1------1---
78     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
79     : 0---1----1-----
79     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
80     : -0---1-------1-
80     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
81     : 0----1------1--
81     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', 'internal(node0)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node2)', 'internal(node0)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$0': [node$0$internal$0$0; node$0$sent$0$0], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$0; node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$0': node$0$internal$0$0; node$0$sent$0$0, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$0; node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', '~allowed_in(NODE1)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~internal(NODE0) | allowed_in(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 17 =====================
size : 6
num_suborbits: 1
82 (*) : ---1-1--1------
82     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
83     : ---11--1-------
83     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
84     : ----11-----1---
84     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
85     : ---11----1-----
85     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
86     : ----11-------1-
86     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
87     : ---1-1------1--
87     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$1, node$0$sent$1$0]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$internal$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$internal$0$1; node$0$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$internal$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$internal$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$internal$0$1; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$0': [node$0$internal$0$0; node$0$sent$0$0], 'node$0$internal$0; node$0$sent$1': [node$0$internal$0$1; node$0$sent$1$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$0': node$0$internal$0$0; node$0$sent$0$0, 'node$0$internal$0; node$0$sent$1': node$0$internal$0$1; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE1)', 'internal(NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~internal(NODE1) | ~internal(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 18 =====================
size : 6
num_suborbits: 1
88 (*) : --------11-1---
88     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
89     : -------1----11-
89     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
90     : -------11--1---
90     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
91     : ---------1--11-
91     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
92     : -------11----1-
92     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
93     : ---------1-11--
93     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$2], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$0$sent$0$2]}

sig2const: {'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$2': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$0$2, node$0$sent$1$0; node$0$sent$1$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$0$2 | node$0$sent$1$0; node$0$sent$1$2}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$0$2 | node$0$sent$1$0; node$0$sent$1$2',)


---------- SigGenerator ----------

terms:  ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$sent': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$0$2, node$0$sent$1$0; node$0$sent$1$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$0$2 | node$0$sent$1$0; node$0$sent$1$2}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$1], 'node$0$sent$0; node$0$sent$0': [node$0$sent$0$1; node$0$sent$0$2], 'node$0$sent$1; node$0$sent$1': [node$0$sent$1$0; node$0$sent$1$2]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1': node$0$sent$0$0; node$0$sent$1$1, 'node$0$sent$0; node$0$sent$0': node$0$sent$0$1; node$0$sent$0$2, 'node$0$sent$1; node$0$sent$1': node$0$sent$1$0; node$0$sent$1$2}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', 'sent(NODE1,NODE0)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | ~sent(NODE1,NODE0) | ~sent(NODE0,NODE2) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 19 =====================
size : 2
num_suborbits: 1
94 (*) : --------11---1-
94     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
95     : -------1---11--
95     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$2], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$0$sent$1$2]}

sig2const: {'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$2': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$1$2, node$0$sent$0$2; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$2 | node$0$sent$0$2; node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$2 | node$0$sent$0$2; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$sent': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$1$2, node$0$sent$0$2; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$2 | node$0$sent$0$2; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$1$2, node$0$sent$0$2; node$0$sent$1$0]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0, node$0$sent$1$1, node$0$sent$0$1, node$0$sent$1$2, node$0$sent$0$2, node$0$sent$1$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', 'sent(NODE2,NODE1)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE0) | ~sent(NODE2,NODE1) | ~sent(NODE0,NODE2) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 20 =====================
size : 6
num_suborbits: 1
96 (*) : ----10-1-0-----
96     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
97     : ----01--1---0--
97     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
98     : ---1-0-0-1-----
98     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
99     : ---0-1-----1-0-
99     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
100     : ---10---0---1--
100     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
101     : ---01------0-1-
101     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', '~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['internal(node1)', '~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '1$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'sent(NODE1,NODE0)', '~internal(NODE2)', '~sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~internal(NODE0) | ~sent(NODE1,NODE0) | internal(NODE2) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 21 =====================
size : 6
num_suborbits: 1
102 (*) : ----00-0-1-----
102     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
103     : ----00--0---1--
103     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
104     : ---0-0-1-0-----
104     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
105     : ---0-0-----0-1-
105     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
106     : ---00---1---0--
106     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
107     : ---00------1-0-
107     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node1)', '~internal(node2)', '~sent(node0,node1)', 'sent(node1,node0)']

sign_func_name2args: {'1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$1$sent$1$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$1',)


---------- SigGenerator ----------

terms:  ['~internal(node1)', '~internal(node2)', '~sent(node0,node1)', 'sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 2, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$1$internal$0': [node$1$internal$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$1$internal$0': node$1$internal$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', '~sent(NODE1,NODE0)', '~internal(NODE2)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. internal(NODE0) | sent(NODE1,NODE0) | internal(NODE2) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 22 =====================
size : 6
num_suborbits: 1
108 (*) : 0----0-0-1-----
108     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
109     : 0---0---0---1--
109     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
110     : -0---0-1-0-----
110     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
111     : -0-0-------0-1-
111     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
112     : --0-0---1---0--
112     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
113     : --00-------1-0-
113     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)', 'sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE1)', '~sent(NODE1,NODE0)', '~internal(NODE2)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. allowed_in(NODE1) | sent(NODE1,NODE0) | internal(NODE2) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 23 =====================
size : 6
num_suborbits: 1
114 (*) : -----0-011-----
114     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
115     : ----0--10---1--
115     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
116     : -----0-1-0-1---
116     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
117     : ---0-----1-0-1-
117     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
118     : ----0---1---01-
118     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
119     : ---0-------110-
119     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node2)', '~sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)']

sign_func_name2args: {'1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node2)', '~sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '1$sent': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1; node$1$sent$0': [node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$1; node$1$sent$1$0], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1; node$1$sent$0': node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$1; node$1$sent$1$0, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE2)', 'sent(NODE1,NODE0)', '~internal(NODE2)', '~sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE0,NODE2) | ~sent(NODE1,NODE0) | internal(NODE2) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 24 =====================
size : 6
num_suborbits: 1
120 (*) : 0------0-1---0-
120     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
121     : 0-------0--01--
121     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
122     : -0-----1-0--0--
122     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
123     : -0------0--0-1-
123     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
124     : --0-----10--0--
124     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
125     : --0----0---1-0-
125     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~sent(node0,node1)', 'sent(node1,node0)', '~sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$1$sent$1$1, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~sent(node0,node1)', 'sent(node1,node0)', '~sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$sent': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$sent$0': [node$1$sent$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$sent$0': node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE1)', '~sent(NODE1,NODE0)', '~sent(NODE2,NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. allowed_in(NODE1) | sent(NODE1,NODE0) | sent(NODE2,NODE0) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 25 =====================
size : 6
num_suborbits: 1
126 (*) : ----0--0-1---0-
126     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
127     : -----0--0--01--
127     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
128     : ---0---1-0--0--
128     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
129     : -----0--0--0-1-
129     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
130     : ---0----10--0--
130     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
131     : ----0--0---1-0-
131     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node1)', '~sent(node0,node1)', 'sent(node1,node0)', '~sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$1$sent$1$0, node$1$sent$1$1, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['~internal(node1)', '~sent(node0,node1)', 'sent(node1,node0)', '~sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '1$sent': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$1$sent$0': [node$1$sent$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$1$sent$0': node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', '~sent(NODE1,NODE0)', '~sent(NODE2,NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. internal(NODE0) | sent(NODE1,NODE0) | sent(NODE2,NODE0) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 26 =====================
size : 6
num_suborbits: 1
132 (*) : ---1---0-1---0-
132     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
133     : ---1----0--01--
133     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
134     : ----1--1-0--0--
134     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
135     : ----1---0--0-1-
135     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
136     : -----1--10--0--
136     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
137     : -----1-0---1-0-
137     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', '~sent(node0,node1)', 'sent(node1,node0)', '~sent(node2,node1)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$1$sent$1$1, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$1}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['internal(node0)', '~sent(node0,node1)', 'sent(node1,node0)', '~sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '1$sent': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$1$sent$0': [node$1$sent$0$1]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$1$sent$0': node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'sent(NODE1,NODE0)', '~sent(NODE2,NODE1)', '~sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~internal(NODE0) | ~sent(NODE1,NODE0) | sent(NODE2,NODE1) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
138 (*) : ---1---011-----
138     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
139     : ---1---10---1--
139     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
140     : ----1--1-0-1---
140     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
141     : ----1----1-0-1-
141     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
142     : -----1--1---01-
142     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
143     : -----1-----110-
143     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', '~sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['internal(node0)', '~sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '1$sent': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$1; node$1$sent$1$0], 'node$0$sent$1': [node$0$sent$1$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$1; node$1$sent$1$0, 'node$0$sent$1': node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE2)', 'internal(NODE0)', 'sent(NODE1,NODE0)', '~sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE0,NODE2) | ~internal(NODE0) | ~sent(NODE1,NODE0) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
144 (*) : 0------011-----
144     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
145     : 0------10---1--
145     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
146     : -0-----1-0-1---
146     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
147     : -0-------1-0-1-
147     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
148     : --0-----1---01-
148     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
149     : --0--------110-
149     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$sent': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$1; node$1$sent$1$0], 'node$0$sent$1': [node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$1; node$1$sent$1$0, 'node$0$sent$1': node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE2)', 'sent(NODE1,NODE0)', '~allowed_in(NODE0)', '~sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE0,NODE2) | ~sent(NODE1,NODE0) | allowed_in(NODE0) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
150 (*) : ----0--011-----
150     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
151     : -----0-10---1--
151     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
152     : ---0---1-0-1---
152     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
153     : -----0---1-0-1-
153     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
154     : ---0----1---01-
154     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
155     : ----0------110-
155     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node1)', '~sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)']

sign_func_name2args: {'1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$1$sent$1$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~internal(node1)', '~sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '1$sent': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1; node$1$sent$0': [node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0], 'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$1; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$1': [node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1; node$1$sent$0': node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, 'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$1; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$1': node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE2)', 'sent(NODE1,NODE0)', '~internal(NODE1)', '~sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE0,NODE2) | ~sent(NODE1,NODE0) | internal(NODE1) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
156 (*) : -1-----01---0--
156     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
157     : --1----100-----
157     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
158     : 1--------0-1-0-
158     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
159     : --1----0-1-0---
159     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
160     : 1----------001-
160     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
161     : -1------0---10-
161     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~sent(node0,node1)', 'sent(node0,node2)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$1$sent$1$1, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1, node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', '~sent(node0,node1)', 'sent(node0,node2)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$sent': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$0$sent$0; node$1$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$0$sent$0; node$1$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~sent(NODE1,NODE0)', '~sent(NODE2,NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | sent(NODE1,NODE0) | sent(NODE2,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
162 (*) : 01-----01------
162     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
163     : 0-1----10------
163     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
164     : 10-------0-1---
164     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
165     : -01------1-0---
165     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
166     : 1-0---------01-
166     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
167     : -10---------10-
167     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node1)', '~sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', 'allowed_in(node1)', '~sent(node0,node1)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$allowed_in': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$0$sent$0; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$0$sent$0; node$1$allowed_in$0; node$1$sent$0': node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$0$sent$1': node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~allowed_in(NODE1)', '~sent(NODE1,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | allowed_in(NODE1) | sent(NODE1,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
168 (*) : -1-1---01------
168     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
169     : --11---10------
169     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
170     : 1---1----0-1---
170     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
171     : --1-1----1-0---
171     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
172     : 1----1------01-
172     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
173     : -1---1------10-
173     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node0)', '~sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'internal(node0)', '~sent(node0,node1)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0 | node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$0$internal$0; node$0$sent$0; node$1$sent$0': [node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$0$internal$0; node$0$sent$0; node$1$sent$0': node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0, 'node$0$sent$1': node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE1)', 'sent(NODE1,NODE2)', '~sent(NODE1,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~internal(NODE1) | ~sent(NODE1,NODE2) | sent(NODE1,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
174 (*) : 01-----0----1--
174     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
175     : 0-1-----01-----
175     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
176     : 10-------0---1-
176     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
177     : -01----1---0---
177     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
178     : 1-0--------10--
178     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
179     : -10-----1----0-
179     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node1)', '~sent(node0,node1)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', 'allowed_in(node1)', '~sent(node0,node1)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$allowed_in': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~allowed_in(NODE2)', '~sent(NODE2,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | allowed_in(NODE2) | sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 34 =====================
size : 6
num_suborbits: 1
180 (*) : -1-1---0----1--
180     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
181     : --11----01-----
181     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
182     : 1---1----0---1-
182     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
183     : --1-1--1---0---
183     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
184     : 1----1-----10--
184     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
185     : -1---1--1----0-
185     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node0)', '~sent(node0,node1)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'internal(node0)', '~sent(node0,node1)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0': [node$0$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0': node$0$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE1)', 'sent(NODE2,NODE1)', '~sent(NODE1,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~internal(NODE1) | ~sent(NODE2,NODE1) | sent(NODE1,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 35 =====================
size : 6
num_suborbits: 1
186 (*) : -1-----0-1--1--
186     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
187     : --1-----01--1--
187     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
188     : 1------1-0---1-
188     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
189     : --1----1---0-1-
189     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
190     : 1-------1--10--
190     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
191     : -1------1--1-0-
191     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~sent(node0,node1)', 'sent(node1,node0)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', '~sent(node0,node1)', 'sent(node1,node0)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$sent': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$0; node$1$sent$1': [node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$1], 'node$0$sent$1; node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$0; node$1$sent$1': node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$1, 'node$0$sent$1; node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE2)', 'sent(NODE1,NODE2)', '~sent(NODE2,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE0,NODE2) | ~sent(NODE1,NODE2) | sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 36 =====================
size : 6
num_suborbits: 1
192 (*) : -1-----011-----
192     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
193     : --1----10---1--
193     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
194     : 1------1-0-1---
194     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
195     : --1------1-0-1-
195     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
196     : 1-------1---01-
196     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
197     : -1---------110-
197     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0, node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', '~sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$sent': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0, node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$0; node$1$sent$1': [node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0], 'node$0$sent$0; node$0$sent$1; node$1$sent$0': [node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$0; node$1$sent$1': node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0, 'node$0$sent$0; node$0$sent$1; node$1$sent$0': node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, 'node$0$sent$1': node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~sent(NODE1,NODE0)', 'sent(NODE0,NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 37 =====================
size : 6
num_suborbits: 1
198 (*) : ----0--0-1--1--
198     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
199     : -----0--01--1--
199     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
200     : ---0---1-0---1-
200     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
201     : -----0-1---0-1-
201     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
202     : ---0----1--10--
202     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
203     : ----0---1--1-0-
203     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node1)', '~sent(node0,node1)', 'sent(node1,node0)', 'sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$1$sent$1$0, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node1)', '~sent(node0,node1)', 'sent(node1,node0)', 'sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '1$sent': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$1], 'node$0$sent$1; node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$1, 'node$0$sent$1; node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~internal(NODE0)', '~sent(NODE2,NODE0)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | internal(NODE0) | sent(NODE2,NODE0) | ~sent(NODE0,NODE2) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 38 =====================
size : 6
num_suborbits: 1
204 (*) : 0------0-1--1--
204     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
205     : 0-------01--1--
205     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
206     : -0-----1-0---1-
206     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
207     : -0-----1---0-1-
207     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
208     : --0-----1--10--
208     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
209     : --0-----1--1-0-
209     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~sent(node0,node1)', 'sent(node1,node0)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$1$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~sent(node0,node1)', 'sent(node1,node0)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$sent': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$1], 'node$0$sent$1; node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$1, 'node$0$sent$1; node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~allowed_in(NODE2)', '~sent(NODE2,NODE0)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | allowed_in(NODE2) | sent(NODE2,NODE0) | ~sent(NODE0,NODE2) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 39 =====================
size : 6
num_suborbits: 1
210 (*) : ---1---0-1--1--
210     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
211     : ---1----01--1--
211     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
212     : ----1--1-0---1-
212     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
213     : ----1--1---0-1-
213     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
214     : -----1--1--10--
214     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
215     : -----1--1--1-0-
215     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', '~sent(node0,node1)', 'sent(node1,node0)', 'sent(node2,node0)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$1$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1',)


---------- SigGenerator ----------

terms:  ['internal(node0)', '~sent(node0,node1)', 'sent(node1,node0)', 'sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '1$sent': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$1]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'sent(NODE1,NODE0)', 'sent(NODE2,NODE0)', '~sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~internal(NODE0) | ~sent(NODE1,NODE0) | ~sent(NODE2,NODE0) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 40 =====================
size : 6
num_suborbits: 1
216 (*) : -----0-0-1--1--
216     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
217     : ----0---01--1--
217     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
218     : -----0-1-0---1-
218     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
219     : ---0---1---0-1-
219     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
220     : ----0---1--10--
220     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
221     : ---0----1--1-0-
221     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node2)', '~sent(node0,node1)', 'sent(node1,node0)', 'sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node2)', '~sent(node0,node1)', 'sent(node1,node0)', 'sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '1$sent': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0; node$1$internal$0': [node$0$sent$0$1; node$1$internal$0$0], 'node$0$sent$1; node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0; node$1$internal$0': node$0$sent$0$1; node$1$internal$0$0, 'node$0$sent$1; node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~internal(NODE1)', '~sent(NODE2,NODE0)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | internal(NODE1) | sent(NODE2,NODE0) | ~sent(NODE0,NODE2) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 41 =====================
size : 6
num_suborbits: 1
222 (*) : -1-1----1--1---
222     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
223     : --11---1-----1-
223     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
224     : 1---1---1--1---
224     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
225     : --1-1----1--1--
225     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
226     : 1----1-1-----1-
226     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
227     : -1---1---1--1--
227     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$0; node$0$sent$0$1], 'node$0$internal$0; node$0$sent$0': [node$0$internal$0$0; node$0$sent$0$0], 'node$0$sent$1; node$0$sent$1': [node$0$sent$1$0; node$0$sent$1$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$0; node$0$sent$0$1, 'node$0$internal$0; node$0$sent$0': node$0$internal$0$0; node$0$sent$0$0, 'node$0$sent$1; node$0$sent$1': node$0$sent$1$0; node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE1)', 'sent(NODE1,NODE2)', 'sent(NODE0,NODE2)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~internal(NODE1) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE2) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 42 =====================
size : 6
num_suborbits: 1
228 (*) : 01------1--1---
228     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
229     : 0-1----1-----1-
229     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
230     : 10------1--1---
230     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
231     : -01------1--1--
231     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
232     : 1-0----1-----1-
232     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
233     : -10------1--1--
233     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$allowed_in': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$0; node$0$sent$0$1], 'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$0; node$1$allowed_in$0$0], 'node$0$sent$1; node$0$sent$1': [node$0$sent$1$0; node$0$sent$1$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$0; node$0$sent$0$1, 'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$0; node$1$allowed_in$0$0, 'node$0$sent$1; node$0$sent$1': node$0$sent$1$0; node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE2)', 'sent(NODE1,NODE2)', '~allowed_in(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE0,NODE2) | ~sent(NODE1,NODE2) | allowed_in(NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 43 =====================
size : 6
num_suborbits: 1
234 (*) : -1------1--10--
234     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
235     : --1----1-0---1-
235     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
236     : 1-------1--1-0-
236     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
237     : --1----0-1--1--
237     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
238     : 1------1---0-1-
238     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
239     : -1------01--1--
239     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$0; node$0$sent$0$1], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$1; node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$0; node$0$sent$0$1, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$1; node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE2)', 'sent(NODE1,NODE2)', '~sent(NODE2,NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE0,NODE2) | ~sent(NODE1,NODE2) | sent(NODE2,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 44 =====================
size : 6
num_suborbits: 1
240 (*) : ---01---1--1---
240     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
241     : ---0-1-1-----1-
241     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
242     : ---10---1--1---
242     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
243     : ----01---1--1--
243     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
244     : ---1-0-1-----1-
244     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
245     : ----10---1--1--
245     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$0': [node$0$internal$0$0; node$0$sent$0$1], 'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$0], 'node$0$sent$1; node$0$sent$1': [node$0$sent$1$0; node$0$sent$1$1]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$0': node$0$internal$0$0; node$0$sent$0$1, 'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$0, 'node$0$sent$1; node$0$sent$1': node$0$sent$1$0; node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', 'internal(NODE0)', '~internal(NODE1)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | ~internal(NODE0) | internal(NODE1) | ~sent(NODE0,NODE2) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 45 =====================
size : 6
num_suborbits: 1
246 (*) : -0-0----1--1---
246     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
247     : --00---1-----1-
247     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
248     : 0---0---1--1---
248     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
249     : --0-0----1--1--
249     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
250     : 0----0-1-----1-
250     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
251     : -0---0---1--1--
251     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$1$allowed_in$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', '~internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$1$allowed_in$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$0], 'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$1; node$1$allowed_in$0$0], 'node$0$sent$1; node$0$sent$1': [node$0$sent$1$0; node$0$sent$1$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$0, 'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$1; node$1$allowed_in$0$0, 'node$0$sent$1; node$0$sent$1': node$0$sent$1$0; node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~allowed_in(NODE1)', '~internal(NODE0)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | allowed_in(NODE1) | internal(NODE0) | ~sent(NODE0,NODE2) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 46 =====================
size : 6
num_suborbits: 1
252 (*) : 1-0--------1-0-
252     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
253     : 10---------0-1-
253     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
254     : -10-----1---0--
254     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
255     : 01------0---1--
255     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
256     : -01----1-0-----
256     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
257     : 0-1----0-1-----
257     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~allowed_in(node2)', 'sent(node1,node2)', '~sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~allowed_in(node2)', 'sent(node1,node2)', '~sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$allowed_in': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~allowed_in(NODE2)', '~sent(NODE2,NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | allowed_in(NODE2) | sent(NODE2,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 47 =====================
size : 6
num_suborbits: 1
258 (*) : 1---0------1-0-
258     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
259     : 1----0-----0-1-
259     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
260     : -1-0----1---0--
260     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
261     : -1---0--0---1--
261     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
262     : --10---1-0-----
262     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
263     : --1-0--0-1-----
263     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~internal(node1)', 'sent(node1,node2)', '~sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~internal(node1)', 'sent(node1,node2)', '~sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~internal(NODE1)', '~sent(NODE2,NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | internal(NODE1) | sent(NODE2,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 48 =====================
size : 6
num_suborbits: 1
264 (*) : 1----1-----1-0-
264     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
265     : 1---1------0-1-
265     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
266     : -1---1--1---0--
266     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
267     : -1-1----0---1--
267     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
268     : --1-1--1-0-----
268     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
269     : --11---0-1-----
269     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE1)', 'sent(NODE2,NODE1)', '~sent(NODE1,NODE2)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~internal(NODE1) | ~sent(NODE2,NODE1) | sent(NODE1,NODE2) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 49 =====================
size : 6
num_suborbits: 1
270 (*) : 1----------110-
270     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
271     : 1--------1-0-1-
271     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
272     : -1------1---01-
272     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
273     : -1-----10---1--
273     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
274     : --1----1-0-1---
274     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
275     : --1----011-----
275     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$0; node$0$sent$1$1], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0; node$0$sent$1; node$1$sent$0': [node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$0; node$0$sent$1$1, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0; node$0$sent$1; node$1$sent$0': node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~sent(NODE2,NODE1)', 'sent(NODE2,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | sent(NODE2,NODE1) | ~sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 50 =====================
size : 6
num_suborbits: 1
276 (*) : 01---------11--
276     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
277     : 0-1------1---1-
277     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
278     : 10------1----1-
278     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
279     : -01----1----1--
279     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
280     : 1-0----1---1---
280     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
281     : -10-----11-----
281     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$allowed_in': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$0; node$0$sent$0$0], 'node$0$sent$0; node$0$sent$1': [node$0$sent$0$1; node$0$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$1; node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$0; node$0$sent$0$0, 'node$0$sent$0; node$0$sent$1': node$0$sent$0$1; node$0$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$1; node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~allowed_in(NODE2)', 'sent(NODE0,NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | allowed_in(NODE2) | ~sent(NODE0,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 51 =====================
size : 6
num_suborbits: 1
282 (*) : -1-1-------11--
282     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
283     : --11-----1---1-
283     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
284     : 1---1---1----1-
284     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
285     : --1-1--1----1--
285     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
286     : 1----1-1---1---
286     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
287     : -1---1--11-----
287     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$0; node$0$sent$0$0], 'node$0$internal$0; node$0$sent$1': [node$0$internal$0$0; node$0$sent$1$1], 'node$0$sent$0; node$0$sent$1': [node$0$sent$0$1; node$0$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$0; node$0$sent$0$0, 'node$0$internal$0; node$0$sent$1': node$0$internal$0$0; node$0$sent$1$1, 'node$0$sent$0; node$0$sent$1': node$0$sent$0$1; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE1)', 'sent(NODE0,NODE2)', 'sent(NODE2,NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~internal(NODE1) | ~sent(NODE0,NODE2) | ~sent(NODE2,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 52 =====================
size : 6
num_suborbits: 1
288 (*) : 0---0------11--
288     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
289     : 0----0---1---1-
289     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
290     : -0-0----1----1-
290     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
291     : -0---0-1----1--
291     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
292     : --00---1---1---
292     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
293     : --0-0---11-----
293     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$0], 'node$0$sent$0; node$0$sent$1': [node$0$sent$0$1; node$0$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$1; node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$0, 'node$0$sent$0; node$0$sent$1': node$0$sent$0$1; node$0$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$1; node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~internal(NODE0)', '~allowed_in(NODE2)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | internal(NODE0) | allowed_in(NODE2) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 53 =====================
size : 6
num_suborbits: 1
294 (*) : ---10------11--
294     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
295     : ---1-0---1---1-
295     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
296     : ---01---1----1-
296     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
297     : ----10-1----1--
297     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
298     : ---0-1-1---1---
298     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
299     : ----01--11-----
299     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', '~internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['internal(node0)', '~internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '1$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1': [node$0$internal$0$0; node$0$sent$1$1], 'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$0], 'node$0$sent$0; node$0$sent$1': [node$0$sent$0$1; node$0$sent$1$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1': node$0$internal$0$0; node$0$sent$1$1, 'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$0, 'node$0$sent$0; node$0$sent$1': node$0$sent$0$1; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', 'internal(NODE0)', '~internal(NODE1)', 'sent(NODE2,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | ~internal(NODE0) | internal(NODE1) | ~sent(NODE2,NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 54 =====================
size : 6
num_suborbits: 1
300 (*) : ---01------11--
300     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
301     : ---0-1---1---1-
301     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
302     : ---10---1----1-
302     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
303     : ----01-1----1--
303     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
304     : ---1-0-1---1---
304     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
305     : ----10--11-----
305     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$0': [node$0$internal$0$0; node$0$sent$0$0], 'node$0$sent$0; node$0$sent$1': [node$0$sent$0$1; node$0$sent$1$0], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$1; node$1$internal$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$0': node$0$internal$0$0; node$0$sent$0$0, 'node$0$sent$0; node$0$sent$1': node$0$sent$0$1; node$0$sent$1$0, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$1; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', 'internal(NODE0)', '~internal(NODE2)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | ~internal(NODE0) | internal(NODE2) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 55 =====================
size : 6
num_suborbits: 1
306 (*) : 1---1------11--
306     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
307     : 1----1---1---1-
307     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
308     : -1-1----1----1-
308     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
309     : -1---1-1----1--
309     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
310     : --11---1---1---
310     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
311     : --1-1---11-----
311     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$internal$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$internal$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$0; node$0$sent$1$1], 'node$0$internal$0; node$0$sent$0': [node$0$internal$0$0; node$0$sent$0$0], 'node$0$sent$0; node$0$sent$1': [node$0$sent$0$1; node$0$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$0; node$0$sent$1$1, 'node$0$internal$0; node$0$sent$0': node$0$internal$0$0; node$0$sent$0$0, 'node$0$sent$0; node$0$sent$1': node$0$sent$0$1; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE1)', 'sent(NODE1,NODE2)', 'sent(NODE2,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~internal(NODE1) | ~sent(NODE1,NODE2) | ~sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 56 =====================
size : 6
num_suborbits: 1
312 (*) : -0-0-------11--
312     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
313     : --00-----1---1-
313     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
314     : 0---0---1----1-
314     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
315     : --0-0--1----1--
315     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
316     : 0----0-1---1---
316     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
317     : -0---0--11-----
317     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', '~internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$0; node$1$allowed_in$0$0], 'node$0$sent$0; node$0$sent$1': [node$0$sent$0$1; node$0$sent$1$0], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$1; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$0; node$1$allowed_in$0$0, 'node$0$sent$0; node$0$sent$1': node$0$sent$0$1; node$0$sent$1$0, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$1; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~allowed_in(NODE0)', '~internal(NODE2)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | allowed_in(NODE0) | internal(NODE2) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 57 =====================
size : 6
num_suborbits: 1
318 (*) : 10---------11--
318     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
319     : 1-0------1---1-
319     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
320     : 01------1----1-
320     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
321     : -10----1----1--
321     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
322     : 0-1----1---1---
322     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
323     : -01-----11-----
323     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$allowed_in': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$0; node$0$sent$1$1], 'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$0; node$1$allowed_in$0$0], 'node$0$sent$0; node$0$sent$1': [node$0$sent$0$1; node$0$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$0; node$0$sent$1$1, 'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$0; node$1$allowed_in$0$0, 'node$0$sent$0; node$0$sent$1': node$0$sent$0$1; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~allowed_in(NODE1)', 'sent(NODE2,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | allowed_in(NODE1) | ~sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 58 =====================
size : 6
num_suborbits: 1
324 (*) : 0----0---1-1---
324     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
325     : 0---0-------11-
325     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
326     : -0---0-11------
326     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
327     : -0-0--------11-
327     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
328     : --0-0--11------
328     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
329     : --00-----1-1---
329     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$allowed_in$0$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0 | node$0$sent$1$1; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$allowed_in$0$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0 | node$0$sent$1$1; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$0': [node$0$sent$0$0; node$0$sent$0$1], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$0; node$1$allowed_in$0$0], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$1; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$0': node$0$sent$0$0; node$0$sent$0$1, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$0; node$1$allowed_in$0$0, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$1; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE1)', '~internal(NODE2)', 'sent(NODE0,NODE1)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. allowed_in(NODE1) | internal(NODE2) | ~sent(NODE0,NODE1) | ~sent(NODE0,NODE2) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 59 =====================
size : 6
num_suborbits: 1
330 (*) : ---1-0---1-1---
330     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
331     : ---10-------11-
331     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
332     : ----10-11------
332     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
333     : ---01-------11-
333     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
334     : ----01-11------
334     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
335     : ---0-1---1-1---
335     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', '~internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$1; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['internal(node0)', '~internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '1$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$1; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1': [node$0$internal$0$0; node$0$sent$1$0], 'node$0$sent$0; node$0$sent$0': [node$0$sent$0$0; node$0$sent$0$1], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$1; node$1$internal$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1': node$0$internal$0$0; node$0$sent$1$0, 'node$0$sent$0; node$0$sent$0': node$0$sent$0$0; node$0$sent$0$1, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$1; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', 'internal(NODE0)', 'sent(NODE1,NODE0)', '~internal(NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | ~internal(NODE0) | ~sent(NODE1,NODE0) | internal(NODE2) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 60 =====================
size : 6
num_suborbits: 1
336 (*) : 1----1---1-1---
336     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
337     : 1---1-------11-
337     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
338     : -1---1-11------
338     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
339     : -1-1--------11-
339     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
340     : --1-1--11------
340     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
341     : --11-----1-1---
341     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$0; node$0$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$0; node$0$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$0; node$0$sent$1$0], 'node$0$internal$0; node$0$sent$1': [node$0$internal$0$0; node$0$sent$1$1], 'node$0$sent$0; node$0$sent$0': [node$0$sent$0$0; node$0$sent$0$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$0; node$0$sent$1$0, 'node$0$internal$0; node$0$sent$1': node$0$internal$0$0; node$0$sent$1$1, 'node$0$sent$0; node$0$sent$0': node$0$sent$0$0; node$0$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE1)', 'sent(NODE2,NODE0)', 'sent(NODE2,NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~internal(NODE1) | ~sent(NODE2,NODE0) | ~sent(NODE2,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 61 =====================
size : 6
num_suborbits: 1
342 (*) : 1-0------1-1---
342     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
343     : 10----------11-
343     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
344     : -10----11------
344     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
345     : 01----------11-
345     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
346     : -01----11------
346     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
347     : 0-1------1-1---
347     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$allowed_in': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$1; node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$0; node$0$sent$1$0], 'node$0$sent$0; node$0$sent$0': [node$0$sent$0$0; node$0$sent$0$1], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$1; node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$0; node$0$sent$1$0, 'node$0$sent$0; node$0$sent$0': node$0$sent$0$0; node$0$sent$0$1, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$1; node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', 'sent(NODE1,NODE0)', '~allowed_in(NODE2)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | ~sent(NODE1,NODE0) | allowed_in(NODE2) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


==========================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym/ivy/firewall: node=3]

==========================================================================================


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   1
num_exists :   0
num_literals : 1
quantified form : forall NODE0. ~sent(NODE0,NODE0)
qcost : 2




=== Prime Orbit 8 =====================
size : 3
num_suborbits: 1
34 (*) : --1-----0--0---
34     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
35     : -1-----0-----0-
35     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
36     : 1--------0--0--
36     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : 1--1-----------
3     : ['allowed_in(node0)', 'internal(node0)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : --1--1---------
5     : ['allowed_in(node2)', 'internal(node2)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0)
qcost : 3




=== Prime Orbit 2 =====================
size : 6
num_suborbits: 1
6 (*) : --10--------1--
6     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
7     : -1-0-----1-----
7     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
8     : --1-0--------1-
8     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
9     : 1---0--1-------
9     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
10     : -1---0-----1---
10     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
11     : 1----0--1------
11     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. internal(NODE1) | ~sent(NODE0,NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 3 =====================
size : 6
num_suborbits: 1
12 (*) : 1-1---------1--
12     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
13     : 11-------1-----
13     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
14     : -11----------1-
14     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
15     : 11-----1-------
15     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
16     : -11--------1---
16     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
17     : 1-1-----1------
17     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~sent(NODE1,NODE0) | ~allowed_in(NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 4 =====================
size : 6
num_suborbits: 1
18 (*) : -11-----0------
18     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
19     : -11----0-------
19     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
20     : 1-1--------0---
20     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
21     : 1-1------0-----
21     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
22     : 11-----------0-
22     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
23     : 11----------0--
23     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE0,NODE2,NODE1. sent(NODE2,NODE1) | ~allowed_in(NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 9




=== Prime Orbit 5 =====================
size : 3
num_suborbits: 1
24 (*) : -110-----------
24     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
25     : 1-1-0----------
25     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
26     : 11---0---------
26     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. internal(NODE1) | (exists NODE0. (~allowed_in(NODE0) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 6 =====================
size : 1
num_suborbits: 1
27 (*) : 111------------
27     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   1
num_literals : 1
quantified form : exists NODE0. ~allowed_in(NODE0)
qcost : 2




=== Prime Orbit 7 =====================
size : 6
num_suborbits: 1
28 (*) : --1-0---0------
28     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
29     : -1---0-0-------
29     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
30     : --10-------0---
30     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
31     : 1----0---0-----
31     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
32     : -1-0---------0-
32     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
33     : 1---0-------0--
33     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE0,NODE2,NODE1. internal(NODE1) | sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 9




=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
37 (*) : --10----1------
37     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
38     : -1-0---1-------
38     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
39     : --1-0------1---
39     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
40     : 1---0----1-----
40     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
41     : -1---0-------1-
41     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
42     : 1----0------1--
42     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~sent(NODE1,NODE0) | internal(NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
43 (*) : --100----------
43     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
44     : -1-0-0---------
44     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
45     : 1---00---------
45     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (internal(NODE0) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 11 =====================
size : 6
num_suborbits: 1
46 (*) : ---0-0--1------
46     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
47     : ---00--1-------
47     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
48     : ----00-----1---
48     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
49     : ---00----1-----
49     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
50     : ----00-------1-
50     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
51     : ---0-0------1--
51     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. internal(NODE1) | internal(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 12 =====================
size : 6
num_suborbits: 1
52 (*) : --0--0--1------
52     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
53     : -0--0--1-------
53     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
54     : --0--0-----1---
54     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
55     : 0--0-----1-----
55     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
56     : -0--0--------1-
56     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
57     : 0--0--------1--
57     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. internal(NODE1) | allowed_in(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 13 =====================
size : 6
num_suborbits: 1
58 (*) : 0--0----1------
58     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
59     : 0--0---1-------
59     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
60     : -0--0------1---
60     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
61     : -0--0----1-----
61     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
62     : --0--0-------1-
62     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
63     : --0--0------1--
63     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. allowed_in(NODE0) | internal(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 14 =====================
size : 6
num_suborbits: 1
64 (*) : 0-0-----1------
64     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
65     : 00-----1-------
65     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
66     : -00--------1---
66     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
67     : 00-------1-----
67     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
68     : -00----------1-
68     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
69     : 0-0---------1--
69     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. allowed_in(NODE1) | allowed_in(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 15 =====================
size : 6
num_suborbits: 1
70 (*) : 0----1--1------
70     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
71     : 0---1--1-------
71     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
72     : -0---1-----1---
72     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
73     : -0-1-----1-----
73     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
74     : --0-1--------1-
74     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
75     : --01--------1--
75     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~internal(NODE0) | allowed_in(NODE1) | ~sent(NODE1,NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 16 =====================
size : 6
num_suborbits: 1
76 (*) : --01----1------
76     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
77     : -0-1---1-------
77     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
78     : --0-1------1---
78     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
79     : 0---1----1-----
79     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
80     : -0---1-------1-
80     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
81     : 0----1------1--
81     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~internal(NODE0) | allowed_in(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 17 =====================
size : 6
num_suborbits: 1
82 (*) : ---1-1--1------
82     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
83     : ---11--1-------
83     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
84     : ----11-----1---
84     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
85     : ---11----1-----
85     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
86     : ----11-------1-
86     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
87     : ---1-1------1--
87     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~internal(NODE1) | ~internal(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 18 =====================
size : 6
num_suborbits: 1
88 (*) : --------11-1---
88     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
89     : -------1----11-
89     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
90     : -------11--1---
90     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
91     : ---------1--11-
91     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
92     : -------11----1-
92     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
93     : ---------1-11--
93     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | ~sent(NODE1,NODE0) | ~sent(NODE0,NODE2) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 9




=== Prime Orbit 19 =====================
size : 2
num_suborbits: 1
94 (*) : --------11---1-
94     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
95     : -------1---11--
95     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE0) | ~sent(NODE2,NODE1) | ~sent(NODE0,NODE2) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 9




=== Prime Orbit 20 =====================
size : 6
num_suborbits: 1
96 (*) : ----10-1-0-----
96     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
97     : ----01--1---0--
97     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
98     : ---1-0-0-1-----
98     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
99     : ---0-1-----1-0-
99     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
100     : ---10---0---1--
100     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
101     : ---01------0-1-
101     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~internal(NODE0) | ~sent(NODE1,NODE0) | internal(NODE2) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 21 =====================
size : 6
num_suborbits: 1
102 (*) : ----00-0-1-----
102     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
103     : ----00--0---1--
103     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
104     : ---0-0-1-0-----
104     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
105     : ---0-0-----0-1-
105     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
106     : ---00---1---0--
106     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
107     : ---00------1-0-
107     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. internal(NODE0) | sent(NODE1,NODE0) | internal(NODE2) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 22 =====================
size : 6
num_suborbits: 1
108 (*) : 0----0-0-1-----
108     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
109     : 0---0---0---1--
109     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
110     : -0---0-1-0-----
110     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
111     : -0-0-------0-1-
111     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
112     : --0-0---1---0--
112     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
113     : --00-------1-0-
113     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. allowed_in(NODE1) | sent(NODE1,NODE0) | internal(NODE2) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 23 =====================
size : 6
num_suborbits: 1
114 (*) : -----0-011-----
114     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
115     : ----0--10---1--
115     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
116     : -----0-1-0-1---
116     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
117     : ---0-----1-0-1-
117     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
118     : ----0---1---01-
118     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
119     : ---0-------110-
119     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE0,NODE2) | ~sent(NODE1,NODE0) | internal(NODE2) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 24 =====================
size : 6
num_suborbits: 1
120 (*) : 0------0-1---0-
120     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
121     : 0-------0--01--
121     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
122     : -0-----1-0--0--
122     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
123     : -0------0--0-1-
123     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
124     : --0-----10--0--
124     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
125     : --0----0---1-0-
125     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. allowed_in(NODE1) | sent(NODE1,NODE0) | sent(NODE2,NODE0) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 25 =====================
size : 6
num_suborbits: 1
126 (*) : ----0--0-1---0-
126     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
127     : -----0--0--01--
127     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
128     : ---0---1-0--0--
128     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
129     : -----0--0--0-1-
129     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
130     : ---0----10--0--
130     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
131     : ----0--0---1-0-
131     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. internal(NODE0) | sent(NODE1,NODE0) | sent(NODE2,NODE0) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 26 =====================
size : 6
num_suborbits: 1
132 (*) : ---1---0-1---0-
132     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
133     : ---1----0--01--
133     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
134     : ----1--1-0--0--
134     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
135     : ----1---0--0-1-
135     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
136     : -----1--10--0--
136     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
137     : -----1-0---1-0-
137     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~internal(NODE0) | ~sent(NODE1,NODE0) | sent(NODE2,NODE1) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
138 (*) : ---1---011-----
138     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
139     : ---1---10---1--
139     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
140     : ----1--1-0-1---
140     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
141     : ----1----1-0-1-
141     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
142     : -----1--1---01-
142     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
143     : -----1-----110-
143     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE0,NODE2) | ~internal(NODE0) | ~sent(NODE1,NODE0) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
144 (*) : 0------011-----
144     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
145     : 0------10---1--
145     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
146     : -0-----1-0-1---
146     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
147     : -0-------1-0-1-
147     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
148     : --0-----1---01-
148     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
149     : --0--------110-
149     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE0,NODE2) | ~sent(NODE1,NODE0) | allowed_in(NODE0) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
150 (*) : ----0--011-----
150     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
151     : -----0-10---1--
151     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
152     : ---0---1-0-1---
152     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
153     : -----0---1-0-1-
153     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
154     : ---0----1---01-
154     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
155     : ----0------110-
155     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE0,NODE2) | ~sent(NODE1,NODE0) | internal(NODE1) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
156 (*) : -1-----01---0--
156     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
157     : --1----100-----
157     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
158     : 1--------0-1-0-
158     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
159     : --1----0-1-0---
159     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
160     : 1----------001-
160     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
161     : -1------0---10-
161     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | sent(NODE1,NODE0) | sent(NODE2,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
162 (*) : 01-----01------
162     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
163     : 0-1----10------
163     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
164     : 10-------0-1---
164     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
165     : -01------1-0---
165     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
166     : 1-0---------01-
166     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
167     : -10---------10-
167     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | allowed_in(NODE1) | sent(NODE1,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
168 (*) : -1-1---01------
168     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
169     : --11---10------
169     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
170     : 1---1----0-1---
170     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
171     : --1-1----1-0---
171     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
172     : 1----1------01-
172     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
173     : -1---1------10-
173     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~internal(NODE1) | ~sent(NODE1,NODE2) | sent(NODE1,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
174 (*) : 01-----0----1--
174     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
175     : 0-1-----01-----
175     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
176     : 10-------0---1-
176     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
177     : -01----1---0---
177     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
178     : 1-0--------10--
178     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
179     : -10-----1----0-
179     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | allowed_in(NODE2) | sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 34 =====================
size : 6
num_suborbits: 1
180 (*) : -1-1---0----1--
180     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
181     : --11----01-----
181     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
182     : 1---1----0---1-
182     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
183     : --1-1--1---0---
183     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
184     : 1----1-----10--
184     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
185     : -1---1--1----0-
185     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~internal(NODE1) | ~sent(NODE2,NODE1) | sent(NODE1,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 35 =====================
size : 6
num_suborbits: 1
186 (*) : -1-----0-1--1--
186     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
187     : --1-----01--1--
187     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
188     : 1------1-0---1-
188     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
189     : --1----1---0-1-
189     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
190     : 1-------1--10--
190     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
191     : -1------1--1-0-
191     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE0,NODE2) | ~sent(NODE1,NODE2) | sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 36 =====================
size : 6
num_suborbits: 1
192 (*) : -1-----011-----
192     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
193     : --1----10---1--
193     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
194     : 1------1-0-1---
194     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
195     : --1------1-0-1-
195     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
196     : 1-------1---01-
196     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
197     : -1---------110-
197     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 37 =====================
size : 6
num_suborbits: 1
198 (*) : ----0--0-1--1--
198     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
199     : -----0--01--1--
199     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
200     : ---0---1-0---1-
200     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
201     : -----0-1---0-1-
201     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
202     : ---0----1--10--
202     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
203     : ----0---1--1-0-
203     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | internal(NODE0) | sent(NODE2,NODE0) | ~sent(NODE0,NODE2) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 38 =====================
size : 6
num_suborbits: 1
204 (*) : 0------0-1--1--
204     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
205     : 0-------01--1--
205     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
206     : -0-----1-0---1-
206     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
207     : -0-----1---0-1-
207     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
208     : --0-----1--10--
208     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
209     : --0-----1--1-0-
209     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | allowed_in(NODE2) | sent(NODE2,NODE0) | ~sent(NODE0,NODE2) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 39 =====================
size : 6
num_suborbits: 1
210 (*) : ---1---0-1--1--
210     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
211     : ---1----01--1--
211     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
212     : ----1--1-0---1-
212     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
213     : ----1--1---0-1-
213     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
214     : -----1--1--10--
214     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
215     : -----1--1--1-0-
215     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~internal(NODE0) | ~sent(NODE1,NODE0) | ~sent(NODE2,NODE0) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 40 =====================
size : 6
num_suborbits: 1
216 (*) : -----0-0-1--1--
216     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
217     : ----0---01--1--
217     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
218     : -----0-1-0---1-
218     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
219     : ---0---1---0-1-
219     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
220     : ----0---1--10--
220     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
221     : ---0----1--1-0-
221     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | internal(NODE1) | sent(NODE2,NODE0) | ~sent(NODE0,NODE2) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 41 =====================
size : 6
num_suborbits: 1
222 (*) : -1-1----1--1---
222     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
223     : --11---1-----1-
223     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
224     : 1---1---1--1---
224     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
225     : --1-1----1--1--
225     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
226     : 1----1-1-----1-
226     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
227     : -1---1---1--1--
227     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~internal(NODE1) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE2) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 42 =====================
size : 6
num_suborbits: 1
228 (*) : 01------1--1---
228     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
229     : 0-1----1-----1-
229     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
230     : 10------1--1---
230     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
231     : -01------1--1--
231     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
232     : 1-0----1-----1-
232     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
233     : -10------1--1--
233     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE0,NODE2) | ~sent(NODE1,NODE2) | allowed_in(NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 43 =====================
size : 6
num_suborbits: 1
234 (*) : -1------1--10--
234     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
235     : --1----1-0---1-
235     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
236     : 1-------1--1-0-
236     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
237     : --1----0-1--1--
237     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
238     : 1------1---0-1-
238     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
239     : -1------01--1--
239     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE0,NODE2) | ~sent(NODE1,NODE2) | sent(NODE2,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 44 =====================
size : 6
num_suborbits: 1
240 (*) : ---01---1--1---
240     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
241     : ---0-1-1-----1-
241     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
242     : ---10---1--1---
242     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
243     : ----01---1--1--
243     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
244     : ---1-0-1-----1-
244     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
245     : ----10---1--1--
245     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | ~internal(NODE0) | internal(NODE1) | ~sent(NODE0,NODE2) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 45 =====================
size : 6
num_suborbits: 1
246 (*) : -0-0----1--1---
246     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
247     : --00---1-----1-
247     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
248     : 0---0---1--1---
248     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
249     : --0-0----1--1--
249     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
250     : 0----0-1-----1-
250     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
251     : -0---0---1--1--
251     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | allowed_in(NODE1) | internal(NODE0) | ~sent(NODE0,NODE2) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 46 =====================
size : 6
num_suborbits: 1
252 (*) : 1-0--------1-0-
252     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
253     : 10---------0-1-
253     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
254     : -10-----1---0--
254     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
255     : 01------0---1--
255     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
256     : -01----1-0-----
256     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
257     : 0-1----0-1-----
257     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | allowed_in(NODE2) | sent(NODE2,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 47 =====================
size : 6
num_suborbits: 1
258 (*) : 1---0------1-0-
258     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
259     : 1----0-----0-1-
259     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
260     : -1-0----1---0--
260     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
261     : -1---0--0---1--
261     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
262     : --10---1-0-----
262     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
263     : --1-0--0-1-----
263     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | internal(NODE1) | sent(NODE2,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 48 =====================
size : 6
num_suborbits: 1
264 (*) : 1----1-----1-0-
264     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
265     : 1---1------0-1-
265     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
266     : -1---1--1---0--
266     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
267     : -1-1----0---1--
267     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
268     : --1-1--1-0-----
268     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
269     : --11---0-1-----
269     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~internal(NODE1) | ~sent(NODE2,NODE1) | sent(NODE1,NODE2) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 49 =====================
size : 6
num_suborbits: 1
270 (*) : 1----------110-
270     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
271     : 1--------1-0-1-
271     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
272     : -1------1---01-
272     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
273     : -1-----10---1--
273     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
274     : --1----1-0-1---
274     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
275     : --1----011-----
275     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | sent(NODE2,NODE1) | ~sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 50 =====================
size : 6
num_suborbits: 1
276 (*) : 01---------11--
276     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
277     : 0-1------1---1-
277     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
278     : 10------1----1-
278     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
279     : -01----1----1--
279     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
280     : 1-0----1---1---
280     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
281     : -10-----11-----
281     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | allowed_in(NODE2) | ~sent(NODE0,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 51 =====================
size : 6
num_suborbits: 1
282 (*) : -1-1-------11--
282     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
283     : --11-----1---1-
283     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
284     : 1---1---1----1-
284     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
285     : --1-1--1----1--
285     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
286     : 1----1-1---1---
286     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
287     : -1---1--11-----
287     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~internal(NODE1) | ~sent(NODE0,NODE2) | ~sent(NODE2,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 52 =====================
size : 6
num_suborbits: 1
288 (*) : 0---0------11--
288     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
289     : 0----0---1---1-
289     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
290     : -0-0----1----1-
290     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
291     : -0---0-1----1--
291     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
292     : --00---1---1---
292     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
293     : --0-0---11-----
293     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | internal(NODE0) | allowed_in(NODE2) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 53 =====================
size : 6
num_suborbits: 1
294 (*) : ---10------11--
294     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
295     : ---1-0---1---1-
295     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
296     : ---01---1----1-
296     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
297     : ----10-1----1--
297     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
298     : ---0-1-1---1---
298     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
299     : ----01--11-----
299     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | ~internal(NODE0) | internal(NODE1) | ~sent(NODE2,NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 54 =====================
size : 6
num_suborbits: 1
300 (*) : ---01------11--
300     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
301     : ---0-1---1---1-
301     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
302     : ---10---1----1-
302     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
303     : ----01-1----1--
303     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
304     : ---1-0-1---1---
304     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
305     : ----10--11-----
305     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | ~internal(NODE0) | internal(NODE2) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 55 =====================
size : 6
num_suborbits: 1
306 (*) : 1---1------11--
306     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
307     : 1----1---1---1-
307     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
308     : -1-1----1----1-
308     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
309     : -1---1-1----1--
309     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
310     : --11---1---1---
310     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
311     : --1-1---11-----
311     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~internal(NODE1) | ~sent(NODE1,NODE2) | ~sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 56 =====================
size : 6
num_suborbits: 1
312 (*) : -0-0-------11--
312     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
313     : --00-----1---1-
313     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
314     : 0---0---1----1-
314     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
315     : --0-0--1----1--
315     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
316     : 0----0-1---1---
316     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
317     : -0---0--11-----
317     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | allowed_in(NODE0) | internal(NODE2) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 57 =====================
size : 6
num_suborbits: 1
318 (*) : 10---------11--
318     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
319     : 1-0------1---1-
319     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
320     : 01------1----1-
320     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
321     : -10----1----1--
321     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
322     : 0-1----1---1---
322     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
323     : -01-----11-----
323     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | allowed_in(NODE1) | ~sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 58 =====================
size : 6
num_suborbits: 1
324 (*) : 0----0---1-1---
324     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
325     : 0---0-------11-
325     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
326     : -0---0-11------
326     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
327     : -0-0--------11-
327     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
328     : --0-0--11------
328     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
329     : --00-----1-1---
329     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. allowed_in(NODE1) | internal(NODE2) | ~sent(NODE0,NODE1) | ~sent(NODE0,NODE2) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 59 =====================
size : 6
num_suborbits: 1
330 (*) : ---1-0---1-1---
330     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
331     : ---10-------11-
331     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
332     : ----10-11------
332     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
333     : ---01-------11-
333     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
334     : ----01-11------
334     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
335     : ---0-1---1-1---
335     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | ~internal(NODE0) | ~sent(NODE1,NODE0) | internal(NODE2) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 60 =====================
size : 6
num_suborbits: 1
336 (*) : 1----1---1-1---
336     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
337     : 1---1-------11-
337     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
338     : -1---1-11------
338     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
339     : -1-1--------11-
339     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
340     : --1-1--11------
340     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
341     : --11-----1-1---
341     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~internal(NODE1) | ~sent(NODE2,NODE0) | ~sent(NODE2,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 61 =====================
size : 6
num_suborbits: 1
342 (*) : 1-0------1-1---
342     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
343     : 10----------11-
343     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
344     : -10----11------
344     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
345     : 01----------11-
345     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
346     : -01----11------
346     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
347     : 0-1------1-1---
347     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~sent(NODE1,NODE2) | ~sent(NODE1,NODE0) | allowed_in(NODE2) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10



[QRM NOTE]: Time elapsed since start: 0.597 seconds

[QRM NOTE]: Time elapsed since last: 0.430 seconds

[QRM NOTE]: Peak memory: 2148993 bytes


=========================================================================

	[MIN]: Minimization on [ivybench/sym/ivy/firewall: node=3]

=========================================================================


New level: 1
 pending : [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8]


Before reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, 512), (3, 512), (4, 256), (5, 512), (6, 512), (7, 256), (8, -1), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, 1024), (2, 512), (3, 512), (4, 256), (5, 512), (6, 512), (7, 256), (8, -1), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 1 : set()

After reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8]


Solution : [0, 8] has cost 7.


Decide in level 1 among pending : [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]

Coverage : [(0, -1), (1, 1024), (2, 512), (3, 512), (4, 256), (5, 512), (6, 512), (7, 256), (8, -1), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 1 with phase True at level 1

After decision at level 1
 pending : [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1]


New level: 2
 pending : [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1]


Before reduction : 
 pending  : [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, 512), (3, 512), (4, 256), (5, 512), (6, 512), (7, 256), (8, -1), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, 512), (12, 512), (13, 512), (14, 512), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 128), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 64), (27, 128), (28, 256), (29, 256), (30, 64), (31, 64), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 256), (38, 256), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 128), (47, 128), (48, 64), (49, 128), (50, 128), (51, 64), (52, 256), (53, 128), (54, 128), (55, 64), (56, 256), (57, 128), (58, 256), (59, 128), (60, 64), (61, 128)]

Covered at level 2 : set()

After reduction : 
 pending  : [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1]


Solution : [0, 8, 1] has cost 10.


Decide in level 2 among pending : [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, 512), (12, 512), (13, 512), (14, 512), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 128), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 64), (27, 128), (28, 256), (29, 256), (30, 64), (31, 64), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 256), (38, 256), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 128), (47, 128), (48, 64), (49, 128), (50, 128), (51, 64), (52, 256), (53, 128), (54, 128), (55, 64), (56, 256), (57, 128), (58, 256), (59, 128), (60, 64), (61, 128)]

Decide 11 with phase True at level 2

After decision at level 2
 pending : [2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11]


New level: 3
 pending : [2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11]


Before reduction : 
 pending  : [2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, 512), (12, 512), (13, 512), (14, 512), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 128), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 64), (27, 128), (28, 256), (29, 256), (30, 64), (31, 64), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 256), (38, 256), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 128), (47, 128), (48, 64), (49, 128), (50, 128), (51, 64), (52, 256), (53, 128), (54, 128), (55, 64), (56, 256), (57, 128), (58, 256), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, 0), (10, 0), (11, -1), (12, 128), (13, 128), (14, 512), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 128), (21, 8), (22, 256), (23, 64), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 16), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, 256), (39, 128), (40, 64), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 128), (47, 2), (48, 64), (49, 32), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 3 : {2, 3, 4, 5, 6, 7, 9, 10}

After reduction : 
 pending  : [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11]


Before reduction : 
 pending  : [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, 0), (10, 0), (11, -1), (12, 128), (13, 128), (14, 512), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 128), (21, 8), (22, 256), (23, 64), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 16), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, 256), (39, 128), (40, 64), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 128), (47, 2), (48, 64), (49, 32), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, 512), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 128), (21, 8), (22, 256), (23, 64), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 16), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, 256), (39, 128), (40, 64), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 128), (47, 2), (48, 64), (49, 32), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 3 : set()

After reduction : 
 pending  : [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11]


Solution : [0, 8, 1, 11] has cost 16.


Decide in level 3 among pending : [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, 512), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 128), (21, 8), (22, 256), (23, 64), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 16), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, 256), (39, 128), (40, 64), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 128), (47, 2), (48, 64), (49, 32), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Decide 14 with phase True at level 3

After decision at level 3
 pending : [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11, 14]


New level: 4
 pending : [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11, 14]


Before reduction : 
 pending  : [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11, 14]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, 512), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 128), (21, 8), (22, 256), (23, 64), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 16), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, 256), (39, 128), (40, 64), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 128), (47, 2), (48, 64), (49, 32), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 4 : {12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 14]


Before reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 14]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 14]


Solution : [0, 8, 1, 11, 14] has cost 22.


Before backtrack at level 4
 pending : []
 solution : [0, 8, 1, 11, 14]

After backtrack at level 4
 pending : [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11, 14]


Invert decision for 14 at level 3


New level: 4
 pending : [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11]


Before reduction : 
 pending  : [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 64), (21, 8), (22, 128), (23, 32), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 16), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, 256), (39, 128), (40, 32), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 64), (47, 2), (48, 32), (49, 16), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 4 : set()

After reduction : 
 pending  : [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11]


Solution : [0, 8, 1, 11] has cost 16.


Decide in level 4 among pending : [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 64), (21, 8), (22, 128), (23, 32), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 16), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, 256), (39, 128), (40, 32), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 64), (47, 2), (48, 32), (49, 16), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Decide 18 with phase True at level 4

After decision at level 4
 pending : [12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11, 18]


New level: 5
 pending : [12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11, 18]


Before reduction : 
 pending  : [12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11, 18]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 64), (21, 8), (22, 128), (23, 32), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 16), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, 256), (39, 128), (40, 32), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 64), (47, 2), (48, 32), (49, 16), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, 64), (20, 64), (21, 8), (22, 128), (23, 16), (24, 128), (25, 32), (26, 64), (27, 64), (28, 128), (29, 32), (30, 16), (31, 16), (32, 8), (33, 8), (34, 4), (35, 0), (36, 1), (37, 8), (38, 32), (39, 16), (40, 8), (41, 2), (42, 4), (43, 2), (44, 8), (45, 16), (46, 64), (47, 2), (48, 32), (49, 8), (50, 16), (51, 8), (52, 32), (53, 16), (54, 16), (55, 8), (56, 32), (57, 16), (58, 16), (59, 8), (60, 4), (61, 8)]

Covered at level 5 : {35}

After reduction : 
 pending  : [12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11, 18]


Before reduction : 
 pending  : [12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11, 18]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, 64), (20, 64), (21, 8), (22, 128), (23, 16), (24, 128), (25, 32), (26, 64), (27, 64), (28, 128), (29, 32), (30, 16), (31, 16), (32, 8), (33, 8), (34, 4), (35, 0), (36, 1), (37, 8), (38, 32), (39, 16), (40, 8), (41, 2), (42, 4), (43, 2), (44, 8), (45, 16), (46, 64), (47, 2), (48, 32), (49, 8), (50, 16), (51, 8), (52, 32), (53, 16), (54, 16), (55, 8), (56, 32), (57, 16), (58, 16), (59, 8), (60, 4), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, 64), (20, 64), (21, 8), (22, 128), (23, 16), (24, 128), (25, 32), (26, 64), (27, 64), (28, 128), (29, 32), (30, 16), (31, 16), (32, 8), (33, 8), (34, 4), (35, -1), (36, 1), (37, 8), (38, 32), (39, 16), (40, 8), (41, 2), (42, 4), (43, 2), (44, 8), (45, 16), (46, 64), (47, 2), (48, 32), (49, 8), (50, 16), (51, 8), (52, 32), (53, 16), (54, 16), (55, 8), (56, 32), (57, 16), (58, 16), (59, 8), (60, 4), (61, 8)]

Covered at level 5 : set()

After reduction : 
 pending  : [12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11, 18]


Solution : [0, 8, 1, 11, 18] has cost 25.


Before backtrack at level 5
 pending : [12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 8, 1, 11, 18]

After backtrack at level 5
 pending : [12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35]
 solution : [0, 8, 1, 11, 18]


Invert decision for 18 at level 4


New level: 5
 pending : [12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35]
 solution : [0, 8, 1, 11]


Before reduction : 
 pending  : [12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35]
 solution : [0, 8, 1, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, 64), (20, 64), (21, 8), (22, 128), (23, 16), (24, 128), (25, 32), (26, 64), (27, 64), (28, 128), (29, 32), (30, 16), (31, 16), (32, 8), (33, 8), (34, 4), (35, -1), (36, 1), (37, 8), (38, 32), (39, 16), (40, 8), (41, 2), (42, 4), (43, 2), (44, 8), (45, 16), (46, 64), (47, 2), (48, 32), (49, 8), (50, 16), (51, 8), (52, 32), (53, 16), (54, 16), (55, 8), (56, 32), (57, 16), (58, 16), (59, 8), (60, 4), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, 512), (20, 64), (21, 8), (22, 128), (23, 32), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 16), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, 256), (39, 128), (40, 32), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 64), (47, 2), (48, 32), (49, 16), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 5 : set()

After reduction : 
 pending  : [12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35]
 solution : [0, 8, 1, 11]


Solution : [0, 8, 1, 11] has cost 16.


Decide in level 5 among pending : [12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, 512), (20, 64), (21, 8), (22, 128), (23, 32), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 16), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, 256), (39, 128), (40, 32), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 64), (47, 2), (48, 32), (49, 16), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Decide 19 with phase True at level 5

After decision at level 5
 pending : [12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35]
 solution : [0, 8, 1, 11, 19]


New level: 6
 pending : [12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35]
 solution : [0, 8, 1, 11, 19]


Before reduction : 
 pending  : [12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35]
 solution : [0, 8, 1, 11, 19]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, 512), (20, 64), (21, 8), (22, 128), (23, 32), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 16), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, 256), (39, 128), (40, 32), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 64), (47, 2), (48, 32), (49, 16), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 8), (22, 128), (23, 16), (24, 128), (25, 32), (26, 64), (27, 32), (28, 64), (29, 16), (30, 4), (31, 8), (32, 4), (33, 16), (34, 8), (35, 2), (36, 0), (37, 64), (38, 256), (39, 128), (40, 32), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 64), (47, 2), (48, 32), (49, 8), (50, 8), (51, 4), (52, 32), (53, 16), (54, 16), (55, 8), (56, 32), (57, 16), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 6 : {36}

After reduction : 
 pending  : [12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35]
 solution : [0, 8, 1, 11, 19]


Before reduction : 
 pending  : [12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35]
 solution : [0, 8, 1, 11, 19]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 8), (22, 128), (23, 16), (24, 128), (25, 32), (26, 64), (27, 32), (28, 64), (29, 16), (30, 4), (31, 8), (32, 4), (33, 16), (34, 8), (35, 2), (36, 0), (37, 64), (38, 256), (39, 128), (40, 32), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 64), (47, 2), (48, 32), (49, 8), (50, 8), (51, 4), (52, 32), (53, 16), (54, 16), (55, 8), (56, 32), (57, 16), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 8), (22, 128), (23, 16), (24, 128), (25, 32), (26, 64), (27, 32), (28, 64), (29, 16), (30, 4), (31, 8), (32, 4), (33, 16), (34, 8), (35, 2), (36, -1), (37, 64), (38, 256), (39, 128), (40, 32), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 64), (47, 2), (48, 32), (49, 8), (50, 8), (51, 4), (52, 32), (53, 16), (54, 16), (55, 8), (56, 32), (57, 16), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 6 : set()

After reduction : 
 pending  : [12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35]
 solution : [0, 8, 1, 11, 19]


Solution : [0, 8, 1, 11, 19] has cost 25.


Before backtrack at level 6
 pending : [12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35]
 solution : [0, 8, 1, 11, 19]

After backtrack at level 6
 pending : [12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35, 36]
 solution : [0, 8, 1, 11, 19]


Invert decision for 19 at level 5


New level: 6
 pending : [12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35, 36]
 solution : [0, 8, 1, 11]


Before reduction : 
 pending  : [12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35, 36]
 solution : [0, 8, 1, 11]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 8), (22, 128), (23, 16), (24, 128), (25, 32), (26, 64), (27, 32), (28, 64), (29, 16), (30, 4), (31, 8), (32, 4), (33, 16), (34, 8), (35, 2), (36, -1), (37, 64), (38, 256), (39, 128), (40, 32), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 64), (47, 2), (48, 32), (49, 8), (50, 8), (51, 4), (52, 32), (53, 16), (54, 16), (55, 8), (56, 32), (57, 16), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 8), (22, 128), (23, 32), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 16), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, 256), (39, 128), (40, 32), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 64), (47, 2), (48, 32), (49, 16), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 6 : set()

After reduction : 
 pending  : [12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35, 36]
 solution : [0, 8, 1, 11]


Solution : [0, 8, 1, 11] has cost 16.


Decide in level 6 among pending : [12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 8), (22, 128), (23, 32), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 16), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, 256), (39, 128), (40, 32), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 64), (47, 2), (48, 32), (49, 16), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Decide 15 with phase True at level 6

After decision at level 6
 pending : [12, 13, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35, 36]
 solution : [0, 8, 1, 11, 15]


New level: 7
 pending : [12, 13, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35, 36]
 solution : [0, 8, 1, 11, 15]


Before reduction : 
 pending  : [12, 13, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35, 36]
 solution : [0, 8, 1, 11, 15]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 8), (22, 128), (23, 32), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 16), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, 256), (39, 128), (40, 32), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 64), (47, 2), (48, 32), (49, 16), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, 0), (14, -1), (15, -1), (16, 64), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 8), (23, 0), (24, 32), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 2), (34, 0), (35, 0), (36, 0), (37, 0), (38, 1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 2), (47, 0), (48, 0), (49, 0), (50, 1), (51, 0), (52, 1), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 4), (59, 0), (60, 0), (61, 2)]

Covered at level 7 : {13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60}

After reduction : 
 pending  : [12, 16, 22, 24, 33, 38, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15]


Before reduction : 
 pending  : [12, 16, 22, 24, 33, 38, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, 0), (14, -1), (15, -1), (16, 64), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 8), (23, 0), (24, 32), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 2), (34, 0), (35, 0), (36, 0), (37, 0), (38, 1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 2), (47, 0), (48, 0), (49, 0), (50, 1), (51, 0), (52, 1), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 4), (59, 0), (60, 0), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 2), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 4), (59, -1), (60, -1), (61, 2)]

Covered at level 7 : set()

After reduction : 
 pending  : [12, 16, 22, 24, 33, 38, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15]


Solution : [0, 8, 1, 11, 15] has cost 22.


Decide in level 7 among pending : [12, 16, 22, 24, 33, 38, 46, 50, 52, 58, 61]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 2), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 4), (59, -1), (60, -1), (61, 2)]

Decide 12 with phase True at level 7

After decision at level 7
 pending : [16, 22, 24, 33, 38, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15, 12]


New level: 8
 pending : [16, 22, 24, 33, 38, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15, 12]


Before reduction : 
 pending  : [16, 22, 24, 33, 38, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15, 12]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 2), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 4), (59, -1), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 0), (47, -1), (48, -1), (49, -1), (50, 0), (51, -1), (52, 0), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 0), (59, -1), (60, -1), (61, 0)]

Covered at level 8 : {33, 38, 46, 16, 50, 52, 22, 24, 58, 61}

After reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 15, 12]


Before reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 15, 12]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 0), (47, -1), (48, -1), (49, -1), (50, 0), (51, -1), (52, 0), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 0), (59, -1), (60, -1), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 15, 12]


Solution : [0, 8, 1, 11, 15, 12] has cost 28.


Before backtrack at level 8
 pending : []
 solution : [0, 8, 1, 11, 15, 12]

After backtrack at level 8
 pending : [16, 22, 24, 33, 38, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15, 12]


Invert decision for 12 at level 7


New level: 8
 pending : [16, 22, 24, 33, 38, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15]


Before reduction : 
 pending  : [16, 22, 24, 33, 38, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 2), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 4), (59, -1), (60, -1), (61, 2)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 22, 24, 33, 38, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15]


Solution : [0, 8, 1, 11, 15] has cost 22.


Decide in level 8 among pending : [16, 22, 24, 33, 38, 46, 50, 52, 58, 61]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 2), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 4), (59, -1), (60, -1), (61, 2)]

Decide 16 with phase True at level 8

After decision at level 8
 pending : [22, 24, 33, 38, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15, 16]


New level: 9
 pending : [22, 24, 33, 38, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15, 16]


Before reduction : 
 pending  : [22, 24, 33, 38, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15, 16]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 2), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 4), (59, -1), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 0), (47, -1), (48, -1), (49, -1), (50, 0), (51, -1), (52, 0), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 0), (59, -1), (60, -1), (61, 0)]

Covered at level 9 : {33, 38, 46, 50, 52, 22, 24, 58, 61}

After reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 15, 16]


Before reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 15, 16]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 0), (47, -1), (48, -1), (49, -1), (50, 0), (51, -1), (52, 0), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 0), (59, -1), (60, -1), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 15, 16]


Solution : [0, 8, 1, 11, 15, 16] has cost 28.


Before backtrack at level 9
 pending : []
 solution : [0, 8, 1, 11, 15, 16]

After backtrack at level 9
 pending : [22, 24, 33, 38, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15, 16]


Invert decision for 16 at level 8


New level: 9
 pending : [22, 24, 33, 38, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15]


Before reduction : 
 pending  : [22, 24, 33, 38, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15]

Essensial at level 9 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 1), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 1), (59, -1), (60, -1), (61, 1)]

Covered at level 9 : {38}

After reduction : 
 pending  : [22, 33, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15, 24]


Before reduction : 
 pending  : [22, 33, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 1), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 1), (59, -1), (60, -1), (61, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 1), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 1), (59, -1), (60, -1), (61, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [22, 33, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15, 24]


Solution : [0, 8, 1, 11, 15, 24] has cost 32.


Before backtrack at level 9
 pending : [22, 33, 46, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 15, 24]

After backtrack at level 9
 pending : [22, 33, 46, 50, 52, 58, 61, 24, 38]
 solution : [0, 8, 1, 11, 15]


Before backtrack at level 8
 pending : [22, 33, 46, 50, 52, 58, 61, 24, 38]
 solution : [0, 8, 1, 11, 15]

After backtrack at level 8
 pending : [22, 33, 46, 50, 52, 58, 61, 24, 38, 16]
 solution : [0, 8, 1, 11, 15]


Before backtrack at level 7
 pending : [22, 33, 46, 50, 52, 58, 61, 24, 38, 16]
 solution : [0, 8, 1, 11, 15]

After backtrack at level 7
 pending : [22, 33, 46, 50, 52, 58, 61, 24, 38, 16, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 35, 36, 12]
 solution : [0, 8, 1, 11, 15]


Invert decision for 15 at level 6


New level: 7
 pending : [22, 33, 46, 50, 52, 58, 61, 24, 38, 16, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 35, 36, 12]
 solution : [0, 8, 1, 11]


Before reduction : 
 pending  : [22, 33, 46, 50, 52, 58, 61, 24, 38, 16, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 35, 36, 12]
 solution : [0, 8, 1, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 1), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 1), (59, -1), (60, -1), (61, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 8), (22, 128), (23, 32), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 8), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, 256), (39, 128), (40, 32), (41, 16), (42, 32), (43, 16), (44, 32), (45, 64), (46, 64), (47, 2), (48, 32), (49, 16), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 7 : set()

After reduction : 
 pending  : [22, 33, 46, 50, 52, 58, 61, 24, 38, 16, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 35, 36, 12]
 solution : [0, 8, 1, 11]


Solution : [0, 8, 1, 11] has cost 16.


Decide in level 7 among pending : [22, 33, 46, 50, 52, 58, 61, 24, 38, 16, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 35, 36, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 8), (22, 128), (23, 32), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 8), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, 256), (39, 128), (40, 32), (41, 16), (42, 32), (43, 16), (44, 32), (45, 64), (46, 64), (47, 2), (48, 32), (49, 16), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Decide 38 with phase True at level 7

After decision at level 7
 pending : [22, 33, 46, 50, 52, 58, 61, 24, 16, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 35, 36, 12]
 solution : [0, 8, 1, 11, 38]


New level: 8
 pending : [22, 33, 46, 50, 52, 58, 61, 24, 16, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 35, 36, 12]
 solution : [0, 8, 1, 11, 38]


Before reduction : 
 pending  : [22, 33, 46, 50, 52, 58, 61, 24, 16, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 35, 36, 12]
 solution : [0, 8, 1, 11, 38]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 8), (22, 128), (23, 32), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 8), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, 256), (39, 128), (40, 32), (41, 16), (42, 32), (43, 16), (44, 32), (45, 64), (46, 64), (47, 2), (48, 32), (49, 16), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 32), (21, 4), (22, 64), (23, 16), (24, 64), (25, 16), (26, 32), (27, 64), (28, 128), (29, 32), (30, 4), (31, 16), (32, 8), (33, 8), (34, 4), (35, 0), (36, 1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 4), (42, 8), (43, 0), (44, 8), (45, 16), (46, 32), (47, 1), (48, 16), (49, 8), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 8 : {35, 37, 39, 40, 43}

After reduction : 
 pending  : [22, 33, 46, 50, 52, 58, 61, 24, 16, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 41, 42, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 36, 12]
 solution : [0, 8, 1, 11, 38]


Before reduction : 
 pending  : [22, 33, 46, 50, 52, 58, 61, 24, 16, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 41, 42, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 36, 12]
 solution : [0, 8, 1, 11, 38]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 32), (21, 4), (22, 64), (23, 16), (24, 64), (25, 16), (26, 32), (27, 64), (28, 128), (29, 32), (30, 4), (31, 16), (32, 8), (33, 8), (34, 4), (35, 0), (36, 1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 4), (42, 8), (43, 0), (44, 8), (45, 16), (46, 32), (47, 1), (48, 16), (49, 8), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 32), (21, 4), (22, 64), (23, 16), (24, 64), (25, 16), (26, 32), (27, 64), (28, 128), (29, 32), (30, 4), (31, 16), (32, 8), (33, 8), (34, 4), (35, -1), (36, 1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 4), (42, 8), (43, -1), (44, 8), (45, 16), (46, 32), (47, 1), (48, 16), (49, 8), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [22, 33, 46, 50, 52, 58, 61, 24, 16, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 41, 42, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 36, 12]
 solution : [0, 8, 1, 11, 38]


Solution : [0, 8, 1, 11, 38] has cost 26.


Before backtrack at level 8
 pending : [22, 33, 46, 50, 52, 58, 61, 24, 16, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 41, 42, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 36, 12]
 solution : [0, 8, 1, 11, 38]

After backtrack at level 8
 pending : [22, 33, 46, 50, 52, 58, 61, 24, 16, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 41, 42, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 36, 12, 37, 39, 40, 43, 35]
 solution : [0, 8, 1, 11, 38]


Invert decision for 38 at level 7


New level: 8
 pending : [22, 33, 46, 50, 52, 58, 61, 24, 16, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 41, 42, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 36, 12, 37, 39, 40, 43, 35]
 solution : [0, 8, 1, 11]


Before reduction : 
 pending  : [22, 33, 46, 50, 52, 58, 61, 24, 16, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 41, 42, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 36, 12, 37, 39, 40, 43, 35]
 solution : [0, 8, 1, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 32), (21, 4), (22, 64), (23, 16), (24, 64), (25, 16), (26, 32), (27, 64), (28, 128), (29, 32), (30, 4), (31, 16), (32, 8), (33, 8), (34, 4), (35, -1), (36, 1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 4), (42, 8), (43, -1), (44, 8), (45, 16), (46, 32), (47, 1), (48, 16), (49, 8), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 8), (22, 128), (23, 32), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 8), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, -1), (39, 128), (40, 32), (41, 16), (42, 32), (43, 16), (44, 32), (45, 64), (46, 64), (47, 2), (48, 32), (49, 16), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [22, 33, 46, 50, 52, 58, 61, 24, 16, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 41, 42, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 36, 12, 37, 39, 40, 43, 35]
 solution : [0, 8, 1, 11]


Solution : [0, 8, 1, 11] has cost 16.


Decide in level 8 among pending : [22, 33, 46, 50, 52, 58, 61, 24, 16, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 41, 42, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 36, 12, 37, 39, 40, 43, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 8), (22, 128), (23, 32), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 8), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, -1), (39, 128), (40, 32), (41, 16), (42, 32), (43, 16), (44, 32), (45, 64), (46, 64), (47, 2), (48, 32), (49, 16), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Decide 16 with phase True at level 8

After decision at level 8
 pending : [22, 33, 46, 50, 52, 58, 61, 24, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 41, 42, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 36, 12, 37, 39, 40, 43, 35]
 solution : [0, 8, 1, 11, 16]


New level: 9
 pending : [22, 33, 46, 50, 52, 58, 61, 24, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 41, 42, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 36, 12, 37, 39, 40, 43, 35]
 solution : [0, 8, 1, 11, 16]


Before reduction : 
 pending  : [22, 33, 46, 50, 52, 58, 61, 24, 13, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 41, 42, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 36, 12, 37, 39, 40, 43, 35]
 solution : [0, 8, 1, 11, 16]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 8), (22, 128), (23, 32), (24, 128), (25, 32), (26, 64), (27, 128), (28, 256), (29, 64), (30, 8), (31, 16), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 64), (38, -1), (39, 128), (40, 32), (41, 16), (42, 32), (43, 16), (44, 32), (45, 64), (46, 64), (47, 2), (48, 32), (49, 16), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 32), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 4), (38, -1), (39, 4), (40, 4), (41, 0), (42, 1), (43, 1), (44, 0), (45, 4), (46, 2), (47, 2), (48, 2), (49, 2), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 2), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 9 : {12, 17, 32, 33, 34, 35, 36, 41, 44, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61}

After reduction : 
 pending  : [22, 46, 24, 13, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16]


Before reduction : 
 pending  : [22, 46, 24, 13, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 32), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 4), (38, -1), (39, 4), (40, 4), (41, 0), (42, 1), (43, 1), (44, 0), (45, 4), (46, 2), (47, 2), (48, 2), (49, 2), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 2), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 1), (43, 1), (44, -1), (45, 4), (46, 2), (47, 2), (48, 2), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [22, 46, 24, 13, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16]


Solution : [0, 8, 1, 11, 16] has cost 22.


Decide in level 9 among pending : [22, 46, 24, 13, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 1), (43, 1), (44, -1), (45, 4), (46, 2), (47, 2), (48, 2), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, -1), (59, -1), (60, -1), (61, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [22, 46, 13, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16, 24]


New level: 10
 pending : [22, 46, 13, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16, 24]


Before reduction : 
 pending  : [22, 46, 13, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 1), (43, 1), (44, -1), (45, 4), (46, 2), (47, 2), (48, 2), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 0), (57, 0), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 10 : {13, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 37, 39, 40, 42, 43, 45, 46, 47, 48, 49, 56, 57}

After reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 16, 24]


Before reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 16, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 0), (57, 0), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 16, 24]


Solution : [0, 8, 1, 11, 16, 24] has cost 32.


Before backtrack at level 10
 pending : []
 solution : [0, 8, 1, 11, 16, 24]

After backtrack at level 10
 pending : [22, 46, 13, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [22, 46, 13, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16]


Before reduction : 
 pending  : [22, 46, 13, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, 2), (24, -1), (25, 32), (26, 32), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 1), (43, 1), (44, -1), (45, 4), (46, 2), (47, 2), (48, 2), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [22, 46, 13, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16]


Solution : [0, 8, 1, 11, 16] has cost 22.


Decide in level 10 among pending : [22, 46, 13, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, 2), (24, -1), (25, 32), (26, 32), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 1), (43, 1), (44, -1), (45, 4), (46, 2), (47, 2), (48, 2), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, -1), (59, -1), (60, -1), (61, -1)]

Decide 13 with phase True at level 10

After decision at level 10
 pending : [22, 46, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16, 13]


New level: 11
 pending : [22, 46, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16, 13]


Before reduction : 
 pending  : [22, 46, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, 2), (24, -1), (25, 32), (26, 32), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 1), (43, 1), (44, -1), (45, 4), (46, 2), (47, 2), (48, 2), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 0), (57, 0), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 11 : {20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 37, 39, 40, 42, 43, 45, 46, 47, 48, 49, 56, 57}

After reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 16, 13]


Before reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 16, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 0), (57, 0), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 16, 13]


Solution : [0, 8, 1, 11, 16, 13] has cost 28.


Before backtrack at level 11
 pending : []
 solution : [0, 8, 1, 11, 16, 13]

After backtrack at level 11
 pending : [22, 46, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16, 13]


Invert decision for 13 at level 10


New level: 11
 pending : [22, 46, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16]


Before reduction : 
 pending  : [22, 46, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, 2), (24, -1), (25, 32), (26, 32), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 1), (43, 1), (44, -1), (45, 4), (46, 2), (47, 2), (48, 2), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [22, 46, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16]


Solution : [0, 8, 1, 11, 16] has cost 22.


Decide in level 11 among pending : [22, 46, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, 2), (24, -1), (25, 32), (26, 32), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 1), (43, 1), (44, -1), (45, 4), (46, 2), (47, 2), (48, 2), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, -1), (59, -1), (60, -1), (61, -1)]

Decide 25 with phase True at level 11

After decision at level 11
 pending : [22, 46, 20, 21, 23, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16, 25]


New level: 12
 pending : [22, 46, 20, 21, 23, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16, 25]


Before reduction : 
 pending  : [22, 46, 20, 21, 23, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16, 25]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, 2), (24, -1), (25, 32), (26, 32), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 1), (43, 1), (44, -1), (45, 4), (46, 2), (47, 2), (48, 2), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 0), (57, 0), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 12 : {20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 37, 39, 40, 42, 43, 45, 46, 47, 48, 49, 56, 57}

After reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 16, 25]


Before reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 16, 25]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 0), (57, 0), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 16, 25]


Solution : [0, 8, 1, 11, 16, 25] has cost 32.


Before backtrack at level 12
 pending : []
 solution : [0, 8, 1, 11, 16, 25]

After backtrack at level 12
 pending : [22, 46, 20, 21, 23, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16, 25]


Invert decision for 25 at level 11


New level: 12
 pending : [22, 46, 20, 21, 23, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16]


Before reduction : 
 pending  : [22, 46, 20, 21, 23, 26, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16]

Essensial at level 12 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 0), (57, 0), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 12 : {20, 21, 22, 23, 27, 28, 29, 30, 31, 37, 39, 40, 42, 43, 45, 46, 47, 48, 49, 56, 57}

After reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 16, 26]


Before reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 16, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 0), (57, 0), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 8, 1, 11, 16, 26]


Solution : [0, 8, 1, 11, 16, 26] has cost 32.


Before backtrack at level 12
 pending : []
 solution : [0, 8, 1, 11, 16, 26]

After backtrack at level 12
 pending : [26, 22, 46, 20, 21, 23, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16]


Before backtrack at level 11
 pending : [26, 22, 46, 20, 21, 23, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43]
 solution : [0, 8, 1, 11, 16]

After backtrack at level 11
 pending : [26, 22, 46, 20, 21, 23, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43, 25]
 solution : [0, 8, 1, 11, 16]


Before backtrack at level 10
 pending : [26, 22, 46, 20, 21, 23, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43, 25]
 solution : [0, 8, 1, 11, 16]

After backtrack at level 10
 pending : [26, 22, 46, 20, 21, 23, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43, 25, 13]
 solution : [0, 8, 1, 11, 16]


Before backtrack at level 9
 pending : [26, 22, 46, 20, 21, 23, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43, 25, 13]
 solution : [0, 8, 1, 11, 16]

After backtrack at level 9
 pending : [26, 22, 46, 20, 21, 23, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43, 25, 13, 33, 50, 52, 58, 61, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 12, 35, 24]
 solution : [0, 8, 1, 11, 16]


Invert decision for 16 at level 8


New level: 9
 pending : [26, 22, 46, 20, 21, 23, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43, 25, 13, 33, 50, 52, 58, 61, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 12, 35, 24]
 solution : [0, 8, 1, 11]


Before reduction : 
 pending  : [26, 22, 46, 20, 21, 23, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43, 25, 13, 33, 50, 52, 58, 61, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 12, 35, 24]
 solution : [0, 8, 1, 11]

Essensial at level 9 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 128), (23, 4), (24, 128), (25, 32), (26, 32), (27, 4), (28, 256), (29, 4), (30, 2), (31, 4), (32, 0), (33, 4), (34, 0), (35, 0), (36, 0), (37, 4), (38, -1), (39, 4), (40, 4), (41, 0), (42, 2), (43, 1), (44, 0), (45, 8), (46, 64), (47, 2), (48, 2), (49, 2), (50, 2), (51, 0), (52, 8), (53, 0), (54, 0), (55, 0), (56, 8), (57, 4), (58, 8), (59, 0), (60, 0), (61, 4)]

Covered at level 9 : {32, 34, 35, 36, 41, 44, 51, 53, 54, 55, 59, 60}

After reduction : 
 pending  : [26, 22, 46, 20, 21, 23, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43, 25, 13, 33, 50, 52, 58, 61, 12, 24]
 solution : [0, 8, 1, 11, 17]


Before reduction : 
 pending  : [26, 22, 46, 20, 21, 23, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43, 25, 13, 33, 50, 52, 58, 61, 12, 24]
 solution : [0, 8, 1, 11, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 128), (23, 4), (24, 128), (25, 32), (26, 32), (27, 4), (28, 256), (29, 4), (30, 2), (31, 4), (32, 0), (33, 4), (34, 0), (35, 0), (36, 0), (37, 4), (38, -1), (39, 4), (40, 4), (41, 0), (42, 2), (43, 1), (44, 0), (45, 8), (46, 64), (47, 2), (48, 2), (49, 2), (50, 2), (51, 0), (52, 8), (53, 0), (54, 0), (55, 0), (56, 8), (57, 4), (58, 8), (59, 0), (60, 0), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 128), (23, 4), (24, 128), (25, 32), (26, 32), (27, 4), (28, 256), (29, 4), (30, 2), (31, 4), (32, -1), (33, 4), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 2), (43, 1), (44, -1), (45, 8), (46, 64), (47, 2), (48, 2), (49, 2), (50, 2), (51, -1), (52, 8), (53, -1), (54, -1), (55, -1), (56, 8), (57, 4), (58, 8), (59, -1), (60, -1), (61, 4)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 22, 46, 20, 21, 23, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43, 25, 13, 33, 50, 52, 58, 61, 12, 24]
 solution : [0, 8, 1, 11, 17]


Solution : [0, 8, 1, 11, 17] has cost 22.


Decide in level 9 among pending : [26, 22, 46, 20, 21, 23, 27, 28, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43, 25, 13, 33, 50, 52, 58, 61, 12, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 128), (23, 4), (24, 128), (25, 32), (26, 32), (27, 4), (28, 256), (29, 4), (30, 2), (31, 4), (32, -1), (33, 4), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 2), (43, 1), (44, -1), (45, 8), (46, 64), (47, 2), (48, 2), (49, 2), (50, 2), (51, -1), (52, 8), (53, -1), (54, -1), (55, -1), (56, 8), (57, 4), (58, 8), (59, -1), (60, -1), (61, 4)]

Decide 28 with phase True at level 9

After decision at level 9
 pending : [26, 22, 46, 20, 21, 23, 27, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43, 25, 13, 33, 50, 52, 58, 61, 12, 24]
 solution : [0, 8, 1, 11, 17, 28]


New level: 10
 pending : [26, 22, 46, 20, 21, 23, 27, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43, 25, 13, 33, 50, 52, 58, 61, 12, 24]
 solution : [0, 8, 1, 11, 17, 28]


Before reduction : 
 pending  : [26, 22, 46, 20, 21, 23, 27, 29, 30, 31, 42, 45, 47, 48, 49, 56, 57, 37, 39, 40, 43, 25, 13, 33, 50, 52, 58, 61, 12, 24]
 solution : [0, 8, 1, 11, 17, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 128), (23, 4), (24, 128), (25, 32), (26, 32), (27, 4), (28, 256), (29, 4), (30, 2), (31, 4), (32, -1), (33, 4), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 2), (43, 1), (44, -1), (45, 8), (46, 64), (47, 2), (48, 2), (49, 2), (50, 2), (51, -1), (52, 8), (53, -1), (54, -1), (55, -1), (56, 8), (57, 4), (58, 8), (59, -1), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, 2), (22, 64), (23, 0), (24, 64), (25, 16), (26, 16), (27, 0), (28, -1), (29, 0), (30, 0), (31, 2), (32, -1), (33, 4), (34, -1), (35, -1), (36, -1), (37, 1), (38, -1), (39, 1), (40, 1), (41, -1), (42, 1), (43, 0), (44, -1), (45, 8), (46, 2), (47, 0), (48, 0), (49, 0), (50, 2), (51, -1), (52, 4), (53, -1), (54, -1), (55, -1), (56, 4), (57, 2), (58, 8), (59, -1), (60, -1), (61, 4)]

Covered at level 10 : {43, 47, 48, 49, 23, 27, 29, 30}

After reduction : 
 pending  : [26, 22, 46, 20, 21, 31, 42, 45, 56, 57, 37, 39, 40, 25, 13, 33, 50, 52, 58, 61, 12, 24]
 solution : [0, 8, 1, 11, 17, 28]


Before reduction : 
 pending  : [26, 22, 46, 20, 21, 31, 42, 45, 56, 57, 37, 39, 40, 25, 13, 33, 50, 52, 58, 61, 12, 24]
 solution : [0, 8, 1, 11, 17, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, 2), (22, 64), (23, 0), (24, 64), (25, 16), (26, 16), (27, 0), (28, -1), (29, 0), (30, 0), (31, 2), (32, -1), (33, 4), (34, -1), (35, -1), (36, -1), (37, 1), (38, -1), (39, 1), (40, 1), (41, -1), (42, 1), (43, 0), (44, -1), (45, 8), (46, 2), (47, 0), (48, 0), (49, 0), (50, 2), (51, -1), (52, 4), (53, -1), (54, -1), (55, -1), (56, 4), (57, 2), (58, 8), (59, -1), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, 2), (22, 64), (23, -1), (24, 64), (25, 16), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 2), (32, -1), (33, 4), (34, -1), (35, -1), (36, -1), (37, 1), (38, -1), (39, 1), (40, 1), (41, -1), (42, 1), (43, -1), (44, -1), (45, 8), (46, 2), (47, -1), (48, -1), (49, -1), (50, 2), (51, -1), (52, 4), (53, -1), (54, -1), (55, -1), (56, 4), (57, 2), (58, 8), (59, -1), (60, -1), (61, 4)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 22, 46, 20, 21, 31, 42, 45, 56, 57, 37, 39, 40, 25, 13, 33, 50, 52, 58, 61, 12, 24]
 solution : [0, 8, 1, 11, 17, 28]


Solution : [0, 8, 1, 11, 17, 28] has cost 32.


Before backtrack at level 10
 pending : [26, 22, 46, 20, 21, 31, 42, 45, 56, 57, 37, 39, 40, 25, 13, 33, 50, 52, 58, 61, 12, 24]
 solution : [0, 8, 1, 11, 17, 28]

After backtrack at level 10
 pending : [26, 22, 46, 20, 21, 31, 42, 45, 56, 57, 37, 39, 40, 25, 13, 33, 50, 52, 58, 61, 12, 24, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17, 28]


Invert decision for 28 at level 9


New level: 10
 pending : [26, 22, 46, 20, 21, 31, 42, 45, 56, 57, 37, 39, 40, 25, 13, 33, 50, 52, 58, 61, 12, 24, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17]


Before reduction : 
 pending  : [26, 22, 46, 20, 21, 31, 42, 45, 56, 57, 37, 39, 40, 25, 13, 33, 50, 52, 58, 61, 12, 24, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, 2), (22, 64), (23, -1), (24, 64), (25, 16), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 2), (32, -1), (33, 4), (34, -1), (35, -1), (36, -1), (37, 1), (38, -1), (39, 1), (40, 1), (41, -1), (42, 1), (43, -1), (44, -1), (45, 8), (46, 2), (47, -1), (48, -1), (49, -1), (50, 2), (51, -1), (52, 4), (53, -1), (54, -1), (55, -1), (56, 4), (57, 2), (58, 8), (59, -1), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 128), (23, 4), (24, 128), (25, 32), (26, 32), (27, 4), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, 4), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 2), (43, 1), (44, -1), (45, 8), (46, 64), (47, 2), (48, 2), (49, 2), (50, 2), (51, -1), (52, 8), (53, -1), (54, -1), (55, -1), (56, 8), (57, 4), (58, 8), (59, -1), (60, -1), (61, 4)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 22, 46, 20, 21, 31, 42, 45, 56, 57, 37, 39, 40, 25, 13, 33, 50, 52, 58, 61, 12, 24, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17]


Solution : [0, 8, 1, 11, 17] has cost 22.


Decide in level 10 among pending : [26, 22, 46, 20, 21, 31, 42, 45, 56, 57, 37, 39, 40, 25, 13, 33, 50, 52, 58, 61, 12, 24, 23, 27, 29, 30, 47, 48, 49, 43]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 128), (23, 4), (24, 128), (25, 32), (26, 32), (27, 4), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, 4), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 2), (43, 1), (44, -1), (45, 8), (46, 64), (47, 2), (48, 2), (49, 2), (50, 2), (51, -1), (52, 8), (53, -1), (54, -1), (55, -1), (56, 8), (57, 4), (58, 8), (59, -1), (60, -1), (61, 4)]

Decide 22 with phase True at level 10

After decision at level 10
 pending : [26, 46, 20, 21, 31, 42, 45, 56, 57, 37, 39, 40, 25, 13, 33, 50, 52, 58, 61, 12, 24, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17, 22]


New level: 11
 pending : [26, 46, 20, 21, 31, 42, 45, 56, 57, 37, 39, 40, 25, 13, 33, 50, 52, 58, 61, 12, 24, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17, 22]


Before reduction : 
 pending  : [26, 46, 20, 21, 31, 42, 45, 56, 57, 37, 39, 40, 25, 13, 33, 50, 52, 58, 61, 12, 24, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17, 22]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 128), (23, 4), (24, 128), (25, 32), (26, 32), (27, 4), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, 4), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 2), (43, 1), (44, -1), (45, 8), (46, 64), (47, 2), (48, 2), (49, 2), (50, 2), (51, -1), (52, 8), (53, -1), (54, -1), (55, -1), (56, 8), (57, 4), (58, 8), (59, -1), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, 0), (24, 32), (25, 2), (26, 2), (27, 0), (28, -1), (29, 0), (30, 0), (31, 2), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 1), (43, 0), (44, -1), (45, 2), (46, 0), (47, 0), (48, 0), (49, 0), (50, 1), (51, -1), (52, 2), (53, -1), (54, -1), (55, -1), (56, 4), (57, 2), (58, 4), (59, -1), (60, -1), (61, 2)]

Covered at level 11 : {37, 39, 40, 43, 46, 47, 48, 49, 20, 21, 23, 27, 29, 30}

After reduction : 
 pending  : [26, 31, 42, 45, 56, 57, 25, 13, 33, 50, 52, 58, 61, 12, 24]
 solution : [0, 8, 1, 11, 17, 22]


Before reduction : 
 pending  : [26, 31, 42, 45, 56, 57, 25, 13, 33, 50, 52, 58, 61, 12, 24]
 solution : [0, 8, 1, 11, 17, 22]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, 0), (24, 32), (25, 2), (26, 2), (27, 0), (28, -1), (29, 0), (30, 0), (31, 2), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 1), (43, 0), (44, -1), (45, 2), (46, 0), (47, 0), (48, 0), (49, 0), (50, 1), (51, -1), (52, 2), (53, -1), (54, -1), (55, -1), (56, 4), (57, 2), (58, 4), (59, -1), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 2), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 2), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 1), (43, -1), (44, -1), (45, 2), (46, -1), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 2), (53, -1), (54, -1), (55, -1), (56, 4), (57, 2), (58, 4), (59, -1), (60, -1), (61, 2)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 31, 42, 45, 56, 57, 25, 13, 33, 50, 52, 58, 61, 12, 24]
 solution : [0, 8, 1, 11, 17, 22]


Solution : [0, 8, 1, 11, 17, 22] has cost 32.


Before backtrack at level 11
 pending : [26, 31, 42, 45, 56, 57, 25, 13, 33, 50, 52, 58, 61, 12, 24]
 solution : [0, 8, 1, 11, 17, 22]

After backtrack at level 11
 pending : [26, 31, 42, 45, 56, 57, 25, 13, 33, 50, 52, 58, 61, 12, 24, 46, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17, 22]


Invert decision for 22 at level 10


New level: 11
 pending : [26, 31, 42, 45, 56, 57, 25, 13, 33, 50, 52, 58, 61, 12, 24, 46, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17]


Before reduction : 
 pending  : [26, 31, 42, 45, 56, 57, 25, 13, 33, 50, 52, 58, 61, 12, 24, 46, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 2), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 2), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 1), (43, -1), (44, -1), (45, 2), (46, -1), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 2), (53, -1), (54, -1), (55, -1), (56, 4), (57, 2), (58, 4), (59, -1), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, 4), (24, 128), (25, 32), (26, 32), (27, 4), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, 4), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 2), (43, 1), (44, -1), (45, 8), (46, 64), (47, 2), (48, 2), (49, 2), (50, 2), (51, -1), (52, 8), (53, -1), (54, -1), (55, -1), (56, 8), (57, 4), (58, 8), (59, -1), (60, -1), (61, 4)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 31, 42, 45, 56, 57, 25, 13, 33, 50, 52, 58, 61, 12, 24, 46, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17]


Solution : [0, 8, 1, 11, 17] has cost 22.


Decide in level 11 among pending : [26, 31, 42, 45, 56, 57, 25, 13, 33, 50, 52, 58, 61, 12, 24, 46, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, 4), (24, 128), (25, 32), (26, 32), (27, 4), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, 4), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 2), (43, 1), (44, -1), (45, 8), (46, 64), (47, 2), (48, 2), (49, 2), (50, 2), (51, -1), (52, 8), (53, -1), (54, -1), (55, -1), (56, 8), (57, 4), (58, 8), (59, -1), (60, -1), (61, 4)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [26, 31, 42, 45, 56, 57, 25, 33, 50, 52, 58, 61, 12, 24, 46, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17, 13]


New level: 12
 pending : [26, 31, 42, 45, 56, 57, 25, 33, 50, 52, 58, 61, 12, 24, 46, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17, 13]


Before reduction : 
 pending  : [26, 31, 42, 45, 56, 57, 25, 33, 50, 52, 58, 61, 12, 24, 46, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, 4), (24, 128), (25, 32), (26, 32), (27, 4), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, 4), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 2), (43, 1), (44, -1), (45, 8), (46, 64), (47, 2), (48, 2), (49, 2), (50, 2), (51, -1), (52, 8), (53, -1), (54, -1), (55, -1), (56, 8), (57, 4), (58, 8), (59, -1), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, 0), (24, 16), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 2), (47, 0), (48, 0), (49, 0), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, 0), (57, 0), (58, 4), (59, -1), (60, -1), (61, 2)]

Covered at level 12 : {20, 21, 23, 25, 26, 27, 29, 30, 31, 37, 39, 40, 42, 43, 45, 47, 48, 49, 56, 57}

After reduction : 
 pending  : [33, 50, 52, 58, 61, 12, 24, 46]
 solution : [0, 8, 1, 11, 17, 13]


Before reduction : 
 pending  : [33, 50, 52, 58, 61, 12, 24, 46]
 solution : [0, 8, 1, 11, 17, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, 0), (24, 16), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 2), (47, 0), (48, 0), (49, 0), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, 0), (57, 0), (58, 4), (59, -1), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 2), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 4), (59, -1), (60, -1), (61, 2)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 50, 52, 58, 61, 12, 24, 46]
 solution : [0, 8, 1, 11, 17, 13]


Solution : [0, 8, 1, 11, 17, 13] has cost 28.


Before backtrack at level 12
 pending : [33, 50, 52, 58, 61, 12, 24, 46]
 solution : [0, 8, 1, 11, 17, 13]

After backtrack at level 12
 pending : [33, 50, 52, 58, 61, 12, 24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [33, 50, 52, 58, 61, 12, 24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17]


Before reduction : 
 pending  : [33, 50, 52, 58, 61, 12, 24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17]

Essensial at level 12 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 2), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 4), (59, -1), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 1), (43, 1), (44, -1), (45, 4), (46, 2), (47, 2), (48, 2), (49, 2), (50, 0), (51, -1), (52, 0), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, 0), (59, -1), (60, -1), (61, 0)]

Covered at level 12 : {33, 50, 52, 58, 61}

After reduction : 
 pending  : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17, 12]


Before reduction : 
 pending  : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 1), (43, 1), (44, -1), (45, 4), (46, 2), (47, 2), (48, 2), (49, 2), (50, 0), (51, -1), (52, 0), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, 0), (59, -1), (60, -1), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 1), (43, 1), (44, -1), (45, 4), (46, 2), (47, 2), (48, 2), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17, 12]


Solution : [0, 8, 1, 11, 17, 12] has cost 28.


Before backtrack at level 12
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43]
 solution : [0, 8, 1, 11, 17, 12]

After backtrack at level 12
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 17]


Before backtrack at level 11
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61]
 solution : [0, 8, 1, 11, 17]

After backtrack at level 11
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13]
 solution : [0, 8, 1, 11, 17]


Before backtrack at level 10
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13]
 solution : [0, 8, 1, 11, 17]

After backtrack at level 10
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13, 22]
 solution : [0, 8, 1, 11, 17]


Before backtrack at level 9
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13, 22]
 solution : [0, 8, 1, 11, 17]

After backtrack at level 9
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28]
 solution : [0, 8, 1, 11]


Before backtrack at level 8
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28]
 solution : [0, 8, 1, 11]

After backtrack at level 8
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16]
 solution : [0, 8, 1, 11]


Before backtrack at level 7
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16]
 solution : [0, 8, 1, 11]

After backtrack at level 7
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38]
 solution : [0, 8, 1, 11]


Before backtrack at level 6
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38]
 solution : [0, 8, 1, 11]

After backtrack at level 6
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38, 15]
 solution : [0, 8, 1, 11]


Before backtrack at level 5
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38, 15]
 solution : [0, 8, 1, 11]

After backtrack at level 5
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38, 15, 19]
 solution : [0, 8, 1, 11]


Before backtrack at level 4
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38, 15, 19]
 solution : [0, 8, 1, 11]

After backtrack at level 4
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38, 15, 19, 18]
 solution : [0, 8, 1, 11]


Before backtrack at level 3
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38, 15, 19, 18]
 solution : [0, 8, 1, 11]

After backtrack at level 3
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38, 15, 19, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14]
 solution : [0, 8, 1, 11]


Invert decision for 11 at level 2


New level: 3
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38, 15, 19, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14]
 solution : [0, 8, 1]


Before reduction : 
 pending  : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38, 15, 19, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14]
 solution : [0, 8, 1]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, -1), (42, 1), (43, 1), (44, -1), (45, 4), (46, 2), (47, 2), (48, 2), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, 512), (13, 512), (14, 512), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 128), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 64), (27, 128), (28, 256), (29, 256), (30, 64), (31, 64), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 256), (38, 256), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 128), (47, 128), (48, 64), (49, 128), (50, 128), (51, 64), (52, 256), (53, 128), (54, 128), (55, 64), (56, 256), (57, 128), (58, 256), (59, 128), (60, 64), (61, 128)]

Covered at level 3 : set()

After reduction : 
 pending  : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38, 15, 19, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14]
 solution : [0, 8, 1]


Solution : [0, 8, 1] has cost 10.


Decide in level 3 among pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 12, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38, 15, 19, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, 512), (13, 512), (14, 512), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 128), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 64), (27, 128), (28, 256), (29, 256), (30, 64), (31, 64), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 256), (38, 256), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 128), (47, 128), (48, 64), (49, 128), (50, 128), (51, 64), (52, 256), (53, 128), (54, 128), (55, 64), (56, 256), (57, 128), (58, 256), (59, 128), (60, 64), (61, 128)]

Decide 12 with phase True at level 3

After decision at level 3
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38, 15, 19, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14]
 solution : [0, 8, 1, 12]


New level: 4
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38, 15, 19, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14]
 solution : [0, 8, 1, 12]


Before reduction : 
 pending  : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38, 15, 19, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14]
 solution : [0, 8, 1, 12]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, 512), (13, 512), (14, 512), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 128), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 64), (27, 128), (28, 256), (29, 256), (30, 64), (31, 64), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 256), (38, 256), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 128), (47, 128), (48, 64), (49, 128), (50, 128), (51, 64), (52, 256), (53, 128), (54, 128), (55, 64), (56, 256), (57, 128), (58, 256), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, 512), (19, 512), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, 256), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 4 : set()

After reduction : 
 pending  : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38, 15, 19, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14]
 solution : [0, 8, 1, 12]


Solution : [0, 8, 1, 12] has cost 16.


Decide in level 4 among pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38, 15, 19, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, 512), (19, 512), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, 256), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 19 with phase True at level 4

After decision at level 4
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38, 15, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14]
 solution : [0, 8, 1, 12, 19]


New level: 5
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38, 15, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14]
 solution : [0, 8, 1, 12, 19]


Before reduction : 
 pending  : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 36, 35, 28, 16, 38, 15, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14]
 solution : [0, 8, 1, 12, 19]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, 512), (19, 512), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, 256), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, 256), (19, -1), (20, 128), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 64), (27, 32), (28, 32), (29, 64), (30, 16), (31, 32), (32, 16), (33, 32), (34, 32), (35, 32), (36, 0), (37, 256), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 64), (47, 128), (48, 64), (49, 32), (50, 16), (51, 16), (52, 64), (53, 64), (54, 32), (55, 32), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 5 : {36}

After reduction : 
 pending  : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 35, 28, 16, 38, 15, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14]
 solution : [0, 8, 1, 12, 19]


Before reduction : 
 pending  : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 35, 28, 16, 38, 15, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14]
 solution : [0, 8, 1, 12, 19]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, 256), (19, -1), (20, 128), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 64), (27, 32), (28, 32), (29, 64), (30, 16), (31, 32), (32, 16), (33, 32), (34, 32), (35, 32), (36, 0), (37, 256), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 64), (47, 128), (48, 64), (49, 32), (50, 16), (51, 16), (52, 64), (53, 64), (54, 32), (55, 32), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, 256), (19, -1), (20, 128), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 64), (27, 32), (28, 32), (29, 64), (30, 16), (31, 32), (32, 16), (33, 32), (34, 32), (35, 32), (36, -1), (37, 256), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 64), (47, 128), (48, 64), (49, 32), (50, 16), (51, 16), (52, 64), (53, 64), (54, 32), (55, 32), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 5 : set()

After reduction : 
 pending  : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 35, 28, 16, 38, 15, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14]
 solution : [0, 8, 1, 12, 19]


Solution : [0, 8, 1, 12, 19] has cost 25.


Before backtrack at level 5
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 35, 28, 16, 38, 15, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14]
 solution : [0, 8, 1, 12, 19]

After backtrack at level 5
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 35, 28, 16, 38, 15, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36]
 solution : [0, 8, 1, 12, 19]


Invert decision for 19 at level 4


New level: 5
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 35, 28, 16, 38, 15, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36]
 solution : [0, 8, 1, 12]


Before reduction : 
 pending  : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 35, 28, 16, 38, 15, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36]
 solution : [0, 8, 1, 12]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, 256), (19, -1), (20, 128), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 64), (27, 32), (28, 32), (29, 64), (30, 16), (31, 32), (32, 16), (33, 32), (34, 32), (35, 32), (36, -1), (37, 256), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 64), (47, 128), (48, 64), (49, 32), (50, 16), (51, 16), (52, 64), (53, 64), (54, 32), (55, 32), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, 512), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, 256), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 5 : set()

After reduction : 
 pending  : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 35, 28, 16, 38, 15, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36]
 solution : [0, 8, 1, 12]


Solution : [0, 8, 1, 12] has cost 16.


Decide in level 5 among pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 35, 28, 16, 38, 15, 18, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, 512), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, 256), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 18 with phase True at level 5

After decision at level 5
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 35, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36]
 solution : [0, 8, 1, 12, 18]


New level: 6
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 35, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36]
 solution : [0, 8, 1, 12, 18]


Before reduction : 
 pending  : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 35, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36]
 solution : [0, 8, 1, 12, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, 512), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, 256), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 128), (30, 64), (31, 64), (32, 32), (33, 16), (34, 16), (35, 0), (36, 16), (37, 32), (38, 16), (39, 16), (40, 32), (41, 8), (42, 16), (43, 8), (44, 32), (45, 64), (46, 64), (47, 128), (48, 64), (49, 64), (50, 32), (51, 32), (52, 64), (53, 64), (54, 32), (55, 32), (56, 64), (57, 64), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 6 : {35}

After reduction : 
 pending  : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36]
 solution : [0, 8, 1, 12, 18]


Before reduction : 
 pending  : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36]
 solution : [0, 8, 1, 12, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 128), (30, 64), (31, 64), (32, 32), (33, 16), (34, 16), (35, 0), (36, 16), (37, 32), (38, 16), (39, 16), (40, 32), (41, 8), (42, 16), (43, 8), (44, 32), (45, 64), (46, 64), (47, 128), (48, 64), (49, 64), (50, 32), (51, 32), (52, 64), (53, 64), (54, 32), (55, 32), (56, 64), (57, 64), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 128), (30, 64), (31, 64), (32, 32), (33, 16), (34, 16), (35, -1), (36, 16), (37, 32), (38, 16), (39, 16), (40, 32), (41, 8), (42, 16), (43, 8), (44, 32), (45, 64), (46, 64), (47, 128), (48, 64), (49, 64), (50, 32), (51, 32), (52, 64), (53, 64), (54, 32), (55, 32), (56, 64), (57, 64), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36]
 solution : [0, 8, 1, 12, 18]


Solution : [0, 8, 1, 12, 18] has cost 25.


Before backtrack at level 6
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36]
 solution : [0, 8, 1, 12, 18]

After backtrack at level 6
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35]
 solution : [0, 8, 1, 12, 18]


Invert decision for 18 at level 5


New level: 6
 pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35]
 solution : [0, 8, 1, 12]


Before reduction : 
 pending  : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35]
 solution : [0, 8, 1, 12]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 128), (30, 64), (31, 64), (32, 32), (33, 16), (34, 16), (35, -1), (36, 16), (37, 32), (38, 16), (39, 16), (40, 32), (41, 8), (42, 16), (43, 8), (44, 32), (45, 64), (46, 64), (47, 128), (48, 64), (49, 64), (50, 32), (51, 32), (52, 64), (53, 64), (54, 32), (55, 32), (56, 64), (57, 64), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, 256), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35]
 solution : [0, 8, 1, 12]


Solution : [0, 8, 1, 12] has cost 16.


Decide in level 6 among pending : [24, 46, 26, 31, 42, 45, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, 256), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 45 with phase True at level 6

After decision at level 6
 pending : [24, 46, 26, 31, 42, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35]
 solution : [0, 8, 1, 12, 45]


New level: 7
 pending : [24, 46, 26, 31, 42, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35]
 solution : [0, 8, 1, 12, 45]


Before reduction : 
 pending  : [24, 46, 26, 31, 42, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 41, 44, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35]
 solution : [0, 8, 1, 12, 45]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, 256), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 32), (32, 16), (33, 32), (34, 32), (35, 16), (36, 64), (37, 16), (38, 128), (39, 128), (40, 16), (41, 0), (42, 0), (43, 16), (44, 0), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 32), (51, 32), (52, 64), (53, 64), (54, 32), (55, 32), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 7 : {41, 42, 44}

After reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35]
 solution : [0, 8, 1, 12, 45]


Before reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35]
 solution : [0, 8, 1, 12, 45]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 32), (32, 16), (33, 32), (34, 32), (35, 16), (36, 64), (37, 16), (38, 128), (39, 128), (40, 16), (41, 0), (42, 0), (43, 16), (44, 0), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 32), (51, 32), (52, 64), (53, 64), (54, 32), (55, 32), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 32), (32, 16), (33, 32), (34, 32), (35, 16), (36, 64), (37, 16), (38, 128), (39, 128), (40, 16), (41, -1), (42, -1), (43, 16), (44, -1), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 32), (51, 32), (52, 64), (53, 64), (54, 32), (55, 32), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 7 : set()

After reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35]
 solution : [0, 8, 1, 12, 45]


Solution : [0, 8, 1, 12, 45] has cost 26.


Before backtrack at level 7
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35]
 solution : [0, 8, 1, 12, 45]

After backtrack at level 7
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44]
 solution : [0, 8, 1, 12, 45]


Invert decision for 45 at level 6


New level: 7
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44]
 solution : [0, 8, 1, 12]


Before reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44]
 solution : [0, 8, 1, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 32), (32, 16), (33, 32), (34, 32), (35, 16), (36, 64), (37, 16), (38, 128), (39, 128), (40, 16), (41, -1), (42, -1), (43, 16), (44, -1), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 32), (51, 32), (52, 64), (53, 64), (54, 32), (55, 32), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, 256), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 7 : set()

After reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44]
 solution : [0, 8, 1, 12]


Solution : [0, 8, 1, 12] has cost 16.


Decide in level 7 among pending : [24, 46, 26, 31, 56, 57, 25, 20, 21, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, 256), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 21 with phase True at level 7

After decision at level 7
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44]
 solution : [0, 8, 1, 12, 21]


New level: 8
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44]
 solution : [0, 8, 1, 12, 21]


Before reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 37, 39, 40, 23, 27, 29, 30, 47, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44]
 solution : [0, 8, 1, 12, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, 256), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 32), (5, 128), (6, 64), (7, 64), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 32), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, -1), (22, 32), (23, 32), (24, 64), (25, 32), (26, 64), (27, 128), (28, 128), (29, 64), (30, 16), (31, 64), (32, 32), (33, 32), (34, 32), (35, 16), (36, 16), (37, 64), (38, 128), (39, 128), (40, 64), (41, 64), (42, 64), (43, 32), (44, 128), (45, -1), (46, 16), (47, 0), (48, 16), (49, 32), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 8 : {47}

After reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 37, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44]
 solution : [0, 8, 1, 12, 21]


Before reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 37, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44]
 solution : [0, 8, 1, 12, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 32), (5, 128), (6, 64), (7, 64), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 32), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, -1), (22, 32), (23, 32), (24, 64), (25, 32), (26, 64), (27, 128), (28, 128), (29, 64), (30, 16), (31, 64), (32, 32), (33, 32), (34, 32), (35, 16), (36, 16), (37, 64), (38, 128), (39, 128), (40, 64), (41, 64), (42, 64), (43, 32), (44, 128), (45, -1), (46, 16), (47, 0), (48, 16), (49, 32), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 32), (5, 128), (6, 64), (7, 64), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 32), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, -1), (22, 32), (23, 32), (24, 64), (25, 32), (26, 64), (27, 128), (28, 128), (29, 64), (30, 16), (31, 32), (32, 32), (33, 32), (34, 32), (35, 16), (36, 16), (37, 64), (38, 128), (39, 128), (40, 64), (41, 64), (42, 64), (43, 32), (44, 128), (45, -1), (46, 16), (47, -1), (48, 16), (49, 32), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 37, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44]
 solution : [0, 8, 1, 12, 21]


Solution : [0, 8, 1, 12, 21] has cost 26.


Before backtrack at level 8
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 37, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44]
 solution : [0, 8, 1, 12, 21]

After backtrack at level 8
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 37, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44, 47]
 solution : [0, 8, 1, 12, 21]


Invert decision for 21 at level 7


New level: 8
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 37, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44, 47]
 solution : [0, 8, 1, 12]


Before reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 37, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44, 47]
 solution : [0, 8, 1, 12]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 32), (5, 128), (6, 64), (7, 64), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 32), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, -1), (22, 32), (23, 32), (24, 64), (25, 32), (26, 64), (27, 128), (28, 128), (29, 64), (30, 16), (31, 32), (32, 32), (33, 32), (34, 32), (35, 16), (36, 16), (37, 64), (38, 128), (39, 128), (40, 64), (41, 64), (42, 64), (43, 32), (44, 128), (45, -1), (46, 16), (47, -1), (48, 16), (49, 32), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, 256), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 37, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44, 47]
 solution : [0, 8, 1, 12]


Solution : [0, 8, 1, 12] has cost 16.


Decide in level 8 among pending : [24, 46, 26, 31, 56, 57, 25, 20, 37, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44, 47]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, 256), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 37 with phase True at level 8

After decision at level 8
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44, 47]
 solution : [0, 8, 1, 12, 37]


New level: 9
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44, 47]
 solution : [0, 8, 1, 12, 37]


Before reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 35, 42, 41, 44, 47]
 solution : [0, 8, 1, 12, 37]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, 256), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 64), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 64), (26, 64), (27, 128), (28, 128), (29, 128), (30, 64), (31, 64), (32, 32), (33, 16), (34, 16), (35, 0), (36, 32), (37, -1), (38, 32), (39, 32), (40, 16), (41, 32), (42, 32), (43, 16), (44, 32), (45, -1), (46, 64), (47, 64), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 9 : {35}

After reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47]
 solution : [0, 8, 1, 12, 37]


Before reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47]
 solution : [0, 8, 1, 12, 37]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 64), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 64), (26, 64), (27, 128), (28, 128), (29, 128), (30, 64), (31, 64), (32, 32), (33, 16), (34, 16), (35, 0), (36, 32), (37, -1), (38, 32), (39, 32), (40, 16), (41, 32), (42, 32), (43, 16), (44, 32), (45, -1), (46, 64), (47, 64), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 64), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 64), (26, 64), (27, 128), (28, 128), (29, 128), (30, 64), (31, 64), (32, 32), (33, 16), (34, 16), (35, -1), (36, 32), (37, -1), (38, 32), (39, 32), (40, 16), (41, 32), (42, 32), (43, 16), (44, 32), (45, -1), (46, 64), (47, 64), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 9 : set()

After reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47]
 solution : [0, 8, 1, 12, 37]


Solution : [0, 8, 1, 12, 37] has cost 26.


Before backtrack at level 9
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47]
 solution : [0, 8, 1, 12, 37]

After backtrack at level 9
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35]
 solution : [0, 8, 1, 12, 37]


Invert decision for 37 at level 8


New level: 9
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35]
 solution : [0, 8, 1, 12]


Before reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35]
 solution : [0, 8, 1, 12]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 64), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 64), (26, 64), (27, 128), (28, 128), (29, 128), (30, 64), (31, 64), (32, 32), (33, 16), (34, 16), (35, -1), (36, 32), (37, -1), (38, 32), (39, 32), (40, 16), (41, 32), (42, 32), (43, 16), (44, 32), (45, -1), (46, 64), (47, 64), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 9 : set()

After reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35]
 solution : [0, 8, 1, 12]


Solution : [0, 8, 1, 12] has cost 16.


Decide in level 9 among pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 40, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 40 with phase True at level 9

After decision at level 9
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35]
 solution : [0, 8, 1, 12, 40]


New level: 10
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35]
 solution : [0, 8, 1, 12, 40]


Before reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 29, 30, 48, 49, 43, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35]
 solution : [0, 8, 1, 12, 40]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 32), (31, 64), (32, 32), (33, 32), (34, 32), (35, 8), (36, 64), (37, -1), (38, 32), (39, 32), (40, -1), (41, 32), (42, 32), (43, 0), (44, 64), (45, -1), (46, 32), (47, 64), (48, 32), (49, 64), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 10 : {43}

After reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 29, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35]
 solution : [0, 8, 1, 12, 40]


Before reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 29, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35]
 solution : [0, 8, 1, 12, 40]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 32), (31, 64), (32, 32), (33, 32), (34, 32), (35, 8), (36, 64), (37, -1), (38, 32), (39, 32), (40, -1), (41, 32), (42, 32), (43, 0), (44, 64), (45, -1), (46, 32), (47, 64), (48, 32), (49, 64), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 32), (31, 64), (32, 32), (33, 32), (34, 32), (35, 8), (36, 64), (37, -1), (38, 32), (39, 32), (40, -1), (41, 32), (42, 32), (43, -1), (44, 64), (45, -1), (46, 32), (47, 64), (48, 32), (49, 64), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 29, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35]
 solution : [0, 8, 1, 12, 40]


Solution : [0, 8, 1, 12, 40] has cost 26.


Before backtrack at level 10
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 29, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35]
 solution : [0, 8, 1, 12, 40]

After backtrack at level 10
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 29, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35, 43]
 solution : [0, 8, 1, 12, 40]


Invert decision for 40 at level 9


New level: 10
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 29, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35, 43]
 solution : [0, 8, 1, 12]


Before reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 29, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35, 43]
 solution : [0, 8, 1, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 32), (31, 64), (32, 32), (33, 32), (34, 32), (35, 8), (36, 64), (37, -1), (38, 32), (39, 32), (40, -1), (41, 32), (42, 32), (43, -1), (44, 64), (45, -1), (46, 32), (47, 64), (48, 32), (49, 64), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 29, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35, 43]
 solution : [0, 8, 1, 12]


Solution : [0, 8, 1, 12] has cost 16.


Decide in level 10 among pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 29, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35, 43]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 29 with phase True at level 10

After decision at level 10
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35, 43]
 solution : [0, 8, 1, 12, 29]


New level: 11
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35, 43]
 solution : [0, 8, 1, 12, 29]


Before reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 36, 42, 41, 44, 47, 35, 43]
 solution : [0, 8, 1, 12, 29]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, 256), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 64), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 32), (24, 64), (25, 64), (26, 64), (27, 32), (28, 32), (29, -1), (30, 8), (31, 32), (32, 16), (33, 32), (34, 32), (35, 32), (36, 0), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 128), (45, -1), (46, 64), (47, 32), (48, 64), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 11 : {36}

After reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 42, 41, 44, 47, 35, 43]
 solution : [0, 8, 1, 12, 29]


Before reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 42, 41, 44, 47, 35, 43]
 solution : [0, 8, 1, 12, 29]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 64), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 32), (24, 64), (25, 64), (26, 64), (27, 32), (28, 32), (29, -1), (30, 8), (31, 32), (32, 16), (33, 32), (34, 32), (35, 32), (36, 0), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 128), (45, -1), (46, 64), (47, 32), (48, 64), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 64), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 32), (24, 64), (25, 64), (26, 64), (27, 32), (28, 32), (29, -1), (30, 8), (31, 32), (32, 16), (33, 32), (34, 32), (35, 32), (36, -1), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 128), (45, -1), (46, 64), (47, 32), (48, 64), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 42, 41, 44, 47, 35, 43]
 solution : [0, 8, 1, 12, 29]


Solution : [0, 8, 1, 12, 29] has cost 26.


Before backtrack at level 11
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 42, 41, 44, 47, 35, 43]
 solution : [0, 8, 1, 12, 29]

After backtrack at level 11
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 29]


Invert decision for 29 at level 10


New level: 11
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12]


Before reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 64), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 32), (24, 64), (25, 64), (26, 64), (27, 32), (28, 32), (29, -1), (30, 8), (31, 32), (32, 16), (33, 32), (34, 32), (35, 32), (36, -1), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 128), (45, -1), (46, 64), (47, 32), (48, 64), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12]


Solution : [0, 8, 1, 12] has cost 16.


Decide in level 11 among pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 15, 2, 3, 4, 5, 6, 7, 9, 10, 14, 42, 41, 44, 47, 35, 43, 36]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 15 with phase True at level 11

After decision at level 11
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 2, 3, 4, 5, 6, 7, 9, 10, 14, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15]


New level: 12
 pending : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 2, 3, 4, 5, 6, 7, 9, 10, 14, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15]


Before reduction : 
 pending  : [24, 46, 26, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 17, 32, 34, 51, 53, 54, 55, 59, 60, 28, 16, 38, 2, 3, 4, 5, 6, 7, 9, 10, 14, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 32), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, 0), (25, 32), (26, 0), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 12 : {14, 16, 17, 24, 26}

After reduction : 
 pending  : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 5, 6, 7, 9, 10, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15]


Before reduction : 
 pending  : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 5, 6, 7, 9, 10, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 32), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, 0), (25, 32), (26, 0), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 12 : set()

After reduction : 
 pending  : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 5, 6, 7, 9, 10, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15]


Solution : [0, 8, 1, 12, 15] has cost 22.


Decide in level 12 among pending : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 5, 6, 7, 9, 10, 42, 41, 44, 47, 35, 43, 36]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Decide 9 with phase True at level 12

After decision at level 12
 pending : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 5, 6, 7, 10, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15, 9]


New level: 13
 pending : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 5, 6, 7, 10, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15, 9]


Before reduction : 
 pending  : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 5, 6, 7, 10, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, 0), (24, -1), (25, 0), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, -1), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 13 : {2, 3, 4, 5, 6, 7, 10, 13, 20, 22, 23, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : []
 solution : [0, 8, 1, 12, 15, 9]


Before reduction : 
 pending  : []
 solution : [0, 8, 1, 12, 15, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, 0), (24, -1), (25, 0), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, -1), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 8, 1, 12, 15, 9]


Solution : [0, 8, 1, 12, 15, 9] has cost 28.


Before backtrack at level 13
 pending : []
 solution : [0, 8, 1, 12, 15, 9]

After backtrack at level 13
 pending : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 5, 6, 7, 10, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15, 9]


Invert decision for 9 at level 12


New level: 13
 pending : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 5, 6, 7, 10, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15]


Before reduction : 
 pending  : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 5, 6, 7, 10, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, 256), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 13 : set()

After reduction : 
 pending  : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 5, 6, 7, 10, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15]


Solution : [0, 8, 1, 12, 15] has cost 22.


Decide in level 13 among pending : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 5, 6, 7, 10, 42, 41, 44, 47, 35, 43, 36]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, 256), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Decide 10 with phase True at level 13

After decision at level 13
 pending : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 5, 6, 7, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15, 10]


New level: 14
 pending : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 5, 6, 7, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15, 10]


Before reduction : 
 pending  : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 5, 6, 7, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, 256), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, 0), (6, 0), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 4), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 32), (45, -1), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 14 : {5, 6}

After reduction : 
 pending  : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15, 10]


Before reduction : 
 pending  : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, 0), (6, 0), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 4), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 32), (45, -1), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 4), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 32), (45, -1), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 14 : set()

After reduction : 
 pending  : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15, 10]


Solution : [0, 8, 1, 12, 15, 10] has cost 27.


Before backtrack at level 14
 pending : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36]
 solution : [0, 8, 1, 12, 15, 10]

After backtrack at level 14
 pending : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6]
 solution : [0, 8, 1, 12, 15, 10]


Invert decision for 10 at level 13


New level: 14
 pending : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6]
 solution : [0, 8, 1, 12, 15]


Before reduction : 
 pending  : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6]
 solution : [0, 8, 1, 12, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 4), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 32), (45, -1), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 14 : set()

After reduction : 
 pending  : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6]
 solution : [0, 8, 1, 12, 15]


Solution : [0, 8, 1, 12, 15] has cost 22.


Decide in level 14 among pending : [46, 31, 56, 57, 25, 20, 39, 23, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Decide 23 with phase True at level 14

After decision at level 14
 pending : [46, 31, 56, 57, 25, 20, 39, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6]
 solution : [0, 8, 1, 12, 15, 23]


New level: 15
 pending : [46, 31, 56, 57, 25, 20, 39, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6]
 solution : [0, 8, 1, 12, 15, 23]


Before reduction : 
 pending  : [46, 31, 56, 57, 25, 20, 39, 27, 30, 48, 49, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 28, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6]
 solution : [0, 8, 1, 12, 15, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 8), (23, -1), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 2), (32, 2), (33, 8), (34, 8), (35, 64), (36, 1), (37, -1), (38, 1), (39, 1), (40, -1), (41, 16), (42, 32), (43, 32), (44, 32), (45, -1), (46, 2), (47, 32), (48, 2), (49, 0), (50, 16), (51, 16), (52, 32), (53, 32), (54, 8), (55, 8), (56, 8), (57, 8), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 15 : {49, 27, 28, 30}

After reduction : 
 pending  : [46, 31, 56, 57, 25, 20, 39, 48, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6]
 solution : [0, 8, 1, 12, 15, 23]


Before reduction : 
 pending  : [46, 31, 56, 57, 25, 20, 39, 48, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6]
 solution : [0, 8, 1, 12, 15, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 8), (23, -1), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 2), (32, 2), (33, 8), (34, 8), (35, 64), (36, 1), (37, -1), (38, 1), (39, 1), (40, -1), (41, 16), (42, 32), (43, 32), (44, 32), (45, -1), (46, 2), (47, 32), (48, 2), (49, 0), (50, 16), (51, 16), (52, 32), (53, 32), (54, 8), (55, 8), (56, 8), (57, 8), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 8), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 2), (32, 2), (33, 8), (34, 8), (35, 64), (36, 1), (37, -1), (38, 1), (39, 1), (40, -1), (41, 16), (42, 32), (43, 32), (44, 32), (45, -1), (46, 2), (47, 32), (48, 2), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 8), (55, 8), (56, 8), (57, 8), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 15 : set()

After reduction : 
 pending  : [46, 31, 56, 57, 25, 20, 39, 48, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6]
 solution : [0, 8, 1, 12, 15, 23]


Solution : [0, 8, 1, 12, 15, 23] has cost 32.


Before backtrack at level 15
 pending : [46, 31, 56, 57, 25, 20, 39, 48, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6]
 solution : [0, 8, 1, 12, 15, 23]

After backtrack at level 15
 pending : [46, 31, 56, 57, 25, 20, 39, 48, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6, 27, 30, 49, 28]
 solution : [0, 8, 1, 12, 15, 23]


Invert decision for 23 at level 14


New level: 15
 pending : [46, 31, 56, 57, 25, 20, 39, 48, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6, 27, 30, 49, 28]
 solution : [0, 8, 1, 12, 15]


Before reduction : 
 pending  : [46, 31, 56, 57, 25, 20, 39, 48, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6, 27, 30, 49, 28]
 solution : [0, 8, 1, 12, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 8), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 2), (32, 2), (33, 8), (34, 8), (35, 64), (36, 1), (37, -1), (38, 1), (39, 1), (40, -1), (41, 16), (42, 32), (43, 32), (44, 32), (45, -1), (46, 2), (47, 32), (48, 2), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 8), (55, 8), (56, 8), (57, 8), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 15 : set()

After reduction : 
 pending  : [46, 31, 56, 57, 25, 20, 39, 48, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6, 27, 30, 49, 28]
 solution : [0, 8, 1, 12, 15]


Solution : [0, 8, 1, 12, 15] has cost 22.


Decide in level 15 among pending : [46, 31, 56, 57, 25, 20, 39, 48, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 38, 2, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6, 27, 30, 49, 28]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Decide 2 with phase True at level 15

After decision at level 15
 pending : [46, 31, 56, 57, 25, 20, 39, 48, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 38, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6, 27, 30, 49, 28]
 solution : [0, 8, 1, 12, 15, 2]


New level: 16
 pending : [46, 31, 56, 57, 25, 20, 39, 48, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 38, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6, 27, 30, 49, 28]
 solution : [0, 8, 1, 12, 15, 2]


Before reduction : 
 pending  : [46, 31, 56, 57, 25, 20, 39, 48, 33, 50, 52, 58, 61, 13, 22, 32, 34, 51, 53, 54, 55, 59, 60, 38, 3, 4, 7, 42, 41, 44, 47, 35, 43, 36, 5, 6, 27, 30, 49, 28]
 solution : [0, 8, 1, 12, 15, 2]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 1), (6, 0), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 2), (45, -1), (46, 0), (47, 1), (48, 0), (49, 0), (50, 0), (51, 0), (52, 2), (53, 2), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 16 : {3, 4, 6, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [25, 20, 52, 13, 22, 53, 7, 44, 47, 5]
 solution : [0, 8, 1, 12, 15, 2]


Before reduction : 
 pending  : [25, 20, 52, 13, 22, 53, 7, 44, 47, 5]
 solution : [0, 8, 1, 12, 15, 2]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 1), (6, 0), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 2), (45, -1), (46, 0), (47, 1), (48, 0), (49, 0), (50, 0), (51, 0), (52, 2), (53, 2), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, 2), (45, -1), (46, -1), (47, 1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 20, 52, 13, 22, 53, 7, 44, 47, 5]
 solution : [0, 8, 1, 12, 15, 2]


Solution : [0, 8, 1, 12, 15, 2] has cost 28.


Before backtrack at level 16
 pending : [25, 20, 52, 13, 22, 53, 7, 44, 47, 5]
 solution : [0, 8, 1, 12, 15, 2]

After backtrack at level 16
 pending : [25, 20, 52, 13, 22, 53, 7, 44, 47, 5, 46, 31, 56, 57, 39, 48, 33, 50, 58, 61, 32, 34, 51, 54, 55, 59, 60, 38, 3, 4, 42, 41, 35, 43, 36, 6, 27, 30, 49, 28]
 solution : [0, 8, 1, 12, 15, 2]


Invert decision for 2 at level 15


New level: 16
 pending : [25, 20, 52, 13, 22, 53, 7, 44, 47, 5, 46, 31, 56, 57, 39, 48, 33, 50, 58, 61, 32, 34, 51, 54, 55, 59, 60, 38, 3, 4, 42, 41, 35, 43, 36, 6, 27, 30, 49, 28]
 solution : [0, 8, 1, 12, 15]


Before reduction : 
 pending  : [25, 20, 52, 13, 22, 53, 7, 44, 47, 5, 46, 31, 56, 57, 39, 48, 33, 50, 58, 61, 32, 34, 51, 54, 55, 59, 60, 38, 3, 4, 42, 41, 35, 43, 36, 6, 27, 30, 49, 28]
 solution : [0, 8, 1, 12, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, 2), (45, -1), (46, -1), (47, 1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 20, 52, 13, 22, 53, 7, 44, 47, 5, 46, 31, 56, 57, 39, 48, 33, 50, 58, 61, 32, 34, 51, 54, 55, 59, 60, 38, 3, 4, 42, 41, 35, 43, 36, 6, 27, 30, 49, 28]
 solution : [0, 8, 1, 12, 15]


Solution : [0, 8, 1, 12, 15] has cost 22.


Decide in level 16 among pending : [25, 20, 52, 13, 22, 53, 7, 44, 47, 5, 46, 31, 56, 57, 39, 48, 33, 50, 58, 61, 32, 34, 51, 54, 55, 59, 60, 38, 3, 4, 42, 41, 35, 43, 36, 6, 27, 30, 49, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Decide 7 with phase True at level 16

After decision at level 16
 pending : [25, 20, 52, 13, 22, 53, 44, 47, 5, 46, 31, 56, 57, 39, 48, 33, 50, 58, 61, 32, 34, 51, 54, 55, 59, 60, 38, 3, 4, 42, 41, 35, 43, 36, 6, 27, 30, 49, 28]
 solution : [0, 8, 1, 12, 15, 7]


New level: 17
 pending : [25, 20, 52, 13, 22, 53, 44, 47, 5, 46, 31, 56, 57, 39, 48, 33, 50, 58, 61, 32, 34, 51, 54, 55, 59, 60, 38, 3, 4, 42, 41, 35, 43, 36, 6, 27, 30, 49, 28]
 solution : [0, 8, 1, 12, 15, 7]


Before reduction : 
 pending  : [25, 20, 52, 13, 22, 53, 44, 47, 5, 46, 31, 56, 57, 39, 48, 33, 50, 58, 61, 32, 34, 51, 54, 55, 59, 60, 38, 3, 4, 42, 41, 35, 43, 36, 6, 27, 30, 49, 28]
 solution : [0, 8, 1, 12, 15, 7]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 0), (5, 8), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 16), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 4), (36, 2), (37, -1), (38, 0), (39, 0), (40, -1), (41, 8), (42, 16), (43, 8), (44, 32), (45, -1), (46, 0), (47, 1), (48, 0), (49, 8), (50, 4), (51, 4), (52, 16), (53, 16), (54, 8), (55, 8), (56, 16), (57, 16), (58, 4), (59, 4), (60, 4), (61, 4)]

Covered at level 17 : {32, 33, 34, 4, 38, 39, 46, 48, 20, 22, 27, 28, 30, 31}

After reduction : 
 pending  : [25, 52, 13, 53, 44, 47, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49]
 solution : [0, 8, 1, 12, 15, 7]


Before reduction : 
 pending  : [25, 52, 13, 53, 44, 47, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49]
 solution : [0, 8, 1, 12, 15, 7]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 0), (5, 8), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 16), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 4), (36, 2), (37, -1), (38, 0), (39, 0), (40, -1), (41, 8), (42, 16), (43, 8), (44, 32), (45, -1), (46, 0), (47, 1), (48, 0), (49, 8), (50, 4), (51, 4), (52, 16), (53, 16), (54, 8), (55, 8), (56, 16), (57, 16), (58, 4), (59, 4), (60, 4), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, 8), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 16), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 4), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, 8), (42, 16), (43, 8), (44, 32), (45, -1), (46, -1), (47, 1), (48, -1), (49, 8), (50, 4), (51, 4), (52, 16), (53, 16), (54, 8), (55, 8), (56, 16), (57, 16), (58, 4), (59, 4), (60, 4), (61, 4)]

Covered at level 17 : set()

After reduction : 
 pending  : [25, 52, 13, 53, 44, 47, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49]
 solution : [0, 8, 1, 12, 15, 7]


Solution : [0, 8, 1, 12, 15, 7] has cost 31.


Before backtrack at level 17
 pending : [25, 52, 13, 53, 44, 47, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49]
 solution : [0, 8, 1, 12, 15, 7]

After backtrack at level 17
 pending : [25, 52, 13, 53, 44, 47, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 46, 31, 39, 48, 33, 32, 34, 38, 4, 27, 30, 28]
 solution : [0, 8, 1, 12, 15, 7]


Invert decision for 7 at level 16


New level: 17
 pending : [25, 52, 13, 53, 44, 47, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 46, 31, 39, 48, 33, 32, 34, 38, 4, 27, 30, 28]
 solution : [0, 8, 1, 12, 15]


Before reduction : 
 pending  : [25, 52, 13, 53, 44, 47, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 46, 31, 39, 48, 33, 32, 34, 38, 4, 27, 30, 28]
 solution : [0, 8, 1, 12, 15]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, 8), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 16), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 4), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, 8), (42, 16), (43, 8), (44, 32), (45, -1), (46, -1), (47, 1), (48, -1), (49, 8), (50, 4), (51, 4), (52, 16), (53, 16), (54, 8), (55, 8), (56, 16), (57, 16), (58, 4), (59, 4), (60, 4), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 17 : set()

After reduction : 
 pending  : [25, 52, 13, 53, 44, 47, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 46, 31, 39, 48, 33, 32, 34, 38, 4, 27, 30, 28]
 solution : [0, 8, 1, 12, 15]


Solution : [0, 8, 1, 12, 15] has cost 22.


Decide in level 17 among pending : [25, 52, 13, 53, 44, 47, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 46, 31, 39, 48, 33, 32, 34, 38, 4, 27, 30, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Decide 47 with phase True at level 17

After decision at level 17
 pending : [25, 52, 13, 53, 44, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 46, 31, 39, 48, 33, 32, 34, 38, 4, 27, 30, 28]
 solution : [0, 8, 1, 12, 15, 47]


New level: 18
 pending : [25, 52, 13, 53, 44, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 46, 31, 39, 48, 33, 32, 34, 38, 4, 27, 30, 28]
 solution : [0, 8, 1, 12, 15, 47]


Before reduction : 
 pending  : [25, 52, 13, 53, 44, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 46, 31, 39, 48, 33, 32, 34, 38, 4, 27, 30, 28]
 solution : [0, 8, 1, 12, 15, 47]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 128), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 8), (26, -1), (27, 0), (28, 0), (29, -1), (30, 2), (31, 8), (32, 4), (33, 2), (34, 2), (35, 4), (36, 2), (37, -1), (38, 0), (39, 0), (40, -1), (41, 16), (42, 32), (43, 8), (44, 32), (45, -1), (46, 0), (47, -1), (48, 0), (49, 8), (50, 8), (51, 8), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 8), (59, 8), (60, 8), (61, 8)]

Covered at level 18 : {38, 39, 46, 48, 27, 28}

After reduction : 
 pending  : [25, 52, 13, 53, 44, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 31, 33, 32, 34, 4, 30]
 solution : [0, 8, 1, 12, 15, 47]


Before reduction : 
 pending  : [25, 52, 13, 53, 44, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 31, 33, 32, 34, 4, 30]
 solution : [0, 8, 1, 12, 15, 47]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 128), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 8), (26, -1), (27, 0), (28, 0), (29, -1), (30, 2), (31, 8), (32, 4), (33, 2), (34, 2), (35, 4), (36, 2), (37, -1), (38, 0), (39, 0), (40, -1), (41, 16), (42, 32), (43, 8), (44, 32), (45, -1), (46, 0), (47, -1), (48, 0), (49, 8), (50, 8), (51, 8), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 8), (59, 8), (60, 8), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 128), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 8), (32, 4), (33, 2), (34, 2), (35, 4), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, 16), (42, 32), (43, 8), (44, 32), (45, -1), (46, -1), (47, -1), (48, -1), (49, 8), (50, 8), (51, 8), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 8), (59, 8), (60, 8), (61, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [25, 52, 13, 53, 44, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 31, 33, 32, 34, 4, 30]
 solution : [0, 8, 1, 12, 15, 47]


Solution : [0, 8, 1, 12, 15, 47] has cost 32.


Before backtrack at level 18
 pending : [25, 52, 13, 53, 44, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 31, 33, 32, 34, 4, 30]
 solution : [0, 8, 1, 12, 15, 47]

After backtrack at level 18
 pending : [25, 52, 13, 53, 44, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28]
 solution : [0, 8, 1, 12, 15, 47]


Invert decision for 47 at level 17


New level: 18
 pending : [25, 52, 13, 53, 44, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28]
 solution : [0, 8, 1, 12, 15]


Before reduction : 
 pending  : [25, 52, 13, 53, 44, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28]
 solution : [0, 8, 1, 12, 15]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 128), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 8), (32, 4), (33, 2), (34, 2), (35, 4), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, 16), (42, 32), (43, 8), (44, 32), (45, -1), (46, -1), (47, -1), (48, -1), (49, 8), (50, 8), (51, 8), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 8), (59, 8), (60, 8), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 18 : set()

After reduction : 
 pending  : [25, 52, 13, 53, 44, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28]
 solution : [0, 8, 1, 12, 15]


Solution : [0, 8, 1, 12, 15] has cost 22.


Decide in level 18 among pending : [25, 52, 13, 53, 44, 5, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Decide 5 with phase True at level 18

After decision at level 18
 pending : [25, 52, 13, 53, 44, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28]
 solution : [0, 8, 1, 12, 15, 5]


New level: 19
 pending : [25, 52, 13, 53, 44, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28]
 solution : [0, 8, 1, 12, 15, 5]


Before reduction : 
 pending  : [25, 52, 13, 53, 44, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 6, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28]
 solution : [0, 8, 1, 12, 15, 5]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 16), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 19 : {6}

After reduction : 
 pending  : [25, 52, 13, 53, 44, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28]
 solution : [0, 8, 1, 12, 15, 5]


Before reduction : 
 pending  : [25, 52, 13, 53, 44, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28]
 solution : [0, 8, 1, 12, 15, 5]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 16), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 16), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 19 : set()

After reduction : 
 pending  : [25, 52, 13, 53, 44, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28]
 solution : [0, 8, 1, 12, 15, 5]


Solution : [0, 8, 1, 12, 15, 5] has cost 27.


Before backtrack at level 19
 pending : [25, 52, 13, 53, 44, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28]
 solution : [0, 8, 1, 12, 15, 5]

After backtrack at level 19
 pending : [25, 52, 13, 53, 44, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28, 6]
 solution : [0, 8, 1, 12, 15, 5]


Invert decision for 5 at level 18


New level: 19
 pending : [25, 52, 13, 53, 44, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28, 6]
 solution : [0, 8, 1, 12, 15]


Before reduction : 
 pending  : [25, 52, 13, 53, 44, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28, 6]
 solution : [0, 8, 1, 12, 15]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 16), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 19 : set()

After reduction : 
 pending  : [25, 52, 13, 53, 44, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28, 6]
 solution : [0, 8, 1, 12, 15]


Solution : [0, 8, 1, 12, 15] has cost 22.


Decide in level 19 among pending : [25, 52, 13, 53, 44, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 3, 42, 41, 35, 43, 36, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Decide 3 with phase True at level 19

After decision at level 19
 pending : [25, 52, 13, 53, 44, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28, 6]
 solution : [0, 8, 1, 12, 15, 3]


New level: 20
 pending : [25, 52, 13, 53, 44, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28, 6]
 solution : [0, 8, 1, 12, 15, 3]


Before reduction : 
 pending  : [25, 52, 13, 53, 44, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 20, 22, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28, 6]
 solution : [0, 8, 1, 12, 15, 3]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 2), (45, -1), (46, 0), (47, -1), (48, 0), (49, 0), (50, 0), (51, 0), (52, 2), (53, 2), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 20 : {4, 6, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [25, 52, 13, 53, 44, 20, 22]
 solution : [0, 8, 1, 12, 15, 3]


Before reduction : 
 pending  : [25, 52, 13, 53, 44, 20, 22]
 solution : [0, 8, 1, 12, 15, 3]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 2), (45, -1), (46, 0), (47, -1), (48, 0), (49, 0), (50, 0), (51, 0), (52, 2), (53, 2), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, 2), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [25, 52, 13, 53, 44, 20, 22]
 solution : [0, 8, 1, 12, 15, 3]


Solution : [0, 8, 1, 12, 15, 3] has cost 28.


Before backtrack at level 20
 pending : [25, 52, 13, 53, 44, 20, 22]
 solution : [0, 8, 1, 12, 15, 3]

After backtrack at level 20
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28, 6]
 solution : [0, 8, 1, 12, 15, 3]


Invert decision for 3 at level 19


New level: 20
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28, 6]
 solution : [0, 8, 1, 12, 15]


Before reduction : 
 pending  : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 31, 33, 32, 34, 4, 30, 46, 39, 48, 38, 27, 28, 6]
 solution : [0, 8, 1, 12, 15]

Essensial at level 20 : {4, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, 2), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 8), (36, 2), (37, -1), (38, 0), (39, 0), (40, -1), (41, 8), (42, 16), (43, 8), (44, 32), (45, -1), (46, 0), (47, -1), (48, 0), (49, 8), (50, 4), (51, 4), (52, 32), (53, 32), (54, 8), (55, 8), (56, 16), (57, 16), (58, 4), (59, 4), (60, 4), (61, 4)]

Covered at level 20 : {32, 33, 34, 38, 39, 46, 48, 27, 28, 30, 31}

After reduction : 
 pending  : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49]
 solution : [0, 8, 1, 12, 15, 4, 6]


Before reduction : 
 pending  : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49]
 solution : [0, 8, 1, 12, 15, 4, 6]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 8), (36, 2), (37, -1), (38, 0), (39, 0), (40, -1), (41, 8), (42, 16), (43, 8), (44, 32), (45, -1), (46, 0), (47, -1), (48, 0), (49, 8), (50, 4), (51, 4), (52, 32), (53, 32), (54, 8), (55, 8), (56, 16), (57, 16), (58, 4), (59, 4), (60, 4), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 8), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, 8), (42, 16), (43, 8), (44, 32), (45, -1), (46, -1), (47, -1), (48, -1), (49, 8), (50, 4), (51, 4), (52, 32), (53, 32), (54, 8), (55, 8), (56, 16), (57, 16), (58, 4), (59, 4), (60, 4), (61, 4)]

Covered at level 20 : set()

After reduction : 
 pending  : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49]
 solution : [0, 8, 1, 12, 15, 4, 6]


Solution : [0, 8, 1, 12, 15, 4, 6] has cost 33.


Before backtrack at level 20
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49]
 solution : [0, 8, 1, 12, 15, 4, 6]

After backtrack at level 20
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28]
 solution : [0, 8, 1, 12, 15]


Before backtrack at level 19
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28]
 solution : [0, 8, 1, 12, 15]

After backtrack at level 19
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3]
 solution : [0, 8, 1, 12, 15]


Before backtrack at level 18
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3]
 solution : [0, 8, 1, 12, 15]

After backtrack at level 18
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5]
 solution : [0, 8, 1, 12, 15]


Before backtrack at level 17
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5]
 solution : [0, 8, 1, 12, 15]

After backtrack at level 17
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5, 47]
 solution : [0, 8, 1, 12, 15]


Before backtrack at level 16
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5, 47]
 solution : [0, 8, 1, 12, 15]

After backtrack at level 16
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5, 47, 7]
 solution : [0, 8, 1, 12, 15]


Before backtrack at level 15
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5, 47, 7]
 solution : [0, 8, 1, 12, 15]

After backtrack at level 15
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5, 47, 7, 2]
 solution : [0, 8, 1, 12, 15]


Before backtrack at level 14
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5, 47, 7, 2]
 solution : [0, 8, 1, 12, 15]

After backtrack at level 14
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5, 47, 7, 2, 23]
 solution : [0, 8, 1, 12, 15]


Before backtrack at level 13
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5, 47, 7, 2, 23]
 solution : [0, 8, 1, 12, 15]

After backtrack at level 13
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5, 47, 7, 2, 23, 10]
 solution : [0, 8, 1, 12, 15]


Before backtrack at level 12
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5, 47, 7, 2, 23, 10]
 solution : [0, 8, 1, 12, 15]

After backtrack at level 12
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5, 47, 7, 2, 23, 10, 24, 26, 17, 16, 14, 9]
 solution : [0, 8, 1, 12, 15]


Invert decision for 15 at level 11


New level: 12
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5, 47, 7, 2, 23, 10, 24, 26, 17, 16, 14, 9]
 solution : [0, 8, 1, 12]


Before reduction : 
 pending  : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5, 47, 7, 2, 23, 10, 24, 26, 17, 16, 14, 9]
 solution : [0, 8, 1, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 8), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, 8), (42, 16), (43, 8), (44, 32), (45, -1), (46, -1), (47, -1), (48, -1), (49, 8), (50, 4), (51, 4), (52, 32), (53, 32), (54, 8), (55, 8), (56, 16), (57, 16), (58, 4), (59, 4), (60, 4), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5, 47, 7, 2, 23, 10, 24, 26, 17, 16, 14, 9]
 solution : [0, 8, 1, 12]


Solution : [0, 8, 1, 12] has cost 16.


Decide in level 12 among pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5, 47, 7, 2, 23, 10, 24, 26, 17, 16, 14, 9]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 10 with phase True at level 12

After decision at level 12
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5, 47, 7, 2, 23, 24, 26, 17, 16, 14, 9]
 solution : [0, 8, 1, 12, 10]


New level: 13
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5, 47, 7, 2, 23, 24, 26, 17, 16, 14, 9]
 solution : [0, 8, 1, 12, 10]


Before reduction : 
 pending  : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 6, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 5, 47, 7, 2, 23, 24, 26, 17, 16, 14, 9]
 solution : [0, 8, 1, 12, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 128), (14, 256), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, 0), (6, 0), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, 256), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 13 : {5, 6}

After reduction : 
 pending  : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 24, 26, 17, 16, 14, 9]
 solution : [0, 8, 1, 12, 10]


Before reduction : 
 pending  : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 24, 26, 17, 16, 14, 9]
 solution : [0, 8, 1, 12, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, 0), (6, 0), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, 256), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, 256), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 24, 26, 17, 16, 14, 9]
 solution : [0, 8, 1, 12, 10]


Solution : [0, 8, 1, 12, 10] has cost 21.


Decide in level 13 among pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 24, 26, 17, 16, 14, 9]

Coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, 256), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 24, 26, 17, 16, 9]
 solution : [0, 8, 1, 12, 10, 14]


New level: 14
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 24, 26, 17, 16, 9]
 solution : [0, 8, 1, 12, 10, 14]


Before reduction : 
 pending  : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 24, 26, 17, 16, 9]
 solution : [0, 8, 1, 12, 10, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, 256), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 4), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, 0), (25, 4), (26, 0), (27, 4), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 32), (45, -1), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 14 : {24, 17, 26, 16}

After reduction : 
 pending  : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9]
 solution : [0, 8, 1, 12, 10, 14]


Before reduction : 
 pending  : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9]
 solution : [0, 8, 1, 12, 10, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 4), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, 0), (25, 4), (26, 0), (27, 4), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 32), (45, -1), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 4), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 4), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 32), (45, -1), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9]
 solution : [0, 8, 1, 12, 10, 14]


Solution : [0, 8, 1, 12, 10, 14] has cost 27.


Before backtrack at level 14
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9]
 solution : [0, 8, 1, 12, 10, 14]

After backtrack at level 14
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16]
 solution : [0, 8, 1, 12, 10, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16]
 solution : [0, 8, 1, 12, 10]


Before reduction : 
 pending  : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16]
 solution : [0, 8, 1, 12, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 4), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 4), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 32), (45, -1), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16]
 solution : [0, 8, 1, 12, 10]


Solution : [0, 8, 1, 12, 10] has cost 21.


Decide in level 14 among pending : [25, 52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16]

Coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 25 with phase True at level 14

After decision at level 14
 pending : [52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16]
 solution : [0, 8, 1, 12, 10, 25]


New level: 15
 pending : [52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16]
 solution : [0, 8, 1, 12, 10, 25]


Before reduction : 
 pending  : [52, 13, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16]
 solution : [0, 8, 1, 12, 10, 25]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 8), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 15 : {13}

After reduction : 
 pending  : [52, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16]
 solution : [0, 8, 1, 12, 10, 25]


Before reduction : 
 pending  : [52, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16]
 solution : [0, 8, 1, 12, 10, 25]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 8), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 8), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 15 : set()

After reduction : 
 pending  : [52, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16]
 solution : [0, 8, 1, 12, 10, 25]


Solution : [0, 8, 1, 12, 10, 25] has cost 31.


Before backtrack at level 15
 pending : [52, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16]
 solution : [0, 8, 1, 12, 10, 25]

After backtrack at level 15
 pending : [52, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13]
 solution : [0, 8, 1, 12, 10, 25]


Invert decision for 25 at level 14


New level: 15
 pending : [52, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13]
 solution : [0, 8, 1, 12, 10]


Before reduction : 
 pending  : [52, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13]
 solution : [0, 8, 1, 12, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 8), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 15 : set()

After reduction : 
 pending  : [52, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13]
 solution : [0, 8, 1, 12, 10]


Solution : [0, 8, 1, 12, 10] has cost 21.


Decide in level 15 among pending : [52, 53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13]

Coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 52 with phase True at level 15

After decision at level 15
 pending : [53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13]
 solution : [0, 8, 1, 12, 10, 52]


New level: 16
 pending : [53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13]
 solution : [0, 8, 1, 12, 10, 52]


Before reduction : 
 pending  : [53, 44, 20, 22, 56, 57, 50, 58, 61, 51, 54, 55, 59, 60, 42, 41, 35, 43, 36, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13]
 solution : [0, 8, 1, 12, 10, 52]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, 8), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, -1), (22, 32), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 16), (31, 32), (32, 16), (33, 16), (34, 16), (35, 64), (36, 0), (37, -1), (38, 128), (39, 128), (40, -1), (41, 32), (42, 64), (43, 128), (44, 64), (45, -1), (46, 16), (47, 8), (48, 16), (49, 128), (50, 0), (51, 0), (52, -1), (53, 0), (54, 64), (55, 64), (56, 128), (57, 128), (58, 32), (59, 32), (60, 32), (61, 32)]

Covered at level 16 : {50, 51, 36, 53}

After reduction : 
 pending  : [44, 20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 41, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13]
 solution : [0, 8, 1, 12, 10, 52]


Before reduction : 
 pending  : [44, 20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 41, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13]
 solution : [0, 8, 1, 12, 10, 52]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, 8), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, -1), (22, 32), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 16), (31, 32), (32, 16), (33, 16), (34, 16), (35, 64), (36, 0), (37, -1), (38, 128), (39, 128), (40, -1), (41, 32), (42, 64), (43, 128), (44, 64), (45, -1), (46, 16), (47, 8), (48, 16), (49, 128), (50, 0), (51, 0), (52, -1), (53, 0), (54, 64), (55, 64), (56, 128), (57, 128), (58, 32), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, 8), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, -1), (22, 32), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 16), (31, 32), (32, 16), (33, 16), (34, 16), (35, 32), (36, -1), (37, -1), (38, 128), (39, 128), (40, -1), (41, 32), (42, 64), (43, 128), (44, 64), (45, -1), (46, 16), (47, 8), (48, 16), (49, 128), (50, -1), (51, -1), (52, -1), (53, -1), (54, 64), (55, 64), (56, 128), (57, 128), (58, 32), (59, 32), (60, 32), (61, 32)]

Covered at level 16 : set()

After reduction : 
 pending  : [44, 20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 41, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13]
 solution : [0, 8, 1, 12, 10, 52]


Solution : [0, 8, 1, 12, 10, 52] has cost 31.


Before backtrack at level 16
 pending : [44, 20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 41, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13]
 solution : [0, 8, 1, 12, 10, 52]

After backtrack at level 16
 pending : [44, 20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 41, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36]
 solution : [0, 8, 1, 12, 10, 52]


Invert decision for 52 at level 15


New level: 16
 pending : [44, 20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 41, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36]
 solution : [0, 8, 1, 12, 10]


Before reduction : 
 pending  : [44, 20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 41, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36]
 solution : [0, 8, 1, 12, 10]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, 8), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, -1), (22, 32), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 16), (31, 32), (32, 16), (33, 16), (34, 16), (35, 32), (36, -1), (37, -1), (38, 128), (39, 128), (40, -1), (41, 32), (42, 64), (43, 128), (44, 64), (45, -1), (46, 16), (47, 8), (48, 16), (49, 128), (50, -1), (51, -1), (52, -1), (53, -1), (54, 64), (55, 64), (56, 128), (57, 128), (58, 32), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 16 : set()

After reduction : 
 pending  : [44, 20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 41, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36]
 solution : [0, 8, 1, 12, 10]


Solution : [0, 8, 1, 12, 10] has cost 21.


Decide in level 16 among pending : [44, 20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 41, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36]

Coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 44 with phase True at level 16

After decision at level 16
 pending : [20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 41, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36]
 solution : [0, 8, 1, 12, 10, 44]


New level: 17
 pending : [20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 41, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36]
 solution : [0, 8, 1, 12, 10, 44]


Before reduction : 
 pending  : [20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 41, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36]
 solution : [0, 8, 1, 12, 10, 44]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 16), (33, 32), (34, 32), (35, 8), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 0), (42, 4), (43, 16), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 32), (51, 32), (52, -1), (53, 64), (54, 32), (55, 32), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 17 : {41}

After reduction : 
 pending  : [20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36]
 solution : [0, 8, 1, 12, 10, 44]


Before reduction : 
 pending  : [20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36]
 solution : [0, 8, 1, 12, 10, 44]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 16), (33, 32), (34, 32), (35, 8), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 0), (42, 4), (43, 16), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 32), (51, 32), (52, -1), (53, 64), (54, 32), (55, 32), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 16), (33, 32), (34, 32), (35, 8), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, -1), (42, 4), (43, 16), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 32), (51, 32), (52, -1), (53, 64), (54, 32), (55, 32), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 17 : set()

After reduction : 
 pending  : [20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36]
 solution : [0, 8, 1, 12, 10, 44]


Solution : [0, 8, 1, 12, 10, 44] has cost 31.


Before backtrack at level 17
 pending : [20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36]
 solution : [0, 8, 1, 12, 10, 44]

After backtrack at level 17
 pending : [20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41]
 solution : [0, 8, 1, 12, 10, 44]


Invert decision for 44 at level 16


New level: 17
 pending : [20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41]
 solution : [0, 8, 1, 12, 10]


Before reduction : 
 pending  : [20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41]
 solution : [0, 8, 1, 12, 10]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 16), (33, 32), (34, 32), (35, 8), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, -1), (42, 4), (43, 16), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 32), (51, 32), (52, -1), (53, 64), (54, 32), (55, 32), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 17 : set()

After reduction : 
 pending  : [20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41]
 solution : [0, 8, 1, 12, 10]


Solution : [0, 8, 1, 12, 10] has cost 21.


Decide in level 17 among pending : [20, 22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41]

Coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 20 with phase True at level 17

After decision at level 17
 pending : [22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41]
 solution : [0, 8, 1, 12, 10, 20]


New level: 18
 pending : [22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41]
 solution : [0, 8, 1, 12, 10, 20]


Before reduction : 
 pending  : [22, 56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 46, 39, 48, 38, 27, 28, 3, 47, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41]
 solution : [0, 8, 1, 12, 10, 20]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 8), (5, -1), (6, -1), (7, 16), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 8), (24, 16), (25, -1), (26, 16), (27, 32), (28, 32), (29, -1), (30, 2), (31, 64), (32, 32), (33, 16), (34, 16), (35, 64), (36, 64), (37, -1), (38, 32), (39, 32), (40, -1), (41, 64), (42, 128), (43, 8), (44, -1), (45, -1), (46, 0), (47, 0), (48, 0), (49, 8), (50, 32), (51, 32), (52, -1), (53, 64), (54, 64), (55, 64), (56, 128), (57, 128), (58, 32), (59, 32), (60, 32), (61, 32)]

Covered at level 18 : {46, 48, 22, 47}

After reduction : 
 pending  : [56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 39, 38, 27, 28, 3, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41]
 solution : [0, 8, 1, 12, 10, 20]


Before reduction : 
 pending  : [56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 39, 38, 27, 28, 3, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41]
 solution : [0, 8, 1, 12, 10, 20]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 8), (5, -1), (6, -1), (7, 16), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 8), (24, 16), (25, -1), (26, 16), (27, 32), (28, 32), (29, -1), (30, 2), (31, 64), (32, 32), (33, 16), (34, 16), (35, 64), (36, 64), (37, -1), (38, 32), (39, 32), (40, -1), (41, 64), (42, 128), (43, 8), (44, -1), (45, -1), (46, 0), (47, 0), (48, 0), (49, 8), (50, 32), (51, 32), (52, -1), (53, 64), (54, 64), (55, 64), (56, 128), (57, 128), (58, 32), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 8), (5, -1), (6, -1), (7, 16), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 8), (24, 16), (25, -1), (26, 16), (27, 32), (28, 32), (29, -1), (30, 2), (31, 64), (32, 32), (33, 16), (34, 16), (35, 64), (36, 64), (37, -1), (38, 32), (39, 32), (40, -1), (41, 64), (42, 128), (43, 8), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 8), (50, 32), (51, 32), (52, -1), (53, 64), (54, 64), (55, 64), (56, 128), (57, 128), (58, 32), (59, 32), (60, 32), (61, 32)]

Covered at level 18 : set()

After reduction : 
 pending  : [56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 39, 38, 27, 28, 3, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41]
 solution : [0, 8, 1, 12, 10, 20]


Solution : [0, 8, 1, 12, 10, 20] has cost 31.


Before backtrack at level 18
 pending : [56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 39, 38, 27, 28, 3, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41]
 solution : [0, 8, 1, 12, 10, 20]

After backtrack at level 18
 pending : [56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 39, 38, 27, 28, 3, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41, 22, 46, 48, 47]
 solution : [0, 8, 1, 12, 10, 20]


Invert decision for 20 at level 17


New level: 18
 pending : [56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 39, 38, 27, 28, 3, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41, 22, 46, 48, 47]
 solution : [0, 8, 1, 12, 10]


Before reduction : 
 pending  : [56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 39, 38, 27, 28, 3, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41, 22, 46, 48, 47]
 solution : [0, 8, 1, 12, 10]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 8), (5, -1), (6, -1), (7, 16), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 8), (24, 16), (25, -1), (26, 16), (27, 32), (28, 32), (29, -1), (30, 2), (31, 64), (32, 32), (33, 16), (34, 16), (35, 64), (36, 64), (37, -1), (38, 32), (39, 32), (40, -1), (41, 64), (42, 128), (43, 8), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 8), (50, 32), (51, 32), (52, -1), (53, 64), (54, 64), (55, 64), (56, 128), (57, 128), (58, 32), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 18 : set()

After reduction : 
 pending  : [56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 39, 38, 27, 28, 3, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41, 22, 46, 48, 47]
 solution : [0, 8, 1, 12, 10]


Solution : [0, 8, 1, 12, 10] has cost 21.


Decide in level 18 among pending : [56, 57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 39, 38, 27, 28, 3, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41, 22, 46, 48, 47]

Coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 56 with phase True at level 18

After decision at level 18
 pending : [57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 39, 38, 27, 28, 3, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41, 22, 46, 48, 47]
 solution : [0, 8, 1, 12, 10, 56]


New level: 19
 pending : [57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 39, 38, 27, 28, 3, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41, 22, 46, 48, 47]
 solution : [0, 8, 1, 12, 10, 56]


Before reduction : 
 pending  : [57, 58, 61, 54, 55, 59, 60, 42, 35, 43, 49, 4, 31, 33, 32, 34, 30, 39, 38, 27, 28, 3, 7, 2, 23, 9, 24, 26, 17, 16, 13, 53, 50, 51, 36, 41, 22, 46, 48, 47]
 solution : [0, 8, 1, 12, 10, 56]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 4), (4, 4), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 0), (24, 64), (25, -1), (26, 64), (27, 16), (28, 16), (29, -1), (30, 0), (31, 0), (32, 0), (33, 16), (34, 16), (35, 64), (36, 0), (37, -1), (38, 128), (39, 128), (40, -1), (41, 2), (42, 4), (43, 128), (44, -1), (45, -1), (46, 16), (47, 8), (48, 16), (49, 0), (50, 64), (51, 64), (52, -1), (53, 128), (54, 0), (55, 0), (56, -1), (57, 0), (58, 32), (59, 32), (60, 16), (61, 16)]

Covered at level 19 : {32, 36, 49, 23, 54, 55, 57, 30, 31}

After reduction : 
 pending  : [58, 61, 59, 60, 42, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 41, 22, 46, 48, 47]
 solution : [0, 8, 1, 12, 10, 56]


Before reduction : 
 pending  : [58, 61, 59, 60, 42, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 41, 22, 46, 48, 47]
 solution : [0, 8, 1, 12, 10, 56]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 4), (4, 4), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 0), (24, 64), (25, -1), (26, 64), (27, 16), (28, 16), (29, -1), (30, 0), (31, 0), (32, 0), (33, 16), (34, 16), (35, 64), (36, 0), (37, -1), (38, 128), (39, 128), (40, -1), (41, 2), (42, 4), (43, 128), (44, -1), (45, -1), (46, 16), (47, 8), (48, 16), (49, 0), (50, 64), (51, 64), (52, -1), (53, 128), (54, 0), (55, 0), (56, -1), (57, 0), (58, 32), (59, 32), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 4), (4, 4), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, -1), (24, 64), (25, -1), (26, 64), (27, 16), (28, 16), (29, -1), (30, -1), (31, -1), (32, -1), (33, 16), (34, 16), (35, 32), (36, -1), (37, -1), (38, 128), (39, 128), (40, -1), (41, 2), (42, 4), (43, 32), (44, -1), (45, -1), (46, 16), (47, 8), (48, 16), (49, -1), (50, 64), (51, 64), (52, -1), (53, 128), (54, -1), (55, -1), (56, -1), (57, -1), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 19 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 42, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 41, 22, 46, 48, 47]
 solution : [0, 8, 1, 12, 10, 56]


Solution : [0, 8, 1, 12, 10, 56] has cost 31.


Before backtrack at level 19
 pending : [58, 61, 59, 60, 42, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 41, 22, 46, 48, 47]
 solution : [0, 8, 1, 12, 10, 56]

After backtrack at level 19
 pending : [58, 61, 59, 60, 42, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 41, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36]
 solution : [0, 8, 1, 12, 10, 56]


Invert decision for 56 at level 18


New level: 19
 pending : [58, 61, 59, 60, 42, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 41, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36]
 solution : [0, 8, 1, 12, 10]


Before reduction : 
 pending  : [58, 61, 59, 60, 42, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 41, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36]
 solution : [0, 8, 1, 12, 10]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 4), (4, 4), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, -1), (24, 64), (25, -1), (26, 64), (27, 16), (28, 16), (29, -1), (30, -1), (31, -1), (32, -1), (33, 16), (34, 16), (35, 32), (36, -1), (37, -1), (38, 128), (39, 128), (40, -1), (41, 2), (42, 4), (43, 32), (44, -1), (45, -1), (46, 16), (47, 8), (48, 16), (49, -1), (50, 64), (51, 64), (52, -1), (53, 128), (54, -1), (55, -1), (56, -1), (57, -1), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 19 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 42, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 41, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36]
 solution : [0, 8, 1, 12, 10]


Solution : [0, 8, 1, 12, 10] has cost 21.


Decide in level 19 among pending : [58, 61, 59, 60, 42, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 41, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36]

Coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 42 with phase True at level 19

After decision at level 19
 pending : [58, 61, 59, 60, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 41, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36]
 solution : [0, 8, 1, 12, 10, 42]


New level: 20
 pending : [58, 61, 59, 60, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 41, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36]
 solution : [0, 8, 1, 12, 10, 42]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 41, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36]
 solution : [0, 8, 1, 12, 10, 42]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 16), (33, 32), (34, 32), (35, 4), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 0), (42, -1), (43, 4), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 32), (51, 32), (52, -1), (53, 128), (54, 32), (55, 32), (56, -1), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 20 : {41}

After reduction : 
 pending  : [58, 61, 59, 60, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36]
 solution : [0, 8, 1, 12, 10, 42]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36]
 solution : [0, 8, 1, 12, 10, 42]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 16), (33, 32), (34, 32), (35, 4), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 0), (42, -1), (43, 4), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 32), (51, 32), (52, -1), (53, 128), (54, 32), (55, 32), (56, -1), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 16), (33, 32), (34, 32), (35, 4), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, -1), (42, -1), (43, 4), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 32), (51, 32), (52, -1), (53, 128), (54, 32), (55, 32), (56, -1), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 20 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36]
 solution : [0, 8, 1, 12, 10, 42]


Solution : [0, 8, 1, 12, 10, 42] has cost 31.


Before backtrack at level 20
 pending : [58, 61, 59, 60, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36]
 solution : [0, 8, 1, 12, 10, 42]

After backtrack at level 20
 pending : [58, 61, 59, 60, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10, 42]


Invert decision for 42 at level 19


New level: 20
 pending : [58, 61, 59, 60, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 16), (33, 32), (34, 32), (35, 4), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, -1), (42, -1), (43, 4), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 32), (51, 32), (52, -1), (53, 128), (54, 32), (55, 32), (56, -1), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, -1), (43, 128), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 20 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10]


Solution : [0, 8, 1, 12, 10] has cost 21.


Decide in level 20 among pending : [58, 61, 59, 60, 35, 43, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]

Coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, -1), (43, 128), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 43 with phase True at level 20

After decision at level 20
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10, 43]


New level: 21
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10, 43]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10, 43]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, -1), (43, 128), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 32), (31, 64), (32, 32), (33, 32), (34, 32), (35, 8), (36, 64), (37, -1), (38, 64), (39, 64), (40, -1), (41, 32), (42, -1), (43, -1), (44, -1), (45, -1), (46, 32), (47, 16), (48, 32), (49, 64), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 21 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10, 43]


Solution : [0, 8, 1, 12, 10, 43] has cost 31.


Before backtrack at level 21
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10, 43]

After backtrack at level 21
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10, 43]


Invert decision for 43 at level 20


New level: 21
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 32), (31, 64), (32, 32), (33, 32), (34, 32), (35, 8), (36, 64), (37, -1), (38, 64), (39, 64), (40, -1), (41, 32), (42, -1), (43, -1), (44, -1), (45, -1), (46, 32), (47, 16), (48, 32), (49, 64), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, -1), (43, -1), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 21 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10]


Solution : [0, 8, 1, 12, 10] has cost 21.


Decide in level 21 among pending : [58, 61, 59, 60, 35, 4, 33, 34, 39, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]

Coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, -1), (43, -1), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 39 with phase True at level 21

After decision at level 21
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10, 39]


New level: 22
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10, 39]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 38, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10, 39]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, -1), (43, -1), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 32), (25, -1), (26, 32), (27, 64), (28, 64), (29, -1), (30, 64), (31, 64), (32, 32), (33, 16), (34, 16), (35, 4), (36, 64), (37, -1), (38, 0), (39, -1), (40, -1), (41, 64), (42, -1), (43, -1), (44, -1), (45, -1), (46, 32), (47, 16), (48, 32), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 22 : {38}

After reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10, 39]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10, 39]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 32), (25, -1), (26, 32), (27, 64), (28, 64), (29, -1), (30, 64), (31, 64), (32, 32), (33, 16), (34, 16), (35, 4), (36, 64), (37, -1), (38, 0), (39, -1), (40, -1), (41, 64), (42, -1), (43, -1), (44, -1), (45, -1), (46, 32), (47, 16), (48, 32), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 32), (25, -1), (26, 32), (27, 64), (28, 64), (29, -1), (30, 64), (31, 64), (32, 32), (33, 16), (34, 16), (35, 4), (36, 64), (37, -1), (38, -1), (39, -1), (40, -1), (41, 64), (42, -1), (43, -1), (44, -1), (45, -1), (46, 32), (47, 16), (48, 32), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 22 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10, 39]


Solution : [0, 8, 1, 12, 10, 39] has cost 31.


Before backtrack at level 22
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41]
 solution : [0, 8, 1, 12, 10, 39]

After backtrack at level 22
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38]
 solution : [0, 8, 1, 12, 10, 39]


Invert decision for 39 at level 21


New level: 22
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38]
 solution : [0, 8, 1, 12, 10]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38]
 solution : [0, 8, 1, 12, 10]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 32), (25, -1), (26, 32), (27, 64), (28, 64), (29, -1), (30, 64), (31, 64), (32, 32), (33, 16), (34, 16), (35, 4), (36, 64), (37, -1), (38, -1), (39, -1), (40, -1), (41, 64), (42, -1), (43, -1), (44, -1), (45, -1), (46, 32), (47, 16), (48, 32), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, -1), (40, -1), (41, 64), (42, -1), (43, -1), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 22 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38]
 solution : [0, 8, 1, 12, 10]


Solution : [0, 8, 1, 12, 10] has cost 21.


Decide in level 22 among pending : [58, 61, 59, 60, 35, 4, 33, 34, 27, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38]

Coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, -1), (40, -1), (41, 64), (42, -1), (43, -1), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 27 with phase True at level 22

After decision at level 22
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38]
 solution : [0, 8, 1, 12, 10, 27]


New level: 23
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38]
 solution : [0, 8, 1, 12, 10, 27]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 28, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38]
 solution : [0, 8, 1, 12, 10, 27]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, -1), (40, -1), (41, 64), (42, -1), (43, -1), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 8), (24, 32), (25, -1), (26, 32), (27, -1), (28, 0), (29, -1), (30, 2), (31, 64), (32, 16), (33, 32), (34, 32), (35, 64), (36, 2), (37, -1), (38, 64), (39, -1), (40, -1), (41, 64), (42, -1), (43, -1), (44, -1), (45, -1), (46, 16), (47, 8), (48, 16), (49, 8), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 23 : {28}

After reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38]
 solution : [0, 8, 1, 12, 10, 27]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38]
 solution : [0, 8, 1, 12, 10, 27]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 8), (24, 32), (25, -1), (26, 32), (27, -1), (28, 0), (29, -1), (30, 2), (31, 64), (32, 16), (33, 32), (34, 32), (35, 64), (36, 2), (37, -1), (38, 64), (39, -1), (40, -1), (41, 64), (42, -1), (43, -1), (44, -1), (45, -1), (46, 16), (47, 8), (48, 16), (49, 8), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 8), (24, 32), (25, -1), (26, 32), (27, -1), (28, -1), (29, -1), (30, 2), (31, 64), (32, 16), (33, 32), (34, 32), (35, 64), (36, 2), (37, -1), (38, 64), (39, -1), (40, -1), (41, 64), (42, -1), (43, -1), (44, -1), (45, -1), (46, 16), (47, 8), (48, 16), (49, 8), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 23 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38]
 solution : [0, 8, 1, 12, 10, 27]


Solution : [0, 8, 1, 12, 10, 27] has cost 31.


Before backtrack at level 23
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38]
 solution : [0, 8, 1, 12, 10, 27]

After backtrack at level 23
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28]
 solution : [0, 8, 1, 12, 10, 27]


Invert decision for 27 at level 22


New level: 23
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28]
 solution : [0, 8, 1, 12, 10]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28]
 solution : [0, 8, 1, 12, 10]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 8), (24, 32), (25, -1), (26, 32), (27, -1), (28, -1), (29, -1), (30, 2), (31, 64), (32, 16), (33, 32), (34, 32), (35, 64), (36, 2), (37, -1), (38, 64), (39, -1), (40, -1), (41, 64), (42, -1), (43, -1), (44, -1), (45, -1), (46, 16), (47, 8), (48, 16), (49, 8), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, -1), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, -1), (40, -1), (41, 64), (42, -1), (43, -1), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 23 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28]
 solution : [0, 8, 1, 12, 10]


Solution : [0, 8, 1, 12, 10] has cost 21.


Decide in level 23 among pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 17, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28]

Coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, -1), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, -1), (40, -1), (41, 64), (42, -1), (43, -1), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 17 with phase True at level 23

After decision at level 23
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28]
 solution : [0, 8, 1, 12, 10, 17]


New level: 24
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28]
 solution : [0, 8, 1, 12, 10, 17]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 16, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28]
 solution : [0, 8, 1, 12, 10, 17]

Essensial at level 24 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 128), (24, 64), (25, -1), (26, 64), (27, -1), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, -1), (40, -1), (41, 64), (42, -1), (43, -1), (44, -1), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, -1), (53, 128), (54, 64), (55, 64), (56, -1), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 32), (25, -1), (26, 32), (27, -1), (28, 16), (29, -1), (30, 64), (31, 64), (32, 8), (33, 16), (34, 16), (35, 64), (36, 64), (37, -1), (38, 32), (39, -1), (40, -1), (41, 16), (42, -1), (43, -1), (44, -1), (45, -1), (46, 32), (47, 32), (48, 32), (49, 128), (50, 16), (51, 16), (52, -1), (53, 32), (54, 16), (55, 16), (56, -1), (57, 128), (58, 32), (59, 32), (60, 32), (61, 32)]

Covered at level 24 : {16}

After reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28]
 solution : [0, 8, 1, 12, 10, 17]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28]
 solution : [0, 8, 1, 12, 10, 17]

Essensial at level 24 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 32), (25, -1), (26, 32), (27, -1), (28, 16), (29, -1), (30, 64), (31, 64), (32, 8), (33, 16), (34, 16), (35, 64), (36, 64), (37, -1), (38, 32), (39, -1), (40, -1), (41, 16), (42, -1), (43, -1), (44, -1), (45, -1), (46, 32), (47, 32), (48, 32), (49, 128), (50, 16), (51, 16), (52, -1), (53, 32), (54, 16), (55, 16), (56, -1), (57, 128), (58, 32), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 32), (25, -1), (26, 32), (27, -1), (28, 16), (29, -1), (30, 64), (31, 64), (32, 8), (33, 16), (34, 16), (35, 64), (36, 64), (37, -1), (38, 32), (39, -1), (40, -1), (41, 16), (42, -1), (43, -1), (44, -1), (45, -1), (46, 32), (47, 32), (48, 32), (49, 128), (50, 16), (51, 16), (52, -1), (53, 32), (54, 16), (55, 16), (56, -1), (57, 128), (58, 32), (59, 32), (60, 32), (61, 32)]

Covered at level 24 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28]
 solution : [0, 8, 1, 12, 10, 17]


Solution : [0, 8, 1, 12, 10, 17] has cost 27.


Before backtrack at level 24
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28]
 solution : [0, 8, 1, 12, 10, 17]

After backtrack at level 24
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16]
 solution : [0, 8, 1, 12, 10, 17]


Invert decision for 17 at level 23


New level: 24
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16]
 solution : [0, 8, 1, 12, 10]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16]
 solution : [0, 8, 1, 12, 10]

Essensial at level 24 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 32), (25, -1), (26, 32), (27, -1), (28, 16), (29, -1), (30, 64), (31, 64), (32, 8), (33, 16), (34, 16), (35, 64), (36, 64), (37, -1), (38, 32), (39, -1), (40, -1), (41, 16), (42, -1), (43, -1), (44, -1), (45, -1), (46, 32), (47, 32), (48, 32), (49, 128), (50, 16), (51, 16), (52, -1), (53, 32), (54, 16), (55, 16), (56, -1), (57, 128), (58, 32), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 32), (25, -1), (26, 32), (27, -1), (28, 16), (29, -1), (30, 64), (31, 64), (32, 8), (33, 16), (34, 16), (35, 64), (36, 64), (37, -1), (38, 32), (39, -1), (40, -1), (41, 16), (42, -1), (43, -1), (44, -1), (45, -1), (46, 32), (47, 32), (48, 32), (49, 128), (50, 16), (51, 16), (52, -1), (53, 32), (54, 16), (55, 16), (56, -1), (57, 128), (58, 32), (59, 32), (60, 32), (61, 32)]

Covered at level 24 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28]
 solution : [0, 8, 1, 12, 10, 16]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28]
 solution : [0, 8, 1, 12, 10, 16]

Essensial at level 24 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 32), (25, -1), (26, 32), (27, -1), (28, 16), (29, -1), (30, 64), (31, 64), (32, 8), (33, 16), (34, 16), (35, 64), (36, 64), (37, -1), (38, 32), (39, -1), (40, -1), (41, 16), (42, -1), (43, -1), (44, -1), (45, -1), (46, 32), (47, 32), (48, 32), (49, 128), (50, 16), (51, 16), (52, -1), (53, 32), (54, 16), (55, 16), (56, -1), (57, 128), (58, 32), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 32), (25, -1), (26, 32), (27, -1), (28, 16), (29, -1), (30, 64), (31, 64), (32, 8), (33, 16), (34, 16), (35, 64), (36, 64), (37, -1), (38, 32), (39, -1), (40, -1), (41, 16), (42, -1), (43, -1), (44, -1), (45, -1), (46, 32), (47, 32), (48, 32), (49, 128), (50, 16), (51, 16), (52, -1), (53, 32), (54, 16), (55, 16), (56, -1), (57, 128), (58, 32), (59, 32), (60, 32), (61, 32)]

Covered at level 24 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28]
 solution : [0, 8, 1, 12, 10, 16]


Solution : [0, 8, 1, 12, 10, 16] has cost 27.


Before backtrack at level 24
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28]
 solution : [0, 8, 1, 12, 10, 16]

After backtrack at level 24
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16]
 solution : [0, 8, 1, 12, 10]


Before backtrack at level 23
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16]
 solution : [0, 8, 1, 12, 10]

After backtrack at level 23
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17]
 solution : [0, 8, 1, 12, 10]


Before backtrack at level 22
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17]
 solution : [0, 8, 1, 12, 10]

After backtrack at level 22
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27]
 solution : [0, 8, 1, 12, 10]


Before backtrack at level 21
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27]
 solution : [0, 8, 1, 12, 10]

After backtrack at level 21
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39]
 solution : [0, 8, 1, 12, 10]


Before backtrack at level 20
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39]
 solution : [0, 8, 1, 12, 10]

After backtrack at level 20
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43]
 solution : [0, 8, 1, 12, 10]


Before backtrack at level 19
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43]
 solution : [0, 8, 1, 12, 10]

After backtrack at level 19
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42]
 solution : [0, 8, 1, 12, 10]


Before backtrack at level 18
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42]
 solution : [0, 8, 1, 12, 10]

After backtrack at level 18
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56]
 solution : [0, 8, 1, 12, 10]


Before backtrack at level 17
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56]
 solution : [0, 8, 1, 12, 10]

After backtrack at level 17
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20]
 solution : [0, 8, 1, 12, 10]


Before backtrack at level 16
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20]
 solution : [0, 8, 1, 12, 10]

After backtrack at level 16
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44]
 solution : [0, 8, 1, 12, 10]


Before backtrack at level 15
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44]
 solution : [0, 8, 1, 12, 10]

After backtrack at level 15
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52]
 solution : [0, 8, 1, 12, 10]


Before backtrack at level 14
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52]
 solution : [0, 8, 1, 12, 10]

After backtrack at level 14
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25]
 solution : [0, 8, 1, 12, 10]


Before backtrack at level 13
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25]
 solution : [0, 8, 1, 12, 10]

After backtrack at level 13
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25, 6, 5, 14]
 solution : [0, 8, 1, 12, 10]


Invert decision for 10 at level 12


New level: 13
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25, 6, 5, 14]
 solution : [0, 8, 1, 12]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25, 6, 5, 14]
 solution : [0, 8, 1, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 32), (4, 16), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 32), (25, -1), (26, 32), (27, -1), (28, 16), (29, -1), (30, 64), (31, 64), (32, 8), (33, 16), (34, 16), (35, 64), (36, 64), (37, -1), (38, 32), (39, -1), (40, -1), (41, 16), (42, -1), (43, -1), (44, -1), (45, -1), (46, 32), (47, 32), (48, 32), (49, 128), (50, 16), (51, 16), (52, -1), (53, 32), (54, 16), (55, 16), (56, -1), (57, 128), (58, 32), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, -1), (11, -1), (12, -1), (13, 128), (14, 256), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 13 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25, 6, 5, 14]
 solution : [0, 8, 1, 12]


Solution : [0, 8, 1, 12] has cost 16.


Decide in level 13 among pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 9, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25, 6, 5, 14]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, -1), (11, -1), (12, -1), (13, 128), (14, 256), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 9 with phase True at level 13

After decision at level 13
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25, 6, 5, 14]
 solution : [0, 8, 1, 12, 9]


New level: 14
 pending : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25, 6, 5, 14]
 solution : [0, 8, 1, 12, 9]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 4, 33, 34, 3, 7, 2, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25, 6, 5, 14]
 solution : [0, 8, 1, 12, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, -1), (11, -1), (12, -1), (13, 128), (14, 256), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 256), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, 128), (23, 32), (24, 64), (25, 32), (26, 64), (27, 128), (28, 128), (29, -1), (30, 16), (31, 16), (32, 8), (33, 8), (34, 8), (35, 4), (36, 4), (37, -1), (38, 128), (39, 128), (40, -1), (41, 16), (42, 32), (43, 32), (44, 32), (45, -1), (46, 64), (47, 8), (48, 64), (49, 32), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 14 : {2, 3, 4, 5, 6, 7}

After reduction : 
 pending  : [58, 61, 59, 60, 35, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25, 14]
 solution : [0, 8, 1, 12, 9]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25, 14]
 solution : [0, 8, 1, 12, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 256), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, 128), (23, 32), (24, 64), (25, 32), (26, 64), (27, 128), (28, 128), (29, -1), (30, 16), (31, 16), (32, 8), (33, 8), (34, 8), (35, 4), (36, 4), (37, -1), (38, 128), (39, 128), (40, -1), (41, 16), (42, 32), (43, 32), (44, 32), (45, -1), (46, 64), (47, 8), (48, 64), (49, 32), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 256), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, 128), (23, 32), (24, 64), (25, 32), (26, 64), (27, 128), (28, 128), (29, -1), (30, 16), (31, 16), (32, 8), (33, 8), (34, 8), (35, 4), (36, 4), (37, -1), (38, 128), (39, 128), (40, -1), (41, 16), (42, 32), (43, 32), (44, 32), (45, -1), (46, 64), (47, 8), (48, 64), (49, 32), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 14 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 35, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25, 14]
 solution : [0, 8, 1, 12, 9]


Solution : [0, 8, 1, 12, 9] has cost 22.


Decide in level 14 among pending : [58, 61, 59, 60, 35, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 256), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, 128), (23, 32), (24, 64), (25, 32), (26, 64), (27, 128), (28, 128), (29, -1), (30, 16), (31, 16), (32, 8), (33, 8), (34, 8), (35, 4), (36, 4), (37, -1), (38, 128), (39, 128), (40, -1), (41, 16), (42, 32), (43, 32), (44, 32), (45, -1), (46, 64), (47, 8), (48, 64), (49, 32), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [58, 61, 59, 60, 35, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25]
 solution : [0, 8, 1, 12, 9, 14]


New level: 15
 pending : [58, 61, 59, 60, 35, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25]
 solution : [0, 8, 1, 12, 9, 14]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25]
 solution : [0, 8, 1, 12, 9, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 256), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, 128), (23, 32), (24, 64), (25, 32), (26, 64), (27, 128), (28, 128), (29, -1), (30, 16), (31, 16), (32, 8), (33, 8), (34, 8), (35, 4), (36, 4), (37, -1), (38, 128), (39, 128), (40, -1), (41, 16), (42, 32), (43, 32), (44, 32), (45, -1), (46, 64), (47, 8), (48, 64), (49, 32), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, -1), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 15 : {13, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : []
 solution : [0, 8, 1, 12, 9, 14]


Before reduction : 
 pending  : []
 solution : [0, 8, 1, 12, 9, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, -1), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 8, 1, 12, 9, 14]


Solution : [0, 8, 1, 12, 9, 14] has cost 28.


Before backtrack at level 15
 pending : []
 solution : [0, 8, 1, 12, 9, 14]

After backtrack at level 15
 pending : [58, 61, 59, 60, 35, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25]
 solution : [0, 8, 1, 12, 9, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [58, 61, 59, 60, 35, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25]
 solution : [0, 8, 1, 12, 9]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25]
 solution : [0, 8, 1, 12, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, 64), (23, 16), (24, 64), (25, 32), (26, 64), (27, 128), (28, 128), (29, -1), (30, 8), (31, 16), (32, 8), (33, 8), (34, 8), (35, 4), (36, 4), (37, -1), (38, 128), (39, 128), (40, -1), (41, 16), (42, 32), (43, 16), (44, 32), (45, -1), (46, 32), (47, 2), (48, 32), (49, 16), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 15 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 35, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25]
 solution : [0, 8, 1, 12, 9]


Solution : [0, 8, 1, 12, 9] has cost 22.


Decide in level 15 among pending : [58, 61, 59, 60, 35, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 38, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, 64), (23, 16), (24, 64), (25, 32), (26, 64), (27, 128), (28, 128), (29, -1), (30, 8), (31, 16), (32, 8), (33, 8), (34, 8), (35, 4), (36, 4), (37, -1), (38, 128), (39, 128), (40, -1), (41, 16), (42, 32), (43, 16), (44, 32), (45, -1), (46, 32), (47, 2), (48, 32), (49, 16), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Decide 38 with phase True at level 15

After decision at level 15
 pending : [58, 61, 59, 60, 35, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25]
 solution : [0, 8, 1, 12, 9, 38]


New level: 16
 pending : [58, 61, 59, 60, 35, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25]
 solution : [0, 8, 1, 12, 9, 38]


Before reduction : 
 pending  : [58, 61, 59, 60, 35, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 28, 16, 17, 27, 39, 43, 42, 56, 20, 44, 52, 25]
 solution : [0, 8, 1, 12, 9, 38]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, 64), (23, 16), (24, 64), (25, 32), (26, 64), (27, 128), (28, 128), (29, -1), (30, 8), (31, 16), (32, 8), (33, 8), (34, 8), (35, 4), (36, 4), (37, -1), (38, 128), (39, 128), (40, -1), (41, 16), (42, 32), (43, 16), (44, 32), (45, -1), (46, 32), (47, 2), (48, 32), (49, 16), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, -1), (22, 32), (23, 8), (24, 32), (25, 16), (26, 32), (27, 64), (28, 64), (29, -1), (30, 4), (31, 16), (32, 8), (33, 4), (34, 4), (35, 0), (36, 1), (37, -1), (38, -1), (39, 0), (40, -1), (41, 4), (42, 4), (43, 0), (44, 4), (45, -1), (46, 16), (47, 1), (48, 16), (49, 8), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 16 : {43, 35, 39}

After reduction : 
 pending  : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 28, 16, 17, 27, 42, 56, 20, 44, 52, 25]
 solution : [0, 8, 1, 12, 9, 38]


Before reduction : 
 pending  : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 28, 16, 17, 27, 42, 56, 20, 44, 52, 25]
 solution : [0, 8, 1, 12, 9, 38]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, -1), (22, 32), (23, 8), (24, 32), (25, 16), (26, 32), (27, 64), (28, 64), (29, -1), (30, 4), (31, 16), (32, 8), (33, 4), (34, 4), (35, 0), (36, 1), (37, -1), (38, -1), (39, 0), (40, -1), (41, 4), (42, 4), (43, 0), (44, 4), (45, -1), (46, 16), (47, 1), (48, 16), (49, 8), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, -1), (22, 32), (23, 8), (24, 32), (25, 16), (26, 32), (27, 64), (28, 64), (29, -1), (30, 4), (31, 16), (32, 8), (33, 4), (34, 4), (35, -1), (36, 1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 4), (42, 4), (43, -1), (44, 4), (45, -1), (46, 16), (47, 1), (48, 16), (49, 8), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 16 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 28, 16, 17, 27, 42, 56, 20, 44, 52, 25]
 solution : [0, 8, 1, 12, 9, 38]


Solution : [0, 8, 1, 12, 9, 38] has cost 32.


Before backtrack at level 16
 pending : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 28, 16, 17, 27, 42, 56, 20, 44, 52, 25]
 solution : [0, 8, 1, 12, 9, 38]

After backtrack at level 16
 pending : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 28, 16, 17, 27, 42, 56, 20, 44, 52, 25, 35, 39, 43]
 solution : [0, 8, 1, 12, 9, 38]


Invert decision for 38 at level 15


New level: 16
 pending : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 28, 16, 17, 27, 42, 56, 20, 44, 52, 25, 35, 39, 43]
 solution : [0, 8, 1, 12, 9]


Before reduction : 
 pending  : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 28, 16, 17, 27, 42, 56, 20, 44, 52, 25, 35, 39, 43]
 solution : [0, 8, 1, 12, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, -1), (22, 32), (23, 8), (24, 32), (25, 16), (26, 32), (27, 64), (28, 64), (29, -1), (30, 4), (31, 16), (32, 8), (33, 4), (34, 4), (35, -1), (36, 1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 4), (42, 4), (43, -1), (44, 4), (45, -1), (46, 16), (47, 1), (48, 16), (49, 8), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, 64), (23, 16), (24, 64), (25, 32), (26, 64), (27, 128), (28, 128), (29, -1), (30, 8), (31, 16), (32, 8), (33, 8), (34, 8), (35, 4), (36, 4), (37, -1), (38, -1), (39, 128), (40, -1), (41, 16), (42, 32), (43, 16), (44, 32), (45, -1), (46, 32), (47, 2), (48, 32), (49, 16), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 16 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 28, 16, 17, 27, 42, 56, 20, 44, 52, 25, 35, 39, 43]
 solution : [0, 8, 1, 12, 9]


Solution : [0, 8, 1, 12, 9] has cost 22.


Decide in level 16 among pending : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 28, 16, 17, 27, 42, 56, 20, 44, 52, 25, 35, 39, 43]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, 64), (23, 16), (24, 64), (25, 32), (26, 64), (27, 128), (28, 128), (29, -1), (30, 8), (31, 16), (32, 8), (33, 8), (34, 8), (35, 4), (36, 4), (37, -1), (38, -1), (39, 128), (40, -1), (41, 16), (42, 32), (43, 16), (44, 32), (45, -1), (46, 32), (47, 2), (48, 32), (49, 16), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Decide 28 with phase True at level 16

After decision at level 16
 pending : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 16, 17, 27, 42, 56, 20, 44, 52, 25, 35, 39, 43]
 solution : [0, 8, 1, 12, 9, 28]


New level: 17
 pending : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 16, 17, 27, 42, 56, 20, 44, 52, 25, 35, 39, 43]
 solution : [0, 8, 1, 12, 9, 28]


Before reduction : 
 pending  : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 47, 57, 54, 55, 49, 31, 32, 30, 23, 36, 41, 16, 17, 27, 42, 56, 20, 44, 52, 25, 35, 39, 43]
 solution : [0, 8, 1, 12, 9, 28]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, 64), (23, 16), (24, 64), (25, 32), (26, 64), (27, 128), (28, 128), (29, -1), (30, 8), (31, 16), (32, 8), (33, 8), (34, 8), (35, 4), (36, 4), (37, -1), (38, -1), (39, 128), (40, -1), (41, 16), (42, 32), (43, 16), (44, 32), (45, -1), (46, 32), (47, 2), (48, 32), (49, 16), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, -1), (22, 32), (23, 0), (24, 32), (25, 16), (26, 32), (27, 0), (28, -1), (29, -1), (30, 0), (31, 2), (32, 2), (33, 8), (34, 8), (35, 2), (36, 0), (37, -1), (38, -1), (39, 64), (40, -1), (41, 16), (42, 32), (43, 2), (44, 32), (45, -1), (46, 4), (47, 0), (48, 4), (49, 0), (50, 8), (51, 8), (52, 8), (53, 8), (54, 8), (55, 8), (56, 8), (57, 8), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 17 : {36, 47, 49, 23, 27, 30}

After reduction : 
 pending  : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 57, 54, 55, 31, 32, 41, 16, 17, 42, 56, 20, 44, 52, 25, 35, 39, 43]
 solution : [0, 8, 1, 12, 9, 28]


Before reduction : 
 pending  : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 57, 54, 55, 31, 32, 41, 16, 17, 42, 56, 20, 44, 52, 25, 35, 39, 43]
 solution : [0, 8, 1, 12, 9, 28]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, -1), (22, 32), (23, 0), (24, 32), (25, 16), (26, 32), (27, 0), (28, -1), (29, -1), (30, 0), (31, 2), (32, 2), (33, 8), (34, 8), (35, 2), (36, 0), (37, -1), (38, -1), (39, 64), (40, -1), (41, 16), (42, 32), (43, 2), (44, 32), (45, -1), (46, 4), (47, 0), (48, 4), (49, 0), (50, 8), (51, 8), (52, 8), (53, 8), (54, 8), (55, 8), (56, 8), (57, 8), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, -1), (22, 32), (23, -1), (24, 32), (25, 16), (26, 32), (27, -1), (28, -1), (29, -1), (30, -1), (31, 2), (32, 2), (33, 8), (34, 8), (35, 2), (36, -1), (37, -1), (38, -1), (39, 64), (40, -1), (41, 16), (42, 32), (43, 2), (44, 32), (45, -1), (46, 4), (47, -1), (48, 4), (49, -1), (50, 8), (51, 8), (52, 8), (53, 8), (54, 8), (55, 8), (56, 8), (57, 8), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 17 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 57, 54, 55, 31, 32, 41, 16, 17, 42, 56, 20, 44, 52, 25, 35, 39, 43]
 solution : [0, 8, 1, 12, 9, 28]


Solution : [0, 8, 1, 12, 9, 28] has cost 32.


Before backtrack at level 17
 pending : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 57, 54, 55, 31, 32, 41, 16, 17, 42, 56, 20, 44, 52, 25, 35, 39, 43]
 solution : [0, 8, 1, 12, 9, 28]

After backtrack at level 17
 pending : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 57, 54, 55, 31, 32, 41, 16, 17, 42, 56, 20, 44, 52, 25, 35, 39, 43, 47, 49, 30, 23, 36, 27]
 solution : [0, 8, 1, 12, 9, 28]


Invert decision for 28 at level 16


New level: 17
 pending : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 57, 54, 55, 31, 32, 41, 16, 17, 42, 56, 20, 44, 52, 25, 35, 39, 43, 47, 49, 30, 23, 36, 27]
 solution : [0, 8, 1, 12, 9]


Before reduction : 
 pending  : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 57, 54, 55, 31, 32, 41, 16, 17, 42, 56, 20, 44, 52, 25, 35, 39, 43, 47, 49, 30, 23, 36, 27]
 solution : [0, 8, 1, 12, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, -1), (22, 32), (23, -1), (24, 32), (25, 16), (26, 32), (27, -1), (28, -1), (29, -1), (30, -1), (31, 2), (32, 2), (33, 8), (34, 8), (35, 2), (36, -1), (37, -1), (38, -1), (39, 64), (40, -1), (41, 16), (42, 32), (43, 2), (44, 32), (45, -1), (46, 4), (47, -1), (48, 4), (49, -1), (50, 8), (51, 8), (52, 8), (53, 8), (54, 8), (55, 8), (56, 8), (57, 8), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, 64), (23, 16), (24, 64), (25, 32), (26, 64), (27, 128), (28, -1), (29, -1), (30, 8), (31, 16), (32, 8), (33, 8), (34, 8), (35, 4), (36, 4), (37, -1), (38, -1), (39, 128), (40, -1), (41, 16), (42, 32), (43, 16), (44, 32), (45, -1), (46, 32), (47, 2), (48, 32), (49, 16), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 17 : set()

After reduction : 
 pending  : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 57, 54, 55, 31, 32, 41, 16, 17, 42, 56, 20, 44, 52, 25, 35, 39, 43, 47, 49, 30, 23, 36, 27]
 solution : [0, 8, 1, 12, 9]


Solution : [0, 8, 1, 12, 9] has cost 22.


Decide in level 17 among pending : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 57, 54, 55, 31, 32, 41, 16, 17, 42, 56, 20, 44, 52, 25, 35, 39, 43, 47, 49, 30, 23, 36, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, 64), (23, 16), (24, 64), (25, 32), (26, 64), (27, 128), (28, -1), (29, -1), (30, 8), (31, 16), (32, 8), (33, 8), (34, 8), (35, 4), (36, 4), (37, -1), (38, -1), (39, 128), (40, -1), (41, 16), (42, 32), (43, 16), (44, 32), (45, -1), (46, 32), (47, 2), (48, 32), (49, 16), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Decide 16 with phase True at level 17

After decision at level 17
 pending : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 57, 54, 55, 31, 32, 41, 17, 42, 56, 20, 44, 52, 25, 35, 39, 43, 47, 49, 30, 23, 36, 27]
 solution : [0, 8, 1, 12, 9, 16]


New level: 18
 pending : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 57, 54, 55, 31, 32, 41, 17, 42, 56, 20, 44, 52, 25, 35, 39, 43, 47, 49, 30, 23, 36, 27]
 solution : [0, 8, 1, 12, 9, 16]


Before reduction : 
 pending  : [58, 61, 59, 60, 33, 34, 24, 26, 13, 53, 50, 51, 22, 46, 48, 57, 54, 55, 31, 32, 41, 17, 42, 56, 20, 44, 52, 25, 35, 39, 43, 47, 49, 30, 23, 36, 27]
 solution : [0, 8, 1, 12, 9, 16]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, 64), (23, 16), (24, 64), (25, 32), (26, 64), (27, 128), (28, -1), (29, -1), (30, 8), (31, 16), (32, 8), (33, 8), (34, 8), (35, 4), (36, 4), (37, -1), (38, -1), (39, 128), (40, -1), (41, 16), (42, 32), (43, 16), (44, 32), (45, -1), (46, 32), (47, 2), (48, 32), (49, 16), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, -1), (29, -1), (30, 2), (31, 2), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 8), (40, -1), (41, 0), (42, 1), (43, 1), (44, 0), (45, -1), (46, 2), (47, 2), (48, 2), (49, 2), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 2), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 18 : {32, 33, 34, 35, 36, 41, 44, 17, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61}

After reduction : 
 pending  : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27]
 solution : [0, 8, 1, 12, 9, 16]


Before reduction : 
 pending  : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27]
 solution : [0, 8, 1, 12, 9, 16]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, -1), (29, -1), (30, 2), (31, 2), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 8), (40, -1), (41, 0), (42, 1), (43, 1), (44, 0), (45, -1), (46, 2), (47, 2), (48, 2), (49, 2), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 2), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, -1), (29, -1), (30, 2), (31, 2), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 8), (40, -1), (41, -1), (42, 1), (43, 1), (44, -1), (45, -1), (46, 2), (47, 2), (48, 2), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27]
 solution : [0, 8, 1, 12, 9, 16]


Solution : [0, 8, 1, 12, 9, 16] has cost 28.


Before backtrack at level 18
 pending : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27]
 solution : [0, 8, 1, 12, 9, 16]

After backtrack at level 18
 pending : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 17, 44, 52, 35, 36]
 solution : [0, 8, 1, 12, 9, 16]


Invert decision for 16 at level 17


New level: 18
 pending : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 17, 44, 52, 35, 36]
 solution : [0, 8, 1, 12, 9]


Before reduction : 
 pending  : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 17, 44, 52, 35, 36]
 solution : [0, 8, 1, 12, 9]

Essensial at level 18 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, -1), (29, -1), (30, 2), (31, 2), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 8), (40, -1), (41, -1), (42, 1), (43, 1), (44, -1), (45, -1), (46, 2), (47, 2), (48, 2), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, -1), (29, -1), (30, 2), (31, 2), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 8), (40, -1), (41, 0), (42, 1), (43, 1), (44, 0), (45, -1), (46, 2), (47, 2), (48, 2), (49, 2), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 2), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 18 : {32, 33, 34, 35, 36, 41, 44, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61}

After reduction : 
 pending  : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27]
 solution : [0, 8, 1, 12, 9, 17]


Before reduction : 
 pending  : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27]
 solution : [0, 8, 1, 12, 9, 17]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, -1), (29, -1), (30, 2), (31, 2), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 8), (40, -1), (41, 0), (42, 1), (43, 1), (44, 0), (45, -1), (46, 2), (47, 2), (48, 2), (49, 2), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 2), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, -1), (29, -1), (30, 2), (31, 2), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 8), (40, -1), (41, -1), (42, 1), (43, 1), (44, -1), (45, -1), (46, 2), (47, 2), (48, 2), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27]
 solution : [0, 8, 1, 12, 9, 17]


Solution : [0, 8, 1, 12, 9, 17] has cost 28.


Before backtrack at level 18
 pending : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27]
 solution : [0, 8, 1, 12, 9, 17]

After backtrack at level 18
 pending : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 17, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36]
 solution : [0, 8, 1, 12, 9]


Before backtrack at level 17
 pending : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 17, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36]
 solution : [0, 8, 1, 12, 9]

After backtrack at level 17
 pending : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 17, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 16]
 solution : [0, 8, 1, 12, 9]


Before backtrack at level 16
 pending : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 17, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 16]
 solution : [0, 8, 1, 12, 9]

After backtrack at level 16
 pending : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 17, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 16, 28]
 solution : [0, 8, 1, 12, 9]


Before backtrack at level 15
 pending : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 17, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 16, 28]
 solution : [0, 8, 1, 12, 9]

After backtrack at level 15
 pending : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 17, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 16, 28, 38]
 solution : [0, 8, 1, 12, 9]


Before backtrack at level 14
 pending : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 17, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 16, 28, 38]
 solution : [0, 8, 1, 12, 9]

After backtrack at level 14
 pending : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 17, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 16, 28, 38, 4, 3, 7, 2, 6, 5, 14]
 solution : [0, 8, 1, 12, 9]


Invert decision for 9 at level 13


New level: 14
 pending : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 17, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 16, 28, 38, 4, 3, 7, 2, 6, 5, 14]
 solution : [0, 8, 1, 12]


Before reduction : 
 pending  : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 17, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 16, 28, 38, 4, 3, 7, 2, 6, 5, 14]
 solution : [0, 8, 1, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, -1), (29, -1), (30, 2), (31, 2), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 8), (40, -1), (41, -1), (42, 1), (43, 1), (44, -1), (45, -1), (46, 2), (47, 2), (48, 2), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, 256), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 14 : set()

After reduction : 
 pending  : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 17, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 16, 28, 38, 4, 3, 7, 2, 6, 5, 14]
 solution : [0, 8, 1, 12]


Solution : [0, 8, 1, 12] has cost 16.


Decide in level 14 among pending : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 17, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 16, 28, 38, 4, 3, 7, 2, 6, 5, 14]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, 256), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 17, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 16, 28, 38, 4, 3, 7, 2, 6, 5]
 solution : [0, 8, 1, 12, 14]


New level: 15
 pending : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 17, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 16, 28, 38, 4, 3, 7, 2, 6, 5]
 solution : [0, 8, 1, 12, 14]


Before reduction : 
 pending  : [24, 26, 13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 17, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 16, 28, 38, 4, 3, 7, 2, 6, 5]
 solution : [0, 8, 1, 12, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, 256), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, 0), (25, 32), (26, 0), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 15 : {24, 17, 26, 16}

After reduction : 
 pending  : [13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 28, 38, 4, 3, 7, 2, 6, 5]
 solution : [0, 8, 1, 12, 14]


Before reduction : 
 pending  : [13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 28, 38, 4, 3, 7, 2, 6, 5]
 solution : [0, 8, 1, 12, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, 0), (25, 32), (26, 0), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 15 : set()

After reduction : 
 pending  : [13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 28, 38, 4, 3, 7, 2, 6, 5]
 solution : [0, 8, 1, 12, 14]


Solution : [0, 8, 1, 12, 14] has cost 22.


Decide in level 15 among pending : [13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 43, 47, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 28, 38, 4, 3, 7, 2, 6, 5]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Decide 43 with phase True at level 15

After decision at level 15
 pending : [13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 47, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 28, 38, 4, 3, 7, 2, 6, 5]
 solution : [0, 8, 1, 12, 14, 43]


New level: 16
 pending : [13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 47, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 28, 38, 4, 3, 7, 2, 6, 5]
 solution : [0, 8, 1, 12, 14, 43]


Before reduction : 
 pending  : [13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 39, 47, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 28, 38, 4, 3, 7, 2, 6, 5]
 solution : [0, 8, 1, 12, 14, 43]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, 128), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 64), (24, -1), (25, 32), (26, -1), (27, 1), (28, 1), (29, -1), (30, 32), (31, 16), (32, 8), (33, 4), (34, 4), (35, 2), (36, 64), (37, -1), (38, 0), (39, 0), (40, -1), (41, 8), (42, 8), (43, -1), (44, 32), (45, -1), (46, 4), (47, 64), (48, 4), (49, 64), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 16 : {38, 39}

After reduction : 
 pending  : [13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 47, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 28, 4, 3, 7, 2, 6, 5]
 solution : [0, 8, 1, 12, 14, 43]


Before reduction : 
 pending  : [13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 47, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 28, 4, 3, 7, 2, 6, 5]
 solution : [0, 8, 1, 12, 14, 43]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 64), (24, -1), (25, 32), (26, -1), (27, 1), (28, 1), (29, -1), (30, 32), (31, 16), (32, 8), (33, 4), (34, 4), (35, 2), (36, 64), (37, -1), (38, 0), (39, 0), (40, -1), (41, 8), (42, 8), (43, -1), (44, 32), (45, -1), (46, 4), (47, 64), (48, 4), (49, 64), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 64), (24, -1), (25, 32), (26, -1), (27, 1), (28, 1), (29, -1), (30, 32), (31, 16), (32, 8), (33, 4), (34, 4), (35, 2), (36, 64), (37, -1), (38, -1), (39, -1), (40, -1), (41, 8), (42, 8), (43, -1), (44, 32), (45, -1), (46, 4), (47, 64), (48, 4), (49, 64), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 16 : set()

After reduction : 
 pending  : [13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 47, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 28, 4, 3, 7, 2, 6, 5]
 solution : [0, 8, 1, 12, 14, 43]


Solution : [0, 8, 1, 12, 14, 43] has cost 32.


Before backtrack at level 16
 pending : [13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 47, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 28, 4, 3, 7, 2, 6, 5]
 solution : [0, 8, 1, 12, 14, 43]

After backtrack at level 16
 pending : [13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 47, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 28, 4, 3, 7, 2, 6, 5, 39, 38]
 solution : [0, 8, 1, 12, 14, 43]


Invert decision for 43 at level 15


New level: 16
 pending : [13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 47, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 28, 4, 3, 7, 2, 6, 5, 39, 38]
 solution : [0, 8, 1, 12, 14]


Before reduction : 
 pending  : [13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 47, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 28, 4, 3, 7, 2, 6, 5, 39, 38]
 solution : [0, 8, 1, 12, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 64), (24, -1), (25, 32), (26, -1), (27, 1), (28, 1), (29, -1), (30, 32), (31, 16), (32, 8), (33, 4), (34, 4), (35, 2), (36, 64), (37, -1), (38, -1), (39, -1), (40, -1), (41, 8), (42, 8), (43, -1), (44, 32), (45, -1), (46, 4), (47, 64), (48, 4), (49, 64), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 16 : set()

After reduction : 
 pending  : [13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 47, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 28, 4, 3, 7, 2, 6, 5, 39, 38]
 solution : [0, 8, 1, 12, 14]


Solution : [0, 8, 1, 12, 14] has cost 22.


Decide in level 16 among pending : [13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 47, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 28, 4, 3, 7, 2, 6, 5, 39, 38]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Decide 47 with phase True at level 16

After decision at level 16
 pending : [13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 28, 4, 3, 7, 2, 6, 5, 39, 38]
 solution : [0, 8, 1, 12, 14, 47]


New level: 17
 pending : [13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 28, 4, 3, 7, 2, 6, 5, 39, 38]
 solution : [0, 8, 1, 12, 14, 47]


Before reduction : 
 pending  : [13, 22, 46, 48, 57, 31, 42, 56, 20, 25, 49, 30, 23, 27, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 28, 4, 3, 7, 2, 6, 5, 39, 38]
 solution : [0, 8, 1, 12, 14, 47]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 8), (47, 128), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 32), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, 8), (24, -1), (25, 8), (26, -1), (27, 0), (28, 0), (29, -1), (30, 2), (31, 8), (32, 4), (33, 2), (34, 2), (35, 4), (36, 2), (37, -1), (38, 0), (39, 0), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 0), (47, -1), (48, 0), (49, 8), (50, 8), (51, 8), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 8), (59, 8), (60, 8), (61, 8)]

Covered at level 17 : {38, 39, 46, 48, 27, 28}

After reduction : 
 pending  : [13, 22, 57, 31, 42, 56, 20, 25, 49, 30, 23, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5]
 solution : [0, 8, 1, 12, 14, 47]


Before reduction : 
 pending  : [13, 22, 57, 31, 42, 56, 20, 25, 49, 30, 23, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5]
 solution : [0, 8, 1, 12, 14, 47]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 32), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, 8), (24, -1), (25, 8), (26, -1), (27, 0), (28, 0), (29, -1), (30, 2), (31, 8), (32, 4), (33, 2), (34, 2), (35, 4), (36, 2), (37, -1), (38, 0), (39, 0), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 0), (47, -1), (48, 0), (49, 8), (50, 8), (51, 8), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 8), (59, 8), (60, 8), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 32), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, 8), (24, -1), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 8), (32, 4), (33, 2), (34, 2), (35, 4), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, -1), (47, -1), (48, -1), (49, 8), (50, 8), (51, 8), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 8), (59, 8), (60, 8), (61, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [13, 22, 57, 31, 42, 56, 20, 25, 49, 30, 23, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5]
 solution : [0, 8, 1, 12, 14, 47]


Solution : [0, 8, 1, 12, 14, 47] has cost 32.


Before backtrack at level 17
 pending : [13, 22, 57, 31, 42, 56, 20, 25, 49, 30, 23, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5]
 solution : [0, 8, 1, 12, 14, 47]

After backtrack at level 17
 pending : [13, 22, 57, 31, 42, 56, 20, 25, 49, 30, 23, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5, 46, 48, 27, 28, 39, 38]
 solution : [0, 8, 1, 12, 14, 47]


Invert decision for 47 at level 16


New level: 17
 pending : [13, 22, 57, 31, 42, 56, 20, 25, 49, 30, 23, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5, 46, 48, 27, 28, 39, 38]
 solution : [0, 8, 1, 12, 14]


Before reduction : 
 pending  : [13, 22, 57, 31, 42, 56, 20, 25, 49, 30, 23, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5, 46, 48, 27, 28, 39, 38]
 solution : [0, 8, 1, 12, 14]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 32), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, 8), (24, -1), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 8), (32, 4), (33, 2), (34, 2), (35, 4), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, -1), (47, -1), (48, -1), (49, 8), (50, 8), (51, 8), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 8), (59, 8), (60, 8), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 17 : set()

After reduction : 
 pending  : [13, 22, 57, 31, 42, 56, 20, 25, 49, 30, 23, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5, 46, 48, 27, 28, 39, 38]
 solution : [0, 8, 1, 12, 14]


Solution : [0, 8, 1, 12, 14] has cost 22.


Decide in level 17 among pending : [13, 22, 57, 31, 42, 56, 20, 25, 49, 30, 23, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5, 46, 48, 27, 28, 39, 38]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Decide 49 with phase True at level 17

After decision at level 17
 pending : [13, 22, 57, 31, 42, 56, 20, 25, 30, 23, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5, 46, 48, 27, 28, 39, 38]
 solution : [0, 8, 1, 12, 14, 49]


New level: 18
 pending : [13, 22, 57, 31, 42, 56, 20, 25, 30, 23, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5, 46, 48, 27, 28, 39, 38]
 solution : [0, 8, 1, 12, 14, 49]


Before reduction : 
 pending  : [13, 22, 57, 31, 42, 56, 20, 25, 30, 23, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5, 46, 48, 27, 28, 39, 38]
 solution : [0, 8, 1, 12, 14, 49]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, 128), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 0), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 2), (32, 2), (33, 8), (34, 8), (35, 64), (36, 1), (37, -1), (38, 1), (39, 1), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 2), (47, -1), (48, 2), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 8), (55, 8), (56, 8), (57, 8), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 18 : {27, 28, 30, 23}

After reduction : 
 pending  : [13, 22, 57, 31, 42, 56, 20, 25, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5, 46, 48, 39, 38]
 solution : [0, 8, 1, 12, 14, 49]


Before reduction : 
 pending  : [13, 22, 57, 31, 42, 56, 20, 25, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5, 46, 48, 39, 38]
 solution : [0, 8, 1, 12, 14, 49]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 0), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 2), (32, 2), (33, 8), (34, 8), (35, 64), (36, 1), (37, -1), (38, 1), (39, 1), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 2), (47, -1), (48, 2), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 8), (55, 8), (56, 8), (57, 8), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 2), (32, 2), (33, 8), (34, 8), (35, 64), (36, 1), (37, -1), (38, 1), (39, 1), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 2), (47, -1), (48, 2), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 8), (55, 8), (56, 8), (57, 8), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 18 : set()

After reduction : 
 pending  : [13, 22, 57, 31, 42, 56, 20, 25, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5, 46, 48, 39, 38]
 solution : [0, 8, 1, 12, 14, 49]


Solution : [0, 8, 1, 12, 14, 49] has cost 32.


Before backtrack at level 18
 pending : [13, 22, 57, 31, 42, 56, 20, 25, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5, 46, 48, 39, 38]
 solution : [0, 8, 1, 12, 14, 49]

After backtrack at level 18
 pending : [13, 22, 57, 31, 42, 56, 20, 25, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5, 46, 48, 39, 38, 30, 23, 27, 28]
 solution : [0, 8, 1, 12, 14, 49]


Invert decision for 49 at level 17


New level: 18
 pending : [13, 22, 57, 31, 42, 56, 20, 25, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5, 46, 48, 39, 38, 30, 23, 27, 28]
 solution : [0, 8, 1, 12, 14]


Before reduction : 
 pending  : [13, 22, 57, 31, 42, 56, 20, 25, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5, 46, 48, 39, 38, 30, 23, 27, 28]
 solution : [0, 8, 1, 12, 14]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 2), (32, 2), (33, 8), (34, 8), (35, 64), (36, 1), (37, -1), (38, 1), (39, 1), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 2), (47, -1), (48, 2), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 8), (55, 8), (56, 8), (57, 8), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 18 : set()

After reduction : 
 pending  : [13, 22, 57, 31, 42, 56, 20, 25, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5, 46, 48, 39, 38, 30, 23, 27, 28]
 solution : [0, 8, 1, 12, 14]


Solution : [0, 8, 1, 12, 14] has cost 22.


Decide in level 18 among pending : [13, 22, 57, 31, 42, 56, 20, 25, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 3, 7, 2, 6, 5, 46, 48, 39, 38, 30, 23, 27, 28]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Decide 3 with phase True at level 18

After decision at level 18
 pending : [13, 22, 57, 31, 42, 56, 20, 25, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 7, 2, 6, 5, 46, 48, 39, 38, 30, 23, 27, 28]
 solution : [0, 8, 1, 12, 14, 3]


New level: 19
 pending : [13, 22, 57, 31, 42, 56, 20, 25, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 7, 2, 6, 5, 46, 48, 39, 38, 30, 23, 27, 28]
 solution : [0, 8, 1, 12, 14, 3]


Before reduction : 
 pending  : [13, 22, 57, 31, 42, 56, 20, 25, 58, 61, 59, 60, 33, 34, 53, 50, 51, 54, 55, 32, 41, 44, 52, 35, 36, 4, 7, 2, 6, 5, 46, 48, 39, 38, 30, 23, 27, 28]
 solution : [0, 8, 1, 12, 14, 3]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, 1), (6, 0), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, 0), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, -1), (44, 2), (45, -1), (46, 0), (47, -1), (48, 0), (49, -1), (50, 0), (51, 0), (52, 2), (53, 2), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 19 : {2, 4, 6, 23, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 46, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [13, 22, 20, 25, 53, 44, 52, 7, 5]
 solution : [0, 8, 1, 12, 14, 3]


Before reduction : 
 pending  : [13, 22, 20, 25, 53, 44, 52, 7, 5]
 solution : [0, 8, 1, 12, 14, 3]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, 1), (6, 0), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, 0), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, -1), (44, 2), (45, -1), (46, 0), (47, -1), (48, 0), (49, -1), (50, 0), (51, 0), (52, 2), (53, 2), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, 2), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [13, 22, 20, 25, 53, 44, 52, 7, 5]
 solution : [0, 8, 1, 12, 14, 3]


Solution : [0, 8, 1, 12, 14, 3] has cost 28.


Before backtrack at level 19
 pending : [13, 22, 20, 25, 53, 44, 52, 7, 5]
 solution : [0, 8, 1, 12, 14, 3]

After backtrack at level 19
 pending : [13, 22, 20, 25, 53, 44, 52, 7, 5, 57, 31, 42, 56, 58, 61, 59, 60, 33, 34, 50, 51, 54, 55, 32, 41, 35, 36, 4, 2, 6, 46, 48, 39, 38, 30, 23, 27, 28]
 solution : [0, 8, 1, 12, 14, 3]


Invert decision for 3 at level 18


New level: 19
 pending : [13, 22, 20, 25, 53, 44, 52, 7, 5, 57, 31, 42, 56, 58, 61, 59, 60, 33, 34, 50, 51, 54, 55, 32, 41, 35, 36, 4, 2, 6, 46, 48, 39, 38, 30, 23, 27, 28]
 solution : [0, 8, 1, 12, 14]


Before reduction : 
 pending  : [13, 22, 20, 25, 53, 44, 52, 7, 5, 57, 31, 42, 56, 58, 61, 59, 60, 33, 34, 50, 51, 54, 55, 32, 41, 35, 36, 4, 2, 6, 46, 48, 39, 38, 30, 23, 27, 28]
 solution : [0, 8, 1, 12, 14]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, 2), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 19 : set()

After reduction : 
 pending  : [13, 22, 20, 25, 53, 44, 52, 7, 5, 57, 31, 42, 56, 58, 61, 59, 60, 33, 34, 50, 51, 54, 55, 32, 41, 35, 36, 4, 2, 6, 46, 48, 39, 38, 30, 23, 27, 28]
 solution : [0, 8, 1, 12, 14]


Solution : [0, 8, 1, 12, 14] has cost 22.


Decide in level 19 among pending : [13, 22, 20, 25, 53, 44, 52, 7, 5, 57, 31, 42, 56, 58, 61, 59, 60, 33, 34, 50, 51, 54, 55, 32, 41, 35, 36, 4, 2, 6, 46, 48, 39, 38, 30, 23, 27, 28]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Decide 7 with phase True at level 19

After decision at level 19
 pending : [13, 22, 20, 25, 53, 44, 52, 5, 57, 31, 42, 56, 58, 61, 59, 60, 33, 34, 50, 51, 54, 55, 32, 41, 35, 36, 4, 2, 6, 46, 48, 39, 38, 30, 23, 27, 28]
 solution : [0, 8, 1, 12, 14, 7]


New level: 20
 pending : [13, 22, 20, 25, 53, 44, 52, 5, 57, 31, 42, 56, 58, 61, 59, 60, 33, 34, 50, 51, 54, 55, 32, 41, 35, 36, 4, 2, 6, 46, 48, 39, 38, 30, 23, 27, 28]
 solution : [0, 8, 1, 12, 14, 7]


Before reduction : 
 pending  : [13, 22, 20, 25, 53, 44, 52, 5, 57, 31, 42, 56, 58, 61, 59, 60, 33, 34, 50, 51, 54, 55, 32, 41, 35, 36, 4, 2, 6, 46, 48, 39, 38, 30, 23, 27, 28]
 solution : [0, 8, 1, 12, 14, 7]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 0), (5, 8), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, 8), (24, -1), (25, 16), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 4), (36, 2), (37, -1), (38, 0), (39, 0), (40, -1), (41, 8), (42, 16), (43, -1), (44, 32), (45, -1), (46, 0), (47, -1), (48, 0), (49, -1), (50, 4), (51, 4), (52, 16), (53, 16), (54, 8), (55, 8), (56, 16), (57, 16), (58, 4), (59, 4), (60, 4), (61, 4)]

Covered at level 20 : {32, 33, 34, 4, 38, 39, 46, 48, 20, 22, 27, 28, 30, 31}

After reduction : 
 pending  : [13, 25, 53, 44, 52, 5, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 6, 23]
 solution : [0, 8, 1, 12, 14, 7]


Before reduction : 
 pending  : [13, 25, 53, 44, 52, 5, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 6, 23]
 solution : [0, 8, 1, 12, 14, 7]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 0), (5, 8), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, 8), (24, -1), (25, 16), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 4), (36, 2), (37, -1), (38, 0), (39, 0), (40, -1), (41, 8), (42, 16), (43, -1), (44, 32), (45, -1), (46, 0), (47, -1), (48, 0), (49, -1), (50, 4), (51, 4), (52, 16), (53, 16), (54, 8), (55, 8), (56, 16), (57, 16), (58, 4), (59, 4), (60, 4), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, 8), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 8), (24, -1), (25, 16), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 4), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, 8), (42, 16), (43, -1), (44, 32), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, 4), (51, 4), (52, 16), (53, 16), (54, 8), (55, 8), (56, 16), (57, 16), (58, 4), (59, 4), (60, 4), (61, 4)]

Covered at level 20 : set()

After reduction : 
 pending  : [13, 25, 53, 44, 52, 5, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 6, 23]
 solution : [0, 8, 1, 12, 14, 7]


Solution : [0, 8, 1, 12, 14, 7] has cost 31.


Before backtrack at level 20
 pending : [13, 25, 53, 44, 52, 5, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 6, 23]
 solution : [0, 8, 1, 12, 14, 7]

After backtrack at level 20
 pending : [13, 25, 53, 44, 52, 5, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 6, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28]
 solution : [0, 8, 1, 12, 14, 7]


Invert decision for 7 at level 19


New level: 20
 pending : [13, 25, 53, 44, 52, 5, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 6, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28]
 solution : [0, 8, 1, 12, 14]


Before reduction : 
 pending  : [13, 25, 53, 44, 52, 5, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 6, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28]
 solution : [0, 8, 1, 12, 14]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, 8), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 8), (24, -1), (25, 16), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 4), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, 8), (42, 16), (43, -1), (44, 32), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, 4), (51, 4), (52, 16), (53, 16), (54, 8), (55, 8), (56, 16), (57, 16), (58, 4), (59, 4), (60, 4), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 64), (5, 128), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 20 : set()

After reduction : 
 pending  : [13, 25, 53, 44, 52, 5, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 6, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28]
 solution : [0, 8, 1, 12, 14]


Solution : [0, 8, 1, 12, 14] has cost 22.


Decide in level 20 among pending : [13, 25, 53, 44, 52, 5, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 6, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 64), (5, 128), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Decide 5 with phase True at level 20

After decision at level 20
 pending : [13, 25, 53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 6, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28]
 solution : [0, 8, 1, 12, 14, 5]


New level: 21
 pending : [13, 25, 53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 6, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28]
 solution : [0, 8, 1, 12, 14, 5]


Before reduction : 
 pending  : [13, 25, 53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 6, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28]
 solution : [0, 8, 1, 12, 14, 5]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 64), (5, 128), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 16), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 8), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 16), (43, -1), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 21 : {6}

After reduction : 
 pending  : [13, 25, 53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28]
 solution : [0, 8, 1, 12, 14, 5]


Before reduction : 
 pending  : [13, 25, 53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28]
 solution : [0, 8, 1, 12, 14, 5]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 16), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 8), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 16), (43, -1), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 8), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 16), (43, -1), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 21 : set()

After reduction : 
 pending  : [13, 25, 53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28]
 solution : [0, 8, 1, 12, 14, 5]


Solution : [0, 8, 1, 12, 14, 5] has cost 27.


Before backtrack at level 21
 pending : [13, 25, 53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28]
 solution : [0, 8, 1, 12, 14, 5]

After backtrack at level 21
 pending : [13, 25, 53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28, 6]
 solution : [0, 8, 1, 12, 14, 5]


Invert decision for 5 at level 20


New level: 21
 pending : [13, 25, 53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28, 6]
 solution : [0, 8, 1, 12, 14]


Before reduction : 
 pending  : [13, 25, 53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28, 6]
 solution : [0, 8, 1, 12, 14]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 8), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 16), (43, -1), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 64), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 21 : set()

After reduction : 
 pending  : [13, 25, 53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28, 6]
 solution : [0, 8, 1, 12, 14]


Solution : [0, 8, 1, 12, 14] has cost 22.


Decide in level 21 among pending : [13, 25, 53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 2, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28, 6]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 64), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

Decide 2 with phase True at level 21

After decision at level 21
 pending : [13, 25, 53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28, 6]
 solution : [0, 8, 1, 12, 14, 2]


New level: 22
 pending : [13, 25, 53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28, 6]
 solution : [0, 8, 1, 12, 14, 2]


Before reduction : 
 pending  : [13, 25, 53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 22, 20, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28, 6]
 solution : [0, 8, 1, 12, 14, 2]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 64), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 4), (28, 4), (29, -1), (30, 64), (31, 16), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, 4), (40, -1), (41, 16), (42, 32), (43, -1), (44, 32), (45, -1), (46, 8), (47, -1), (48, 8), (49, -1), (50, 16), (51, 16), (52, 32), (53, 32), (54, 16), (55, 16), (56, 32), (57, 32), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, 0), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, -1), (44, 2), (45, -1), (46, 0), (47, -1), (48, 0), (49, -1), (50, 0), (51, 0), (52, 2), (53, 2), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 22 : {4, 6, 23, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 46, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [13, 25, 53, 44, 52, 22, 20]
 solution : [0, 8, 1, 12, 14, 2]


Before reduction : 
 pending  : [13, 25, 53, 44, 52, 22, 20]
 solution : [0, 8, 1, 12, 14, 2]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, 0), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, -1), (44, 2), (45, -1), (46, 0), (47, -1), (48, 0), (49, -1), (50, 0), (51, 0), (52, 2), (53, 2), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, 2), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 22 : set()

After reduction : 
 pending  : [13, 25, 53, 44, 52, 22, 20]
 solution : [0, 8, 1, 12, 14, 2]


Solution : [0, 8, 1, 12, 14, 2] has cost 28.


Before backtrack at level 22
 pending : [13, 25, 53, 44, 52, 22, 20]
 solution : [0, 8, 1, 12, 14, 2]

After backtrack at level 22
 pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28, 6]
 solution : [0, 8, 1, 12, 14, 2]


Invert decision for 2 at level 21


New level: 22
 pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28, 6]
 solution : [0, 8, 1, 12, 14]


Before reduction : 
 pending  : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 31, 33, 34, 32, 4, 46, 48, 39, 38, 30, 27, 28, 6]
 solution : [0, 8, 1, 12, 14]

Essensial at level 22 : {4, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, 2), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, 8), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 8), (36, 2), (37, -1), (38, 0), (39, 0), (40, -1), (41, 8), (42, 16), (43, -1), (44, 32), (45, -1), (46, 0), (47, -1), (48, 0), (49, -1), (50, 4), (51, 4), (52, 32), (53, 32), (54, 8), (55, 8), (56, 16), (57, 16), (58, 4), (59, 4), (60, 4), (61, 4)]

Covered at level 22 : {32, 33, 34, 38, 39, 46, 48, 27, 28, 30, 31}

After reduction : 
 pending  : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23]
 solution : [0, 8, 1, 12, 14, 4, 6]


Before reduction : 
 pending  : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23]
 solution : [0, 8, 1, 12, 14, 4, 6]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, 8), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 8), (36, 2), (37, -1), (38, 0), (39, 0), (40, -1), (41, 8), (42, 16), (43, -1), (44, 32), (45, -1), (46, 0), (47, -1), (48, 0), (49, -1), (50, 4), (51, 4), (52, 32), (53, 32), (54, 8), (55, 8), (56, 16), (57, 16), (58, 4), (59, 4), (60, 4), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, 8), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 8), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, 8), (42, 16), (43, -1), (44, 32), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, 4), (51, 4), (52, 32), (53, 32), (54, 8), (55, 8), (56, 16), (57, 16), (58, 4), (59, 4), (60, 4), (61, 4)]

Covered at level 22 : set()

After reduction : 
 pending  : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23]
 solution : [0, 8, 1, 12, 14, 4, 6]


Solution : [0, 8, 1, 12, 14, 4, 6] has cost 33.


Before backtrack at level 22
 pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23]
 solution : [0, 8, 1, 12, 14, 4, 6]

After backtrack at level 22
 pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28]
 solution : [0, 8, 1, 12, 14]


Before backtrack at level 21
 pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28]
 solution : [0, 8, 1, 12, 14]

After backtrack at level 21
 pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2]
 solution : [0, 8, 1, 12, 14]


Before backtrack at level 20
 pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2]
 solution : [0, 8, 1, 12, 14]

After backtrack at level 20
 pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5]
 solution : [0, 8, 1, 12, 14]


Before backtrack at level 19
 pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5]
 solution : [0, 8, 1, 12, 14]

After backtrack at level 19
 pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7]
 solution : [0, 8, 1, 12, 14]


Before backtrack at level 18
 pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7]
 solution : [0, 8, 1, 12, 14]

After backtrack at level 18
 pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3]
 solution : [0, 8, 1, 12, 14]


Before backtrack at level 17
 pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3]
 solution : [0, 8, 1, 12, 14]

After backtrack at level 17
 pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49]
 solution : [0, 8, 1, 12, 14]


Before backtrack at level 16
 pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49]
 solution : [0, 8, 1, 12, 14]

After backtrack at level 16
 pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47]
 solution : [0, 8, 1, 12, 14]


Before backtrack at level 15
 pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47]
 solution : [0, 8, 1, 12, 14]

After backtrack at level 15
 pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43]
 solution : [0, 8, 1, 12, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43]
 solution : [0, 8, 1, 12]


Before reduction : 
 pending  : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43]
 solution : [0, 8, 1, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, 8), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 8), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, 8), (42, 16), (43, -1), (44, 32), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, 4), (51, 4), (52, 32), (53, 32), (54, 8), (55, 8), (56, 16), (57, 16), (58, 4), (59, 4), (60, 4), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 15 : set()

After reduction : 
 pending  : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43]
 solution : [0, 8, 1, 12]


Solution : [0, 8, 1, 12] has cost 16.


Decide in level 15 among pending : [13, 25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 13 with phase True at level 15

After decision at level 15
 pending : [25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43]
 solution : [0, 8, 1, 12, 13]


New level: 16
 pending : [25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43]
 solution : [0, 8, 1, 12, 13]


Before reduction : 
 pending  : [25, 53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43]
 solution : [0, 8, 1, 12, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 128), (28, 128), (29, -1), (30, 64), (31, 64), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 128), (43, 128), (44, 128), (45, -1), (46, 64), (47, 128), (48, 64), (49, 128), (50, 64), (51, 64), (52, 128), (53, 128), (54, 64), (55, 64), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 32), (25, 0), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 16 : {25}

After reduction : 
 pending  : [53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43]
 solution : [0, 8, 1, 12, 13]


Before reduction : 
 pending  : [53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43]
 solution : [0, 8, 1, 12, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 32), (25, 0), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 16 : set()

After reduction : 
 pending  : [53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43]
 solution : [0, 8, 1, 12, 13]


Solution : [0, 8, 1, 12, 13] has cost 22.


Decide in level 16 among pending : [53, 44, 52, 22, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 22 with phase True at level 16

After decision at level 16
 pending : [53, 44, 52, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43]
 solution : [0, 8, 1, 12, 13, 22]


New level: 17
 pending : [53, 44, 52, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43]
 solution : [0, 8, 1, 12, 13, 22]


Before reduction : 
 pending  : [53, 44, 52, 20, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 46, 48, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43]
 solution : [0, 8, 1, 12, 13, 22]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 32), (24, 8), (25, -1), (26, 8), (27, 32), (28, 32), (29, -1), (30, 16), (31, 32), (32, 32), (33, 16), (34, 16), (35, 64), (36, 64), (37, -1), (38, 32), (39, 32), (40, -1), (41, 64), (42, 64), (43, 32), (44, 64), (45, -1), (46, 0), (47, 8), (48, 0), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 64), (56, 64), (57, 64), (58, 32), (59, 32), (60, 32), (61, 32)]

Covered at level 17 : {48, 20, 46}

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43]
 solution : [0, 8, 1, 12, 13, 22]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43]
 solution : [0, 8, 1, 12, 13, 22]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 32), (24, 8), (25, -1), (26, 8), (27, 32), (28, 32), (29, -1), (30, 16), (31, 32), (32, 32), (33, 16), (34, 16), (35, 64), (36, 64), (37, -1), (38, 32), (39, 32), (40, -1), (41, 64), (42, 64), (43, 32), (44, 64), (45, -1), (46, 0), (47, 8), (48, 0), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 64), (56, 64), (57, 64), (58, 32), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, 8), (25, -1), (26, 8), (27, 32), (28, 32), (29, -1), (30, 16), (31, 32), (32, 32), (33, 16), (34, 16), (35, 64), (36, 64), (37, -1), (38, 32), (39, 32), (40, -1), (41, 64), (42, 64), (43, 32), (44, 64), (45, -1), (46, -1), (47, 8), (48, -1), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 64), (56, 64), (57, 64), (58, 32), (59, 32), (60, 32), (61, 32)]

Covered at level 17 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43]
 solution : [0, 8, 1, 12, 13, 22]


Solution : [0, 8, 1, 12, 13, 22] has cost 32.


Before backtrack at level 17
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43]
 solution : [0, 8, 1, 12, 13, 22]

After backtrack at level 17
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43, 20, 46, 48]
 solution : [0, 8, 1, 12, 13, 22]


Invert decision for 22 at level 16


New level: 17
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43, 20, 46, 48]
 solution : [0, 8, 1, 12, 13]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43, 20, 46, 48]
 solution : [0, 8, 1, 12, 13]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, 8), (25, -1), (26, 8), (27, 32), (28, 32), (29, -1), (30, 16), (31, 32), (32, 32), (33, 16), (34, 16), (35, 64), (36, 64), (37, -1), (38, 32), (39, 32), (40, -1), (41, 64), (42, 64), (43, 32), (44, 64), (45, -1), (46, -1), (47, 8), (48, -1), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 64), (56, 64), (57, 64), (58, 32), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, 128), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 17 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43, 20, 46, 48]
 solution : [0, 8, 1, 12, 13]


Solution : [0, 8, 1, 12, 13] has cost 22.


Decide in level 17 among pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 23, 4, 6, 31, 33, 34, 32, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43, 20, 46, 48]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, 128), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 23 with phase True at level 17

After decision at level 17
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43, 20, 46, 48]
 solution : [0, 8, 1, 12, 13, 23]


New level: 18
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43, 20, 46, 48]
 solution : [0, 8, 1, 12, 13, 23]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 39, 38, 30, 27, 28, 2, 5, 7, 3, 49, 47, 24, 26, 17, 16, 43, 20, 46, 48]
 solution : [0, 8, 1, 12, 13, 23]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, 128), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, 32), (28, 32), (29, -1), (30, 0), (31, 16), (32, 16), (33, 32), (34, 32), (35, 64), (36, 8), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 32), (44, 64), (45, -1), (46, 16), (47, 8), (48, 16), (49, 0), (50, 64), (51, 64), (52, 64), (53, 64), (54, 32), (55, 32), (56, 32), (57, 32), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 18 : {49, 30}

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 39, 38, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48]
 solution : [0, 8, 1, 12, 13, 23]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 39, 38, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48]
 solution : [0, 8, 1, 12, 13, 23]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, 32), (28, 32), (29, -1), (30, 0), (31, 16), (32, 16), (33, 32), (34, 32), (35, 64), (36, 8), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 32), (44, 64), (45, -1), (46, 16), (47, 8), (48, 16), (49, 0), (50, 64), (51, 64), (52, 64), (53, 64), (54, 32), (55, 32), (56, 32), (57, 32), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, 16), (33, 32), (34, 32), (35, 64), (36, 8), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 32), (44, 64), (45, -1), (46, 16), (47, 8), (48, 16), (49, -1), (50, 64), (51, 64), (52, 64), (53, 64), (54, 32), (55, 32), (56, 32), (57, 32), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 18 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 39, 38, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48]
 solution : [0, 8, 1, 12, 13, 23]


Solution : [0, 8, 1, 12, 13, 23] has cost 32.


Before backtrack at level 18
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 39, 38, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48]
 solution : [0, 8, 1, 12, 13, 23]

After backtrack at level 18
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 39, 38, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 12, 13, 23]


Invert decision for 23 at level 17


New level: 18
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 39, 38, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 12, 13]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 39, 38, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 12, 13]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, 16), (33, 32), (34, 32), (35, 64), (36, 8), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 32), (44, 64), (45, -1), (46, 16), (47, 8), (48, 16), (49, -1), (50, 64), (51, 64), (52, 64), (53, 64), (54, 32), (55, 32), (56, 32), (57, 32), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 18 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 39, 38, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 12, 13]


Solution : [0, 8, 1, 12, 13] has cost 22.


Decide in level 18 among pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 39, 38, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 39 with phase True at level 18

After decision at level 18
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 38, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 12, 13, 39]


New level: 19
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 38, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 12, 13, 39]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 38, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 12, 13, 39]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, 16), (27, 64), (28, 64), (29, -1), (30, 64), (31, 32), (32, 32), (33, 16), (34, 16), (35, 16), (36, 64), (37, -1), (38, 0), (39, -1), (40, -1), (41, 64), (42, 64), (43, 32), (44, 64), (45, -1), (46, 32), (47, 32), (48, 32), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 19 : {38}

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 12, 13, 39]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 12, 13, 39]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, 16), (27, 64), (28, 64), (29, -1), (30, 64), (31, 32), (32, 32), (33, 16), (34, 16), (35, 16), (36, 64), (37, -1), (38, 0), (39, -1), (40, -1), (41, 64), (42, 64), (43, 32), (44, 64), (45, -1), (46, 32), (47, 32), (48, 32), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, 16), (27, 64), (28, 64), (29, -1), (30, 64), (31, 32), (32, 32), (33, 16), (34, 16), (35, 16), (36, 64), (37, -1), (38, -1), (39, -1), (40, -1), (41, 64), (42, 64), (43, 32), (44, 64), (45, -1), (46, 32), (47, 32), (48, 32), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 19 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 12, 13, 39]


Solution : [0, 8, 1, 12, 13, 39] has cost 32.


Before backtrack at level 19
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 12, 13, 39]

After backtrack at level 19
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38]
 solution : [0, 8, 1, 12, 13, 39]


Invert decision for 39 at level 18


New level: 19
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38]
 solution : [0, 8, 1, 12, 13]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38]
 solution : [0, 8, 1, 12, 13]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, 16), (27, 64), (28, 64), (29, -1), (30, 64), (31, 32), (32, 32), (33, 16), (34, 16), (35, 16), (36, 64), (37, -1), (38, -1), (39, -1), (40, -1), (41, 64), (42, 64), (43, 32), (44, 64), (45, -1), (46, 32), (47, 32), (48, 32), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, -1), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 19 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38]
 solution : [0, 8, 1, 12, 13]


Solution : [0, 8, 1, 12, 13] has cost 22.


Decide in level 19 among pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 27, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, -1), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 27 with phase True at level 19

After decision at level 19
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38]
 solution : [0, 8, 1, 12, 13, 27]


New level: 20
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38]
 solution : [0, 8, 1, 12, 13, 27]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 28, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38]
 solution : [0, 8, 1, 12, 13, 27]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, -1), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, 16), (27, -1), (28, 0), (29, -1), (30, 16), (31, 16), (32, 16), (33, 32), (34, 32), (35, 64), (36, 16), (37, -1), (38, 64), (39, -1), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 16), (47, 32), (48, 16), (49, 32), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 20 : {28}

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38]
 solution : [0, 8, 1, 12, 13, 27]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38]
 solution : [0, 8, 1, 12, 13, 27]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, 16), (27, -1), (28, 0), (29, -1), (30, 16), (31, 16), (32, 16), (33, 32), (34, 32), (35, 64), (36, 16), (37, -1), (38, 64), (39, -1), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 16), (47, 32), (48, 16), (49, 32), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, 16), (27, -1), (28, -1), (29, -1), (30, 16), (31, 16), (32, 16), (33, 32), (34, 32), (35, 64), (36, 16), (37, -1), (38, 64), (39, -1), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 16), (47, 32), (48, 16), (49, 32), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 20 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38]
 solution : [0, 8, 1, 12, 13, 27]


Solution : [0, 8, 1, 12, 13, 27] has cost 32.


Before backtrack at level 20
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38]
 solution : [0, 8, 1, 12, 13, 27]

After backtrack at level 20
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38, 28]
 solution : [0, 8, 1, 12, 13, 27]


Invert decision for 27 at level 19


New level: 20
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38, 28]
 solution : [0, 8, 1, 12, 13]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38, 28]
 solution : [0, 8, 1, 12, 13]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 64), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, 16), (27, -1), (28, -1), (29, -1), (30, 16), (31, 16), (32, 16), (33, 32), (34, 32), (35, 64), (36, 16), (37, -1), (38, 64), (39, -1), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 16), (47, 32), (48, 16), (49, 32), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, -1), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, -1), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 20 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38, 28]
 solution : [0, 8, 1, 12, 13]


Solution : [0, 8, 1, 12, 13] has cost 22.


Decide in level 20 among pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 2, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38, 28]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, -1), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, -1), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 2 with phase True at level 20

After decision at level 20
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38, 28]
 solution : [0, 8, 1, 12, 13, 2]


New level: 21
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38, 28]
 solution : [0, 8, 1, 12, 13, 2]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 4, 6, 31, 33, 34, 32, 5, 7, 3, 47, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38, 28]
 solution : [0, 8, 1, 12, 13, 2]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, -1), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, -1), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, -1), (28, 128), (29, -1), (30, 4), (31, 8), (32, 8), (33, 8), (34, 8), (35, 4), (36, 4), (37, -1), (38, 128), (39, -1), (40, -1), (41, 16), (42, 16), (43, 32), (44, 16), (45, -1), (46, 64), (47, 0), (48, 64), (49, 8), (50, 16), (51, 16), (52, 16), (53, 16), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 21 : {3, 4, 5, 6, 7, 47}

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38, 28]
 solution : [0, 8, 1, 12, 13, 2]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38, 28]
 solution : [0, 8, 1, 12, 13, 2]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, -1), (28, 128), (29, -1), (30, 4), (31, 8), (32, 8), (33, 8), (34, 8), (35, 4), (36, 4), (37, -1), (38, 128), (39, -1), (40, -1), (41, 16), (42, 16), (43, 32), (44, 16), (45, -1), (46, 64), (47, 0), (48, 64), (49, 8), (50, 16), (51, 16), (52, 16), (53, 16), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, -1), (28, 128), (29, -1), (30, 4), (31, 8), (32, 8), (33, 8), (34, 8), (35, 4), (36, 4), (37, -1), (38, 128), (39, -1), (40, -1), (41, 16), (42, 16), (43, 8), (44, 16), (45, -1), (46, 16), (47, -1), (48, 16), (49, 8), (50, 16), (51, 16), (52, 16), (53, 16), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 21 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38, 28]
 solution : [0, 8, 1, 12, 13, 2]


Solution : [0, 8, 1, 12, 13, 2] has cost 28.


Before backtrack at level 21
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38, 28]
 solution : [0, 8, 1, 12, 13, 2]

After backtrack at level 21
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47]
 solution : [0, 8, 1, 12, 13, 2]


Invert decision for 2 at level 20


New level: 21
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47]
 solution : [0, 8, 1, 12, 13]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47]
 solution : [0, 8, 1, 12, 13]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, -1), (28, 128), (29, -1), (30, 4), (31, 8), (32, 8), (33, 8), (34, 8), (35, 4), (36, 4), (37, -1), (38, 128), (39, -1), (40, -1), (41, 16), (42, 16), (43, 8), (44, 16), (45, -1), (46, 16), (47, -1), (48, 16), (49, 8), (50, 16), (51, 16), (52, 16), (53, 16), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, -1), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, -1), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 21 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47]
 solution : [0, 8, 1, 12, 13]


Solution : [0, 8, 1, 12, 13] has cost 22.


Decide in level 21 among pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 24, 26, 17, 16, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, -1), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, -1), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 17 with phase True at level 21

After decision at level 21
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 24, 26, 16, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47]
 solution : [0, 8, 1, 12, 13, 17]


New level: 22
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 24, 26, 16, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47]
 solution : [0, 8, 1, 12, 13, 17]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 24, 26, 16, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47]
 solution : [0, 8, 1, 12, 13, 17]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, 32), (27, -1), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, -1), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, -1), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, -1), (46, 8), (47, 32), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 22 : {24, 16, 26}

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47]
 solution : [0, 8, 1, 12, 13, 17]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47]
 solution : [0, 8, 1, 12, 13, 17]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, -1), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, -1), (46, 8), (47, 32), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, -1), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, -1), (46, 8), (47, 32), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 22 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47]
 solution : [0, 8, 1, 12, 13, 17]


Solution : [0, 8, 1, 12, 13, 17] has cost 28.


Before backtrack at level 22
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47]
 solution : [0, 8, 1, 12, 13, 17]

After backtrack at level 22
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 24, 26, 16]
 solution : [0, 8, 1, 12, 13, 17]


Invert decision for 17 at level 21


New level: 22
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 24, 26, 16]
 solution : [0, 8, 1, 12, 13]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 24, 26, 16]
 solution : [0, 8, 1, 12, 13]

Essensial at level 22 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, -1), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, -1), (46, 8), (47, 32), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, -1), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, -1), (46, 8), (47, 32), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 22 : {24, 26}

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47]
 solution : [0, 8, 1, 12, 13, 16]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47]
 solution : [0, 8, 1, 12, 13, 16]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, -1), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, -1), (46, 8), (47, 32), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, -1), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, -1), (46, 8), (47, 32), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

Covered at level 22 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47]
 solution : [0, 8, 1, 12, 13, 16]


Solution : [0, 8, 1, 12, 13, 16] has cost 28.


Before backtrack at level 22
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47]
 solution : [0, 8, 1, 12, 13, 16]

After backtrack at level 22
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26]
 solution : [0, 8, 1, 12, 13]


Before backtrack at level 21
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26]
 solution : [0, 8, 1, 12, 13]

After backtrack at level 21
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17]
 solution : [0, 8, 1, 12, 13]


Before backtrack at level 20
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17]
 solution : [0, 8, 1, 12, 13]

After backtrack at level 20
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2]
 solution : [0, 8, 1, 12, 13]


Before backtrack at level 19
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2]
 solution : [0, 8, 1, 12, 13]

After backtrack at level 19
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27]
 solution : [0, 8, 1, 12, 13]


Before backtrack at level 18
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27]
 solution : [0, 8, 1, 12, 13]

After backtrack at level 18
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39]
 solution : [0, 8, 1, 12, 13]


Before backtrack at level 17
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39]
 solution : [0, 8, 1, 12, 13]

After backtrack at level 17
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23]
 solution : [0, 8, 1, 12, 13]


Before backtrack at level 16
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23]
 solution : [0, 8, 1, 12, 13]

After backtrack at level 16
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 25, 22]
 solution : [0, 8, 1, 12, 13]


Invert decision for 13 at level 15


New level: 16
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 25, 22]
 solution : [0, 8, 1, 12]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 25, 22]
 solution : [0, 8, 1, 12]

Essensial at level 16 : {25}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, -1), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, -1), (38, 4), (39, -1), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, -1), (46, 8), (47, 32), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 16), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 16 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22]
 solution : [0, 8, 1, 12, 25]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22]
 solution : [0, 8, 1, 12, 25]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 16 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22]
 solution : [0, 8, 1, 12, 25]


Solution : [0, 8, 1, 12, 25] has cost 26.


Before backtrack at level 16
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22]
 solution : [0, 8, 1, 12, 25]

After backtrack at level 16
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25]
 solution : [0, 8, 1, 12]


Before backtrack at level 15
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25]
 solution : [0, 8, 1, 12]

After backtrack at level 15
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13]
 solution : [0, 8, 1, 12]


Before backtrack at level 14
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13]
 solution : [0, 8, 1, 12]

After backtrack at level 14
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14]
 solution : [0, 8, 1, 12]


Before backtrack at level 13
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14]
 solution : [0, 8, 1, 12]

After backtrack at level 13
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9]
 solution : [0, 8, 1, 12]


Before backtrack at level 12
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9]
 solution : [0, 8, 1, 12]

After backtrack at level 12
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10]
 solution : [0, 8, 1, 12]


Before backtrack at level 11
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10]
 solution : [0, 8, 1, 12]

After backtrack at level 11
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10, 15]
 solution : [0, 8, 1, 12]


Before backtrack at level 10
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10, 15]
 solution : [0, 8, 1, 12]

After backtrack at level 10
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10, 15, 29]
 solution : [0, 8, 1, 12]


Before backtrack at level 9
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10, 15, 29]
 solution : [0, 8, 1, 12]

After backtrack at level 9
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10, 15, 29, 40]
 solution : [0, 8, 1, 12]


Before backtrack at level 8
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10, 15, 29, 40]
 solution : [0, 8, 1, 12]

After backtrack at level 8
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10, 15, 29, 40, 37]
 solution : [0, 8, 1, 12]


Before backtrack at level 7
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10, 15, 29, 40, 37]
 solution : [0, 8, 1, 12]

After backtrack at level 7
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10, 15, 29, 40, 37, 21]
 solution : [0, 8, 1, 12]


Before backtrack at level 6
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10, 15, 29, 40, 37, 21]
 solution : [0, 8, 1, 12]

After backtrack at level 6
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10, 15, 29, 40, 37, 21, 45]
 solution : [0, 8, 1, 12]


Before backtrack at level 5
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10, 15, 29, 40, 37, 21, 45]
 solution : [0, 8, 1, 12]

After backtrack at level 5
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10, 15, 29, 40, 37, 21, 45, 18]
 solution : [0, 8, 1, 12]


Before backtrack at level 4
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10, 15, 29, 40, 37, 21, 45, 18]
 solution : [0, 8, 1, 12]

After backtrack at level 4
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10, 15, 29, 40, 37, 21, 45, 18, 19]
 solution : [0, 8, 1, 12]


Invert decision for 12 at level 3


New level: 4
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10, 15, 29, 40, 37, 21, 45, 18, 19]
 solution : [0, 8, 1]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10, 15, 29, 40, 37, 21, 45, 18, 19]
 solution : [0, 8, 1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 32), (25, -1), (26, 32), (27, 128), (28, 128), (29, -1), (30, 64), (31, 32), (32, 32), (33, 32), (34, 32), (35, 64), (36, 64), (37, -1), (38, 128), (39, 128), (40, -1), (41, 64), (42, 64), (43, 128), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 512), (14, 512), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 128), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 64), (27, 128), (28, 256), (29, 256), (30, 64), (31, 64), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 256), (38, 256), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 128), (47, 128), (48, 64), (49, 128), (50, 128), (51, 64), (52, 256), (53, 128), (54, 128), (55, 64), (56, 256), (57, 128), (58, 256), (59, 128), (60, 64), (61, 128)]

Covered at level 4 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10, 15, 29, 40, 37, 21, 45, 18, 19]
 solution : [0, 8, 1]


Solution : [0, 8, 1] has cost 10.


Decide in level 4 among pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 13, 14, 9, 10, 15, 29, 40, 37, 21, 45, 18, 19]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 512), (14, 512), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 128), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 64), (27, 128), (28, 256), (29, 256), (30, 64), (31, 64), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 256), (38, 256), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 128), (47, 128), (48, 64), (49, 128), (50, 128), (51, 64), (52, 256), (53, 128), (54, 128), (55, 64), (56, 256), (57, 128), (58, 256), (59, 128), (60, 64), (61, 128)]

Decide 13 with phase True at level 4

After decision at level 4
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 14, 9, 10, 15, 29, 40, 37, 21, 45, 18, 19]
 solution : [0, 8, 1, 13]


New level: 5
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 14, 9, 10, 15, 29, 40, 37, 21, 45, 18, 19]
 solution : [0, 8, 1, 13]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 25, 14, 9, 10, 15, 29, 40, 37, 21, 45, 18, 19]
 solution : [0, 8, 1, 13]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, 512), (14, 512), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 128), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 64), (27, 128), (28, 256), (29, 256), (30, 64), (31, 64), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 256), (38, 256), (39, 128), (40, 256), (41, 64), (42, 128), (43, 128), (44, 128), (45, 256), (46, 128), (47, 128), (48, 64), (49, 128), (50, 128), (51, 64), (52, 256), (53, 128), (54, 128), (55, 64), (56, 256), (57, 128), (58, 256), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, 512), (19, 512), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, 0), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, 256), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 256), (59, 128), (60, 64), (61, 128)]

Covered at level 5 : {25}

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 29, 40, 37, 21, 45, 18, 19]
 solution : [0, 8, 1, 13]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 29, 40, 37, 21, 45, 18, 19]
 solution : [0, 8, 1, 13]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, 512), (19, 512), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, 0), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, 256), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 256), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, 512), (19, 512), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, 256), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 256), (59, 128), (60, 64), (61, 128)]

Covered at level 5 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 29, 40, 37, 21, 45, 18, 19]
 solution : [0, 8, 1, 13]


Solution : [0, 8, 1, 13] has cost 16.


Decide in level 5 among pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 29, 40, 37, 21, 45, 18, 19]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, 512), (19, 512), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, 256), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 256), (59, 128), (60, 64), (61, 128)]

Decide 18 with phase True at level 5

After decision at level 5
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 29, 40, 37, 21, 45, 19]
 solution : [0, 8, 1, 13, 18]


New level: 6
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 29, 40, 37, 21, 45, 19]
 solution : [0, 8, 1, 13, 18]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 35, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 29, 40, 37, 21, 45, 19]
 solution : [0, 8, 1, 13, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, 512), (19, 512), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, 256), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 256), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, 64), (20, 128), (21, 16), (22, 256), (23, 128), (24, 64), (25, -1), (26, 32), (27, 64), (28, 64), (29, 16), (30, 64), (31, 32), (32, 32), (33, 32), (34, 16), (35, 0), (36, 16), (37, 0), (38, 16), (39, 8), (40, 4), (41, 8), (42, 8), (43, 4), (44, 8), (45, 8), (46, 128), (47, 16), (48, 64), (49, 64), (50, 64), (51, 32), (52, 64), (53, 32), (54, 64), (55, 32), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 6 : {35, 37}

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 29, 40, 21, 45, 19]
 solution : [0, 8, 1, 13, 18]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 29, 40, 21, 45, 19]
 solution : [0, 8, 1, 13, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, 64), (20, 128), (21, 16), (22, 256), (23, 128), (24, 64), (25, -1), (26, 32), (27, 64), (28, 64), (29, 16), (30, 64), (31, 32), (32, 32), (33, 32), (34, 16), (35, 0), (36, 16), (37, 0), (38, 16), (39, 8), (40, 4), (41, 8), (42, 8), (43, 4), (44, 8), (45, 8), (46, 128), (47, 16), (48, 64), (49, 64), (50, 64), (51, 32), (52, 64), (53, 32), (54, 64), (55, 32), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, 64), (20, 128), (21, 16), (22, 256), (23, 128), (24, 64), (25, -1), (26, 32), (27, 64), (28, 64), (29, 16), (30, 64), (31, 32), (32, 32), (33, 32), (34, 16), (35, -1), (36, 16), (37, -1), (38, 16), (39, 8), (40, 4), (41, 8), (42, 8), (43, 4), (44, 8), (45, 8), (46, 128), (47, 16), (48, 64), (49, 64), (50, 64), (51, 32), (52, 64), (53, 32), (54, 64), (55, 32), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 6 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 29, 40, 21, 45, 19]
 solution : [0, 8, 1, 13, 18]


Solution : [0, 8, 1, 13, 18] has cost 25.


Before backtrack at level 6
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 29, 40, 21, 45, 19]
 solution : [0, 8, 1, 13, 18]

After backtrack at level 6
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 29, 40, 21, 45, 19, 35, 37]
 solution : [0, 8, 1, 13, 18]


Invert decision for 18 at level 5


New level: 6
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 29, 40, 21, 45, 19, 35, 37]
 solution : [0, 8, 1, 13]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 29, 40, 21, 45, 19, 35, 37]
 solution : [0, 8, 1, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, 64), (20, 128), (21, 16), (22, 256), (23, 128), (24, 64), (25, -1), (26, 32), (27, 64), (28, 64), (29, 16), (30, 64), (31, 32), (32, 32), (33, 32), (34, 16), (35, -1), (36, 16), (37, -1), (38, 16), (39, 8), (40, 4), (41, 8), (42, 8), (43, 4), (44, 8), (45, 8), (46, 128), (47, 16), (48, 64), (49, 64), (50, 64), (51, 32), (52, 64), (53, 32), (54, 64), (55, 32), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, 512), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, 256), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 256), (59, 128), (60, 64), (61, 128)]

Covered at level 6 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 29, 40, 21, 45, 19, 35, 37]
 solution : [0, 8, 1, 13]


Solution : [0, 8, 1, 13] has cost 16.


Decide in level 6 among pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 29, 40, 21, 45, 19, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, 512), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, 256), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 256), (59, 128), (60, 64), (61, 128)]

Decide 19 with phase True at level 6

After decision at level 6
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 29, 40, 21, 45, 35, 37]
 solution : [0, 8, 1, 13, 19]


New level: 7
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 29, 40, 21, 45, 35, 37]
 solution : [0, 8, 1, 13, 19]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 36, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 29, 40, 21, 45, 35, 37]
 solution : [0, 8, 1, 13, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, 512), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, 256), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 256), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 128), (21, 8), (22, 256), (23, 32), (24, 64), (25, -1), (26, 32), (27, 16), (28, 16), (29, 0), (30, 8), (31, 16), (32, 16), (33, 64), (34, 32), (35, 32), (36, 0), (37, 32), (38, 256), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 8), (48, 64), (49, 16), (50, 32), (51, 16), (52, 32), (53, 16), (54, 64), (55, 32), (56, 64), (57, 32), (58, 256), (59, 128), (60, 64), (61, 128)]

Covered at level 7 : {36, 29}

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37]
 solution : [0, 8, 1, 13, 19]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37]
 solution : [0, 8, 1, 13, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 128), (21, 8), (22, 256), (23, 32), (24, 64), (25, -1), (26, 32), (27, 16), (28, 16), (29, 0), (30, 8), (31, 16), (32, 16), (33, 64), (34, 32), (35, 32), (36, 0), (37, 32), (38, 256), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 8), (48, 64), (49, 16), (50, 32), (51, 16), (52, 32), (53, 16), (54, 64), (55, 32), (56, 64), (57, 32), (58, 256), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 128), (21, 8), (22, 256), (23, 32), (24, 64), (25, -1), (26, 32), (27, 16), (28, 16), (29, -1), (30, 8), (31, 16), (32, 16), (33, 64), (34, 32), (35, 32), (36, -1), (37, 32), (38, 256), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 8), (48, 64), (49, 16), (50, 32), (51, 16), (52, 32), (53, 16), (54, 64), (55, 32), (56, 64), (57, 32), (58, 256), (59, 128), (60, 64), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37]
 solution : [0, 8, 1, 13, 19]


Solution : [0, 8, 1, 13, 19] has cost 25.


Before backtrack at level 7
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37]
 solution : [0, 8, 1, 13, 19]

After backtrack at level 7
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29]
 solution : [0, 8, 1, 13, 19]


Invert decision for 19 at level 6


New level: 7
 pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29]
 solution : [0, 8, 1, 13]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29]
 solution : [0, 8, 1, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 128), (21, 8), (22, 256), (23, 32), (24, 64), (25, -1), (26, 32), (27, 16), (28, 16), (29, -1), (30, 8), (31, 16), (32, 16), (33, 64), (34, 32), (35, 32), (36, -1), (37, 32), (38, 256), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 8), (48, 64), (49, 16), (50, 32), (51, 16), (52, 32), (53, 16), (54, 64), (55, 32), (56, 64), (57, 32), (58, 256), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, 256), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 256), (59, 128), (60, 64), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29]
 solution : [0, 8, 1, 13]


Solution : [0, 8, 1, 13] has cost 16.


Decide in level 7 among pending : [53, 44, 52, 57, 42, 56, 58, 61, 59, 60, 50, 51, 54, 55, 41, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, 256), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 256), (59, 128), (60, 64), (61, 128)]

Decide 58 with phase True at level 7

After decision at level 7
 pending : [53, 44, 52, 57, 42, 56, 61, 59, 60, 50, 51, 54, 55, 41, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29]
 solution : [0, 8, 1, 13, 58]


New level: 8
 pending : [53, 44, 52, 57, 42, 56, 61, 59, 60, 50, 51, 54, 55, 41, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29]
 solution : [0, 8, 1, 13, 58]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 61, 59, 60, 50, 51, 54, 55, 41, 31, 33, 34, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29]
 solution : [0, 8, 1, 13, 58]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, 256), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 256), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 32), (22, 128), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 16), (32, 16), (33, 0), (34, 0), (35, 16), (36, 64), (37, 16), (38, 64), (39, 32), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 16), (47, 32), (48, 16), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 64), (55, 32), (56, 64), (57, 32), (58, -1), (59, 0), (60, 0), (61, 0)]

Covered at level 8 : {33, 34, 59, 60, 61}

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29]
 solution : [0, 8, 1, 13, 58]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29]
 solution : [0, 8, 1, 13, 58]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 32), (22, 128), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 16), (32, 16), (33, 0), (34, 0), (35, 16), (36, 64), (37, 16), (38, 64), (39, 32), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 16), (47, 32), (48, 16), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 64), (55, 32), (56, 64), (57, 32), (58, -1), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 32), (22, 128), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 16), (32, 16), (33, -1), (34, -1), (35, 16), (36, 64), (37, 16), (38, 64), (39, 32), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 16), (47, 32), (48, 16), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 64), (55, 32), (56, 64), (57, 32), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29]
 solution : [0, 8, 1, 13, 58]


Solution : [0, 8, 1, 13, 58] has cost 26.


Before backtrack at level 8
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29]
 solution : [0, 8, 1, 13, 58]

After backtrack at level 8
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34]
 solution : [0, 8, 1, 13, 58]


Invert decision for 58 at level 7


New level: 8
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34]
 solution : [0, 8, 1, 13]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34]
 solution : [0, 8, 1, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 32), (22, 128), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 16), (32, 16), (33, -1), (34, -1), (35, 16), (36, 64), (37, 16), (38, 64), (39, 32), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 16), (47, 32), (48, 16), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 64), (55, 32), (56, 64), (57, 32), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, 256), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34]
 solution : [0, 8, 1, 13]


Solution : [0, 8, 1, 13] has cost 16.


Decide in level 8 among pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 38, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, 256), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Decide 38 with phase True at level 8

After decision at level 8
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34]
 solution : [0, 8, 1, 13, 38]


New level: 9
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34]
 solution : [0, 8, 1, 13, 38]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 39, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34]
 solution : [0, 8, 1, 13, 38]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, 256), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 32), (22, 128), (23, 256), (24, 32), (25, -1), (26, 16), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 32), (33, 32), (34, 16), (35, 16), (36, 64), (37, 16), (38, -1), (39, 0), (40, 32), (41, 64), (42, 64), (43, 32), (44, 64), (45, 64), (46, 64), (47, 32), (48, 32), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 9 : {39}

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34]
 solution : [0, 8, 1, 13, 38]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34]
 solution : [0, 8, 1, 13, 38]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 32), (22, 128), (23, 256), (24, 32), (25, -1), (26, 16), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 32), (33, 32), (34, 16), (35, 16), (36, 64), (37, 16), (38, -1), (39, 0), (40, 32), (41, 64), (42, 64), (43, 32), (44, 64), (45, 64), (46, 64), (47, 32), (48, 32), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 32), (22, 128), (23, 256), (24, 32), (25, -1), (26, 16), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 32), (33, 32), (34, 16), (35, 16), (36, 64), (37, 16), (38, -1), (39, -1), (40, 32), (41, 64), (42, 64), (43, 32), (44, 64), (45, 64), (46, 64), (47, 32), (48, 32), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34]
 solution : [0, 8, 1, 13, 38]


Solution : [0, 8, 1, 13, 38] has cost 26.


Before backtrack at level 9
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34]
 solution : [0, 8, 1, 13, 38]

After backtrack at level 9
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 38]


Invert decision for 38 at level 8


New level: 9
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 64), (21, 32), (22, 128), (23, 256), (24, 32), (25, -1), (26, 16), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 32), (33, 32), (34, 16), (35, 16), (36, 64), (37, 16), (38, -1), (39, -1), (40, 32), (41, 64), (42, 64), (43, 32), (44, 64), (45, 64), (46, 64), (47, 32), (48, 32), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13]


Solution : [0, 8, 1, 13] has cost 16.


Decide in level 9 among pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 16, 24, 26, 17, 2, 27, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Decide 16 with phase True at level 9

After decision at level 9
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 24, 26, 17, 2, 27, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16]


New level: 10
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 24, 26, 17, 2, 27, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 24, 26, 17, 2, 27, 23, 22, 14, 9, 10, 15, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, 256), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, 0), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, 256), (24, 0), (25, -1), (26, 0), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 10 : {14, 15, 17, 24, 26}

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 2, 27, 23, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 2, 27, 23, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, 0), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, 256), (24, 0), (25, -1), (26, 0), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, 256), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 2, 27, 23, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16]


Solution : [0, 8, 1, 13, 16] has cost 22.


Decide in level 10 among pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 2, 27, 23, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, 256), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Decide 2 with phase True at level 10

After decision at level 10
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 27, 23, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16, 2]


New level: 11
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 27, 23, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16, 2]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 27, 23, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, 256), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, -1), (59, 0), (60, 0), (61, 0)]

Covered at level 11 : {3, 4, 5, 6, 7, 9, 10, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61}

After reduction : 
 pending  : []
 solution : [0, 8, 1, 13, 16, 2]


Before reduction : 
 pending  : []
 solution : [0, 8, 1, 13, 16, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, -1), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 8, 1, 13, 16, 2]


Solution : [0, 8, 1, 13, 16, 2] has cost 28.


Before backtrack at level 11
 pending : []
 solution : [0, 8, 1, 13, 16, 2]

After backtrack at level 11
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 27, 23, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16, 2]


Invert decision for 2 at level 10


New level: 11
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 27, 23, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 27, 23, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, 256), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 27, 23, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16]


Solution : [0, 8, 1, 13, 16] has cost 22.


Decide in level 11 among pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 27, 23, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, 256), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Decide 23 with phase True at level 11

After decision at level 11
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 27, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16, 23]


New level: 12
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 27, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16, 23]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 30, 49, 28, 4, 6, 5, 7, 3, 47, 27, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, 256), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, 8), (22, 4), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 0), (31, 2), (32, 2), (33, 16), (34, 8), (35, 64), (36, 1), (37, 64), (38, -1), (39, 1), (40, 32), (41, 16), (42, 16), (43, 32), (44, 16), (45, 16), (46, 4), (47, 8), (48, 2), (49, 0), (50, 32), (51, 16), (52, 32), (53, 16), (54, 16), (55, 8), (56, 16), (57, 8), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 12 : {49, 27, 28, 30}

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 6, 5, 7, 3, 47, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16, 23]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 6, 5, 7, 3, 47, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, 8), (22, 4), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 0), (31, 2), (32, 2), (33, 16), (34, 8), (35, 64), (36, 1), (37, 64), (38, -1), (39, 1), (40, 32), (41, 16), (42, 16), (43, 32), (44, 16), (45, 16), (46, 4), (47, 8), (48, 2), (49, 0), (50, 32), (51, 16), (52, 32), (53, 16), (54, 16), (55, 8), (56, 16), (57, 8), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, 8), (22, 4), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, -1), (31, 2), (32, 2), (33, 16), (34, 8), (35, 64), (36, 1), (37, 64), (38, -1), (39, 1), (40, 32), (41, 16), (42, 16), (43, 32), (44, 16), (45, 16), (46, 4), (47, 8), (48, 2), (49, -1), (50, 32), (51, 16), (52, 32), (53, 16), (54, 16), (55, 8), (56, 16), (57, 8), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 6, 5, 7, 3, 47, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16, 23]


Solution : [0, 8, 1, 13, 16, 23] has cost 32.


Before backtrack at level 12
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 6, 5, 7, 3, 47, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39]
 solution : [0, 8, 1, 13, 16, 23]

After backtrack at level 12
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 6, 5, 7, 3, 47, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27]
 solution : [0, 8, 1, 13, 16, 23]


Invert decision for 23 at level 11


New level: 12
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 6, 5, 7, 3, 47, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27]
 solution : [0, 8, 1, 13, 16]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 6, 5, 7, 3, 47, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27]
 solution : [0, 8, 1, 13, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, 8), (22, 4), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, -1), (31, 2), (32, 2), (33, 16), (34, 8), (35, 64), (36, 1), (37, 64), (38, -1), (39, 1), (40, 32), (41, 16), (42, 16), (43, 32), (44, 16), (45, 16), (46, 4), (47, 8), (48, 2), (49, -1), (50, 32), (51, 16), (52, 32), (53, 16), (54, 16), (55, 8), (56, 16), (57, 8), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 6, 5, 7, 3, 47, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27]
 solution : [0, 8, 1, 13, 16]


Solution : [0, 8, 1, 13, 16] has cost 22.


Decide in level 12 among pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 6, 5, 7, 3, 47, 22, 9, 10, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Decide 10 with phase True at level 12

After decision at level 12
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 6, 5, 7, 3, 47, 22, 9, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27]
 solution : [0, 8, 1, 13, 16, 10]


New level: 13
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 6, 5, 7, 3, 47, 22, 9, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27]
 solution : [0, 8, 1, 13, 16, 10]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 6, 5, 7, 3, 47, 22, 9, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27]
 solution : [0, 8, 1, 13, 16, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 0), (6, 0), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 16)]

Covered at level 13 : {5, 6}

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 7, 3, 47, 22, 9, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27]
 solution : [0, 8, 1, 13, 16, 10]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 7, 3, 47, 22, 9, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27]
 solution : [0, 8, 1, 13, 16, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 0), (6, 0), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 16)]

Covered at level 13 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 7, 3, 47, 22, 9, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27]
 solution : [0, 8, 1, 13, 16, 10]


Solution : [0, 8, 1, 13, 16, 10] has cost 27.


Before backtrack at level 13
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 7, 3, 47, 22, 9, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27]
 solution : [0, 8, 1, 13, 16, 10]

After backtrack at level 13
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 7, 3, 47, 22, 9, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27, 6, 5]
 solution : [0, 8, 1, 13, 16, 10]


Invert decision for 10 at level 12


New level: 13
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 7, 3, 47, 22, 9, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27, 6, 5]
 solution : [0, 8, 1, 13, 16]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 7, 3, 47, 22, 9, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27, 6, 5]
 solution : [0, 8, 1, 13, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 7, 3, 47, 22, 9, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27, 6, 5]
 solution : [0, 8, 1, 13, 16]


Solution : [0, 8, 1, 13, 16] has cost 22.


Decide in level 13 among pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 43, 20, 46, 48, 4, 7, 3, 47, 22, 9, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27, 6, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Decide 43 with phase True at level 13

After decision at level 13
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 20, 46, 48, 4, 7, 3, 47, 22, 9, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27, 6, 5]
 solution : [0, 8, 1, 13, 16, 43]


New level: 14
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 20, 46, 48, 4, 7, 3, 47, 22, 9, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27, 6, 5]
 solution : [0, 8, 1, 13, 16, 43]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 20, 46, 48, 4, 7, 3, 47, 22, 9, 40, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 39, 30, 49, 28, 27, 6, 5]
 solution : [0, 8, 1, 13, 16, 43]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4), (21, 16), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 32), (31, 8), (32, 8), (33, 8), (34, 4), (35, 2), (36, 64), (37, 2), (38, -1), (39, 0), (40, 0), (41, 8), (42, 8), (43, -1), (44, 8), (45, 8), (46, 8), (47, 16), (48, 4), (49, 64), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 14 : {40, 39}

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 20, 46, 48, 4, 7, 3, 47, 22, 9, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 30, 49, 28, 27, 6, 5]
 solution : [0, 8, 1, 13, 16, 43]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 20, 46, 48, 4, 7, 3, 47, 22, 9, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 30, 49, 28, 27, 6, 5]
 solution : [0, 8, 1, 13, 16, 43]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4), (21, 16), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 32), (31, 8), (32, 8), (33, 8), (34, 4), (35, 2), (36, 64), (37, 2), (38, -1), (39, 0), (40, 0), (41, 8), (42, 8), (43, -1), (44, 8), (45, 8), (46, 8), (47, 16), (48, 4), (49, 64), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4), (21, 16), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 32), (31, 8), (32, 8), (33, 8), (34, 4), (35, 2), (36, 64), (37, 2), (38, -1), (39, -1), (40, -1), (41, 8), (42, 8), (43, -1), (44, 8), (45, 8), (46, 8), (47, 16), (48, 4), (49, 64), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 20, 46, 48, 4, 7, 3, 47, 22, 9, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 30, 49, 28, 27, 6, 5]
 solution : [0, 8, 1, 13, 16, 43]


Solution : [0, 8, 1, 13, 16, 43] has cost 32.


Before backtrack at level 14
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 20, 46, 48, 4, 7, 3, 47, 22, 9, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 30, 49, 28, 27, 6, 5]
 solution : [0, 8, 1, 13, 16, 43]

After backtrack at level 14
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 20, 46, 48, 4, 7, 3, 47, 22, 9, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16, 43]


Invert decision for 43 at level 13


New level: 14
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 20, 46, 48, 4, 7, 3, 47, 22, 9, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 20, 46, 48, 4, 7, 3, 47, 22, 9, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4), (21, 16), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 32), (31, 8), (32, 8), (33, 8), (34, 4), (35, 2), (36, 64), (37, 2), (38, -1), (39, -1), (40, -1), (41, 8), (42, 8), (43, -1), (44, 8), (45, 8), (46, 8), (47, 16), (48, 4), (49, 64), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 20, 46, 48, 4, 7, 3, 47, 22, 9, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16]


Solution : [0, 8, 1, 13, 16] has cost 22.


Decide in level 14 among pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 20, 46, 48, 4, 7, 3, 47, 22, 9, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Decide 3 with phase True at level 14

After decision at level 14
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 9, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16, 3]


New level: 15
 pending : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 9, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16, 3]


Before reduction : 
 pending  : [53, 44, 52, 57, 42, 56, 50, 51, 54, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 9, 21, 45, 35, 37, 36, 29, 61, 59, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16, 3]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, -1), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 2), (55, 0), (56, 2), (57, 0), (58, -1), (59, 1), (60, 0), (61, 0)]

Covered at level 15 : {4, 5, 6, 7, 9, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 60, 61}

After reduction : 
 pending  : [56, 54, 59]
 solution : [0, 8, 1, 13, 16, 3]


Before reduction : 
 pending  : [56, 54, 59]
 solution : [0, 8, 1, 13, 16, 3]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, -1), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 2), (55, 0), (56, 2), (57, 0), (58, -1), (59, 1), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 2), (55, -1), (56, 2), (57, -1), (58, -1), (59, 1), (60, -1), (61, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [56, 54, 59]
 solution : [0, 8, 1, 13, 16, 3]


Solution : [0, 8, 1, 13, 16, 3] has cost 28.


Before backtrack at level 15
 pending : [56, 54, 59]
 solution : [0, 8, 1, 13, 16, 3]

After backtrack at level 15
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 9, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16, 3]


Invert decision for 3 at level 14


New level: 15
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 9, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 9, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 2), (55, -1), (56, 2), (57, -1), (58, -1), (59, 1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 15 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 9, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16]


Solution : [0, 8, 1, 13, 16] has cost 22.


Decide in level 15 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 9, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Decide 9 with phase True at level 15

After decision at level 15
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16, 9]


New level: 16
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16, 9]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, -1), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 2), (55, 0), (56, 2), (57, 0), (58, -1), (59, 1), (60, 0), (61, 0)]

Covered at level 16 : {4, 5, 6, 7, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 60, 61}

After reduction : 
 pending  : [56, 54, 59]
 solution : [0, 8, 1, 13, 16, 9]


Before reduction : 
 pending  : [56, 54, 59]
 solution : [0, 8, 1, 13, 16, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, -1), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 2), (55, 0), (56, 2), (57, 0), (58, -1), (59, 1), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 2), (55, -1), (56, 2), (57, -1), (58, -1), (59, 1), (60, -1), (61, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [56, 54, 59]
 solution : [0, 8, 1, 13, 16, 9]


Solution : [0, 8, 1, 13, 16, 9] has cost 28.


Before backtrack at level 16
 pending : [56, 54, 59]
 solution : [0, 8, 1, 13, 16, 9]

After backtrack at level 16
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16, 9]


Invert decision for 9 at level 15


New level: 16
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 2), (55, -1), (56, 2), (57, -1), (58, -1), (59, 1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 16 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16]


Solution : [0, 8, 1, 13, 16] has cost 22.


Decide in level 16 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 30, 49, 28, 27, 6, 5, 40, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Decide 49 with phase True at level 16

After decision at level 16
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 30, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16, 49]


New level: 17
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 30, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16, 49]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 30, 28, 27, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16, 49]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, 8), (22, 4), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 0), (31, 2), (32, 2), (33, 16), (34, 8), (35, 64), (36, 1), (37, 64), (38, -1), (39, 1), (40, 32), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 4), (47, 8), (48, 2), (49, -1), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 8), (56, 32), (57, 8), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 17 : {27, 28, 30}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16, 49]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16, 49]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, 8), (22, 4), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 0), (31, 2), (32, 2), (33, 16), (34, 8), (35, 64), (36, 1), (37, 64), (38, -1), (39, 1), (40, 32), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 4), (47, 8), (48, 2), (49, -1), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 8), (56, 32), (57, 8), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, 8), (22, 4), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, -1), (31, 2), (32, 2), (33, 16), (34, 8), (35, 64), (36, 1), (37, 64), (38, -1), (39, 1), (40, 32), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 4), (47, 8), (48, 2), (49, -1), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 8), (56, 32), (57, 8), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 17 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16, 49]


Solution : [0, 8, 1, 13, 16, 49] has cost 32.


Before backtrack at level 17
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 6, 5, 40, 39]
 solution : [0, 8, 1, 13, 16, 49]

After backtrack at level 17
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 6, 5, 40, 39, 30, 28, 27]
 solution : [0, 8, 1, 13, 16, 49]


Invert decision for 49 at level 16


New level: 17
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 6, 5, 40, 39, 30, 28, 27]
 solution : [0, 8, 1, 13, 16]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 6, 5, 40, 39, 30, 28, 27]
 solution : [0, 8, 1, 13, 16]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, 8), (22, 4), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, -1), (31, 2), (32, 2), (33, 16), (34, 8), (35, 64), (36, 1), (37, 64), (38, -1), (39, 1), (40, 32), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 4), (47, 8), (48, 2), (49, -1), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 8), (56, 32), (57, 8), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, -1), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 17 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 6, 5, 40, 39, 30, 28, 27]
 solution : [0, 8, 1, 13, 16]


Solution : [0, 8, 1, 13, 16] has cost 22.


Decide in level 17 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 6, 5, 40, 39, 30, 28, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, -1), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Decide 5 with phase True at level 17

After decision at level 17
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 6, 40, 39, 30, 28, 27]
 solution : [0, 8, 1, 13, 16, 5]


New level: 18
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 6, 40, 39, 30, 28, 27]
 solution : [0, 8, 1, 13, 16, 5]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 6, 40, 39, 30, 28, 27]
 solution : [0, 8, 1, 13, 16, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, -1), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, -1), (6, 0), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 8), (47, 8), (48, 8), (49, -1), (50, 16), (51, 16), (52, 16), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 16)]

Covered at level 18 : {6}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27]
 solution : [0, 8, 1, 13, 16, 5]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27]
 solution : [0, 8, 1, 13, 16, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, -1), (6, 0), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 8), (47, 8), (48, 8), (49, -1), (50, 16), (51, 16), (52, 16), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 8), (47, 8), (48, 8), (49, -1), (50, 16), (51, 16), (52, 16), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 16)]

Covered at level 18 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27]
 solution : [0, 8, 1, 13, 16, 5]


Solution : [0, 8, 1, 13, 16, 5] has cost 27.


Before backtrack at level 18
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27]
 solution : [0, 8, 1, 13, 16, 5]

After backtrack at level 18
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6]
 solution : [0, 8, 1, 13, 16, 5]


Invert decision for 5 at level 17


New level: 18
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6]
 solution : [0, 8, 1, 13, 16]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6]
 solution : [0, 8, 1, 13, 16]

Essensial at level 18 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 8), (47, 8), (48, 8), (49, -1), (50, 16), (51, 16), (52, 16), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 16), (47, 16), (48, 8), (49, -1), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 18 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27]
 solution : [0, 8, 1, 13, 16, 6]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27]
 solution : [0, 8, 1, 13, 16, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 16), (47, 16), (48, 8), (49, -1), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 16), (47, 16), (48, 8), (49, -1), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 18 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27]
 solution : [0, 8, 1, 13, 16, 6]


Solution : [0, 8, 1, 13, 16, 6] has cost 24.


Before backtrack at level 18
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27]
 solution : [0, 8, 1, 13, 16, 6]

After backtrack at level 18
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6]
 solution : [0, 8, 1, 13, 16]


Before backtrack at level 17
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6]
 solution : [0, 8, 1, 13, 16]

After backtrack at level 17
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5]
 solution : [0, 8, 1, 13, 16]


Before backtrack at level 16
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5]
 solution : [0, 8, 1, 13, 16]

After backtrack at level 16
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49]
 solution : [0, 8, 1, 13, 16]


Before backtrack at level 15
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49]
 solution : [0, 8, 1, 13, 16]

After backtrack at level 15
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9]
 solution : [0, 8, 1, 13, 16]


Before backtrack at level 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9]
 solution : [0, 8, 1, 13, 16]

After backtrack at level 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3]
 solution : [0, 8, 1, 13, 16]


Before backtrack at level 13
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3]
 solution : [0, 8, 1, 13, 16]

After backtrack at level 13
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43]
 solution : [0, 8, 1, 13, 16]


Before backtrack at level 12
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43]
 solution : [0, 8, 1, 13, 16]

After backtrack at level 12
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10]
 solution : [0, 8, 1, 13, 16]


Before backtrack at level 11
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10]
 solution : [0, 8, 1, 13, 16]

After backtrack at level 11
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10, 23]
 solution : [0, 8, 1, 13, 16]


Before backtrack at level 10
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10, 23]
 solution : [0, 8, 1, 13, 16]

After backtrack at level 10
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10, 23, 24, 26, 17, 14, 15, 2]
 solution : [0, 8, 1, 13, 16]


Invert decision for 16 at level 9


New level: 10
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10, 23, 24, 26, 17, 14, 15, 2]
 solution : [0, 8, 1, 13]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10, 23, 24, 26, 17, 14, 15, 2]
 solution : [0, 8, 1, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, -1), (44, 16), (45, 16), (46, 16), (47, 16), (48, 8), (49, -1), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10, 23, 24, 26, 17, 14, 15, 2]
 solution : [0, 8, 1, 13]


Solution : [0, 8, 1, 13] has cost 16.


Decide in level 10 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 22, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10, 23, 24, 26, 17, 14, 15, 2]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Decide 22 with phase True at level 10

After decision at level 10
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10, 23, 24, 26, 17, 14, 15, 2]
 solution : [0, 8, 1, 13, 22]


New level: 11
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10, 23, 24, 26, 17, 14, 15, 2]
 solution : [0, 8, 1, 13, 22]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 20, 46, 48, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10, 23, 24, 26, 17, 14, 15, 2]
 solution : [0, 8, 1, 13, 22]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 0), (21, 8), (22, -1), (23, 64), (24, 16), (25, -1), (26, 8), (27, 32), (28, 32), (29, 64), (30, 16), (31, 32), (32, 32), (33, 16), (34, 16), (35, 64), (36, 64), (37, 64), (38, -1), (39, 32), (40, 32), (41, 64), (42, 64), (43, 32), (44, 64), (45, 64), (46, 0), (47, 8), (48, 0), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 64), (60, 32), (61, 32)]

Covered at level 11 : {48, 20, 46}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10, 23, 24, 26, 17, 14, 15, 2]
 solution : [0, 8, 1, 13, 22]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10, 23, 24, 26, 17, 14, 15, 2]
 solution : [0, 8, 1, 13, 22]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 0), (21, 8), (22, -1), (23, 64), (24, 16), (25, -1), (26, 8), (27, 32), (28, 32), (29, 64), (30, 16), (31, 32), (32, 32), (33, 16), (34, 16), (35, 64), (36, 64), (37, 64), (38, -1), (39, 32), (40, 32), (41, 64), (42, 64), (43, 32), (44, 64), (45, 64), (46, 0), (47, 8), (48, 0), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 64), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, 8), (22, -1), (23, 64), (24, 16), (25, -1), (26, 8), (27, 32), (28, 32), (29, 64), (30, 16), (31, 32), (32, 32), (33, 16), (34, 16), (35, 64), (36, 64), (37, 64), (38, -1), (39, 32), (40, 32), (41, 64), (42, 64), (43, 32), (44, 64), (45, 64), (46, -1), (47, 8), (48, -1), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 64), (60, 32), (61, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10, 23, 24, 26, 17, 14, 15, 2]
 solution : [0, 8, 1, 13, 22]


Solution : [0, 8, 1, 13, 22] has cost 26.


Before backtrack at level 11
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10, 23, 24, 26, 17, 14, 15, 2]
 solution : [0, 8, 1, 13, 22]

After backtrack at level 11
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10, 23, 24, 26, 17, 14, 15, 2, 20, 46, 48]
 solution : [0, 8, 1, 13, 22]


Invert decision for 22 at level 10


New level: 11
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10, 23, 24, 26, 17, 14, 15, 2, 20, 46, 48]
 solution : [0, 8, 1, 13]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10, 23, 24, 26, 17, 14, 15, 2, 20, 46, 48]
 solution : [0, 8, 1, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, 8), (22, -1), (23, 64), (24, 16), (25, -1), (26, 8), (27, 32), (28, 32), (29, 64), (30, 16), (31, 32), (32, 32), (33, 16), (34, 16), (35, 64), (36, 64), (37, 64), (38, -1), (39, 32), (40, 32), (41, 64), (42, 64), (43, 32), (44, 64), (45, 64), (46, -1), (47, 8), (48, -1), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 64), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, -1), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10, 23, 24, 26, 17, 14, 15, 2, 20, 46, 48]
 solution : [0, 8, 1, 13]


Solution : [0, 8, 1, 13] has cost 16.


Decide in level 11 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 10, 23, 24, 26, 17, 14, 15, 2, 20, 46, 48]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, -1), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Decide 10 with phase True at level 11

After decision at level 11
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 23, 24, 26, 17, 14, 15, 2, 20, 46, 48]
 solution : [0, 8, 1, 13, 10]


New level: 12
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 23, 24, 26, 17, 14, 15, 2, 20, 46, 48]
 solution : [0, 8, 1, 13, 10]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 6, 5, 49, 9, 3, 43, 23, 24, 26, 17, 14, 15, 2, 20, 46, 48]
 solution : [0, 8, 1, 13, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, 256), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, -1), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, 0), (6, 0), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 8), (22, -1), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 8), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 12 : {5, 6}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 49, 9, 3, 43, 23, 24, 26, 17, 14, 15, 2, 20, 46, 48]
 solution : [0, 8, 1, 13, 10]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 49, 9, 3, 43, 23, 24, 26, 17, 14, 15, 2, 20, 46, 48]
 solution : [0, 8, 1, 13, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, 0), (6, 0), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 8), (22, -1), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 8), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 8), (22, -1), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 8), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 49, 9, 3, 43, 23, 24, 26, 17, 14, 15, 2, 20, 46, 48]
 solution : [0, 8, 1, 13, 10]


Solution : [0, 8, 1, 13, 10] has cost 21.


Decide in level 12 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 49, 9, 3, 43, 23, 24, 26, 17, 14, 15, 2, 20, 46, 48]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 8), (22, -1), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 8), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Decide 23 with phase True at level 12

After decision at level 12
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 49, 9, 3, 43, 24, 26, 17, 14, 15, 2, 20, 46, 48]
 solution : [0, 8, 1, 13, 10, 23]


New level: 13
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 49, 9, 3, 43, 24, 26, 17, 14, 15, 2, 20, 46, 48]
 solution : [0, 8, 1, 13, 10, 23]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 30, 28, 27, 49, 9, 3, 43, 24, 26, 17, 14, 15, 2, 20, 46, 48]
 solution : [0, 8, 1, 13, 10, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 8), (22, -1), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 8), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 64), (21, 2), (22, -1), (23, -1), (24, 64), (25, -1), (26, 32), (27, 32), (28, 32), (29, 8), (30, 0), (31, 16), (32, 16), (33, 64), (34, 32), (35, 64), (36, 8), (37, 64), (38, -1), (39, 128), (40, 32), (41, 64), (42, 64), (43, 32), (44, 64), (45, 64), (46, 32), (47, 2), (48, 16), (49, 0), (50, 128), (51, 64), (52, 128), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 13 : {49, 30}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 24, 26, 17, 14, 15, 2, 20, 46, 48]
 solution : [0, 8, 1, 13, 10, 23]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 24, 26, 17, 14, 15, 2, 20, 46, 48]
 solution : [0, 8, 1, 13, 10, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 64), (21, 2), (22, -1), (23, -1), (24, 64), (25, -1), (26, 32), (27, 32), (28, 32), (29, 8), (30, 0), (31, 16), (32, 16), (33, 64), (34, 32), (35, 64), (36, 8), (37, 64), (38, -1), (39, 128), (40, 32), (41, 64), (42, 64), (43, 32), (44, 64), (45, 64), (46, 32), (47, 2), (48, 16), (49, 0), (50, 128), (51, 64), (52, 128), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 64), (21, 2), (22, -1), (23, -1), (24, 64), (25, -1), (26, 32), (27, 32), (28, 32), (29, 8), (30, -1), (31, 16), (32, 16), (33, 64), (34, 32), (35, 64), (36, 8), (37, 64), (38, -1), (39, 128), (40, 32), (41, 64), (42, 64), (43, 32), (44, 64), (45, 64), (46, 32), (47, 2), (48, 16), (49, -1), (50, 128), (51, 64), (52, 128), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 24, 26, 17, 14, 15, 2, 20, 46, 48]
 solution : [0, 8, 1, 13, 10, 23]


Solution : [0, 8, 1, 13, 10, 23] has cost 31.


Before backtrack at level 13
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 24, 26, 17, 14, 15, 2, 20, 46, 48]
 solution : [0, 8, 1, 13, 10, 23]

After backtrack at level 13
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 24, 26, 17, 14, 15, 2, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 13, 10, 23]


Invert decision for 23 at level 12


New level: 13
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 24, 26, 17, 14, 15, 2, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 13, 10]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 24, 26, 17, 14, 15, 2, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 13, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 64), (21, 2), (22, -1), (23, -1), (24, 64), (25, -1), (26, 32), (27, 32), (28, 32), (29, 8), (30, -1), (31, 16), (32, 16), (33, 64), (34, 32), (35, 64), (36, 8), (37, 64), (38, -1), (39, 128), (40, 32), (41, 64), (42, 64), (43, 32), (44, 64), (45, 64), (46, 32), (47, 2), (48, 16), (49, -1), (50, 128), (51, 64), (52, 128), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 8), (22, -1), (23, -1), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 8), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 24, 26, 17, 14, 15, 2, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 13, 10]


Solution : [0, 8, 1, 13, 10] has cost 21.


Decide in level 13 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 24, 26, 17, 14, 15, 2, 20, 46, 48, 30, 49]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 8), (22, -1), (23, -1), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 8), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 24, 26, 17, 15, 2, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 13, 10, 14]


New level: 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 24, 26, 17, 15, 2, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 13, 10, 14]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 24, 26, 17, 15, 2, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 13, 10, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 8), (22, -1), (23, -1), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 8), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 16)]

Covered at level 14 : {24, 17, 26, 15}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 13, 10, 14]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 13, 10, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 16)]

Covered at level 14 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 13, 10, 14]


Solution : [0, 8, 1, 13, 10, 14] has cost 27.


Before backtrack at level 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49]
 solution : [0, 8, 1, 13, 10, 14]

After backtrack at level 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49, 24, 26, 17, 15]
 solution : [0, 8, 1, 13, 10, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49, 24, 26, 17, 15]
 solution : [0, 8, 1, 13, 10]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49, 24, 26, 17, 15]
 solution : [0, 8, 1, 13, 10]

Essensial at level 14 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 32), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 64), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 64), (47, 8), (48, 32), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 14 : {26}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49, 17, 15]
 solution : [0, 8, 1, 13, 10, 24]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49, 17, 15]
 solution : [0, 8, 1, 13, 10, 24]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 32), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 64), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 64), (47, 8), (48, 32), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 32), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 64), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 64), (47, 8), (48, 32), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49, 17, 15]
 solution : [0, 8, 1, 13, 10, 24]


Solution : [0, 8, 1, 13, 10, 24] has cost 31.


Before backtrack at level 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49, 17, 15]
 solution : [0, 8, 1, 13, 10, 24]

After backtrack at level 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49, 17, 15, 24, 26]
 solution : [0, 8, 1, 13, 10]


Before backtrack at level 13
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49, 17, 15, 24, 26]
 solution : [0, 8, 1, 13, 10]

After backtrack at level 13
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49, 17, 15, 24, 26, 14]
 solution : [0, 8, 1, 13, 10]


Before backtrack at level 12
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49, 17, 15, 24, 26, 14]
 solution : [0, 8, 1, 13, 10]

After backtrack at level 12
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49, 17, 15, 24, 26, 14, 6, 5, 23]
 solution : [0, 8, 1, 13, 10]


Invert decision for 10 at level 11


New level: 12
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49, 17, 15, 24, 26, 14, 6, 5, 23]
 solution : [0, 8, 1, 13]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49, 17, 15, 24, 26, 14, 6, 5, 23]
 solution : [0, 8, 1, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 32), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 32), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 64), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 64), (47, 8), (48, 32), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, -1), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49, 17, 15, 24, 26, 14, 6, 5, 23]
 solution : [0, 8, 1, 13]


Solution : [0, 8, 1, 13] has cost 16.


Decide in level 12 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 2, 20, 46, 48, 30, 49, 17, 15, 24, 26, 14, 6, 5, 23]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, -1), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Decide 2 with phase True at level 12

After decision at level 12
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 20, 46, 48, 30, 49, 17, 15, 24, 26, 14, 6, 5, 23]
 solution : [0, 8, 1, 13, 2]


New level: 13
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 20, 46, 48, 30, 49, 17, 15, 24, 26, 14, 6, 5, 23]
 solution : [0, 8, 1, 13, 2]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 4, 7, 47, 21, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 9, 3, 43, 20, 46, 48, 30, 49, 17, 15, 24, 26, 14, 6, 5, 23]
 solution : [0, 8, 1, 13, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, -1), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 0), (22, -1), (23, 16), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 4), (30, 4), (31, 8), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 4), (38, -1), (39, 128), (40, 8), (41, 16), (42, 16), (43, 8), (44, 16), (45, 16), (46, 32), (47, 0), (48, 16), (49, 8), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 13 : {3, 4, 5, 6, 7, 9, 47, 21}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 24, 26, 14, 23]
 solution : [0, 8, 1, 13, 2]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 24, 26, 14, 23]
 solution : [0, 8, 1, 13, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 0), (22, -1), (23, 16), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 4), (30, 4), (31, 8), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 4), (38, -1), (39, 128), (40, 8), (41, 16), (42, 16), (43, 8), (44, 16), (45, 16), (46, 32), (47, 0), (48, 16), (49, 8), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, 16), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 4), (30, 4), (31, 8), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 4), (38, -1), (39, 128), (40, 8), (41, 16), (42, 16), (43, 8), (44, 16), (45, 16), (46, 32), (47, -1), (48, 16), (49, 8), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 24, 26, 14, 23]
 solution : [0, 8, 1, 13, 2]


Solution : [0, 8, 1, 13, 2] has cost 22.


Decide in level 13 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 24, 26, 14, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, 16), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 4), (30, 4), (31, 8), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 4), (38, -1), (39, 128), (40, 8), (41, 16), (42, 16), (43, 8), (44, 16), (45, 16), (46, 32), (47, -1), (48, 16), (49, 8), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 24, 26, 23]
 solution : [0, 8, 1, 13, 2, 14]


New level: 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 24, 26, 23]
 solution : [0, 8, 1, 13, 2, 14]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 24, 26, 23]
 solution : [0, 8, 1, 13, 2, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, -1), (22, -1), (23, 16), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 4), (30, 4), (31, 8), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 4), (38, -1), (39, 128), (40, 8), (41, 16), (42, 16), (43, 8), (44, 16), (45, 16), (46, 32), (47, -1), (48, 16), (49, 8), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, -1), (59, 0), (60, 0), (61, 0)]

Covered at level 14 : {15, 17, 20, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61}

After reduction : 
 pending  : []
 solution : [0, 8, 1, 13, 2, 14]


Before reduction : 
 pending  : []
 solution : [0, 8, 1, 13, 2, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, -1), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 8, 1, 13, 2, 14]


Solution : [0, 8, 1, 13, 2, 14] has cost 28.


Before backtrack at level 14
 pending : []
 solution : [0, 8, 1, 13, 2, 14]

After backtrack at level 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 24, 26, 23]
 solution : [0, 8, 1, 13, 2, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 24, 26, 23]
 solution : [0, 8, 1, 13, 2]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 24, 26, 23]
 solution : [0, 8, 1, 13, 2]

Essensial at level 14 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, -1), (25, -1), (26, 0), (27, 64), (28, 64), (29, 4), (30, 2), (31, 8), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 4), (38, -1), (39, 64), (40, 4), (41, 16), (42, 16), (43, 4), (44, 16), (45, 16), (46, 16), (47, -1), (48, 8), (49, 4), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 14 : {26}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 23]
 solution : [0, 8, 1, 13, 2, 24]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 23]
 solution : [0, 8, 1, 13, 2, 24]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, -1), (25, -1), (26, 0), (27, 64), (28, 64), (29, 4), (30, 2), (31, 8), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 4), (38, -1), (39, 64), (40, 4), (41, 16), (42, 16), (43, 4), (44, 16), (45, 16), (46, 16), (47, -1), (48, 8), (49, 4), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, -1), (25, -1), (26, -1), (27, 64), (28, 64), (29, 4), (30, 2), (31, 8), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 4), (38, -1), (39, 64), (40, 4), (41, 16), (42, 16), (43, 4), (44, 16), (45, 16), (46, 16), (47, -1), (48, 8), (49, 4), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 23]
 solution : [0, 8, 1, 13, 2, 24]


Solution : [0, 8, 1, 13, 2, 24] has cost 32.


Before backtrack at level 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 23]
 solution : [0, 8, 1, 13, 2, 24]

After backtrack at level 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 23, 24, 26]
 solution : [0, 8, 1, 13, 2]


Before backtrack at level 13
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 23, 24, 26]
 solution : [0, 8, 1, 13, 2]

After backtrack at level 13
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 23, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 14]
 solution : [0, 8, 1, 13, 2]


Invert decision for 2 at level 12


New level: 13
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 23, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 14]
 solution : [0, 8, 1, 13]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 23, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 14]
 solution : [0, 8, 1, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, -1), (25, -1), (26, -1), (27, 64), (28, 64), (29, 4), (30, 2), (31, 8), (32, 8), (33, 16), (34, 8), (35, 4), (36, 4), (37, 4), (38, -1), (39, 64), (40, 4), (41, 16), (42, 16), (43, 4), (44, 16), (45, 16), (46, 16), (47, -1), (48, 8), (49, 4), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, -1), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 23, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 14]
 solution : [0, 8, 1, 13]


Solution : [0, 8, 1, 13] has cost 16.


Decide in level 13 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 23, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, -1), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Decide 23 with phase True at level 13

After decision at level 13
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 14]
 solution : [0, 8, 1, 13, 23]


New level: 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 14]
 solution : [0, 8, 1, 13, 23]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 30, 49, 17, 15, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 14]
 solution : [0, 8, 1, 13, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, -1), (23, 256), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 64), (21, 8), (22, -1), (23, -1), (24, 64), (25, -1), (26, 32), (27, 32), (28, 32), (29, 8), (30, 0), (31, 16), (32, 16), (33, 64), (34, 32), (35, 64), (36, 8), (37, 64), (38, -1), (39, 128), (40, 32), (41, 64), (42, 64), (43, 32), (44, 64), (45, 64), (46, 32), (47, 8), (48, 16), (49, 0), (50, 128), (51, 64), (52, 128), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 14 : {49, 30}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 17, 15, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 14]
 solution : [0, 8, 1, 13, 23]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 17, 15, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 14]
 solution : [0, 8, 1, 13, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 64), (21, 8), (22, -1), (23, -1), (24, 64), (25, -1), (26, 32), (27, 32), (28, 32), (29, 8), (30, 0), (31, 16), (32, 16), (33, 64), (34, 32), (35, 64), (36, 8), (37, 64), (38, -1), (39, 128), (40, 32), (41, 64), (42, 64), (43, 32), (44, 64), (45, 64), (46, 32), (47, 8), (48, 16), (49, 0), (50, 128), (51, 64), (52, 128), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 64), (21, 8), (22, -1), (23, -1), (24, 64), (25, -1), (26, 32), (27, 32), (28, 32), (29, 8), (30, -1), (31, 16), (32, 16), (33, 64), (34, 32), (35, 64), (36, 8), (37, 64), (38, -1), (39, 128), (40, 32), (41, 64), (42, 64), (43, 32), (44, 64), (45, 64), (46, 32), (47, 8), (48, 16), (49, -1), (50, 128), (51, 64), (52, 128), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 17, 15, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 14]
 solution : [0, 8, 1, 13, 23]


Solution : [0, 8, 1, 13, 23] has cost 26.


Before backtrack at level 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 17, 15, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 14]
 solution : [0, 8, 1, 13, 23]

After backtrack at level 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 17, 15, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 14, 30, 49]
 solution : [0, 8, 1, 13, 23]


Invert decision for 23 at level 13


New level: 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 17, 15, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 14, 30, 49]
 solution : [0, 8, 1, 13]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 17, 15, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 14, 30, 49]
 solution : [0, 8, 1, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 64), (21, 8), (22, -1), (23, -1), (24, 64), (25, -1), (26, 32), (27, 32), (28, 32), (29, 8), (30, -1), (31, 16), (32, 16), (33, 64), (34, 32), (35, 64), (36, 8), (37, 64), (38, -1), (39, 128), (40, 32), (41, 64), (42, 64), (43, 32), (44, 64), (45, 64), (46, 32), (47, 8), (48, 16), (49, -1), (50, 128), (51, 64), (52, 128), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, -1), (23, -1), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 17, 15, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 14, 30, 49]
 solution : [0, 8, 1, 13]


Solution : [0, 8, 1, 13] has cost 16.


Decide in level 14 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 17, 15, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 14, 30, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, -1), (23, -1), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 17, 15, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 30, 49]
 solution : [0, 8, 1, 13, 14]


New level: 15
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 17, 15, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 30, 49]
 solution : [0, 8, 1, 13, 14]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 17, 15, 24, 26, 4, 7, 47, 21, 9, 3, 6, 5, 30, 49]
 solution : [0, 8, 1, 13, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 128), (21, 32), (22, -1), (23, -1), (24, 64), (25, -1), (26, 32), (27, 128), (28, 128), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 128), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 128), (47, 32), (48, 64), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, -1), (20, 8), (21, 32), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 15 : {24, 17, 26, 15}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 4, 7, 47, 21, 9, 3, 6, 5, 30, 49]
 solution : [0, 8, 1, 13, 14]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 4, 7, 47, 21, 9, 3, 6, 5, 30, 49]
 solution : [0, 8, 1, 13, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, -1), (20, 8), (21, 32), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 15 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 4, 7, 47, 21, 9, 3, 6, 5, 30, 49]
 solution : [0, 8, 1, 13, 14]


Solution : [0, 8, 1, 13, 14] has cost 22.


Decide in level 15 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 40, 39, 28, 27, 43, 20, 46, 48, 4, 7, 47, 21, 9, 3, 6, 5, 30, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Decide 40 with phase True at level 15

After decision at level 15
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 39, 28, 27, 43, 20, 46, 48, 4, 7, 47, 21, 9, 3, 6, 5, 30, 49]
 solution : [0, 8, 1, 13, 14, 40]


New level: 16
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 39, 28, 27, 43, 20, 46, 48, 4, 7, 47, 21, 9, 3, 6, 5, 30, 49]
 solution : [0, 8, 1, 13, 14, 40]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 39, 28, 27, 43, 20, 46, 48, 4, 7, 47, 21, 9, 3, 6, 5, 30, 49]
 solution : [0, 8, 1, 13, 14, 40]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, 128), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 32), (31, 8), (32, 8), (33, 8), (34, 4), (35, 2), (36, 64), (37, 2), (38, -1), (39, 0), (40, -1), (41, 8), (42, 8), (43, 0), (44, 8), (45, 8), (46, 8), (47, 16), (48, 4), (49, 64), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 16 : {43, 39}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 9, 3, 6, 5, 30, 49]
 solution : [0, 8, 1, 13, 14, 40]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 9, 3, 6, 5, 30, 49]
 solution : [0, 8, 1, 13, 14, 40]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 32), (31, 8), (32, 8), (33, 8), (34, 4), (35, 2), (36, 64), (37, 2), (38, -1), (39, 0), (40, -1), (41, 8), (42, 8), (43, 0), (44, 8), (45, 8), (46, 8), (47, 16), (48, 4), (49, 64), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 32), (31, 8), (32, 8), (33, 8), (34, 4), (35, 2), (36, 64), (37, 2), (38, -1), (39, -1), (40, -1), (41, 8), (42, 8), (43, -1), (44, 8), (45, 8), (46, 8), (47, 16), (48, 4), (49, 64), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 16 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 9, 3, 6, 5, 30, 49]
 solution : [0, 8, 1, 13, 14, 40]


Solution : [0, 8, 1, 13, 14, 40] has cost 32.


Before backtrack at level 16
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 9, 3, 6, 5, 30, 49]
 solution : [0, 8, 1, 13, 14, 40]

After backtrack at level 16
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 9, 3, 6, 5, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 40]


Invert decision for 40 at level 15


New level: 16
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 9, 3, 6, 5, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 9, 3, 6, 5, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 32), (31, 8), (32, 8), (33, 8), (34, 4), (35, 2), (36, 64), (37, 2), (38, -1), (39, -1), (40, -1), (41, 8), (42, 8), (43, -1), (44, 8), (45, 8), (46, 8), (47, 16), (48, 4), (49, 64), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 16 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 9, 3, 6, 5, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14]


Solution : [0, 8, 1, 13, 14] has cost 22.


Decide in level 16 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 9, 3, 6, 5, 30, 49, 39, 43]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Decide 9 with phase True at level 16

After decision at level 16
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 3, 6, 5, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 9]


New level: 17
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 3, 6, 5, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 9]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 3, 6, 5, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 2), (55, 0), (56, 2), (57, 0), (58, -1), (59, 1), (60, 0), (61, 0)]

Covered at level 17 : {3, 4, 5, 6, 7, 20, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 60, 61}

After reduction : 
 pending  : [56, 54, 59]
 solution : [0, 8, 1, 13, 14, 9]


Before reduction : 
 pending  : [56, 54, 59]
 solution : [0, 8, 1, 13, 14, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 2), (55, 0), (56, 2), (57, 0), (58, -1), (59, 1), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 2), (55, -1), (56, 2), (57, -1), (58, -1), (59, 1), (60, -1), (61, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [56, 54, 59]
 solution : [0, 8, 1, 13, 14, 9]


Solution : [0, 8, 1, 13, 14, 9] has cost 28.


Before backtrack at level 17
 pending : [56, 54, 59]
 solution : [0, 8, 1, 13, 14, 9]

After backtrack at level 17
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 3, 6, 5, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 9]


Invert decision for 9 at level 16


New level: 17
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 3, 6, 5, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 3, 6, 5, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 2), (55, -1), (56, 2), (57, -1), (58, -1), (59, 1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 17 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 3, 6, 5, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14]


Solution : [0, 8, 1, 13, 14] has cost 22.


Decide in level 17 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 3, 6, 5, 30, 49, 39, 43]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Decide 3 with phase True at level 17

After decision at level 17
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 6, 5, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 3]


New level: 18
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 6, 5, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 3]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 6, 5, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 3]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 2), (55, 0), (56, 2), (57, 0), (58, -1), (59, 1), (60, 0), (61, 0)]

Covered at level 18 : {4, 5, 6, 7, 20, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 60, 61}

After reduction : 
 pending  : [56, 54, 59]
 solution : [0, 8, 1, 13, 14, 3]


Before reduction : 
 pending  : [56, 54, 59]
 solution : [0, 8, 1, 13, 14, 3]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 2), (55, 0), (56, 2), (57, 0), (58, -1), (59, 1), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 2), (55, -1), (56, 2), (57, -1), (58, -1), (59, 1), (60, -1), (61, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [56, 54, 59]
 solution : [0, 8, 1, 13, 14, 3]


Solution : [0, 8, 1, 13, 14, 3] has cost 28.


Before backtrack at level 18
 pending : [56, 54, 59]
 solution : [0, 8, 1, 13, 14, 3]

After backtrack at level 18
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 6, 5, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 3]


Invert decision for 3 at level 17


New level: 18
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 6, 5, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 6, 5, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 2), (55, -1), (56, 2), (57, -1), (58, -1), (59, 1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 18 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 6, 5, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14]


Solution : [0, 8, 1, 13, 14] has cost 22.


Decide in level 18 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 6, 5, 30, 49, 39, 43]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Decide 5 with phase True at level 18

After decision at level 18
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 6, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 5]


New level: 19
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 6, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 5]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 6, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 5]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 32), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 32), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, -1), (6, 0), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 16)]

Covered at level 19 : {6}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 5]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 5]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, -1), (6, 0), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 16)]

Covered at level 19 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 5]


Solution : [0, 8, 1, 13, 14, 5] has cost 27.


Before backtrack at level 19
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 5]

After backtrack at level 19
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6]
 solution : [0, 8, 1, 13, 14, 5]


Invert decision for 5 at level 18


New level: 19
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6]
 solution : [0, 8, 1, 13, 14]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6]
 solution : [0, 8, 1, 13, 14]

Essensial at level 19 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 8), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 8), (47, 8), (48, 8), (49, 128), (50, 16), (51, 16), (52, 16), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 16), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 19 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 6]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 6]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 16), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 16), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 19 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 6]


Solution : [0, 8, 1, 13, 14, 6] has cost 24.


Before backtrack at level 19
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43]
 solution : [0, 8, 1, 13, 14, 6]

After backtrack at level 19
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6]
 solution : [0, 8, 1, 13, 14]


Before backtrack at level 18
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6]
 solution : [0, 8, 1, 13, 14]

After backtrack at level 18
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5]
 solution : [0, 8, 1, 13, 14]


Before backtrack at level 17
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5]
 solution : [0, 8, 1, 13, 14]

After backtrack at level 17
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3]
 solution : [0, 8, 1, 13, 14]


Before backtrack at level 16
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3]
 solution : [0, 8, 1, 13, 14]

After backtrack at level 16
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9]
 solution : [0, 8, 1, 13, 14]


Before backtrack at level 15
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9]
 solution : [0, 8, 1, 13, 14]

After backtrack at level 15
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 24, 26, 40]
 solution : [0, 8, 1, 13, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 24, 26, 40]
 solution : [0, 8, 1, 13]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 24, 26, 40]
 solution : [0, 8, 1, 13]

Essensial at level 15 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 64), (31, 8), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 64), (38, -1), (39, 4), (40, -1), (41, 16), (42, 16), (43, 128), (44, 16), (45, 16), (46, 16), (47, 16), (48, 8), (49, 128), (50, 32), (51, 16), (52, 32), (53, 16), (54, 32), (55, 16), (56, 32), (57, 16), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 32), (21, 32), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 64), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 64), (47, 32), (48, 32), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 15 : {26}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40]
 solution : [0, 8, 1, 13, 24]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40]
 solution : [0, 8, 1, 13, 24]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 32), (21, 32), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 64), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 64), (47, 32), (48, 32), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 32), (21, 32), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 64), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 64), (47, 32), (48, 32), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40]
 solution : [0, 8, 1, 13, 24]


Solution : [0, 8, 1, 13, 24] has cost 26.


Before backtrack at level 15
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40]
 solution : [0, 8, 1, 13, 24]

After backtrack at level 15
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26]
 solution : [0, 8, 1, 13]


Before backtrack at level 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26]
 solution : [0, 8, 1, 13]

After backtrack at level 14
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14]
 solution : [0, 8, 1, 13]


Before backtrack at level 13
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14]
 solution : [0, 8, 1, 13]

After backtrack at level 13
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14, 23]
 solution : [0, 8, 1, 13]


Before backtrack at level 12
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14, 23]
 solution : [0, 8, 1, 13]

After backtrack at level 12
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14, 23, 2]
 solution : [0, 8, 1, 13]


Before backtrack at level 11
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14, 23, 2]
 solution : [0, 8, 1, 13]

After backtrack at level 11
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14, 23, 2, 10]
 solution : [0, 8, 1, 13]


Before backtrack at level 10
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14, 23, 2, 10]
 solution : [0, 8, 1, 13]

After backtrack at level 10
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14, 23, 2, 10, 22]
 solution : [0, 8, 1, 13]


Before backtrack at level 9
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14, 23, 2, 10, 22]
 solution : [0, 8, 1, 13]

After backtrack at level 9
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14, 23, 2, 10, 22, 16]
 solution : [0, 8, 1, 13]


Before backtrack at level 8
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14, 23, 2, 10, 22, 16]
 solution : [0, 8, 1, 13]

After backtrack at level 8
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14, 23, 2, 10, 22, 16, 38]
 solution : [0, 8, 1, 13]


Before backtrack at level 7
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14, 23, 2, 10, 22, 16, 38]
 solution : [0, 8, 1, 13]

After backtrack at level 7
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14, 23, 2, 10, 22, 16, 38, 58]
 solution : [0, 8, 1, 13]


Before backtrack at level 6
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14, 23, 2, 10, 22, 16, 38, 58]
 solution : [0, 8, 1, 13]

After backtrack at level 6
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14, 23, 2, 10, 22, 16, 38, 58, 19]
 solution : [0, 8, 1, 13]


Before backtrack at level 5
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14, 23, 2, 10, 22, 16, 38, 58, 19]
 solution : [0, 8, 1, 13]

After backtrack at level 5
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14, 23, 2, 10, 22, 16, 38, 58, 19, 25, 18]
 solution : [0, 8, 1, 13]


Invert decision for 13 at level 4


New level: 5
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14, 23, 2, 10, 22, 16, 38, 58, 19, 25, 18]
 solution : [0, 8, 1]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 17, 15, 40, 24, 26, 14, 23, 2, 10, 22, 16, 38, 58, 19, 25, 18]
 solution : [0, 8, 1]

Essensial at level 5 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 64), (7, 64), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 128), (16, -1), (17, 128), (18, -1), (19, -1), (20, 32), (21, 32), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 32), (33, 64), (34, 32), (35, 64), (36, 64), (37, 64), (38, -1), (39, 64), (40, 128), (41, 64), (42, 64), (43, 128), (44, 64), (45, 64), (46, 64), (47, 32), (48, 32), (49, 128), (50, 128), (51, 64), (52, 128), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, -1), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 512), (19, 512), (20, 16), (21, 256), (22, 32), (23, 256), (24, 0), (25, 32), (26, 0), (27, 4), (28, 8), (29, 256), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 256), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 5 : {15, 16, 17, 24, 26}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 38, 58, 19, 25, 18]
 solution : [0, 8, 1, 14]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 38, 58, 19, 25, 18]
 solution : [0, 8, 1, 14]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 512), (19, 512), (20, 16), (21, 256), (22, 32), (23, 256), (24, 0), (25, 32), (26, 0), (27, 4), (28, 8), (29, 256), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 256), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 512), (19, 512), (20, 16), (21, 256), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, 256), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 256), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 5 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 38, 58, 19, 25, 18]
 solution : [0, 8, 1, 14]


Solution : [0, 8, 1, 14] has cost 16.


Decide in level 5 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 38, 58, 19, 25, 18]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 512), (19, 512), (20, 16), (21, 256), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, 256), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 256), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Decide 19 with phase True at level 5

After decision at level 5
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 38, 58, 25, 18]
 solution : [0, 8, 1, 14, 19]


New level: 6
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 38, 58, 25, 18]
 solution : [0, 8, 1, 14, 19]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 36, 29, 61, 60, 33, 34, 28, 27, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 38, 58, 25, 18]
 solution : [0, 8, 1, 14, 19]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 512), (19, 512), (20, 16), (21, 256), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, 256), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 256), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 256), (19, -1), (20, 8), (21, 256), (22, 16), (23, 16), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, 16), (30, 4), (31, 8), (32, 4), (33, 16), (34, 8), (35, 32), (36, 0), (37, 256), (38, 2), (39, 1), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 4), (47, 128), (48, 2), (49, 8), (50, 8), (51, 4), (52, 32), (53, 16), (54, 16), (55, 8), (56, 32), (57, 16), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 6 : {27, 36, 28}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 38, 58, 25, 18]
 solution : [0, 8, 1, 14, 19]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 38, 58, 25, 18]
 solution : [0, 8, 1, 14, 19]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 256), (19, -1), (20, 8), (21, 256), (22, 16), (23, 16), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, 16), (30, 4), (31, 8), (32, 4), (33, 16), (34, 8), (35, 32), (36, 0), (37, 256), (38, 2), (39, 1), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 4), (47, 128), (48, 2), (49, 8), (50, 8), (51, 4), (52, 32), (53, 16), (54, 16), (55, 8), (56, 32), (57, 16), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 256), (19, -1), (20, 8), (21, 256), (22, 16), (23, 16), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 4), (33, 16), (34, 8), (35, 32), (36, -1), (37, 256), (38, 2), (39, 1), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 4), (47, 128), (48, 2), (49, 8), (50, 8), (51, 4), (52, 32), (53, 16), (54, 16), (55, 8), (56, 32), (57, 16), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 6 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 38, 58, 25, 18]
 solution : [0, 8, 1, 14, 19]


Solution : [0, 8, 1, 14, 19] has cost 25.


Before backtrack at level 6
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 38, 58, 25, 18]
 solution : [0, 8, 1, 14, 19]

After backtrack at level 6
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 38, 58, 25, 18, 36, 28, 27]
 solution : [0, 8, 1, 14, 19]


Invert decision for 19 at level 5


New level: 6
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 38, 58, 25, 18, 36, 28, 27]
 solution : [0, 8, 1, 14]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 38, 58, 25, 18, 36, 28, 27]
 solution : [0, 8, 1, 14]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 256), (19, -1), (20, 8), (21, 256), (22, 16), (23, 16), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 4), (33, 16), (34, 8), (35, 32), (36, -1), (37, 256), (38, 2), (39, 1), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 4), (47, 128), (48, 2), (49, 8), (50, 8), (51, 4), (52, 32), (53, 16), (54, 16), (55, 8), (56, 32), (57, 16), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 512), (19, -1), (20, 16), (21, 256), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, 256), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 256), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 6 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 38, 58, 25, 18, 36, 28, 27]
 solution : [0, 8, 1, 14]


Solution : [0, 8, 1, 14] has cost 16.


Decide in level 6 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 38, 58, 25, 18, 36, 28, 27]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 512), (19, -1), (20, 16), (21, 256), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, 256), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 256), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Decide 18 with phase True at level 6

After decision at level 6
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 38, 58, 25, 36, 28, 27]
 solution : [0, 8, 1, 14, 18]


New level: 7
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 38, 58, 25, 36, 28, 27]
 solution : [0, 8, 1, 14, 18]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 35, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 39, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 38, 58, 25, 36, 28, 27]
 solution : [0, 8, 1, 14, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 512), (19, -1), (20, 16), (21, 256), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, 256), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 256), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 256), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 1), (28, 2), (29, 128), (30, 64), (31, 16), (32, 8), (33, 8), (34, 4), (35, 0), (36, 16), (37, 8), (38, 0), (39, 0), (40, 8), (41, 2), (42, 4), (43, 2), (44, 8), (45, 16), (46, 8), (47, 128), (48, 4), (49, 64), (50, 16), (51, 8), (52, 32), (53, 16), (54, 16), (55, 8), (56, 32), (57, 16), (58, 16), (59, 8), (60, 4), (61, 8)]

Covered at level 7 : {35, 38, 39}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27]
 solution : [0, 8, 1, 14, 18]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27]
 solution : [0, 8, 1, 14, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 256), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 1), (28, 2), (29, 128), (30, 64), (31, 16), (32, 8), (33, 8), (34, 4), (35, 0), (36, 16), (37, 8), (38, 0), (39, 0), (40, 8), (41, 2), (42, 4), (43, 2), (44, 8), (45, 16), (46, 8), (47, 128), (48, 4), (49, 64), (50, 16), (51, 8), (52, 32), (53, 16), (54, 16), (55, 8), (56, 32), (57, 16), (58, 16), (59, 8), (60, 4), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 256), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 1), (28, 2), (29, 128), (30, 64), (31, 16), (32, 8), (33, 8), (34, 4), (35, -1), (36, 16), (37, 8), (38, -1), (39, -1), (40, 8), (41, 2), (42, 4), (43, 2), (44, 8), (45, 16), (46, 8), (47, 128), (48, 4), (49, 64), (50, 16), (51, 8), (52, 32), (53, 16), (54, 16), (55, 8), (56, 32), (57, 16), (58, 16), (59, 8), (60, 4), (61, 8)]

Covered at level 7 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27]
 solution : [0, 8, 1, 14, 18]


Solution : [0, 8, 1, 14, 18] has cost 25.


Before backtrack at level 7
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27]
 solution : [0, 8, 1, 14, 18]

After backtrack at level 7
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27, 35, 39, 38]
 solution : [0, 8, 1, 14, 18]


Invert decision for 18 at level 6


New level: 7
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27, 35, 39, 38]
 solution : [0, 8, 1, 14]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27, 35, 39, 38]
 solution : [0, 8, 1, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 256), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 1), (28, 2), (29, 128), (30, 64), (31, 16), (32, 8), (33, 8), (34, 4), (35, -1), (36, 16), (37, 8), (38, -1), (39, -1), (40, 8), (41, 2), (42, 4), (43, 2), (44, 8), (45, 16), (46, 8), (47, 128), (48, 4), (49, 64), (50, 16), (51, 8), (52, 32), (53, 16), (54, 16), (55, 8), (56, 32), (57, 16), (58, 16), (59, 8), (60, 4), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 256), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, 256), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 256), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 7 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27, 35, 39, 38]
 solution : [0, 8, 1, 14]


Solution : [0, 8, 1, 14] has cost 16.


Decide in level 7 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 37, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27, 35, 39, 38]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 256), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, 256), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 256), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Decide 37 with phase True at level 7

After decision at level 7
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27, 35, 39, 38]
 solution : [0, 8, 1, 14, 37]


New level: 8
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27, 35, 39, 38]
 solution : [0, 8, 1, 14, 37]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27, 35, 39, 38]
 solution : [0, 8, 1, 14, 37]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 256), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, 256), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, 256), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 128), (22, 16), (23, 256), (24, -1), (25, 16), (26, -1), (27, 2), (28, 4), (29, 128), (30, 64), (31, 16), (32, 8), (33, 8), (34, 4), (35, 0), (36, 32), (37, -1), (38, 0), (39, 0), (40, 8), (41, 8), (42, 16), (43, 4), (44, 16), (45, 32), (46, 8), (47, 64), (48, 4), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 8 : {35, 38, 39}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27]
 solution : [0, 8, 1, 14, 37]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27]
 solution : [0, 8, 1, 14, 37]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 128), (22, 16), (23, 256), (24, -1), (25, 16), (26, -1), (27, 2), (28, 4), (29, 128), (30, 64), (31, 16), (32, 8), (33, 8), (34, 4), (35, 0), (36, 32), (37, -1), (38, 0), (39, 0), (40, 8), (41, 8), (42, 16), (43, 4), (44, 16), (45, 32), (46, 8), (47, 64), (48, 4), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 128), (22, 16), (23, 256), (24, -1), (25, 16), (26, -1), (27, 2), (28, 4), (29, 128), (30, 64), (31, 16), (32, 8), (33, 8), (34, 4), (35, -1), (36, 32), (37, -1), (38, -1), (39, -1), (40, 8), (41, 8), (42, 16), (43, 4), (44, 16), (45, 32), (46, 8), (47, 64), (48, 4), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27]
 solution : [0, 8, 1, 14, 37]


Solution : [0, 8, 1, 14, 37] has cost 26.


Before backtrack at level 8
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27]
 solution : [0, 8, 1, 14, 37]

After backtrack at level 8
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27, 35, 39, 38]
 solution : [0, 8, 1, 14, 37]


Invert decision for 37 at level 7


New level: 8
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27, 35, 39, 38]
 solution : [0, 8, 1, 14]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27, 35, 39, 38]
 solution : [0, 8, 1, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 128), (22, 16), (23, 256), (24, -1), (25, 16), (26, -1), (27, 2), (28, 4), (29, 128), (30, 64), (31, 16), (32, 8), (33, 8), (34, 4), (35, -1), (36, 32), (37, -1), (38, -1), (39, -1), (40, 8), (41, 8), (42, 16), (43, 4), (44, 16), (45, 32), (46, 8), (47, 64), (48, 4), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 256), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, 256), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, -1), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27, 35, 39, 38]
 solution : [0, 8, 1, 14]


Solution : [0, 8, 1, 14] has cost 16.


Decide in level 8 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 29, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27, 35, 39, 38]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 256), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, 256), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, -1), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Decide 29 with phase True at level 8

After decision at level 8
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27, 35, 39, 38]
 solution : [0, 8, 1, 14, 29]


New level: 9
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27, 35, 39, 38]
 solution : [0, 8, 1, 14, 29]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 36, 28, 27, 35, 39, 38]
 solution : [0, 8, 1, 14, 29]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 256), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, 256), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, -1), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4), (21, 128), (22, 8), (23, 16), (24, -1), (25, 16), (26, -1), (27, 0), (28, 0), (29, -1), (30, 2), (31, 8), (32, 4), (33, 16), (34, 8), (35, 32), (36, 0), (37, -1), (38, 2), (39, 1), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 4), (47, 32), (48, 2), (49, 8), (50, 16), (51, 8), (52, 32), (53, 16), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 9 : {27, 36, 28}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 35, 39, 38]
 solution : [0, 8, 1, 14, 29]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 35, 39, 38]
 solution : [0, 8, 1, 14, 29]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4), (21, 128), (22, 8), (23, 16), (24, -1), (25, 16), (26, -1), (27, 0), (28, 0), (29, -1), (30, 2), (31, 8), (32, 4), (33, 16), (34, 8), (35, 32), (36, 0), (37, -1), (38, 2), (39, 1), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 4), (47, 32), (48, 2), (49, 8), (50, 16), (51, 8), (52, 32), (53, 16), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4), (21, 128), (22, 8), (23, 16), (24, -1), (25, 16), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 8), (32, 4), (33, 16), (34, 8), (35, 32), (36, -1), (37, -1), (38, 2), (39, 1), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 4), (47, 32), (48, 2), (49, 8), (50, 16), (51, 8), (52, 32), (53, 16), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 35, 39, 38]
 solution : [0, 8, 1, 14, 29]


Solution : [0, 8, 1, 14, 29] has cost 26.


Before backtrack at level 9
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 35, 39, 38]
 solution : [0, 8, 1, 14, 29]

After backtrack at level 9
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 35, 39, 38, 36, 28, 27]
 solution : [0, 8, 1, 14, 29]


Invert decision for 29 at level 8


New level: 9
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 35, 39, 38, 36, 28, 27]
 solution : [0, 8, 1, 14]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 35, 39, 38, 36, 28, 27]
 solution : [0, 8, 1, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4), (21, 128), (22, 8), (23, 16), (24, -1), (25, 16), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 8), (32, 4), (33, 16), (34, 8), (35, 32), (36, -1), (37, -1), (38, 2), (39, 1), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 4), (47, 32), (48, 2), (49, 8), (50, 16), (51, 8), (52, 32), (53, 16), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 256), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, -1), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, -1), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 35, 39, 38, 36, 28, 27]
 solution : [0, 8, 1, 14]


Solution : [0, 8, 1, 14] has cost 16.


Decide in level 9 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 21, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 35, 39, 38, 36, 28, 27]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 256), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, -1), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, -1), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Decide 21 with phase True at level 9

After decision at level 9
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 35, 39, 38, 36, 28, 27]
 solution : [0, 8, 1, 14, 21]


New level: 10
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 35, 39, 38, 36, 28, 27]
 solution : [0, 8, 1, 14, 21]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 20, 46, 48, 4, 7, 47, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 22, 58, 25, 35, 39, 38, 36, 28, 27]
 solution : [0, 8, 1, 14, 21]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 256), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, -1), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, -1), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 32), (5, 128), (6, 64), (7, 64), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, 16), (24, -1), (25, 4), (26, -1), (27, 0), (28, 0), (29, -1), (30, 2), (31, 8), (32, 4), (33, 4), (34, 2), (35, 4), (36, 2), (37, -1), (38, 0), (39, 0), (40, 16), (41, 16), (42, 32), (43, 8), (44, 32), (45, 64), (46, 0), (47, 0), (48, 0), (49, 8), (50, 16), (51, 8), (52, 32), (53, 16), (54, 32), (55, 16), (56, 64), (57, 32), (58, 32), (59, 16), (60, 8), (61, 16)]

Covered at level 10 : {38, 39, 46, 47, 48, 20, 22, 27, 28}

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 58, 25, 35, 36]
 solution : [0, 8, 1, 14, 21]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 58, 25, 35, 36]
 solution : [0, 8, 1, 14, 21]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 32), (5, 128), (6, 64), (7, 64), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, 16), (24, -1), (25, 4), (26, -1), (27, 0), (28, 0), (29, -1), (30, 2), (31, 8), (32, 4), (33, 4), (34, 2), (35, 4), (36, 2), (37, -1), (38, 0), (39, 0), (40, 16), (41, 16), (42, 32), (43, 8), (44, 32), (45, 64), (46, 0), (47, 0), (48, 0), (49, 8), (50, 16), (51, 8), (52, 32), (53, 16), (54, 32), (55, 16), (56, 64), (57, 32), (58, 32), (59, 16), (60, 8), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 32), (5, 128), (6, 64), (7, 64), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16), (24, -1), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 8), (32, 4), (33, 4), (34, 2), (35, 4), (36, 2), (37, -1), (38, -1), (39, -1), (40, 16), (41, 16), (42, 32), (43, 8), (44, 32), (45, 64), (46, -1), (47, -1), (48, -1), (49, 8), (50, 16), (51, 8), (52, 32), (53, 16), (54, 32), (55, 16), (56, 64), (57, 32), (58, 32), (59, 16), (60, 8), (61, 16)]

Covered at level 10 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 58, 25, 35, 36]
 solution : [0, 8, 1, 14, 21]


Solution : [0, 8, 1, 14, 21] has cost 26.


Before backtrack at level 10
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 58, 25, 35, 36]
 solution : [0, 8, 1, 14, 21]

After backtrack at level 10
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 58, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 28, 27]
 solution : [0, 8, 1, 14, 21]


Invert decision for 21 at level 9


New level: 10
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 58, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 28, 27]
 solution : [0, 8, 1, 14]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 58, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 28, 27]
 solution : [0, 8, 1, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 32), (5, 128), (6, 64), (7, 64), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16), (24, -1), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 8), (32, 4), (33, 4), (34, 2), (35, 4), (36, 2), (37, -1), (38, -1), (39, -1), (40, 16), (41, 16), (42, 32), (43, 8), (44, 32), (45, 64), (46, -1), (47, -1), (48, -1), (49, 8), (50, 16), (51, 8), (52, 32), (53, 16), (54, 32), (55, 16), (56, 64), (57, 32), (58, 32), (59, 16), (60, 8), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, -1), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, -1), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 58, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 28, 27]
 solution : [0, 8, 1, 14]


Solution : [0, 8, 1, 14] has cost 16.


Decide in level 10 among pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 9, 40, 23, 2, 10, 58, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 28, 27]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, -1), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, -1), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Decide 9 with phase True at level 10

After decision at level 10
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 40, 23, 2, 10, 58, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 28, 27]
 solution : [0, 8, 1, 14, 9]


New level: 11
 pending : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 40, 23, 2, 10, 58, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 28, 27]
 solution : [0, 8, 1, 14, 9]


Before reduction : 
 pending  : [56, 54, 59, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 40, 23, 2, 10, 58, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 28, 27]
 solution : [0, 8, 1, 14, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, 256), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, -1), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, -1), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, 1), (24, -1), (25, 0), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 2), (55, 0), (56, 2), (57, 0), (58, 1), (59, 1), (60, 0), (61, 0)]

Covered at level 11 : {3, 4, 5, 6, 7, 10, 20, 22, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 60, 61}

After reduction : 
 pending  : [56, 54, 59, 23, 2, 58]
 solution : [0, 8, 1, 14, 9]


Before reduction : 
 pending  : [56, 54, 59, 23, 2, 58]
 solution : [0, 8, 1, 14, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, 1), (24, -1), (25, 0), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 2), (55, 0), (56, 2), (57, 0), (58, 1), (59, 1), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 2), (55, -1), (56, 2), (57, -1), (58, 1), (59, 1), (60, -1), (61, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [56, 54, 59, 23, 2, 58]
 solution : [0, 8, 1, 14, 9]


Solution : [0, 8, 1, 14, 9] has cost 22.


Decide in level 11 among pending : [56, 54, 59, 23, 2, 58]

Coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 2), (55, -1), (56, 2), (57, -1), (58, 1), (59, 1), (60, -1), (61, -1)]

Decide 56 with phase True at level 11

After decision at level 11
 pending : [54, 59, 23, 2, 58]
 solution : [0, 8, 1, 14, 9, 56]


New level: 12
 pending : [54, 59, 23, 2, 58]
 solution : [0, 8, 1, 14, 9, 56]


Before reduction : 
 pending  : [54, 59, 23, 2, 58]
 solution : [0, 8, 1, 14, 9, 56]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 2), (55, -1), (56, 2), (57, -1), (58, 1), (59, 1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 0), (55, -1), (56, -1), (57, -1), (58, 0), (59, 0), (60, -1), (61, -1)]

Covered at level 12 : {2, 54, 23, 58, 59}

After reduction : 
 pending  : []
 solution : [0, 8, 1, 14, 9, 56]


Before reduction : 
 pending  : []
 solution : [0, 8, 1, 14, 9, 56]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 0), (55, -1), (56, -1), (57, -1), (58, 0), (59, 0), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 8, 1, 14, 9, 56]


Solution : [0, 8, 1, 14, 9, 56] has cost 32.


Before backtrack at level 12
 pending : []
 solution : [0, 8, 1, 14, 9, 56]

After backtrack at level 12
 pending : [54, 59, 23, 2, 58]
 solution : [0, 8, 1, 14, 9, 56]


Invert decision for 56 at level 11


New level: 12
 pending : [54, 59, 23, 2, 58]
 solution : [0, 8, 1, 14, 9]


Before reduction : 
 pending  : [54, 59, 23, 2, 58]
 solution : [0, 8, 1, 14, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 2), (55, -1), (56, -1), (57, -1), (58, 1), (59, 1), (60, -1), (61, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [54, 59, 23, 2, 58]
 solution : [0, 8, 1, 14, 9]


Solution : [0, 8, 1, 14, 9] has cost 22.


Decide in level 12 among pending : [54, 59, 23, 2, 58]

Coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 2), (55, -1), (56, -1), (57, -1), (58, 1), (59, 1), (60, -1), (61, -1)]

Decide 54 with phase True at level 12

After decision at level 12
 pending : [59, 23, 2, 58]
 solution : [0, 8, 1, 14, 9, 54]


New level: 13
 pending : [59, 23, 2, 58]
 solution : [0, 8, 1, 14, 9, 54]


Before reduction : 
 pending  : [59, 23, 2, 58]
 solution : [0, 8, 1, 14, 9, 54]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 2), (55, -1), (56, -1), (57, -1), (58, 1), (59, 1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 0), (59, 0), (60, -1), (61, -1)]

Covered at level 13 : {2, 59, 58, 23}

After reduction : 
 pending  : []
 solution : [0, 8, 1, 14, 9, 54]


Before reduction : 
 pending  : []
 solution : [0, 8, 1, 14, 9, 54]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 0), (59, 0), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 8, 1, 14, 9, 54]


Solution : [0, 8, 1, 14, 9, 54] has cost 32.


Before backtrack at level 13
 pending : []
 solution : [0, 8, 1, 14, 9, 54]

After backtrack at level 13
 pending : [59, 23, 2, 58]
 solution : [0, 8, 1, 14, 9, 54]


Invert decision for 54 at level 12


New level: 13
 pending : [59, 23, 2, 58]
 solution : [0, 8, 1, 14, 9]


Before reduction : 
 pending  : [59, 23, 2, 58]
 solution : [0, 8, 1, 14, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 1), (59, 1), (60, -1), (61, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [59, 23, 2, 58]
 solution : [0, 8, 1, 14, 9]


Solution : [0, 8, 1, 14, 9] has cost 22.


Decide in level 13 among pending : [59, 23, 2, 58]

Coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 1), (59, 1), (60, -1), (61, -1)]

Decide 2 with phase True at level 13

After decision at level 13
 pending : [59, 23, 58]
 solution : [0, 8, 1, 14, 9, 2]


New level: 14
 pending : [59, 23, 58]
 solution : [0, 8, 1, 14, 9, 2]


Before reduction : 
 pending  : [59, 23, 58]
 solution : [0, 8, 1, 14, 9, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 1), (59, 1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 0), (59, 0), (60, -1), (61, -1)]

Covered at level 14 : {58, 59, 23}

After reduction : 
 pending  : []
 solution : [0, 8, 1, 14, 9, 2]


Before reduction : 
 pending  : []
 solution : [0, 8, 1, 14, 9, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 0), (59, 0), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 8, 1, 14, 9, 2]


Solution : [0, 8, 1, 14, 9, 2] has cost 28.


Before backtrack at level 14
 pending : []
 solution : [0, 8, 1, 14, 9, 2]

After backtrack at level 14
 pending : [59, 23, 58]
 solution : [0, 8, 1, 14, 9, 2]


Invert decision for 2 at level 13


New level: 14
 pending : [59, 23, 58]
 solution : [0, 8, 1, 14, 9]


Before reduction : 
 pending  : [59, 23, 58]
 solution : [0, 8, 1, 14, 9]

Essensial at level 14 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 1), (59, 1), (60, -1), (61, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [59, 58]
 solution : [0, 8, 1, 14, 9, 23]


Before reduction : 
 pending  : [59, 58]
 solution : [0, 8, 1, 14, 9, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 1), (59, 1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 1), (59, 1), (60, -1), (61, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [59, 58]
 solution : [0, 8, 1, 14, 9, 23]


Solution : [0, 8, 1, 14, 9, 23] has cost 32.


Before backtrack at level 14
 pending : [59, 58]
 solution : [0, 8, 1, 14, 9, 23]

After backtrack at level 14
 pending : [59, 58, 23]
 solution : [0, 8, 1, 14, 9]


Before backtrack at level 13
 pending : [59, 58, 23]
 solution : [0, 8, 1, 14, 9]

After backtrack at level 13
 pending : [59, 58, 23, 2]
 solution : [0, 8, 1, 14, 9]


Before backtrack at level 12
 pending : [59, 58, 23, 2]
 solution : [0, 8, 1, 14, 9]

After backtrack at level 12
 pending : [59, 58, 23, 2, 54]
 solution : [0, 8, 1, 14, 9]


Before backtrack at level 11
 pending : [59, 58, 23, 2, 54]
 solution : [0, 8, 1, 14, 9]

After backtrack at level 11
 pending : [59, 58, 23, 2, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 28, 27, 56]
 solution : [0, 8, 1, 14, 9]


Invert decision for 9 at level 10


New level: 11
 pending : [59, 58, 23, 2, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 28, 27, 56]
 solution : [0, 8, 1, 14]


Before reduction : 
 pending  : [59, 58, 23, 2, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 28, 27, 56]
 solution : [0, 8, 1, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 1), (59, 1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, -1), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, -1), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [59, 58, 23, 2, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 28, 27, 56]
 solution : [0, 8, 1, 14]


Solution : [0, 8, 1, 14] has cost 16.


Decide in level 11 among pending : [59, 58, 23, 2, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 28, 27, 56]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, -1), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, -1), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Decide 23 with phase True at level 11

After decision at level 11
 pending : [59, 58, 2, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 28, 27, 56]
 solution : [0, 8, 1, 14, 23]


New level: 12
 pending : [59, 58, 2, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 28, 27, 56]
 solution : [0, 8, 1, 14, 23]


Before reduction : 
 pending  : [59, 58, 2, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 30, 49, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 28, 27, 56]
 solution : [0, 8, 1, 14, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 32), (23, 256), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, -1), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, -1), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 4), (32, 2), (33, 16), (34, 8), (35, 64), (36, 1), (37, -1), (38, 2), (39, 1), (40, 128), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 4), (47, 32), (48, 2), (49, 0), (50, 32), (51, 16), (52, 64), (53, 32), (54, 16), (55, 8), (56, 32), (57, 16), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 12 : {49, 27, 28, 30}

After reduction : 
 pending  : [59, 58, 2, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 56]
 solution : [0, 8, 1, 14, 23]


Before reduction : 
 pending  : [59, 58, 2, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 56]
 solution : [0, 8, 1, 14, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 4), (32, 2), (33, 16), (34, 8), (35, 64), (36, 1), (37, -1), (38, 2), (39, 1), (40, 128), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 4), (47, 32), (48, 2), (49, 0), (50, 32), (51, 16), (52, 64), (53, 32), (54, 16), (55, 8), (56, 32), (57, 16), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, 2), (33, 16), (34, 8), (35, 64), (36, 1), (37, -1), (38, 2), (39, 1), (40, 128), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 4), (47, 32), (48, 2), (49, -1), (50, 32), (51, 16), (52, 64), (53, 32), (54, 16), (55, 8), (56, 32), (57, 16), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [59, 58, 2, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 56]
 solution : [0, 8, 1, 14, 23]


Solution : [0, 8, 1, 14, 23] has cost 26.


Before backtrack at level 12
 pending : [59, 58, 2, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 56]
 solution : [0, 8, 1, 14, 23]

After backtrack at level 12
 pending : [59, 58, 2, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 56, 30, 49, 28, 27]
 solution : [0, 8, 1, 14, 23]


Invert decision for 23 at level 11


New level: 12
 pending : [59, 58, 2, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 56, 30, 49, 28, 27]
 solution : [0, 8, 1, 14]


Before reduction : 
 pending  : [59, 58, 2, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 56, 30, 49, 28, 27]
 solution : [0, 8, 1, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, 2), (33, 16), (34, 8), (35, 64), (36, 1), (37, -1), (38, 2), (39, 1), (40, 128), (41, 16), (42, 32), (43, 32), (44, 32), (45, 64), (46, 4), (47, 32), (48, 2), (49, -1), (50, 32), (51, 16), (52, 64), (53, 32), (54, 16), (55, 8), (56, 32), (57, 16), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 32), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, -1), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, -1), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [59, 58, 2, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 56, 30, 49, 28, 27]
 solution : [0, 8, 1, 14]


Solution : [0, 8, 1, 14] has cost 16.


Decide in level 12 among pending : [59, 58, 2, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 56, 30, 49, 28, 27]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 32), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, -1), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, -1), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

Decide 2 with phase True at level 12

After decision at level 12
 pending : [59, 58, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 56, 30, 49, 28, 27]
 solution : [0, 8, 1, 14, 2]


New level: 13
 pending : [59, 58, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 56, 30, 49, 28, 27]
 solution : [0, 8, 1, 14, 2]


Before reduction : 
 pending  : [59, 58, 54, 53, 44, 52, 57, 42, 50, 51, 55, 41, 31, 32, 45, 61, 60, 33, 34, 4, 7, 43, 6, 5, 3, 40, 10, 25, 35, 36, 20, 46, 48, 47, 22, 39, 38, 56, 30, 49, 28, 27]
 solution : [0, 8, 1, 14, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, 128), (6, 64), (7, 128), (8, -1), (9, -1), (10, 256), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 32), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, 8), (29, -1), (30, 64), (31, 16), (32, 8), (33, 16), (34, 8), (35, 64), (36, 64), (37, -1), (38, 8), (39, 4), (40, 256), (41, 16), (42, 32), (43, 128), (44, 32), (45, 64), (46, 16), (47, 128), (48, 8), (49, 128), (50, 32), (51, 16), (52, 64), (53, 32), (54, 32), (55, 16), (56, 64), (57, 32), (58, 64), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 1), (6, 0), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, 0), (39, 0), (40, 2), (41, 0), (42, 0), (43, 0), (44, 2), (45, 4), (46, 0), (47, 1), (48, 0), (49, 0), (50, 0), (51, 0), (52, 2), (53, 2), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 13 : {3, 4, 6, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [53, 44, 52, 45, 7, 5, 40, 10, 25, 20, 47, 22]
 solution : [0, 8, 1, 14, 2]


Before reduction : 
 pending  : [53, 44, 52, 45, 7, 5, 40, 10, 25, 20, 47, 22]
 solution : [0, 8, 1, 14, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 1), (6, 0), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, 0), (39, 0), (40, 2), (41, 0), (42, 0), (43, 0), (44, 2), (45, 4), (46, 0), (47, 1), (48, 0), (49, 0), (50, 0), (51, 0), (52, 2), (53, 2), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2), (41, -1), (42, -1), (43, -1), (44, 2), (45, 4), (46, -1), (47, 1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [53, 44, 52, 45, 7, 5, 40, 10, 25, 20, 47, 22]
 solution : [0, 8, 1, 14, 2]


Solution : [0, 8, 1, 14, 2] has cost 22.


Decide in level 13 among pending : [53, 44, 52, 45, 7, 5, 40, 10, 25, 20, 47, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2), (41, -1), (42, -1), (43, -1), (44, 2), (45, 4), (46, -1), (47, 1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Decide 10 with phase True at level 13

After decision at level 13
 pending : [53, 44, 52, 45, 7, 5, 40, 25, 20, 47, 22]
 solution : [0, 8, 1, 14, 2, 10]


New level: 14
 pending : [53, 44, 52, 45, 7, 5, 40, 25, 20, 47, 22]
 solution : [0, 8, 1, 14, 2, 10]


Before reduction : 
 pending  : [53, 44, 52, 45, 7, 5, 40, 25, 20, 47, 22]
 solution : [0, 8, 1, 14, 2, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2), (41, -1), (42, -1), (43, -1), (44, 2), (45, 4), (46, -1), (47, 1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 2), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1), (41, -1), (42, -1), (43, -1), (44, 2), (45, 2), (46, -1), (47, 0), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 14 : {5, 47}

After reduction : 
 pending  : [53, 44, 52, 45, 7, 40, 25, 20, 22]
 solution : [0, 8, 1, 14, 2, 10]


Before reduction : 
 pending  : [53, 44, 52, 45, 7, 40, 25, 20, 22]
 solution : [0, 8, 1, 14, 2, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 2), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1), (41, -1), (42, -1), (43, -1), (44, 2), (45, 2), (46, -1), (47, 0), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 2), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1), (41, -1), (42, -1), (43, -1), (44, 2), (45, 2), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [53, 44, 52, 45, 7, 40, 25, 20, 22]
 solution : [0, 8, 1, 14, 2, 10]


Solution : [0, 8, 1, 14, 2, 10] has cost 27.


Before backtrack at level 14
 pending : [53, 44, 52, 45, 7, 40, 25, 20, 22]
 solution : [0, 8, 1, 14, 2, 10]

After backtrack at level 14
 pending : [53, 44, 52, 45, 7, 40, 25, 20, 22, 5, 47]
 solution : [0, 8, 1, 14, 2, 10]


Invert decision for 10 at level 13


New level: 14
 pending : [53, 44, 52, 45, 7, 40, 25, 20, 22, 5, 47]
 solution : [0, 8, 1, 14, 2]


Before reduction : 
 pending  : [53, 44, 52, 45, 7, 40, 25, 20, 22, 5, 47]
 solution : [0, 8, 1, 14, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 2), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1), (41, -1), (42, -1), (43, -1), (44, 2), (45, 2), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2), (41, -1), (42, -1), (43, -1), (44, 2), (45, 4), (46, -1), (47, 1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [53, 44, 52, 45, 7, 40, 25, 20, 22, 5, 47]
 solution : [0, 8, 1, 14, 2]


Solution : [0, 8, 1, 14, 2] has cost 22.


Decide in level 14 among pending : [53, 44, 52, 45, 7, 40, 25, 20, 22, 5, 47]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2), (41, -1), (42, -1), (43, -1), (44, 2), (45, 4), (46, -1), (47, 1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Decide 7 with phase True at level 14

After decision at level 14
 pending : [53, 44, 52, 45, 40, 25, 20, 22, 5, 47]
 solution : [0, 8, 1, 14, 2, 7]


New level: 15
 pending : [53, 44, 52, 45, 40, 25, 20, 22, 5, 47]
 solution : [0, 8, 1, 14, 2, 7]


Before reduction : 
 pending  : [53, 44, 52, 45, 40, 25, 20, 22, 5, 47]
 solution : [0, 8, 1, 14, 2, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2), (41, -1), (42, -1), (43, -1), (44, 2), (45, 4), (46, -1), (47, 1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2), (41, -1), (42, -1), (43, -1), (44, 2), (45, 4), (46, -1), (47, 0), (48, -1), (49, -1), (50, -1), (51, -1), (52, 1), (53, 1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 15 : {20, 5, 22, 47}

After reduction : 
 pending  : [53, 44, 52, 45, 40, 25]
 solution : [0, 8, 1, 14, 2, 7]


Before reduction : 
 pending  : [53, 44, 52, 45, 40, 25]
 solution : [0, 8, 1, 14, 2, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2), (41, -1), (42, -1), (43, -1), (44, 2), (45, 4), (46, -1), (47, 0), (48, -1), (49, -1), (50, -1), (51, -1), (52, 1), (53, 1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2), (41, -1), (42, -1), (43, -1), (44, 2), (45, 4), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 1), (53, 1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [53, 44, 52, 45, 40, 25]
 solution : [0, 8, 1, 14, 2, 7]


Solution : [0, 8, 1, 14, 2, 7] has cost 31.


Before backtrack at level 15
 pending : [53, 44, 52, 45, 40, 25]
 solution : [0, 8, 1, 14, 2, 7]

After backtrack at level 15
 pending : [53, 44, 52, 45, 40, 25, 20, 22, 5, 47]
 solution : [0, 8, 1, 14, 2, 7]


Invert decision for 7 at level 14


New level: 15
 pending : [53, 44, 52, 45, 40, 25, 20, 22, 5, 47]
 solution : [0, 8, 1, 14, 2]


Before reduction : 
 pending  : [53, 44, 52, 45, 40, 25, 20, 22, 5, 47]
 solution : [0, 8, 1, 14, 2]

Essensial at level 15 : {25}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2), (41, -1), (42, -1), (43, -1), (44, 2), (45, 4), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 1), (53, 1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 0), (41, -1), (42, -1), (43, -1), (44, 0), (45, 0), (46, -1), (47, 0), (48, -1), (49, -1), (50, -1), (51, -1), (52, 0), (53, 0), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 15 : {5, 40, 44, 45, 47, 52, 53, 20, 22}

After reduction : 
 pending  : []
 solution : [0, 8, 1, 14, 2, 25]


Before reduction : 
 pending  : []
 solution : [0, 8, 1, 14, 2, 25]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 0), (41, -1), (42, -1), (43, -1), (44, 0), (45, 0), (46, -1), (47, 0), (48, -1), (49, -1), (50, -1), (51, -1), (52, 0), (53, 0), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 8, 1, 14, 2, 25]


Solution : [0, 8, 1, 14, 2, 25] has cost 32.


Before backtrack at level 15
 pending : []
 solution : [0, 8, 1, 14, 2, 25]

After backtrack at level 15
 pending : [25, 53, 44, 52, 45, 40, 20, 22, 5, 47]
 solution : [0, 8, 1, 14, 2]


Before backtrack at level 14
 pending : [25, 53, 44, 52, 45, 40, 20, 22, 5, 47]
 solution : [0, 8, 1, 14, 2]

After backtrack at level 14
 pending : [25, 53, 44, 52, 45, 40, 20, 22, 5, 47, 7]
 solution : [0, 8, 1, 14, 2]


Before backtrack at level 13
 pending : [25, 53, 44, 52, 45, 40, 20, 22, 5, 47, 7]
 solution : [0, 8, 1, 14, 2]

After backtrack at level 13
 pending : [25, 53, 44, 52, 45, 40, 20, 22, 5, 47, 7, 59, 58, 54, 57, 42, 50, 51, 55, 41, 31, 32, 61, 60, 33, 34, 4, 43, 6, 3, 35, 36, 46, 48, 39, 38, 56, 30, 49, 28, 27, 10]
 solution : [0, 8, 1, 14, 2]


Invert decision for 2 at level 12


New level: 13
 pending : [25, 53, 44, 52, 45, 40, 20, 22, 5, 47, 7, 59, 58, 54, 57, 42, 50, 51, 55, 41, 31, 32, 61, 60, 33, 34, 4, 43, 6, 3, 35, 36, 46, 48, 39, 38, 56, 30, 49, 28, 27, 10]
 solution : [0, 8, 1, 14]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 20, 22, 5, 47, 7, 59, 58, 54, 57, 42, 50, 51, 55, 41, 31, 32, 61, 60, 33, 34, 4, 43, 6, 3, 35, 36, 46, 48, 39, 38, 56, 30, 49, 28, 27, 10]
 solution : [0, 8, 1, 14]

Essensial at level 13 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 0), (5, 8), (6, 1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 16), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 4), (36, 2), (37, -1), (38, 0), (39, 0), (40, 32), (41, 8), (42, 16), (43, 8), (44, 32), (45, 64), (46, 0), (47, 2), (48, 0), (49, 8), (50, 8), (51, 4), (52, 32), (53, 16), (54, 32), (55, 8), (56, 64), (57, 16), (58, 32), (59, 16), (60, 4), (61, 8)]

Covered at level 13 : {32, 33, 34, 4, 38, 39, 46, 48, 20, 22, 27, 28, 30, 31}

After reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10]
 solution : [0, 8, 1, 14, 7]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10]
 solution : [0, 8, 1, 14, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 0), (5, 8), (6, 1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 16), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 4), (36, 2), (37, -1), (38, 0), (39, 0), (40, 32), (41, 8), (42, 16), (43, 8), (44, 32), (45, 64), (46, 0), (47, 2), (48, 0), (49, 8), (50, 8), (51, 4), (52, 32), (53, 16), (54, 32), (55, 8), (56, 64), (57, 16), (58, 32), (59, 16), (60, 4), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, 8), (6, 1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 16), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 4), (36, 2), (37, -1), (38, -1), (39, -1), (40, 32), (41, 8), (42, 16), (43, 8), (44, 32), (45, 64), (46, -1), (47, 2), (48, -1), (49, 8), (50, 8), (51, 4), (52, 32), (53, 16), (54, 32), (55, 8), (56, 64), (57, 16), (58, 32), (59, 16), (60, 4), (61, 8)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10]
 solution : [0, 8, 1, 14, 7]


Solution : [0, 8, 1, 14, 7] has cost 25.


Before backtrack at level 13
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10]
 solution : [0, 8, 1, 14, 7]

After backtrack at level 13
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27]
 solution : [0, 8, 1, 14]


Before backtrack at level 12
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27]
 solution : [0, 8, 1, 14]

After backtrack at level 12
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2]
 solution : [0, 8, 1, 14]


Before backtrack at level 11
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2]
 solution : [0, 8, 1, 14]

After backtrack at level 11
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23]
 solution : [0, 8, 1, 14]


Before backtrack at level 10
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23]
 solution : [0, 8, 1, 14]

After backtrack at level 10
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9]
 solution : [0, 8, 1, 14]


Before backtrack at level 9
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9]
 solution : [0, 8, 1, 14]

After backtrack at level 9
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21]
 solution : [0, 8, 1, 14]


Before backtrack at level 8
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21]
 solution : [0, 8, 1, 14]

After backtrack at level 8
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29]
 solution : [0, 8, 1, 14]


Before backtrack at level 7
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29]
 solution : [0, 8, 1, 14]

After backtrack at level 7
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37]
 solution : [0, 8, 1, 14]


Before backtrack at level 6
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37]
 solution : [0, 8, 1, 14]

After backtrack at level 6
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 18]
 solution : [0, 8, 1, 14]


Before backtrack at level 5
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 18]
 solution : [0, 8, 1, 14]

After backtrack at level 5
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 18, 14, 17, 15, 24, 26, 16, 19]
 solution : [0, 8, 1]


Before backtrack at level 4
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 18, 14, 17, 15, 24, 26, 16, 19]
 solution : [0, 8, 1]

After backtrack at level 4
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 18, 14, 17, 15, 24, 26, 16, 19, 13]
 solution : [0, 8, 1]


Before backtrack at level 3
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 18, 14, 17, 15, 24, 26, 16, 19, 13]
 solution : [0, 8, 1]

After backtrack at level 3
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 18, 14, 17, 15, 24, 26, 16, 19, 13, 12]
 solution : [0, 8, 1]


Before backtrack at level 2
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 18, 14, 17, 15, 24, 26, 16, 19, 13, 12]
 solution : [0, 8, 1]

After backtrack at level 2
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 18, 14, 17, 15, 24, 26, 16, 19, 13, 12, 11]
 solution : [0, 8, 1]


Invert decision for 1 at level 1


New level: 2
 pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 18, 14, 17, 15, 24, 26, 16, 19, 13, 12, 11]
 solution : [0, 8]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 18, 14, 17, 15, 24, 26, 16, 19, 13, 12, 11]
 solution : [0, 8]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, 8), (6, 1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 16), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 4), (36, 2), (37, -1), (38, -1), (39, -1), (40, 32), (41, 8), (42, 16), (43, 8), (44, 32), (45, 64), (46, -1), (47, 2), (48, -1), (49, 8), (50, 8), (51, 4), (52, 32), (53, 16), (54, 32), (55, 8), (56, 64), (57, 16), (58, 32), (59, 16), (60, 4), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, 512), (6, 512), (7, 256), (8, -1), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 2 : set()

After reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 18, 14, 17, 15, 24, 26, 16, 19, 13, 12, 11]
 solution : [0, 8]


Solution : [0, 8] has cost 7.


Decide in level 2 among pending : [25, 53, 44, 52, 45, 40, 5, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 18, 14, 17, 15, 24, 26, 16, 19, 13, 12, 11]

Coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, 512), (6, 512), (7, 256), (8, -1), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 5 with phase True at level 2

After decision at level 2
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 18, 14, 17, 15, 24, 26, 16, 19, 13, 12, 11]
 solution : [0, 8, 5]


New level: 3
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 18, 14, 17, 15, 24, 26, 16, 19, 13, 12, 11]
 solution : [0, 8, 5]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 18, 14, 17, 15, 24, 26, 16, 19, 13, 12, 11]
 solution : [0, 8, 5]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, 512), (6, 512), (7, 256), (8, -1), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 3 : set()

After reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 18, 14, 17, 15, 24, 26, 16, 19, 13, 12, 11]
 solution : [0, 8, 5]


Solution : [0, 8, 5] has cost 12.


Decide in level 3 among pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 18, 14, 17, 15, 24, 26, 16, 19, 13, 12, 11]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 18 with phase True at level 3

After decision at level 3
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 14, 17, 15, 24, 26, 16, 19, 13, 12, 11]
 solution : [0, 8, 5, 18]


New level: 4
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 14, 17, 15, 24, 26, 16, 19, 13, 12, 11]
 solution : [0, 8, 5, 18]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 35, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 14, 17, 15, 24, 26, 16, 19, 13, 12, 11]
 solution : [0, 8, 5, 18]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 256), (23, 128), (24, 128), (25, 128), (26, 128), (27, 128), (28, 128), (29, 128), (30, 128), (31, 128), (32, 128), (33, 64), (34, 64), (35, 0), (36, 32), (37, 32), (38, 32), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 256), (47, 128), (48, 256), (49, 128), (50, 128), (51, 128), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 4 : {35}

After reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 14, 17, 15, 24, 26, 16, 19, 13, 12, 11]
 solution : [0, 8, 5, 18]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 14, 17, 15, 24, 26, 16, 19, 13, 12, 11]
 solution : [0, 8, 5, 18]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 256), (23, 128), (24, 128), (25, 128), (26, 128), (27, 128), (28, 128), (29, 128), (30, 128), (31, 128), (32, 128), (33, 64), (34, 64), (35, 0), (36, 32), (37, 32), (38, 32), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 256), (47, 128), (48, 256), (49, 128), (50, 128), (51, 128), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 256), (23, 128), (24, 128), (25, 128), (26, 128), (27, 128), (28, 128), (29, 128), (30, 128), (31, 128), (32, 128), (33, 64), (34, 64), (35, -1), (36, 32), (37, 32), (38, 32), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 256), (47, 128), (48, 256), (49, 128), (50, 128), (51, 128), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 4 : set()

After reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 14, 17, 15, 24, 26, 16, 19, 13, 12, 11]
 solution : [0, 8, 5, 18]


Solution : [0, 8, 5, 18] has cost 21.


Decide in level 4 among pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 14, 17, 15, 24, 26, 16, 19, 13, 12, 11]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 256), (23, 128), (24, 128), (25, 128), (26, 128), (27, 128), (28, 128), (29, 128), (30, 128), (31, 128), (32, 128), (33, 64), (34, 64), (35, -1), (36, 32), (37, 32), (38, 32), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 256), (47, 128), (48, 256), (49, 128), (50, 128), (51, 128), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 14 with phase True at level 4

After decision at level 4
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 17, 15, 24, 26, 16, 19, 13, 12, 11]
 solution : [0, 8, 5, 18, 14]


New level: 5
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 17, 15, 24, 26, 16, 19, 13, 12, 11]
 solution : [0, 8, 5, 18, 14]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 38, 30, 28, 27, 2, 23, 9, 21, 29, 37, 17, 15, 24, 26, 16, 19, 13, 12, 11]
 solution : [0, 8, 5, 18, 14]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 256), (23, 128), (24, 128), (25, 128), (26, 128), (27, 128), (28, 128), (29, 128), (30, 128), (31, 128), (32, 128), (33, 64), (34, 64), (35, -1), (36, 32), (37, 32), (38, 32), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 256), (47, 128), (48, 256), (49, 128), (50, 128), (51, 128), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 32), (11, 512), (12, 32), (13, 32), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 32), (23, 128), (24, 0), (25, 16), (26, 64), (27, 128), (28, 4), (29, 128), (30, 128), (31, 32), (32, 128), (33, 16), (34, 64), (35, -1), (36, 32), (37, 8), (38, 0), (39, 16), (40, 16), (41, 32), (42, 8), (43, 4), (44, 64), (45, 32), (46, 16), (47, 8), (48, 256), (49, 128), (50, 32), (51, 128), (52, 64), (53, 128), (54, 128), (55, 128), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 16)]

Covered at level 5 : {24, 38}

After reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 17, 15, 26, 16, 19, 13, 12, 11]
 solution : [0, 8, 5, 18, 14]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 17, 15, 26, 16, 19, 13, 12, 11]
 solution : [0, 8, 5, 18, 14]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 32), (11, 512), (12, 32), (13, 32), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 32), (23, 128), (24, 0), (25, 16), (26, 64), (27, 128), (28, 4), (29, 128), (30, 128), (31, 32), (32, 128), (33, 16), (34, 64), (35, -1), (36, 32), (37, 8), (38, 0), (39, 16), (40, 16), (41, 32), (42, 8), (43, 4), (44, 64), (45, 32), (46, 16), (47, 8), (48, 256), (49, 128), (50, 32), (51, 128), (52, 64), (53, 128), (54, 128), (55, 128), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 32), (11, 512), (12, 32), (13, 32), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 32), (23, 128), (24, -1), (25, 16), (26, 64), (27, 128), (28, 4), (29, 128), (30, 128), (31, 32), (32, 128), (33, 16), (34, 64), (35, -1), (36, 32), (37, 8), (38, -1), (39, 16), (40, 16), (41, 32), (42, 8), (43, 4), (44, 64), (45, 32), (46, 16), (47, 8), (48, 256), (49, 128), (50, 32), (51, 128), (52, 64), (53, 128), (54, 128), (55, 128), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 16)]

Covered at level 5 : set()

After reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 17, 15, 26, 16, 19, 13, 12, 11]
 solution : [0, 8, 5, 18, 14]


Solution : [0, 8, 5, 18, 14] has cost 27.


Before backtrack at level 5
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 17, 15, 26, 16, 19, 13, 12, 11]
 solution : [0, 8, 5, 18, 14]

After backtrack at level 5
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 17, 15, 26, 16, 19, 13, 12, 11, 38, 24]
 solution : [0, 8, 5, 18, 14]


Invert decision for 14 at level 4


New level: 5
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 17, 15, 26, 16, 19, 13, 12, 11, 38, 24]
 solution : [0, 8, 5, 18]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 17, 15, 26, 16, 19, 13, 12, 11, 38, 24]
 solution : [0, 8, 5, 18]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 32), (11, 512), (12, 32), (13, 32), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 32), (23, 128), (24, -1), (25, 16), (26, 64), (27, 128), (28, 4), (29, 128), (30, 128), (31, 32), (32, 128), (33, 16), (34, 64), (35, -1), (36, 32), (37, 8), (38, -1), (39, 16), (40, 16), (41, 32), (42, 8), (43, 4), (44, 64), (45, 32), (46, 16), (47, 8), (48, 256), (49, 128), (50, 32), (51, 128), (52, 64), (53, 128), (54, 128), (55, 128), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, -1), (15, 512), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 256), (23, 128), (24, 128), (25, 128), (26, 128), (27, 128), (28, 128), (29, 128), (30, 128), (31, 128), (32, 128), (33, 64), (34, 64), (35, -1), (36, 32), (37, 32), (38, 32), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 256), (47, 128), (48, 256), (49, 128), (50, 128), (51, 128), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 5 : set()

After reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 17, 15, 26, 16, 19, 13, 12, 11, 38, 24]
 solution : [0, 8, 5, 18]


Solution : [0, 8, 5, 18] has cost 21.


Decide in level 5 among pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 17, 15, 26, 16, 19, 13, 12, 11, 38, 24]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, -1), (15, 512), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 256), (23, 128), (24, 128), (25, 128), (26, 128), (27, 128), (28, 128), (29, 128), (30, 128), (31, 128), (32, 128), (33, 64), (34, 64), (35, -1), (36, 32), (37, 32), (38, 32), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 256), (47, 128), (48, 256), (49, 128), (50, 128), (51, 128), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 17 with phase True at level 5

After decision at level 5
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 15, 26, 16, 19, 13, 12, 11, 38, 24]
 solution : [0, 8, 5, 18, 17]


New level: 6
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 15, 26, 16, 19, 13, 12, 11, 38, 24]
 solution : [0, 8, 5, 18, 17]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 6, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 15, 26, 16, 19, 13, 12, 11, 38, 24]
 solution : [0, 8, 5, 18, 17]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, -1), (15, 512), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 256), (23, 128), (24, 128), (25, 128), (26, 128), (27, 128), (28, 128), (29, 128), (30, 128), (31, 128), (32, 128), (33, 64), (34, 64), (35, -1), (36, 32), (37, 32), (38, 32), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 256), (47, 128), (48, 256), (49, 128), (50, 128), (51, 128), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, -1), (6, 0), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, 64), (20, 128), (21, 256), (22, 256), (23, 128), (24, 128), (25, 128), (26, 64), (27, 32), (28, 128), (29, 128), (30, 128), (31, 128), (32, 32), (33, 64), (34, 16), (35, -1), (36, 32), (37, 32), (38, 32), (39, 8), (40, 32), (41, 8), (42, 32), (43, 16), (44, 32), (45, 64), (46, 256), (47, 128), (48, 64), (49, 128), (50, 128), (51, 32), (52, 128), (53, 64), (54, 64), (55, 32), (56, 128), (57, 128), (58, 64), (59, 32), (60, 16), (61, 64)]

Covered at level 6 : {6}

After reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 15, 26, 16, 19, 13, 12, 11, 38, 24]
 solution : [0, 8, 5, 18, 17]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 15, 26, 16, 19, 13, 12, 11, 38, 24]
 solution : [0, 8, 5, 18, 17]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, -1), (6, 0), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, 64), (20, 128), (21, 256), (22, 256), (23, 128), (24, 128), (25, 128), (26, 64), (27, 32), (28, 128), (29, 128), (30, 128), (31, 128), (32, 32), (33, 64), (34, 16), (35, -1), (36, 32), (37, 32), (38, 32), (39, 8), (40, 32), (41, 8), (42, 32), (43, 16), (44, 32), (45, 64), (46, 256), (47, 128), (48, 64), (49, 128), (50, 128), (51, 32), (52, 128), (53, 64), (54, 64), (55, 32), (56, 128), (57, 128), (58, 64), (59, 32), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, -1), (6, -1), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, 64), (20, 128), (21, 256), (22, 256), (23, 128), (24, 128), (25, 128), (26, 64), (27, 32), (28, 128), (29, 128), (30, 128), (31, 128), (32, 32), (33, 64), (34, 16), (35, -1), (36, 32), (37, 32), (38, 32), (39, 8), (40, 32), (41, 8), (42, 32), (43, 16), (44, 32), (45, 64), (46, 256), (47, 128), (48, 64), (49, 128), (50, 128), (51, 32), (52, 128), (53, 64), (54, 64), (55, 32), (56, 128), (57, 128), (58, 64), (59, 32), (60, 16), (61, 64)]

Covered at level 6 : set()

After reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 15, 26, 16, 19, 13, 12, 11, 38, 24]
 solution : [0, 8, 5, 18, 17]


Solution : [0, 8, 5, 18, 17] has cost 27.


Before backtrack at level 6
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 15, 26, 16, 19, 13, 12, 11, 38, 24]
 solution : [0, 8, 5, 18, 17]

After backtrack at level 6
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 15, 26, 16, 19, 13, 12, 11, 38, 24, 6]
 solution : [0, 8, 5, 18, 17]


Invert decision for 17 at level 5


New level: 6
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 15, 26, 16, 19, 13, 12, 11, 38, 24, 6]
 solution : [0, 8, 5, 18]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 15, 26, 16, 19, 13, 12, 11, 38, 24, 6]
 solution : [0, 8, 5, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, -1), (6, -1), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, 64), (20, 128), (21, 256), (22, 256), (23, 128), (24, 128), (25, 128), (26, 64), (27, 32), (28, 128), (29, 128), (30, 128), (31, 128), (32, 32), (33, 64), (34, 16), (35, -1), (36, 32), (37, 32), (38, 32), (39, 8), (40, 32), (41, 8), (42, 32), (43, 16), (44, 32), (45, 64), (46, 256), (47, 128), (48, 64), (49, 128), (50, 128), (51, 32), (52, 128), (53, 64), (54, 64), (55, 32), (56, 128), (57, 128), (58, 64), (59, 32), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, -1), (15, 512), (16, 512), (17, -1), (18, -1), (19, 64), (20, 256), (21, 256), (22, 256), (23, 128), (24, 128), (25, 128), (26, 128), (27, 128), (28, 128), (29, 128), (30, 128), (31, 128), (32, 128), (33, 64), (34, 64), (35, -1), (36, 32), (37, 32), (38, 32), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 256), (47, 128), (48, 256), (49, 128), (50, 128), (51, 128), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 6 : set()

After reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 15, 26, 16, 19, 13, 12, 11, 38, 24, 6]
 solution : [0, 8, 5, 18]


Solution : [0, 8, 5, 18] has cost 21.


Decide in level 6 among pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 15, 26, 16, 19, 13, 12, 11, 38, 24, 6]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, -1), (15, 512), (16, 512), (17, -1), (18, -1), (19, 64), (20, 256), (21, 256), (22, 256), (23, 128), (24, 128), (25, 128), (26, 128), (27, 128), (28, 128), (29, 128), (30, 128), (31, 128), (32, 128), (33, 64), (34, 64), (35, -1), (36, 32), (37, 32), (38, 32), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 256), (47, 128), (48, 256), (49, 128), (50, 128), (51, 128), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

Decide 15 with phase True at level 6

After decision at level 6
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 26, 16, 19, 13, 12, 11, 38, 24, 6]
 solution : [0, 8, 5, 18, 15]


New level: 7
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 26, 16, 19, 13, 12, 11, 38, 24, 6]
 solution : [0, 8, 5, 18, 15]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 39, 30, 28, 27, 2, 23, 9, 21, 29, 37, 26, 16, 19, 13, 12, 11, 38, 24, 6]
 solution : [0, 8, 5, 18, 15]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, -1), (15, 512), (16, 512), (17, -1), (18, -1), (19, 64), (20, 256), (21, 256), (22, 256), (23, 128), (24, 128), (25, 128), (26, 128), (27, 128), (28, 128), (29, 128), (30, 128), (31, 128), (32, 128), (33, 64), (34, 64), (35, -1), (36, 32), (37, 32), (38, 32), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 256), (47, 128), (48, 256), (49, 128), (50, 128), (51, 128), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 256), (14, -1), (15, -1), (16, 256), (17, -1), (18, -1), (19, 64), (20, 16), (21, 256), (22, 256), (23, 128), (24, 64), (25, 64), (26, 0), (27, 16), (28, 64), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 32), (35, -1), (36, 32), (37, 16), (38, 16), (39, 0), (40, 16), (41, 32), (42, 16), (43, 8), (44, 64), (45, 32), (46, 256), (47, 128), (48, 32), (49, 128), (50, 128), (51, 64), (52, 128), (53, 32), (54, 128), (55, 128), (56, 64), (57, 64), (58, 64), (59, 16), (60, 32), (61, 64)]

Covered at level 7 : {26, 39}

After reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 16, 19, 13, 12, 11, 38, 24, 6]
 solution : [0, 8, 5, 18, 15]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 16, 19, 13, 12, 11, 38, 24, 6]
 solution : [0, 8, 5, 18, 15]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 256), (14, -1), (15, -1), (16, 256), (17, -1), (18, -1), (19, 64), (20, 16), (21, 256), (22, 256), (23, 128), (24, 64), (25, 64), (26, 0), (27, 16), (28, 64), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 32), (35, -1), (36, 32), (37, 16), (38, 16), (39, 0), (40, 16), (41, 32), (42, 16), (43, 8), (44, 64), (45, 32), (46, 256), (47, 128), (48, 32), (49, 128), (50, 128), (51, 64), (52, 128), (53, 32), (54, 128), (55, 128), (56, 64), (57, 64), (58, 64), (59, 16), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 256), (14, -1), (15, -1), (16, 256), (17, -1), (18, -1), (19, 64), (20, 16), (21, 256), (22, 256), (23, 128), (24, 64), (25, 64), (26, -1), (27, 16), (28, 64), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 32), (35, -1), (36, 32), (37, 16), (38, 16), (39, -1), (40, 16), (41, 32), (42, 16), (43, 8), (44, 64), (45, 32), (46, 256), (47, 128), (48, 32), (49, 128), (50, 128), (51, 64), (52, 128), (53, 32), (54, 128), (55, 128), (56, 64), (57, 64), (58, 64), (59, 16), (60, 32), (61, 64)]

Covered at level 7 : set()

After reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 16, 19, 13, 12, 11, 38, 24, 6]
 solution : [0, 8, 5, 18, 15]


Solution : [0, 8, 5, 18, 15] has cost 27.


Before backtrack at level 7
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 16, 19, 13, 12, 11, 38, 24, 6]
 solution : [0, 8, 5, 18, 15]

After backtrack at level 7
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 16, 19, 13, 12, 11, 38, 24, 6, 39, 26]
 solution : [0, 8, 5, 18, 15]


Invert decision for 15 at level 6


New level: 7
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 16, 19, 13, 12, 11, 38, 24, 6, 39, 26]
 solution : [0, 8, 5, 18]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 16, 19, 13, 12, 11, 38, 24, 6, 39, 26]
 solution : [0, 8, 5, 18]

Essensial at level 7 : {16, 26}

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 256), (14, -1), (15, -1), (16, 256), (17, -1), (18, -1), (19, 64), (20, 16), (21, 256), (22, 256), (23, 128), (24, 64), (25, 64), (26, -1), (27, 16), (28, 64), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 32), (35, -1), (36, 32), (37, 16), (38, 16), (39, -1), (40, 16), (41, 32), (42, 16), (43, 8), (44, 64), (45, 32), (46, 256), (47, 128), (48, 32), (49, 128), (50, 128), (51, 64), (52, 128), (53, 32), (54, 128), (55, 128), (56, 64), (57, 64), (58, 64), (59, 16), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 256), (13, 512), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 64), (20, 64), (21, 256), (22, 128), (23, 128), (24, 32), (25, 64), (26, -1), (27, 16), (28, 64), (29, 128), (30, 128), (31, 128), (32, 64), (33, 32), (34, 64), (35, -1), (36, 32), (37, 16), (38, 4), (39, 0), (40, 16), (41, 16), (42, 32), (43, 8), (44, 8), (45, 32), (46, 128), (47, 128), (48, 64), (49, 128), (50, 64), (51, 128), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 128), (58, 32), (59, 64), (60, 64), (61, 32)]

Covered at level 7 : {39}

After reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 19, 13, 12, 11, 38, 24, 6]
 solution : [0, 8, 5, 18, 16, 26]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 19, 13, 12, 11, 38, 24, 6]
 solution : [0, 8, 5, 18, 16, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 256), (13, 512), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 64), (20, 64), (21, 256), (22, 128), (23, 128), (24, 32), (25, 64), (26, -1), (27, 16), (28, 64), (29, 128), (30, 128), (31, 128), (32, 64), (33, 32), (34, 64), (35, -1), (36, 32), (37, 16), (38, 4), (39, 0), (40, 16), (41, 16), (42, 32), (43, 8), (44, 8), (45, 32), (46, 128), (47, 128), (48, 64), (49, 128), (50, 64), (51, 128), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 128), (58, 32), (59, 64), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 256), (13, 512), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 64), (20, 64), (21, 256), (22, 128), (23, 128), (24, 32), (25, 64), (26, -1), (27, 16), (28, 64), (29, 128), (30, 128), (31, 128), (32, 64), (33, 32), (34, 64), (35, -1), (36, 32), (37, 16), (38, 4), (39, -1), (40, 16), (41, 16), (42, 32), (43, 8), (44, 8), (45, 32), (46, 128), (47, 128), (48, 64), (49, 128), (50, 64), (51, 128), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 128), (58, 32), (59, 64), (60, 64), (61, 32)]

Covered at level 7 : set()

After reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 19, 13, 12, 11, 38, 24, 6]
 solution : [0, 8, 5, 18, 16, 26]


Solution : [0, 8, 5, 18, 16, 26] has cost 37.


Before backtrack at level 7
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 19, 13, 12, 11, 38, 24, 6]
 solution : [0, 8, 5, 18, 16, 26]

After backtrack at level 7
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 19, 13, 12, 11, 38, 24, 6, 16, 26, 39]
 solution : [0, 8, 5, 18]


Before backtrack at level 6
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 19, 13, 12, 11, 38, 24, 6, 16, 26, 39]
 solution : [0, 8, 5, 18]

After backtrack at level 6
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 19, 13, 12, 11, 38, 24, 6, 16, 26, 39, 15]
 solution : [0, 8, 5, 18]


Before backtrack at level 5
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 19, 13, 12, 11, 38, 24, 6, 16, 26, 39, 15]
 solution : [0, 8, 5, 18]

After backtrack at level 5
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 19, 13, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17]
 solution : [0, 8, 5, 18]


Before backtrack at level 4
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 19, 13, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17]
 solution : [0, 8, 5, 18]

After backtrack at level 4
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 19, 13, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14]
 solution : [0, 8, 5, 18]


Invert decision for 18 at level 3


New level: 4
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 19, 13, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14]
 solution : [0, 8, 5]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 19, 13, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14]
 solution : [0, 8, 5]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 256), (13, 512), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 64), (20, 64), (21, 256), (22, 128), (23, 128), (24, 32), (25, 64), (26, -1), (27, 16), (28, 64), (29, 128), (30, 128), (31, 128), (32, 64), (33, 32), (34, 64), (35, -1), (36, 32), (37, 16), (38, 4), (39, -1), (40, 16), (41, 16), (42, 32), (43, 8), (44, 8), (45, 32), (46, 128), (47, 128), (48, 64), (49, 128), (50, 64), (51, 128), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 128), (58, 32), (59, 64), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 4 : set()

After reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 19, 13, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14]
 solution : [0, 8, 5]


Solution : [0, 8, 5] has cost 12.


Decide in level 4 among pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 19, 13, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 19 with phase True at level 4

After decision at level 4
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 13, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14]
 solution : [0, 8, 5, 19]


New level: 5
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 13, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14]
 solution : [0, 8, 5, 19]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 36, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 13, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14]
 solution : [0, 8, 5, 19]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 64), (24, 128), (25, 128), (26, 128), (27, 64), (28, 64), (29, 64), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, 0), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 64), (50, 64), (51, 64), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 5 : {36}

After reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 13, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14]
 solution : [0, 8, 5, 19]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 13, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14]
 solution : [0, 8, 5, 19]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 64), (24, 128), (25, 128), (26, 128), (27, 64), (28, 64), (29, 64), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, 0), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 64), (50, 64), (51, 64), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 64), (24, 128), (25, 128), (26, 128), (27, 64), (28, 64), (29, 64), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 64), (50, 64), (51, 64), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 5 : set()

After reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 13, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14]
 solution : [0, 8, 5, 19]


Solution : [0, 8, 5, 19] has cost 21.


Decide in level 5 among pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 13, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 64), (24, 128), (25, 128), (26, 128), (27, 64), (28, 64), (29, 64), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 64), (50, 64), (51, 64), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 13 with phase True at level 5

After decision at level 5
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14]
 solution : [0, 8, 5, 19, 13]


New level: 6
 pending : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14]
 solution : [0, 8, 5, 19, 13]


Before reduction : 
 pending  : [25, 53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 10, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 29, 37, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14]
 solution : [0, 8, 5, 19, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 64), (24, 128), (25, 128), (26, 128), (27, 64), (28, 64), (29, 64), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 64), (50, 64), (51, 64), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, 0), (11, 128), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 2), (22, 256), (23, 32), (24, 64), (25, 0), (26, 64), (27, 32), (28, 16), (29, 0), (30, 16), (31, 32), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 32), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 4), (48, 256), (49, 32), (50, 64), (51, 64), (52, 32), (53, 32), (54, 128), (55, 128), (56, 64), (57, 64), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 6 : {25, 10, 29}

After reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14]
 solution : [0, 8, 5, 19, 13]


Before reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14]
 solution : [0, 8, 5, 19, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, 0), (11, 128), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 2), (22, 256), (23, 32), (24, 64), (25, 0), (26, 64), (27, 32), (28, 16), (29, 0), (30, 16), (31, 32), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 32), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 4), (48, 256), (49, 32), (50, 64), (51, 64), (52, 32), (53, 32), (54, 128), (55, 128), (56, 64), (57, 64), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, -1), (11, 128), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 2), (22, 256), (23, 32), (24, 64), (25, -1), (26, 64), (27, 32), (28, 16), (29, -1), (30, 16), (31, 32), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 32), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 4), (48, 256), (49, 32), (50, 64), (51, 64), (52, 32), (53, 32), (54, 128), (55, 128), (56, 64), (57, 64), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 6 : set()

After reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14]
 solution : [0, 8, 5, 19, 13]


Solution : [0, 8, 5, 19, 13] has cost 27.


Before backtrack at level 6
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14]
 solution : [0, 8, 5, 19, 13]

After backtrack at level 6
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19, 13]


Invert decision for 13 at level 5


New level: 6
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19]


Before reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, -1), (11, 128), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 2), (22, 256), (23, 32), (24, 64), (25, -1), (26, 64), (27, 32), (28, 16), (29, -1), (30, 16), (31, 32), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 32), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 4), (48, 256), (49, 32), (50, 64), (51, 64), (52, 32), (53, 32), (54, 128), (55, 128), (56, 64), (57, 64), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, -1), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 64), (24, 128), (25, 128), (26, 128), (27, 64), (28, 64), (29, 64), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 64), (50, 64), (51, 64), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 6 : set()

After reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19]


Solution : [0, 8, 5, 19] has cost 21.


Decide in level 6 among pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 12, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, -1), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 64), (24, 128), (25, 128), (26, 128), (27, 64), (28, 64), (29, 64), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 64), (50, 64), (51, 64), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 12 with phase True at level 6

After decision at level 6
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19, 12]


New level: 7
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19, 12]


Before reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, -1), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 64), (24, 128), (25, 128), (26, 128), (27, 64), (28, 64), (29, 64), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 64), (50, 64), (51, 64), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 8), (11, 128), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 32), (31, 64), (32, 64), (33, 64), (34, 128), (35, 64), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 64), (48, 256), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19, 12]


Solution : [0, 8, 5, 19, 12] has cost 27.


Before backtrack at level 7
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19, 12]

After backtrack at level 7
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19, 12]


Invert decision for 12 at level 6


New level: 7
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19]


Before reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 8), (11, 128), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 32), (31, 64), (32, 64), (33, 64), (34, 128), (35, 64), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 64), (48, 256), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, -1), (13, -1), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 64), (24, 128), (25, 128), (26, 128), (27, 64), (28, 64), (29, 64), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 64), (50, 64), (51, 64), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 7 : set()

After reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19]


Solution : [0, 8, 5, 19] has cost 21.


Decide in level 7 among pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 11, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, -1), (13, -1), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 64), (24, 128), (25, 128), (26, 128), (27, 64), (28, 64), (29, 64), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 64), (50, 64), (51, 64), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 11 with phase True at level 7

After decision at level 7
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19, 11]


New level: 8
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19, 11]


Before reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, -1), (13, -1), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 64), (24, 128), (25, 128), (26, 128), (27, 64), (28, 64), (29, 64), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 64), (50, 64), (51, 64), (52, 128), (53, 128), (54, 128), (55, 128), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, 128), (10, 16), (11, -1), (12, -1), (13, -1), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 16), (22, 256), (23, 32), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 64), (48, 256), (49, 64), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 128), (59, 128), (60, 256), (61, 256)]

Covered at level 8 : set()

After reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19, 11]


Solution : [0, 8, 5, 19, 11] has cost 27.


Before backtrack at level 8
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19, 11]

After backtrack at level 8
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19, 11]


Invert decision for 11 at level 7


New level: 8
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19]


Before reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 28, 27, 2, 23, 9, 21, 37, 38, 24, 6, 16, 26, 39, 15, 17, 35, 14, 25, 10, 29]
 solution : [0, 8, 5, 19]

Essensial at level 8 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, 128), (10, 16), (11, -1), (12, -1), (13, -1), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 16), (22, 256), (23, 32), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 64), (48, 256), (49, 64), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 128), (59, 128), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 32), (24, 0), (25, 16), (26, 64), (27, 32), (28, 0), (29, 8), (30, 8), (31, 16), (32, 64), (33, 32), (34, 128), (35, 64), (36, -1), (37, 256), (38, 4), (39, 256), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 128), (46, 8), (47, 4), (48, 256), (49, 16), (50, 16), (51, 64), (52, 64), (53, 128), (54, 128), (55, 128), (56, 64), (57, 32), (58, 128), (59, 256), (60, 256), (61, 64)]

Covered at level 8 : {24, 28}

After reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 16, 26, 39, 15, 17, 35, 25, 10, 29]
 solution : [0, 8, 5, 19, 14]


Before reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 16, 26, 39, 15, 17, 35, 25, 10, 29]
 solution : [0, 8, 5, 19, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 32), (24, 0), (25, 16), (26, 64), (27, 32), (28, 0), (29, 8), (30, 8), (31, 16), (32, 64), (33, 32), (34, 128), (35, 64), (36, -1), (37, 256), (38, 4), (39, 256), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 128), (46, 8), (47, 4), (48, 256), (49, 16), (50, 16), (51, 64), (52, 64), (53, 128), (54, 128), (55, 128), (56, 64), (57, 32), (58, 128), (59, 256), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 32), (24, -1), (25, 16), (26, 64), (27, 32), (28, -1), (29, 8), (30, 8), (31, 16), (32, 64), (33, 32), (34, 128), (35, 64), (36, -1), (37, 256), (38, 4), (39, 256), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 128), (46, 8), (47, 4), (48, 256), (49, 16), (50, 16), (51, 64), (52, 64), (53, 128), (54, 128), (55, 128), (56, 64), (57, 32), (58, 128), (59, 256), (60, 256), (61, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 16, 26, 39, 15, 17, 35, 25, 10, 29]
 solution : [0, 8, 5, 19, 14]


Solution : [0, 8, 5, 19, 14] has cost 27.


Before backtrack at level 8
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 16, 26, 39, 15, 17, 35, 25, 10, 29]
 solution : [0, 8, 5, 19, 14]

After backtrack at level 8
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 16, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24]
 solution : [0, 8, 5, 19]


Before backtrack at level 7
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 16, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24]
 solution : [0, 8, 5, 19]

After backtrack at level 7
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 16, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 11]
 solution : [0, 8, 5, 19]


Before backtrack at level 6
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 16, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 11]
 solution : [0, 8, 5, 19]

After backtrack at level 6
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 16, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 11, 12]
 solution : [0, 8, 5, 19]


Before backtrack at level 5
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 16, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 11, 12]
 solution : [0, 8, 5, 19]

After backtrack at level 5
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 16, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 11, 12, 36, 13]
 solution : [0, 8, 5, 19]


Invert decision for 19 at level 4


New level: 5
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 16, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 11, 12, 36, 13]
 solution : [0, 8, 5]


Before reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 16, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 11, 12, 36, 13]
 solution : [0, 8, 5]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 32), (24, -1), (25, 16), (26, 64), (27, 32), (28, -1), (29, 8), (30, 8), (31, 16), (32, 64), (33, 32), (34, 128), (35, 64), (36, -1), (37, 256), (38, 4), (39, 256), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 128), (46, 8), (47, 4), (48, 256), (49, 16), (50, 16), (51, 64), (52, 64), (53, 128), (54, 128), (55, 128), (56, 64), (57, 32), (58, 128), (59, 256), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 5 : set()

After reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 16, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 11, 12, 36, 13]
 solution : [0, 8, 5]


Solution : [0, 8, 5] has cost 12.


Decide in level 5 among pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 16, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 11, 12, 36, 13]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 16 with phase True at level 5

After decision at level 5
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 11, 12, 36, 13]
 solution : [0, 8, 5, 16]


New level: 6
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 11, 12, 36, 13]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 11, 12, 36, 13]
 solution : [0, 8, 5, 16]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 256), (13, 512), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, 256), (41, 128), (42, 256), (43, 256), (44, 64), (45, 256), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

Covered at level 6 : set()

After reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 11, 12, 36, 13]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 6 among pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 11, 12, 36, 13]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 256), (13, 512), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, 256), (41, 128), (42, 256), (43, 256), (44, 64), (45, 256), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

Decide 11 with phase True at level 6

After decision at level 6
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 12, 36, 13]
 solution : [0, 8, 5, 16, 11]


New level: 7
 pending : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 12, 36, 13]
 solution : [0, 8, 5, 16, 11]


Before reduction : 
 pending  : [53, 44, 52, 45, 40, 47, 59, 58, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 12, 36, 13]
 solution : [0, 8, 5, 16, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 256), (13, 512), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, 256), (41, 128), (42, 256), (43, 256), (44, 64), (45, 256), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, 4), (11, -1), (12, 0), (13, 64), (14, 32), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 32), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 128), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 128), (42, 256), (43, 256), (44, 16), (45, 64), (46, 64), (47, 64), (48, 256), (49, 256), (50, 8), (51, 256), (52, 0), (53, 16), (54, 8), (55, 128), (56, 32), (57, 256), (58, 0), (59, 8), (60, 256), (61, 16)]

Covered at level 7 : {58, 52, 12}

After reduction : 
 pending  : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 36, 13]
 solution : [0, 8, 5, 16, 11]


Before reduction : 
 pending  : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 36, 13]
 solution : [0, 8, 5, 16, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, 4), (11, -1), (12, 0), (13, 64), (14, 32), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 32), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 128), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 128), (42, 256), (43, 256), (44, 16), (45, 64), (46, 64), (47, 64), (48, 256), (49, 256), (50, 8), (51, 256), (52, 0), (53, 16), (54, 8), (55, 128), (56, 32), (57, 256), (58, 0), (59, 8), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, 4), (11, -1), (12, -1), (13, 64), (14, 32), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 32), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 128), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 128), (42, 256), (43, 256), (44, 16), (45, 64), (46, 64), (47, 64), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 16), (54, 8), (55, 128), (56, 32), (57, 256), (58, -1), (59, 8), (60, 256), (61, 16)]

Covered at level 7 : set()

After reduction : 
 pending  : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 36, 13]
 solution : [0, 8, 5, 16, 11]


Solution : [0, 8, 5, 16, 11] has cost 24.


Before backtrack at level 7
 pending : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 36, 13]
 solution : [0, 8, 5, 16, 11]

After backtrack at level 7
 pending : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 36, 13, 52, 58, 12]
 solution : [0, 8, 5, 16, 11]


Invert decision for 11 at level 6


New level: 7
 pending : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 36, 13, 52, 58, 12]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 36, 13, 52, 58, 12]
 solution : [0, 8, 5, 16]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, 4), (11, -1), (12, -1), (13, 64), (14, 32), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 32), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 128), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 128), (42, 256), (43, 256), (44, 16), (45, 64), (46, 64), (47, 64), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 16), (54, 8), (55, 128), (56, 32), (57, 256), (58, -1), (59, 8), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, 512), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, 256), (41, 128), (42, 256), (43, 256), (44, 64), (45, 256), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 36, 13, 52, 58, 12]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 7 among pending : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 36, 13, 52, 58, 12]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, 512), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, 256), (41, 128), (42, 256), (43, 256), (44, 64), (45, 256), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

Decide 13 with phase True at level 7

After decision at level 7
 pending : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 36, 52, 58, 12]
 solution : [0, 8, 5, 16, 13]


New level: 8
 pending : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 36, 52, 58, 12]
 solution : [0, 8, 5, 16, 13]


Before reduction : 
 pending  : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 25, 10, 29, 14, 28, 24, 36, 52, 58, 12]
 solution : [0, 8, 5, 16, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, 512), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, 256), (41, 128), (42, 256), (43, 256), (44, 64), (45, 256), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, 0), (11, -1), (12, 2), (13, -1), (14, 0), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 8), (22, 8), (23, 256), (24, 0), (25, 0), (26, 32), (27, 128), (28, 8), (29, 64), (30, 128), (31, 32), (32, 64), (33, 16), (34, 128), (35, 128), (36, 128), (37, 64), (38, 4), (39, 256), (40, 128), (41, 128), (42, 64), (43, 256), (44, 32), (45, 32), (46, 16), (47, 16), (48, 256), (49, 256), (50, 32), (51, 256), (52, 16), (53, 128), (54, 64), (55, 128), (56, 64), (57, 64), (58, 64), (59, 256), (60, 256), (61, 32)]

Covered at level 8 : {24, 25, 10, 14}

After reduction : 
 pending  : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12]
 solution : [0, 8, 5, 16, 13]


Before reduction : 
 pending  : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12]
 solution : [0, 8, 5, 16, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, 0), (11, -1), (12, 2), (13, -1), (14, 0), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 8), (22, 8), (23, 256), (24, 0), (25, 0), (26, 32), (27, 128), (28, 8), (29, 64), (30, 128), (31, 32), (32, 64), (33, 16), (34, 128), (35, 128), (36, 128), (37, 64), (38, 4), (39, 256), (40, 128), (41, 128), (42, 64), (43, 256), (44, 32), (45, 32), (46, 16), (47, 16), (48, 256), (49, 256), (50, 32), (51, 256), (52, 16), (53, 128), (54, 64), (55, 128), (56, 64), (57, 64), (58, 64), (59, 256), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, 2), (13, -1), (14, -1), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 8), (22, 8), (23, 256), (24, -1), (25, -1), (26, 32), (27, 128), (28, 8), (29, 64), (30, 128), (31, 32), (32, 64), (33, 16), (34, 128), (35, 128), (36, 128), (37, 64), (38, 4), (39, 256), (40, 128), (41, 128), (42, 64), (43, 256), (44, 32), (45, 32), (46, 16), (47, 16), (48, 256), (49, 256), (50, 32), (51, 256), (52, 16), (53, 128), (54, 64), (55, 128), (56, 64), (57, 64), (58, 64), (59, 256), (60, 256), (61, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12]
 solution : [0, 8, 5, 16, 13]


Solution : [0, 8, 5, 16, 13] has cost 24.


Before backtrack at level 8
 pending : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12]
 solution : [0, 8, 5, 16, 13]

After backtrack at level 8
 pending : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16, 13]


Invert decision for 13 at level 7


New level: 8
 pending : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, -1), (11, -1), (12, 2), (13, -1), (14, -1), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 8), (22, 8), (23, 256), (24, -1), (25, -1), (26, 32), (27, 128), (28, 8), (29, 64), (30, 128), (31, 32), (32, 64), (33, 16), (34, 128), (35, 128), (36, 128), (37, 64), (38, 4), (39, 256), (40, 128), (41, 128), (42, 64), (43, 256), (44, 32), (45, 32), (46, 16), (47, 16), (48, 256), (49, 256), (50, 32), (51, 256), (52, 16), (53, 128), (54, 64), (55, 128), (56, 64), (57, 64), (58, 64), (59, 256), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, 256), (41, 128), (42, 256), (43, 256), (44, 64), (45, 256), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 8 among pending : [53, 44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, 256), (41, 128), (42, 256), (43, 256), (44, 64), (45, 256), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

Decide 53 with phase True at level 8

After decision at level 8
 pending : [44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16, 53]


New level: 9
 pending : [44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16, 53]


Before reduction : 
 pending  : [44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16, 53]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, 256), (41, 128), (42, 256), (43, 256), (44, 64), (45, 256), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 64), (29, 128), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, 256), (41, 128), (42, 256), (43, 256), (44, 32), (45, 256), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 64), (52, 64), (53, -1), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16, 53]


Solution : [0, 8, 5, 16, 53] has cost 28.


Before backtrack at level 9
 pending : [44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16, 53]

After backtrack at level 9
 pending : [44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16, 53]


Invert decision for 53 at level 8


New level: 9
 pending : [44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 64), (29, 128), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, 256), (41, 128), (42, 256), (43, 256), (44, 32), (45, 256), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 64), (52, 64), (53, -1), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, 256), (41, 128), (42, 256), (43, 256), (44, 64), (45, 256), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 9 among pending : [44, 45, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, 256), (41, 128), (42, 256), (43, 256), (44, 64), (45, 256), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

Decide 45 with phase True at level 9

After decision at level 9
 pending : [44, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16, 45]


New level: 10
 pending : [44, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16, 45]


Before reduction : 
 pending  : [44, 40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16, 45]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, 256), (41, 128), (42, 256), (43, 256), (44, 64), (45, 256), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 64), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 4), (38, 4), (39, 256), (40, 4), (41, 128), (42, 16), (43, 256), (44, 0), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, -1), (54, 32), (55, 128), (56, 128), (57, 256), (58, 64), (59, 256), (60, 256), (61, 64)]

Covered at level 10 : {44}

After reduction : 
 pending  : [40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16, 45]


Before reduction : 
 pending  : [40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16, 45]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 64), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 4), (38, 4), (39, 256), (40, 4), (41, 128), (42, 16), (43, 256), (44, 0), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, -1), (54, 32), (55, 128), (56, 128), (57, 256), (58, 64), (59, 256), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 64), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 4), (38, 4), (39, 256), (40, 4), (41, 128), (42, 16), (43, 256), (44, -1), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, -1), (54, 32), (55, 128), (56, 128), (57, 256), (58, 64), (59, 256), (60, 256), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16, 45]


Solution : [0, 8, 5, 16, 45] has cost 28.


Before backtrack at level 10
 pending : [40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24]
 solution : [0, 8, 5, 16, 45]

After backtrack at level 10
 pending : [40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44]
 solution : [0, 8, 5, 16, 45]


Invert decision for 45 at level 9


New level: 10
 pending : [40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44]
 solution : [0, 8, 5, 16]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 64), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 4), (38, 4), (39, 256), (40, 4), (41, 128), (42, 16), (43, 256), (44, -1), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, -1), (54, 32), (55, 128), (56, 128), (57, 256), (58, 64), (59, 256), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, 256), (41, 128), (42, 256), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 10 among pending : [40, 47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, 256), (41, 128), (42, 256), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

Decide 40 with phase True at level 10

After decision at level 10
 pending : [47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44]
 solution : [0, 8, 5, 16, 40]


New level: 11
 pending : [47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44]
 solution : [0, 8, 5, 16, 40]


Before reduction : 
 pending  : [47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 38, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44]
 solution : [0, 8, 5, 16, 40]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, 256), (41, 128), (42, 256), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 128), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 32), (34, 128), (35, 32), (36, 128), (37, 8), (38, 0), (39, 64), (40, -1), (41, 128), (42, 256), (43, 32), (44, 16), (45, -1), (46, 64), (47, 64), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

Covered at level 11 : {38}

After reduction : 
 pending  : [47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44]
 solution : [0, 8, 5, 16, 40]


Before reduction : 
 pending  : [47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44]
 solution : [0, 8, 5, 16, 40]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 128), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 32), (34, 128), (35, 32), (36, 128), (37, 8), (38, 0), (39, 64), (40, -1), (41, 128), (42, 256), (43, 32), (44, 16), (45, -1), (46, 64), (47, 64), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 128), (22, 64), (23, 128), (24, 32), (25, 128), (26, 128), (27, 128), (28, 32), (29, 256), (30, 128), (31, 128), (32, 64), (33, 32), (34, 128), (35, 32), (36, 128), (37, 8), (38, -1), (39, 64), (40, -1), (41, 128), (42, 256), (43, 32), (44, 16), (45, -1), (46, 64), (47, 64), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44]
 solution : [0, 8, 5, 16, 40]


Solution : [0, 8, 5, 16, 40] has cost 28.


Before backtrack at level 11
 pending : [47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44]
 solution : [0, 8, 5, 16, 40]

After backtrack at level 11
 pending : [47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16, 40]


Invert decision for 40 at level 10


New level: 11
 pending : [47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 128), (22, 64), (23, 128), (24, 32), (25, 128), (26, 128), (27, 128), (28, 32), (29, 256), (30, 128), (31, 128), (32, 64), (33, 32), (34, 128), (35, 32), (36, 128), (37, 8), (38, -1), (39, 64), (40, -1), (41, 128), (42, 256), (43, 32), (44, 16), (45, -1), (46, 64), (47, 64), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, 256), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 11 among pending : [47, 59, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, 256), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

Decide 59 with phase True at level 11

After decision at level 11
 pending : [47, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16, 59]


New level: 12
 pending : [47, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16, 59]


Before reduction : 
 pending  : [47, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16, 59]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, 256), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 64), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, 256), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 32), (55, 128), (56, 256), (57, 256), (58, 64), (59, -1), (60, 128), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [47, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16, 59]


Solution : [0, 8, 5, 16, 59] has cost 28.


Before backtrack at level 12
 pending : [47, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16, 59]

After backtrack at level 12
 pending : [47, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16, 59]


Invert decision for 59 at level 11


New level: 12
 pending : [47, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [47, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 64), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, 256), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 32), (55, 128), (56, 256), (57, 256), (58, 64), (59, -1), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, 256), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, -1), (60, 256), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [47, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 12 among pending : [47, 54, 57, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, 256), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, -1), (60, 256), (61, 128)]

Decide 57 with phase True at level 12

After decision at level 12
 pending : [47, 54, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16, 57]


New level: 13
 pending : [47, 54, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16, 57]


Before reduction : 
 pending  : [47, 54, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 31, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16, 57]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, 256), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, 256), (58, 128), (59, -1), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, 128), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 4), (28, 16), (29, 32), (30, 2), (31, 0), (32, 8), (33, 32), (34, 128), (35, 128), (36, 4), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, 4), (43, 256), (44, 32), (45, -1), (46, 32), (47, 32), (48, 256), (49, 4), (50, 128), (51, 256), (52, 128), (53, -1), (54, 4), (55, 16), (56, 64), (57, -1), (58, 128), (59, -1), (60, 256), (61, 32)]

Covered at level 13 : {31}

After reduction : 
 pending  : [47, 54, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16, 57]


Before reduction : 
 pending  : [47, 54, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16, 57]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, 128), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 4), (28, 16), (29, 32), (30, 2), (31, 0), (32, 8), (33, 32), (34, 128), (35, 128), (36, 4), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, 4), (43, 256), (44, 32), (45, -1), (46, 32), (47, 32), (48, 256), (49, 4), (50, 128), (51, 256), (52, 128), (53, -1), (54, 4), (55, 16), (56, 64), (57, -1), (58, 128), (59, -1), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, 128), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 4), (28, 16), (29, 32), (30, 2), (31, -1), (32, 8), (33, 32), (34, 128), (35, 128), (36, 4), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, 4), (43, 256), (44, 32), (45, -1), (46, 32), (47, 32), (48, 256), (49, 4), (50, 128), (51, 256), (52, 128), (53, -1), (54, 4), (55, 16), (56, 64), (57, -1), (58, 128), (59, -1), (60, 256), (61, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [47, 54, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16, 57]


Solution : [0, 8, 5, 16, 57] has cost 28.


Before backtrack at level 13
 pending : [47, 54, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38]
 solution : [0, 8, 5, 16, 57]

After backtrack at level 13
 pending : [47, 54, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16, 57]


Invert decision for 57 at level 12


New level: 13
 pending : [47, 54, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [47, 54, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, 128), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 4), (28, 16), (29, 32), (30, 2), (31, -1), (32, 8), (33, 32), (34, 128), (35, 128), (36, 4), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, 4), (43, 256), (44, 32), (45, -1), (46, 32), (47, 32), (48, 256), (49, 4), (50, 128), (51, 256), (52, 128), (53, -1), (54, 4), (55, 16), (56, 64), (57, -1), (58, 128), (59, -1), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, 256), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, 256), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [47, 54, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 13 among pending : [47, 54, 42, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, 256), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, 256), (61, 128)]

Decide 42 with phase True at level 13

After decision at level 13
 pending : [47, 54, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16, 42]


New level: 14
 pending : [47, 54, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16, 42]


Before reduction : 
 pending  : [47, 54, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16, 42]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, 256), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 16), (42, -1), (43, 32), (44, 16), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 64), (51, 256), (52, 128), (53, -1), (54, 32), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, 256), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [47, 54, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16, 42]


Solution : [0, 8, 5, 16, 42] has cost 28.


Before backtrack at level 14
 pending : [47, 54, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16, 42]

After backtrack at level 14
 pending : [47, 54, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16, 42]


Invert decision for 42 at level 13


New level: 14
 pending : [47, 54, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [47, 54, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 16), (42, -1), (43, 32), (44, 16), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 64), (51, 256), (52, 128), (53, -1), (54, 32), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, 256), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [47, 54, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 14 among pending : [47, 54, 50, 51, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, 256), (61, 128)]

Decide 51 with phase True at level 14

After decision at level 14
 pending : [47, 54, 50, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16, 51]


New level: 15
 pending : [47, 54, 50, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16, 51]


Before reduction : 
 pending  : [47, 54, 50, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 6, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16, 51]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 64), (4, 64), (5, -1), (6, 0), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 32), (28, 128), (29, 256), (30, 64), (31, 128), (32, 32), (33, 64), (34, 64), (35, 128), (36, 16), (37, 256), (38, 64), (39, 256), (40, -1), (41, 32), (42, -1), (43, 128), (44, 64), (45, -1), (46, 64), (47, 64), (48, 64), (49, 128), (50, 16), (51, -1), (52, 128), (53, -1), (54, 32), (55, 32), (56, 256), (57, -1), (58, 128), (59, -1), (60, 128), (61, 128)]

Covered at level 15 : {6}

After reduction : 
 pending  : [47, 54, 50, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16, 51]


Before reduction : 
 pending  : [47, 54, 50, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16, 51]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 64), (4, 64), (5, -1), (6, 0), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 32), (28, 128), (29, 256), (30, 64), (31, 128), (32, 32), (33, 64), (34, 64), (35, 128), (36, 16), (37, 256), (38, 64), (39, 256), (40, -1), (41, 32), (42, -1), (43, 128), (44, 64), (45, -1), (46, 64), (47, 64), (48, 64), (49, 128), (50, 16), (51, -1), (52, 128), (53, -1), (54, 32), (55, 32), (56, 256), (57, -1), (58, 128), (59, -1), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 64), (4, 32), (5, -1), (6, -1), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 32), (28, 128), (29, 256), (30, 64), (31, 128), (32, 16), (33, 64), (34, 64), (35, 128), (36, 16), (37, 256), (38, 64), (39, 256), (40, -1), (41, 32), (42, -1), (43, 128), (44, 64), (45, -1), (46, 64), (47, 64), (48, 64), (49, 128), (50, 16), (51, -1), (52, 128), (53, -1), (54, 32), (55, 32), (56, 256), (57, -1), (58, 128), (59, -1), (60, 128), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [47, 54, 50, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16, 51]


Solution : [0, 8, 5, 16, 51] has cost 28.


Before backtrack at level 15
 pending : [47, 54, 50, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31]
 solution : [0, 8, 5, 16, 51]

After backtrack at level 15
 pending : [47, 54, 50, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6]
 solution : [0, 8, 5, 16, 51]


Invert decision for 51 at level 14


New level: 15
 pending : [47, 54, 50, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [47, 54, 50, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6]
 solution : [0, 8, 5, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 64), (4, 32), (5, -1), (6, -1), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 32), (28, 128), (29, 256), (30, 64), (31, 128), (32, 16), (33, 64), (34, 64), (35, 128), (36, 16), (37, 256), (38, 64), (39, 256), (40, -1), (41, 32), (42, -1), (43, 128), (44, 64), (45, -1), (46, 64), (47, 64), (48, 64), (49, 128), (50, 16), (51, -1), (52, 128), (53, -1), (54, 32), (55, 32), (56, 256), (57, -1), (58, 128), (59, -1), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, 256), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [47, 54, 50, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 15 among pending : [47, 54, 50, 55, 41, 61, 60, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, 256), (61, 128)]

Decide 60 with phase True at level 15

After decision at level 15
 pending : [47, 54, 50, 55, 41, 61, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6]
 solution : [0, 8, 5, 16, 60]


New level: 16
 pending : [47, 54, 50, 55, 41, 61, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6]
 solution : [0, 8, 5, 16, 60]


Before reduction : 
 pending  : [47, 54, 50, 55, 41, 61, 43, 3, 56, 49, 7, 20, 22, 32, 33, 34, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6]
 solution : [0, 8, 5, 16, 60]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 64), (28, 128), (29, 256), (30, 128), (31, 128), (32, 32), (33, 16), (34, 0), (35, 32), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 32), (42, -1), (43, 128), (44, 32), (45, -1), (46, 128), (47, 128), (48, 64), (49, 256), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 64), (56, 256), (57, -1), (58, 128), (59, -1), (60, -1), (61, 32)]

Covered at level 16 : {34}

After reduction : 
 pending  : [47, 54, 50, 55, 41, 61, 43, 3, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6]
 solution : [0, 8, 5, 16, 60]


Before reduction : 
 pending  : [47, 54, 50, 55, 41, 61, 43, 3, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6]
 solution : [0, 8, 5, 16, 60]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 64), (28, 128), (29, 256), (30, 128), (31, 128), (32, 32), (33, 16), (34, 0), (35, 32), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 32), (42, -1), (43, 128), (44, 32), (45, -1), (46, 128), (47, 128), (48, 64), (49, 256), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 64), (56, 256), (57, -1), (58, 128), (59, -1), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 64), (28, 128), (29, 256), (30, 128), (31, 128), (32, 32), (33, 16), (34, -1), (35, 32), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 32), (42, -1), (43, 128), (44, 32), (45, -1), (46, 128), (47, 128), (48, 64), (49, 256), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 64), (56, 256), (57, -1), (58, 128), (59, -1), (60, -1), (61, 32)]

Covered at level 16 : set()

After reduction : 
 pending  : [47, 54, 50, 55, 41, 61, 43, 3, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6]
 solution : [0, 8, 5, 16, 60]


Solution : [0, 8, 5, 16, 60] has cost 28.


Before backtrack at level 16
 pending : [47, 54, 50, 55, 41, 61, 43, 3, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6]
 solution : [0, 8, 5, 16, 60]

After backtrack at level 16
 pending : [47, 54, 50, 55, 41, 61, 43, 3, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6, 34]
 solution : [0, 8, 5, 16, 60]


Invert decision for 60 at level 15


New level: 16
 pending : [47, 54, 50, 55, 41, 61, 43, 3, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6, 34]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [47, 54, 50, 55, 41, 61, 43, 3, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6, 34]
 solution : [0, 8, 5, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 64), (28, 128), (29, 256), (30, 128), (31, 128), (32, 32), (33, 16), (34, -1), (35, 32), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 32), (42, -1), (43, 128), (44, 32), (45, -1), (46, 128), (47, 128), (48, 64), (49, 256), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 64), (56, 256), (57, -1), (58, 128), (59, -1), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [47, 54, 50, 55, 41, 61, 43, 3, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6, 34]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 16 among pending : [47, 54, 50, 55, 41, 61, 43, 3, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6, 34]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Decide 43 with phase True at level 16

After decision at level 16
 pending : [47, 54, 50, 55, 41, 61, 3, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6, 34]
 solution : [0, 8, 5, 16, 43]


New level: 17
 pending : [47, 54, 50, 55, 41, 61, 3, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6, 34]
 solution : [0, 8, 5, 16, 43]


Before reduction : 
 pending  : [47, 54, 50, 55, 41, 61, 3, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6, 34]
 solution : [0, 8, 5, 16, 43]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, 256), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 64), (28, 128), (29, 256), (30, 64), (31, 128), (32, 64), (33, 64), (34, 64), (35, 16), (36, 128), (37, 128), (38, 32), (39, 32), (40, -1), (41, 64), (42, -1), (43, -1), (44, 64), (45, -1), (46, 64), (47, 64), (48, 128), (49, 128), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [47, 54, 50, 55, 41, 61, 3, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6, 34]
 solution : [0, 8, 5, 16, 43]


Solution : [0, 8, 5, 16, 43] has cost 28.


Before backtrack at level 17
 pending : [47, 54, 50, 55, 41, 61, 3, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6, 34]
 solution : [0, 8, 5, 16, 43]

After backtrack at level 17
 pending : [47, 54, 50, 55, 41, 61, 3, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6, 34]
 solution : [0, 8, 5, 16, 43]


Invert decision for 43 at level 16


New level: 17
 pending : [47, 54, 50, 55, 41, 61, 3, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6, 34]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [47, 54, 50, 55, 41, 61, 3, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6, 34]
 solution : [0, 8, 5, 16]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 64), (28, 128), (29, 256), (30, 64), (31, 128), (32, 64), (33, 64), (34, 64), (35, 16), (36, 128), (37, 128), (38, 32), (39, 32), (40, -1), (41, 64), (42, -1), (43, -1), (44, 64), (45, -1), (46, 64), (47, 64), (48, 128), (49, 128), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [47, 54, 50, 55, 41, 61, 3, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6, 34]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 17 among pending : [47, 54, 50, 55, 41, 61, 3, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6, 34]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Decide 3 with phase True at level 17

After decision at level 17
 pending : [47, 54, 50, 55, 41, 61, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6, 34]
 solution : [0, 8, 5, 16, 3]


New level: 18
 pending : [47, 54, 50, 55, 41, 61, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6, 34]
 solution : [0, 8, 5, 16, 3]


Before reduction : 
 pending  : [47, 54, 50, 55, 41, 61, 56, 49, 7, 20, 22, 32, 33, 4, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 6, 34]
 solution : [0, 8, 5, 16, 3]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 0), (5, -1), (6, 0), (7, 64), (8, -1), (9, 128), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 16), (28, 128), (29, 256), (30, 16), (31, 32), (32, 0), (33, 32), (34, 32), (35, 8), (36, 8), (37, 256), (38, 64), (39, 256), (40, -1), (41, 0), (42, -1), (43, -1), (44, 16), (45, -1), (46, 64), (47, 64), (48, 128), (49, 32), (50, 32), (51, -1), (52, 128), (53, -1), (54, 8), (55, 0), (56, 256), (57, -1), (58, 128), (59, -1), (60, -1), (61, 64)]

Covered at level 18 : {32, 4, 6, 41, 55}

After reduction : 
 pending  : [47, 54, 50, 61, 56, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34]
 solution : [0, 8, 5, 16, 3]


Before reduction : 
 pending  : [47, 54, 50, 61, 56, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34]
 solution : [0, 8, 5, 16, 3]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 0), (5, -1), (6, 0), (7, 64), (8, -1), (9, 128), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 16), (28, 128), (29, 256), (30, 16), (31, 32), (32, 0), (33, 32), (34, 32), (35, 8), (36, 8), (37, 256), (38, 64), (39, 256), (40, -1), (41, 0), (42, -1), (43, -1), (44, 16), (45, -1), (46, 64), (47, 64), (48, 128), (49, 32), (50, 32), (51, -1), (52, 128), (53, -1), (54, 8), (55, 0), (56, 256), (57, -1), (58, 128), (59, -1), (60, -1), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, 128), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 16), (28, 128), (29, 256), (30, 16), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 8), (37, 256), (38, 64), (39, 256), (40, -1), (41, -1), (42, -1), (43, -1), (44, 16), (45, -1), (46, 64), (47, 64), (48, 128), (49, 32), (50, 32), (51, -1), (52, 128), (53, -1), (54, 8), (55, -1), (56, 256), (57, -1), (58, 128), (59, -1), (60, -1), (61, 64)]

Covered at level 18 : set()

After reduction : 
 pending  : [47, 54, 50, 61, 56, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34]
 solution : [0, 8, 5, 16, 3]


Solution : [0, 8, 5, 16, 3] has cost 24.


Before backtrack at level 18
 pending : [47, 54, 50, 61, 56, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34]
 solution : [0, 8, 5, 16, 3]

After backtrack at level 18
 pending : [47, 54, 50, 61, 56, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6]
 solution : [0, 8, 5, 16, 3]


Invert decision for 3 at level 17


New level: 18
 pending : [47, 54, 50, 61, 56, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [47, 54, 50, 61, 56, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6]
 solution : [0, 8, 5, 16]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, 128), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 16), (28, 128), (29, 256), (30, 16), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 8), (37, 256), (38, 64), (39, 256), (40, -1), (41, -1), (42, -1), (43, -1), (44, 16), (45, -1), (46, 64), (47, 64), (48, 128), (49, 32), (50, 32), (51, -1), (52, 128), (53, -1), (54, 8), (55, -1), (56, 256), (57, -1), (58, 128), (59, -1), (60, -1), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 18 : set()

After reduction : 
 pending  : [47, 54, 50, 61, 56, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 18 among pending : [47, 54, 50, 61, 56, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Decide 56 with phase True at level 18

After decision at level 18
 pending : [47, 54, 50, 61, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6]
 solution : [0, 8, 5, 16, 56]


New level: 19
 pending : [47, 54, 50, 61, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6]
 solution : [0, 8, 5, 16, 56]


Before reduction : 
 pending  : [47, 54, 50, 61, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 23, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6]
 solution : [0, 8, 5, 16, 56]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, 256), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 0), (24, 64), (25, 128), (26, 128), (27, 128), (28, 8), (29, 32), (30, 128), (31, 32), (32, 64), (33, 64), (34, 128), (35, 128), (36, 4), (37, 256), (38, 32), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 32), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 32), (51, -1), (52, 64), (53, -1), (54, 0), (55, 128), (56, -1), (57, -1), (58, 32), (59, -1), (60, -1), (61, 128)]

Covered at level 19 : {54, 23}

After reduction : 
 pending  : [47, 50, 61, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6]
 solution : [0, 8, 5, 16, 56]


Before reduction : 
 pending  : [47, 50, 61, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6]
 solution : [0, 8, 5, 16, 56]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 0), (24, 64), (25, 128), (26, 128), (27, 128), (28, 8), (29, 32), (30, 128), (31, 32), (32, 64), (33, 64), (34, 128), (35, 128), (36, 4), (37, 256), (38, 32), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 32), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 32), (51, -1), (52, 64), (53, -1), (54, 0), (55, 128), (56, -1), (57, -1), (58, 32), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 64), (23, -1), (24, 64), (25, 128), (26, 128), (27, 64), (28, 8), (29, 32), (30, 128), (31, 32), (32, 64), (33, 64), (34, 128), (35, 128), (36, 4), (37, 256), (38, 32), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 32), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 32), (51, -1), (52, 64), (53, -1), (54, -1), (55, 128), (56, -1), (57, -1), (58, 32), (59, -1), (60, -1), (61, 128)]

Covered at level 19 : set()

After reduction : 
 pending  : [47, 50, 61, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6]
 solution : [0, 8, 5, 16, 56]


Solution : [0, 8, 5, 16, 56] has cost 28.


Before backtrack at level 19
 pending : [47, 50, 61, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6]
 solution : [0, 8, 5, 16, 56]

After backtrack at level 19
 pending : [47, 50, 61, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23]
 solution : [0, 8, 5, 16, 56]


Invert decision for 56 at level 18


New level: 19
 pending : [47, 50, 61, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [47, 50, 61, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23]
 solution : [0, 8, 5, 16]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 64), (23, -1), (24, 64), (25, 128), (26, 128), (27, 64), (28, 8), (29, 32), (30, 128), (31, 32), (32, 64), (33, 64), (34, 128), (35, 128), (36, 4), (37, 256), (38, 32), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 32), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 32), (51, -1), (52, 64), (53, -1), (54, -1), (55, 128), (56, -1), (57, -1), (58, 32), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 19 : set()

After reduction : 
 pending  : [47, 50, 61, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 19 among pending : [47, 50, 61, 49, 7, 20, 22, 33, 46, 48, 30, 27, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Decide 49 with phase True at level 19

After decision at level 19
 pending : [47, 50, 61, 7, 20, 22, 33, 46, 48, 30, 27, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23]
 solution : [0, 8, 5, 16, 49]


New level: 20
 pending : [47, 50, 61, 7, 20, 22, 33, 46, 48, 30, 27, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23]
 solution : [0, 8, 5, 16, 49]


Before reduction : 
 pending  : [47, 50, 61, 7, 20, 22, 33, 46, 48, 30, 27, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23]
 solution : [0, 8, 5, 16, 49]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 64), (27, 0), (28, 32), (29, 64), (30, 0), (31, 32), (32, 16), (33, 64), (34, 128), (35, 128), (36, 16), (37, 256), (38, 64), (39, 128), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 32), (47, 32), (48, 64), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 64), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 20 : {27, 30}

After reduction : 
 pending  : [47, 50, 61, 7, 20, 22, 33, 46, 48, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23]
 solution : [0, 8, 5, 16, 49]


Before reduction : 
 pending  : [47, 50, 61, 7, 20, 22, 33, 46, 48, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23]
 solution : [0, 8, 5, 16, 49]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 64), (27, 0), (28, 32), (29, 64), (30, 0), (31, 32), (32, 16), (33, 64), (34, 128), (35, 128), (36, 16), (37, 256), (38, 64), (39, 128), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 32), (47, 32), (48, 64), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 64), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 64), (27, -1), (28, 32), (29, 64), (30, -1), (31, 32), (32, 16), (33, 64), (34, 128), (35, 128), (36, 16), (37, 256), (38, 64), (39, 128), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 32), (47, 32), (48, 64), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 64), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 20 : set()

After reduction : 
 pending  : [47, 50, 61, 7, 20, 22, 33, 46, 48, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23]
 solution : [0, 8, 5, 16, 49]


Solution : [0, 8, 5, 16, 49] has cost 28.


Before backtrack at level 20
 pending : [47, 50, 61, 7, 20, 22, 33, 46, 48, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23]
 solution : [0, 8, 5, 16, 49]

After backtrack at level 20
 pending : [47, 50, 61, 7, 20, 22, 33, 46, 48, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16, 49]


Invert decision for 49 at level 19


New level: 20
 pending : [47, 50, 61, 7, 20, 22, 33, 46, 48, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [47, 50, 61, 7, 20, 22, 33, 46, 48, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 64), (27, -1), (28, 32), (29, 64), (30, -1), (31, 32), (32, 16), (33, 64), (34, 128), (35, 128), (36, 16), (37, 256), (38, 64), (39, 128), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 32), (47, 32), (48, 64), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 64), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 20 : set()

After reduction : 
 pending  : [47, 50, 61, 7, 20, 22, 33, 46, 48, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 20 among pending : [47, 50, 61, 7, 20, 22, 33, 46, 48, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Decide 20 with phase True at level 20

After decision at level 20
 pending : [47, 50, 61, 7, 22, 33, 46, 48, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16, 20]


New level: 21
 pending : [47, 50, 61, 7, 22, 33, 46, 48, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16, 20]


Before reduction : 
 pending  : [47, 50, 61, 7, 22, 33, 46, 48, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16, 20]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 128), (22, 64), (23, 128), (24, 64), (25, 128), (26, 64), (27, 16), (28, 32), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 128), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 21 : set()

After reduction : 
 pending  : [47, 50, 61, 7, 22, 33, 46, 48, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16, 20]


Solution : [0, 8, 5, 16, 20] has cost 28.


Before backtrack at level 21
 pending : [47, 50, 61, 7, 22, 33, 46, 48, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16, 20]

After backtrack at level 21
 pending : [47, 50, 61, 7, 22, 33, 46, 48, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16, 20]


Invert decision for 20 at level 20


New level: 21
 pending : [47, 50, 61, 7, 22, 33, 46, 48, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [47, 50, 61, 7, 22, 33, 46, 48, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 128), (22, 64), (23, 128), (24, 64), (25, 128), (26, 64), (27, 16), (28, 32), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 128), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 21 : set()

After reduction : 
 pending  : [47, 50, 61, 7, 22, 33, 46, 48, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 21 among pending : [47, 50, 61, 7, 22, 33, 46, 48, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Decide 48 with phase True at level 21

After decision at level 21
 pending : [47, 50, 61, 7, 22, 33, 46, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16, 48]


New level: 22
 pending : [47, 50, 61, 7, 22, 33, 46, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16, 48]


Before reduction : 
 pending  : [47, 50, 61, 7, 22, 33, 46, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16, 48]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 256), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 64), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 32), (27, 0), (28, 128), (29, 256), (30, 32), (31, 128), (32, 32), (33, 64), (34, 16), (35, 64), (36, 32), (37, 256), (38, 64), (39, 32), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 32), (47, 32), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 22 : {27}

After reduction : 
 pending  : [47, 50, 61, 7, 22, 33, 46, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30]
 solution : [0, 8, 5, 16, 48]


Before reduction : 
 pending  : [47, 50, 61, 7, 22, 33, 46, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30]
 solution : [0, 8, 5, 16, 48]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 64), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 32), (27, 0), (28, 128), (29, 256), (30, 32), (31, 128), (32, 32), (33, 64), (34, 16), (35, 64), (36, 32), (37, 256), (38, 64), (39, 32), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 32), (47, 32), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 64), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 32), (27, -1), (28, 128), (29, 256), (30, 32), (31, 128), (32, 32), (33, 64), (34, 16), (35, 64), (36, 32), (37, 256), (38, 64), (39, 32), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 32), (47, 32), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 22 : set()

After reduction : 
 pending  : [47, 50, 61, 7, 22, 33, 46, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30]
 solution : [0, 8, 5, 16, 48]


Solution : [0, 8, 5, 16, 48] has cost 28.


Before backtrack at level 22
 pending : [47, 50, 61, 7, 22, 33, 46, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30]
 solution : [0, 8, 5, 16, 48]

After backtrack at level 22
 pending : [47, 50, 61, 7, 22, 33, 46, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16, 48]


Invert decision for 48 at level 21


New level: 22
 pending : [47, 50, 61, 7, 22, 33, 46, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [47, 50, 61, 7, 22, 33, 46, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 64), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 32), (27, -1), (28, 128), (29, 256), (30, 32), (31, 128), (32, 32), (33, 64), (34, 16), (35, 64), (36, 32), (37, 256), (38, 64), (39, 32), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 32), (47, 32), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 22 : set()

After reduction : 
 pending  : [47, 50, 61, 7, 22, 33, 46, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 22 among pending : [47, 50, 61, 7, 22, 33, 46, 2, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Decide 2 with phase True at level 22

After decision at level 22
 pending : [47, 50, 61, 7, 22, 33, 46, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16, 2]


New level: 23
 pending : [47, 50, 61, 7, 22, 33, 46, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16, 2]


Before reduction : 
 pending  : [47, 50, 61, 7, 22, 33, 46, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 54, 23, 30, 27]
 solution : [0, 8, 5, 16, 2]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, 64), (7, 64), (8, -1), (9, 128), (10, 32), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 32), (33, 32), (34, 128), (35, 64), (36, 4), (37, 256), (38, 64), (39, 256), (40, -1), (41, 64), (42, -1), (43, -1), (44, 32), (45, -1), (46, 32), (47, 32), (48, -1), (49, -1), (50, 0), (51, -1), (52, 64), (53, -1), (54, 0), (55, 64), (56, -1), (57, -1), (58, 64), (59, -1), (60, -1), (61, 64)]

Covered at level 23 : {50, 54}

After reduction : 
 pending  : [47, 61, 7, 22, 33, 46, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27]
 solution : [0, 8, 5, 16, 2]


Before reduction : 
 pending  : [47, 61, 7, 22, 33, 46, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27]
 solution : [0, 8, 5, 16, 2]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, 64), (7, 64), (8, -1), (9, 128), (10, 32), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 32), (33, 32), (34, 128), (35, 64), (36, 4), (37, 256), (38, 64), (39, 256), (40, -1), (41, 64), (42, -1), (43, -1), (44, 32), (45, -1), (46, 32), (47, 32), (48, -1), (49, -1), (50, 0), (51, -1), (52, 64), (53, -1), (54, 0), (55, 64), (56, -1), (57, -1), (58, 64), (59, -1), (60, -1), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, 64), (7, 64), (8, -1), (9, 128), (10, 32), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 32), (33, 32), (34, 128), (35, 64), (36, 4), (37, 256), (38, 64), (39, 256), (40, -1), (41, 64), (42, -1), (43, -1), (44, 32), (45, -1), (46, 32), (47, 32), (48, -1), (49, -1), (50, -1), (51, -1), (52, 64), (53, -1), (54, -1), (55, 64), (56, -1), (57, -1), (58, 64), (59, -1), (60, -1), (61, 64)]

Covered at level 23 : set()

After reduction : 
 pending  : [47, 61, 7, 22, 33, 46, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27]
 solution : [0, 8, 5, 16, 2]


Solution : [0, 8, 5, 16, 2] has cost 24.


Before backtrack at level 23
 pending : [47, 61, 7, 22, 33, 46, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27]
 solution : [0, 8, 5, 16, 2]

After backtrack at level 23
 pending : [47, 61, 7, 22, 33, 46, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54]
 solution : [0, 8, 5, 16, 2]


Invert decision for 2 at level 22


New level: 23
 pending : [47, 61, 7, 22, 33, 46, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [47, 61, 7, 22, 33, 46, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54]
 solution : [0, 8, 5, 16]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, 64), (7, 64), (8, -1), (9, 128), (10, 32), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 32), (33, 32), (34, 128), (35, 64), (36, 4), (37, 256), (38, 64), (39, 256), (40, -1), (41, 64), (42, -1), (43, -1), (44, 32), (45, -1), (46, 32), (47, 32), (48, -1), (49, -1), (50, -1), (51, -1), (52, 64), (53, -1), (54, -1), (55, 64), (56, -1), (57, -1), (58, 64), (59, -1), (60, -1), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 23 : set()

After reduction : 
 pending  : [47, 61, 7, 22, 33, 46, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 23 among pending : [47, 61, 7, 22, 33, 46, 9, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Decide 9 with phase True at level 23

After decision at level 23
 pending : [47, 61, 7, 22, 33, 46, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54]
 solution : [0, 8, 5, 16, 9]


New level: 24
 pending : [47, 61, 7, 22, 33, 46, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54]
 solution : [0, 8, 5, 16, 9]


Before reduction : 
 pending  : [47, 61, 7, 22, 33, 46, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 10, 14, 24, 44, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54]
 solution : [0, 8, 5, 16, 9]

Essensial at level 24 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, 64), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, 0), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, 256), (40, -1), (41, 64), (42, -1), (43, -1), (44, 0), (45, -1), (46, 16), (47, 16), (48, -1), (49, -1), (50, 16), (51, -1), (52, 64), (53, -1), (54, 32), (55, 64), (56, -1), (57, -1), (58, 64), (59, -1), (60, -1), (61, 0)]

Covered at level 24 : {33, 7, 10, 44, 61}

After reduction : 
 pending  : [47, 22, 46, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54]
 solution : [0, 8, 5, 16, 9]


Before reduction : 
 pending  : [47, 22, 46, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54]
 solution : [0, 8, 5, 16, 9]

Essensial at level 24 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, 64), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, 0), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, 256), (40, -1), (41, 64), (42, -1), (43, -1), (44, 0), (45, -1), (46, 16), (47, 16), (48, -1), (49, -1), (50, 16), (51, -1), (52, 64), (53, -1), (54, 32), (55, 64), (56, -1), (57, -1), (58, 64), (59, -1), (60, -1), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, 256), (40, -1), (41, 64), (42, -1), (43, -1), (44, -1), (45, -1), (46, 16), (47, 16), (48, -1), (49, -1), (50, 16), (51, -1), (52, 64), (53, -1), (54, 32), (55, 64), (56, -1), (57, -1), (58, 64), (59, -1), (60, -1), (61, -1)]

Covered at level 24 : set()

After reduction : 
 pending  : [47, 22, 46, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54]
 solution : [0, 8, 5, 16, 9]


Solution : [0, 8, 5, 16, 9] has cost 24.


Before backtrack at level 24
 pending : [47, 22, 46, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54]
 solution : [0, 8, 5, 16, 9]

After backtrack at level 24
 pending : [47, 22, 46, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44]
 solution : [0, 8, 5, 16, 9]


Invert decision for 9 at level 23


New level: 24
 pending : [47, 22, 46, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [47, 22, 46, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44]
 solution : [0, 8, 5, 16]

Essensial at level 24 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, 256), (40, -1), (41, 64), (42, -1), (43, -1), (44, -1), (45, -1), (46, 16), (47, 16), (48, -1), (49, -1), (50, 16), (51, -1), (52, 64), (53, -1), (54, 32), (55, 64), (56, -1), (57, -1), (58, 64), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 24 : set()

After reduction : 
 pending  : [47, 22, 46, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 24 among pending : [47, 22, 46, 21, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Decide 21 with phase True at level 24

After decision at level 24
 pending : [47, 22, 46, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44]
 solution : [0, 8, 5, 16, 21]


New level: 25
 pending : [47, 22, 46, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44]
 solution : [0, 8, 5, 16, 21]


Before reduction : 
 pending  : [47, 22, 46, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 38, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44]
 solution : [0, 8, 5, 16, 21]

Essensial at level 25 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 32), (24, 16), (25, 64), (26, 128), (27, 128), (28, 8), (29, 128), (30, 128), (31, 128), (32, 64), (33, 32), (34, 128), (35, 32), (36, 128), (37, 32), (38, 0), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 32), (47, 32), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 64), (59, -1), (60, -1), (61, 128)]

Covered at level 25 : {38, 22}

After reduction : 
 pending  : [47, 46, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44]
 solution : [0, 8, 5, 16, 21]


Before reduction : 
 pending  : [47, 46, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44]
 solution : [0, 8, 5, 16, 21]

Essensial at level 25 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 32), (24, 16), (25, 64), (26, 128), (27, 128), (28, 8), (29, 128), (30, 128), (31, 128), (32, 64), (33, 32), (34, 128), (35, 32), (36, 128), (37, 32), (38, 0), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 32), (47, 32), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 64), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, 16), (25, 64), (26, 128), (27, 128), (28, 8), (29, 128), (30, 128), (31, 128), (32, 64), (33, 32), (34, 128), (35, 32), (36, 128), (37, 32), (38, -1), (39, 128), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 16), (47, 16), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 64), (59, -1), (60, -1), (61, 128)]

Covered at level 25 : set()

After reduction : 
 pending  : [47, 46, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44]
 solution : [0, 8, 5, 16, 21]


Solution : [0, 8, 5, 16, 21] has cost 28.


Before backtrack at level 25
 pending : [47, 46, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44]
 solution : [0, 8, 5, 16, 21]

After backtrack at level 25
 pending : [47, 46, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16, 21]


Invert decision for 21 at level 24


New level: 25
 pending : [47, 46, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [47, 46, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16]

Essensial at level 25 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, 16), (25, 64), (26, 128), (27, 128), (28, 8), (29, 128), (30, 128), (31, 128), (32, 64), (33, 32), (34, 128), (35, 32), (36, 128), (37, 32), (38, -1), (39, 128), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 16), (47, 16), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 64), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 25 : set()

After reduction : 
 pending  : [47, 46, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 25 among pending : [47, 46, 37, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Decide 37 with phase True at level 25

After decision at level 25
 pending : [47, 46, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16, 37]


New level: 26
 pending : [47, 46, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16, 37]


Before reduction : 
 pending  : [47, 46, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16, 37]

Essensial at level 26 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 256), (24, 32), (25, 64), (26, 128), (27, 128), (28, 64), (29, 128), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 16), (36, 128), (37, -1), (38, 0), (39, 64), (40, -1), (41, 128), (42, -1), (43, -1), (44, 32), (45, -1), (46, 64), (47, 64), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 26 : {38}

After reduction : 
 pending  : [47, 46, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22]
 solution : [0, 8, 5, 16, 37]


Before reduction : 
 pending  : [47, 46, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22]
 solution : [0, 8, 5, 16, 37]

Essensial at level 26 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 256), (24, 32), (25, 64), (26, 128), (27, 128), (28, 64), (29, 128), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 16), (36, 128), (37, -1), (38, 0), (39, 64), (40, -1), (41, 128), (42, -1), (43, -1), (44, 32), (45, -1), (46, 64), (47, 64), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 256), (24, 32), (25, 64), (26, 128), (27, 128), (28, 64), (29, 128), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 16), (36, 128), (37, -1), (38, -1), (39, 64), (40, -1), (41, 128), (42, -1), (43, -1), (44, 32), (45, -1), (46, 64), (47, 64), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 26 : set()

After reduction : 
 pending  : [47, 46, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22]
 solution : [0, 8, 5, 16, 37]


Solution : [0, 8, 5, 16, 37] has cost 28.


Before backtrack at level 26
 pending : [47, 46, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22]
 solution : [0, 8, 5, 16, 37]

After backtrack at level 26
 pending : [47, 46, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16, 37]


Invert decision for 37 at level 25


New level: 26
 pending : [47, 46, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [47, 46, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16]

Essensial at level 26 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 256), (24, 32), (25, 64), (26, 128), (27, 128), (28, 64), (29, 128), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 16), (36, 128), (37, -1), (38, -1), (39, 64), (40, -1), (41, 128), (42, -1), (43, -1), (44, 32), (45, -1), (46, 64), (47, 64), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, -1), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 26 : set()

After reduction : 
 pending  : [47, 46, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 26 among pending : [47, 46, 26, 39, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, -1), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Decide 39 with phase True at level 26

After decision at level 26
 pending : [47, 46, 26, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16, 39]


New level: 27
 pending : [47, 46, 26, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16, 39]


Before reduction : 
 pending  : [47, 46, 26, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16, 39]

Essensial at level 27 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, -1), (38, 64), (39, 256), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 128), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 64), (25, 128), (26, 64), (27, 64), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 64), (35, 32), (36, 128), (37, -1), (38, 32), (39, -1), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 27 : set()

After reduction : 
 pending  : [47, 46, 26, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16, 39]


Solution : [0, 8, 5, 16, 39] has cost 28.


Before backtrack at level 27
 pending : [47, 46, 26, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16, 39]

After backtrack at level 27
 pending : [47, 46, 26, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16, 39]


Invert decision for 39 at level 26


New level: 27
 pending : [47, 46, 26, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [47, 46, 26, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16]

Essensial at level 27 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 128), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 64), (25, 128), (26, 64), (27, 64), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 64), (35, 32), (36, 128), (37, -1), (38, 32), (39, -1), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, -1), (38, 64), (39, -1), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 27 : set()

After reduction : 
 pending  : [47, 46, 26, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 27 among pending : [47, 46, 26, 15, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, -1), (38, 64), (39, -1), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Decide 15 with phase True at level 27

After decision at level 27
 pending : [47, 46, 26, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16, 15]


New level: 28
 pending : [47, 46, 26, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16, 15]


Before reduction : 
 pending  : [47, 46, 26, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16, 15]

Essensial at level 28 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, -1), (38, 64), (39, -1), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 128), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 32), (25, 64), (26, 0), (27, 32), (28, 64), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 64), (35, 128), (36, 128), (37, -1), (38, 64), (39, -1), (40, -1), (41, 128), (42, -1), (43, -1), (44, 32), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 32), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 28 : {26}

After reduction : 
 pending  : [47, 46, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16, 15]


Before reduction : 
 pending  : [47, 46, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16, 15]

Essensial at level 28 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 128), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 32), (25, 64), (26, 0), (27, 32), (28, 64), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 64), (35, 128), (36, 128), (37, -1), (38, 64), (39, -1), (40, -1), (41, 128), (42, -1), (43, -1), (44, 32), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 32), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 128), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 32), (25, 64), (26, -1), (27, 32), (28, 64), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 64), (35, 128), (36, 128), (37, -1), (38, 64), (39, -1), (40, -1), (41, 128), (42, -1), (43, -1), (44, 32), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 32), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 28 : set()

After reduction : 
 pending  : [47, 46, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16, 15]


Solution : [0, 8, 5, 16, 15] has cost 24.


Before backtrack at level 28
 pending : [47, 46, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38]
 solution : [0, 8, 5, 16, 15]

After backtrack at level 28
 pending : [47, 46, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 26]
 solution : [0, 8, 5, 16, 15]


Invert decision for 15 at level 27


New level: 28
 pending : [47, 46, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 26]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [47, 46, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 26]
 solution : [0, 8, 5, 16]

Essensial at level 28 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 128), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 32), (25, 64), (26, -1), (27, 32), (28, 64), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 64), (35, 128), (36, 128), (37, -1), (38, 64), (39, -1), (40, -1), (41, 128), (42, -1), (43, -1), (44, 32), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 32), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, -1), (38, 64), (39, -1), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 28 : set()

After reduction : 
 pending  : [47, 46, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 26]
 solution : [0, 8, 5, 16]


Solution : [0, 8, 5, 16] has cost 18.


Decide in level 28 among pending : [47, 46, 17, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, -1), (38, 64), (39, -1), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Decide 17 with phase True at level 28

After decision at level 28
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 26]
 solution : [0, 8, 5, 16, 17]


New level: 29
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 26]
 solution : [0, 8, 5, 16, 17]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 6, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 26]
 solution : [0, 8, 5, 16, 17]

Essensial at level 29 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 128), (32, 64), (33, 64), (34, 128), (35, 128), (36, 128), (37, -1), (38, 64), (39, -1), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 128), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, 0), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 64), (25, 128), (26, 64), (27, 16), (28, 128), (29, 256), (30, 128), (31, 128), (32, 16), (33, 64), (34, 32), (35, 128), (36, 128), (37, -1), (38, 64), (39, -1), (40, -1), (41, 32), (42, -1), (43, -1), (44, 32), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 32), (55, 32), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 29 : {6}

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 26]
 solution : [0, 8, 5, 16, 17]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 26]
 solution : [0, 8, 5, 16, 17]

Essensial at level 29 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, 0), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 64), (25, 128), (26, 64), (27, 16), (28, 128), (29, 256), (30, 128), (31, 128), (32, 16), (33, 64), (34, 32), (35, 128), (36, 128), (37, -1), (38, 64), (39, -1), (40, -1), (41, 32), (42, -1), (43, -1), (44, 32), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 32), (55, 32), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 64), (25, 128), (26, 64), (27, 16), (28, 128), (29, 256), (30, 128), (31, 128), (32, 16), (33, 64), (34, 32), (35, 128), (36, 128), (37, -1), (38, 64), (39, -1), (40, -1), (41, 32), (42, -1), (43, -1), (44, 32), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 32), (55, 32), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 29 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 26]
 solution : [0, 8, 5, 16, 17]


Solution : [0, 8, 5, 16, 17] has cost 24.


Before backtrack at level 29
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 26]
 solution : [0, 8, 5, 16, 17]

After backtrack at level 29
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 26, 6]
 solution : [0, 8, 5, 16, 17]


Invert decision for 17 at level 28


New level: 29
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 26, 6]
 solution : [0, 8, 5, 16]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 34, 55, 41, 32, 4, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 26, 6]
 solution : [0, 8, 5, 16]

Essensial at level 29 : {34, 26, 4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 64), (25, 128), (26, 64), (27, 16), (28, 128), (29, 256), (30, 128), (31, 128), (32, 16), (33, 64), (34, 32), (35, 128), (36, 128), (37, -1), (38, 64), (39, -1), (40, -1), (41, 32), (42, -1), (43, -1), (44, 32), (45, -1), (46, 128), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 32), (55, 32), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 64), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 32), (25, 64), (26, -1), (27, 16), (28, 128), (29, 256), (30, 16), (31, 32), (32, 0), (33, 16), (34, -1), (35, 32), (36, 32), (37, -1), (38, 64), (39, -1), (40, -1), (41, 64), (42, -1), (43, -1), (44, 64), (45, -1), (46, 64), (47, 64), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 64), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 29 : {32}

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6]
 solution : [0, 8, 5, 16, 34, 26, 4]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6]
 solution : [0, 8, 5, 16, 34, 26, 4]

Essensial at level 29 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 64), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 32), (25, 64), (26, -1), (27, 16), (28, 128), (29, 256), (30, 16), (31, 32), (32, 0), (33, 16), (34, -1), (35, 32), (36, 32), (37, -1), (38, 64), (39, -1), (40, -1), (41, 64), (42, -1), (43, -1), (44, 64), (45, -1), (46, 64), (47, 64), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 64), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 64), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 32), (25, 64), (26, -1), (27, 16), (28, 128), (29, 256), (30, 16), (31, 32), (32, -1), (33, 16), (34, -1), (35, 32), (36, 32), (37, -1), (38, 64), (39, -1), (40, -1), (41, 64), (42, -1), (43, -1), (44, 64), (45, -1), (46, 64), (47, 64), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 64), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

Covered at level 29 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6]
 solution : [0, 8, 5, 16, 34, 26, 4]


Solution : [0, 8, 5, 16, 34, 26, 4] has cost 47.


Before backtrack at level 29
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6]
 solution : [0, 8, 5, 16, 34, 26, 4]

After backtrack at level 29
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32]
 solution : [0, 8, 5, 16]


Before backtrack at level 28
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32]
 solution : [0, 8, 5, 16]

After backtrack at level 28
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17]
 solution : [0, 8, 5, 16]


Before backtrack at level 27
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17]
 solution : [0, 8, 5, 16]

After backtrack at level 27
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15]
 solution : [0, 8, 5, 16]


Before backtrack at level 26
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15]
 solution : [0, 8, 5, 16]

After backtrack at level 26
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39]
 solution : [0, 8, 5, 16]


Before backtrack at level 25
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39]
 solution : [0, 8, 5, 16]

After backtrack at level 25
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37]
 solution : [0, 8, 5, 16]


Before backtrack at level 24
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37]
 solution : [0, 8, 5, 16]

After backtrack at level 24
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21]
 solution : [0, 8, 5, 16]


Before backtrack at level 23
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21]
 solution : [0, 8, 5, 16]

After backtrack at level 23
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9]
 solution : [0, 8, 5, 16]


Before backtrack at level 22
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9]
 solution : [0, 8, 5, 16]

After backtrack at level 22
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2]
 solution : [0, 8, 5, 16]


Before backtrack at level 21
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2]
 solution : [0, 8, 5, 16]

After backtrack at level 21
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48]
 solution : [0, 8, 5, 16]


Before backtrack at level 20
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48]
 solution : [0, 8, 5, 16]

After backtrack at level 20
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20]
 solution : [0, 8, 5, 16]


Before backtrack at level 19
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20]
 solution : [0, 8, 5, 16]

After backtrack at level 19
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49]
 solution : [0, 8, 5, 16]


Before backtrack at level 18
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49]
 solution : [0, 8, 5, 16]

After backtrack at level 18
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56]
 solution : [0, 8, 5, 16]


Before backtrack at level 17
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56]
 solution : [0, 8, 5, 16]

After backtrack at level 17
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3]
 solution : [0, 8, 5, 16]


Before backtrack at level 16
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3]
 solution : [0, 8, 5, 16]

After backtrack at level 16
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43]
 solution : [0, 8, 5, 16]


Before backtrack at level 15
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43]
 solution : [0, 8, 5, 16]

After backtrack at level 15
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60]
 solution : [0, 8, 5, 16]


Before backtrack at level 14
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60]
 solution : [0, 8, 5, 16]

After backtrack at level 14
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51]
 solution : [0, 8, 5, 16]


Before backtrack at level 13
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51]
 solution : [0, 8, 5, 16]

After backtrack at level 13
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42]
 solution : [0, 8, 5, 16]


Before backtrack at level 12
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42]
 solution : [0, 8, 5, 16]

After backtrack at level 12
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57]
 solution : [0, 8, 5, 16]


Before backtrack at level 11
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57]
 solution : [0, 8, 5, 16]

After backtrack at level 11
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59]
 solution : [0, 8, 5, 16]


Before backtrack at level 10
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59]
 solution : [0, 8, 5, 16]

After backtrack at level 10
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40]
 solution : [0, 8, 5, 16]


Before backtrack at level 9
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40]
 solution : [0, 8, 5, 16]

After backtrack at level 9
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45]
 solution : [0, 8, 5, 16]


Before backtrack at level 8
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45]
 solution : [0, 8, 5, 16]

After backtrack at level 8
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53]
 solution : [0, 8, 5, 16]


Before backtrack at level 7
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53]
 solution : [0, 8, 5, 16]

After backtrack at level 7
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13]
 solution : [0, 8, 5, 16]


Before backtrack at level 6
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13]
 solution : [0, 8, 5, 16]

After backtrack at level 6
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11]
 solution : [0, 8, 5, 16]


Invert decision for 16 at level 5


New level: 6
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11]
 solution : [0, 8, 5]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11]
 solution : [0, 8, 5]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 64), (8, -1), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 256), (24, 32), (25, 64), (26, -1), (27, 16), (28, 128), (29, 256), (30, 16), (31, 32), (32, -1), (33, 16), (34, -1), (35, 32), (36, 32), (37, -1), (38, 64), (39, -1), (40, -1), (41, 64), (42, -1), (43, -1), (44, 64), (45, -1), (46, 64), (47, 64), (48, -1), (49, -1), (50, 128), (51, -1), (52, 128), (53, -1), (54, 64), (55, 64), (56, -1), (57, -1), (58, 128), (59, -1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 6 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11]
 solution : [0, 8, 5]


Solution : [0, 8, 5] has cost 12.


Decide in level 6 among pending : [47, 46, 35, 29, 28, 36, 52, 58, 12, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 12 with phase True at level 6

After decision at level 6
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11]
 solution : [0, 8, 5, 12]


New level: 7
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11]
 solution : [0, 8, 5, 12]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11]
 solution : [0, 8, 5, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 8), (11, 128), (12, -1), (13, 128), (14, 256), (15, 512), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 128), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 64), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 128), (55, 256), (56, 128), (57, 256), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11]
 solution : [0, 8, 5, 12]


Solution : [0, 8, 5, 12] has cost 18.


Decide in level 7 among pending : [47, 46, 35, 29, 28, 36, 52, 58, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 17, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 8), (11, 128), (12, -1), (13, 128), (14, 256), (15, 512), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 128), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 64), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 128), (55, 256), (56, 128), (57, 256), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11]
 solution : [0, 8, 5, 12, 17]


New level: 8
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11]
 solution : [0, 8, 5, 12, 17]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 6, 34, 4, 26, 32, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11]
 solution : [0, 8, 5, 12, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 8), (11, 128), (12, -1), (13, 128), (14, 256), (15, 512), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 128), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 64), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 128), (55, 256), (56, 128), (57, 256), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, 0), (7, 128), (8, -1), (9, 256), (10, 8), (11, 128), (12, -1), (13, 128), (14, 32), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 16), (28, 16), (29, 256), (30, 128), (31, 128), (32, 16), (33, 32), (34, 32), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 32), (42, 256), (43, 256), (44, 32), (45, 256), (46, 64), (47, 64), (48, 64), (49, 256), (50, 32), (51, 32), (52, 32), (53, 32), (54, 16), (55, 32), (56, 128), (57, 256), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 8 : {6}

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 26, 32, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11]
 solution : [0, 8, 5, 12, 17]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 26, 32, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11]
 solution : [0, 8, 5, 12, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, 0), (7, 128), (8, -1), (9, 256), (10, 8), (11, 128), (12, -1), (13, 128), (14, 32), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 16), (28, 16), (29, 256), (30, 128), (31, 128), (32, 16), (33, 32), (34, 32), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 32), (42, 256), (43, 256), (44, 32), (45, 256), (46, 64), (47, 64), (48, 64), (49, 256), (50, 32), (51, 32), (52, 32), (53, 32), (54, 16), (55, 32), (56, 128), (57, 256), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, 128), (8, -1), (9, 256), (10, 8), (11, 128), (12, -1), (13, 128), (14, 32), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 16), (28, 16), (29, 256), (30, 128), (31, 128), (32, 16), (33, 32), (34, 32), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 32), (42, 256), (43, 256), (44, 32), (45, 256), (46, 64), (47, 64), (48, 64), (49, 256), (50, 32), (51, 32), (52, 32), (53, 32), (54, 16), (55, 32), (56, 128), (57, 256), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 26, 32, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11]
 solution : [0, 8, 5, 12, 17]


Solution : [0, 8, 5, 12, 17] has cost 24.


Before backtrack at level 8
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 26, 32, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11]
 solution : [0, 8, 5, 12, 17]

After backtrack at level 8
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 26, 32, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11, 6]
 solution : [0, 8, 5, 12, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 26, 32, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11, 6]
 solution : [0, 8, 5, 12]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 25, 14, 24, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 26, 32, 15, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11, 6]
 solution : [0, 8, 5, 12]

Essensial at level 8 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, 128), (8, -1), (9, 256), (10, 8), (11, 128), (12, -1), (13, 128), (14, 32), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 16), (28, 16), (29, 256), (30, 128), (31, 128), (32, 16), (33, 32), (34, 32), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 32), (42, 256), (43, 256), (44, 32), (45, 256), (46, 64), (47, 64), (48, 64), (49, 256), (50, 32), (51, 32), (52, 32), (53, 32), (54, 16), (55, 32), (56, 128), (57, 256), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 8), (11, 128), (12, -1), (13, 16), (14, 0), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 256), (22, 32), (23, 128), (24, 0), (25, 16), (26, 0), (27, 64), (28, 8), (29, 256), (30, 128), (31, 16), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 32), (43, 256), (44, 256), (45, 64), (46, 32), (47, 16), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 64), (54, 128), (55, 256), (56, 16), (57, 32), (58, 32), (59, 32), (60, 128), (61, 64)]

Covered at level 8 : {24, 26, 14}

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 25, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11, 6]
 solution : [0, 8, 5, 12, 15]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 25, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11, 6]
 solution : [0, 8, 5, 12, 15]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 8), (11, 128), (12, -1), (13, 16), (14, 0), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 256), (22, 32), (23, 128), (24, 0), (25, 16), (26, 0), (27, 64), (28, 8), (29, 256), (30, 128), (31, 16), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 32), (43, 256), (44, 256), (45, 64), (46, 32), (47, 16), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 64), (54, 128), (55, 256), (56, 16), (57, 32), (58, 32), (59, 32), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 8), (11, 128), (12, -1), (13, 16), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 256), (22, 32), (23, 128), (24, -1), (25, 16), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 16), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 32), (43, 256), (44, 256), (45, 64), (46, 32), (47, 16), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 64), (54, 128), (55, 256), (56, 16), (57, 32), (58, 32), (59, 32), (60, 128), (61, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 25, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11, 6]
 solution : [0, 8, 5, 12, 15]


Solution : [0, 8, 5, 12, 15] has cost 24.


Before backtrack at level 8
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 25, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11, 6]
 solution : [0, 8, 5, 12, 15]

After backtrack at level 8
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 25, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11, 6, 15, 14, 24, 26]
 solution : [0, 8, 5, 12]


Before backtrack at level 7
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 25, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11, 6, 15, 14, 24, 26]
 solution : [0, 8, 5, 12]

After backtrack at level 7
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 25, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11, 6, 15, 14, 24, 26, 17]
 solution : [0, 8, 5, 12]


Invert decision for 12 at level 6


New level: 7
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 25, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11, 6, 15, 14, 24, 26, 17]
 solution : [0, 8, 5]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 25, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11, 6, 15, 14, 24, 26, 17]
 solution : [0, 8, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 8), (11, 128), (12, -1), (13, 16), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 256), (22, 32), (23, 128), (24, -1), (25, 16), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 16), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 32), (43, 256), (44, 256), (45, 64), (46, 32), (47, 16), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 64), (54, 128), (55, 256), (56, 16), (57, 32), (58, 32), (59, 32), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, -1), (13, 512), (14, 512), (15, 512), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 7 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 25, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11, 6, 15, 14, 24, 26, 17]
 solution : [0, 8, 5]


Solution : [0, 8, 5] has cost 12.


Decide in level 7 among pending : [47, 46, 35, 29, 28, 36, 52, 58, 25, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 13, 11, 6, 15, 14, 24, 26, 17]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, -1), (13, 512), (14, 512), (15, 512), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 13 with phase True at level 7

After decision at level 7
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 25, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 6, 15, 14, 24, 26, 17]
 solution : [0, 8, 5, 13]


New level: 8
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 25, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 6, 15, 14, 24, 26, 17]
 solution : [0, 8, 5, 13]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 25, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 10, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 6, 15, 14, 24, 26, 17]
 solution : [0, 8, 5, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, -1), (13, 512), (14, 512), (15, 512), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, 0), (11, 64), (12, -1), (13, -1), (14, 256), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, 0), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 16), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 8 : {25, 10}

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 6, 15, 14, 24, 26, 17]
 solution : [0, 8, 5, 13]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 6, 15, 14, 24, 26, 17]
 solution : [0, 8, 5, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, 0), (11, 64), (12, -1), (13, -1), (14, 256), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, 0), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 16), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, -1), (11, 64), (12, -1), (13, -1), (14, 256), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 16), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 8 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 6, 15, 14, 24, 26, 17]
 solution : [0, 8, 5, 13]


Solution : [0, 8, 5, 13] has cost 18.


Decide in level 8 among pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 6, 15, 14, 24, 26, 17]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, -1), (11, 64), (12, -1), (13, -1), (14, 256), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 16), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 17 with phase True at level 8

After decision at level 8
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 6, 15, 14, 24, 26]
 solution : [0, 8, 5, 13, 17]


New level: 9
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 6, 15, 14, 24, 26]
 solution : [0, 8, 5, 13, 17]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 6, 15, 14, 24, 26]
 solution : [0, 8, 5, 13, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, -1), (11, 64), (12, -1), (13, -1), (14, 256), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 16), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, -1), (6, 0), (7, 32), (8, -1), (9, 64), (10, -1), (11, 64), (12, -1), (13, -1), (14, 32), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, 0), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 64), (42, 64), (43, 256), (44, 32), (45, 32), (46, 256), (47, 16), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 32), (55, 32), (56, 32), (57, 32), (58, 256), (59, 32), (60, 32), (61, 256)]

Covered at level 9 : {26, 6, 15}

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 14, 24]
 solution : [0, 8, 5, 13, 17]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 14, 24]
 solution : [0, 8, 5, 13, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, -1), (6, 0), (7, 32), (8, -1), (9, 64), (10, -1), (11, 64), (12, -1), (13, -1), (14, 32), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, 0), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 64), (42, 64), (43, 256), (44, 32), (45, 32), (46, 256), (47, 16), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 32), (55, 32), (56, 32), (57, 32), (58, 256), (59, 32), (60, 32), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, 64), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 64), (42, 64), (43, 256), (44, 32), (45, 32), (46, 256), (47, 16), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 32), (55, 32), (56, 32), (57, 32), (58, 256), (59, 32), (60, 32), (61, 256)]

Covered at level 9 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 14, 24]
 solution : [0, 8, 5, 13, 17]


Solution : [0, 8, 5, 13, 17] has cost 24.


Before backtrack at level 9
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 14, 24]
 solution : [0, 8, 5, 13, 17]

After backtrack at level 9
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 14, 24, 6, 15, 26]
 solution : [0, 8, 5, 13, 17]


Invert decision for 17 at level 8


New level: 9
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 14, 24, 6, 15, 26]
 solution : [0, 8, 5, 13]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 14, 24, 6, 15, 26]
 solution : [0, 8, 5, 13]

Essensial at level 9 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, -1), (6, -1), (7, 32), (8, -1), (9, 64), (10, -1), (11, 64), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 64), (42, 64), (43, 256), (44, 32), (45, 32), (46, 256), (47, 16), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 32), (55, 32), (56, 32), (57, 32), (58, 256), (59, 32), (60, 32), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, -1), (11, 64), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, 0), (27, 64), (28, 8), (29, 64), (30, 128), (31, 16), (32, 128), (33, 128), (34, 64), (35, 128), (36, 128), (37, 64), (38, 256), (39, 32), (40, 128), (41, 256), (42, 64), (43, 256), (44, 128), (45, 32), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 128), (53, 32), (54, 256), (55, 256), (56, 32), (57, 32), (58, 256), (59, 64), (60, 128), (61, 256)]

Covered at level 9 : {26}

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 14, 24, 6]
 solution : [0, 8, 5, 13, 15]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 14, 24, 6]
 solution : [0, 8, 5, 13, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, -1), (11, 64), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, 0), (27, 64), (28, 8), (29, 64), (30, 128), (31, 16), (32, 128), (33, 128), (34, 64), (35, 128), (36, 128), (37, 64), (38, 256), (39, 32), (40, 128), (41, 256), (42, 64), (43, 256), (44, 128), (45, 32), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 128), (53, 32), (54, 256), (55, 256), (56, 32), (57, 32), (58, 256), (59, 64), (60, 128), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, -1), (11, 64), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 64), (28, 8), (29, 64), (30, 128), (31, 16), (32, 128), (33, 128), (34, 64), (35, 128), (36, 128), (37, 64), (38, 256), (39, 32), (40, 128), (41, 256), (42, 64), (43, 256), (44, 128), (45, 32), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 128), (53, 32), (54, 256), (55, 256), (56, 32), (57, 32), (58, 256), (59, 64), (60, 128), (61, 256)]

Covered at level 9 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 14, 24, 6]
 solution : [0, 8, 5, 13, 15]


Solution : [0, 8, 5, 13, 15] has cost 24.


Before backtrack at level 9
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 14, 24, 6]
 solution : [0, 8, 5, 13, 15]

After backtrack at level 9
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 14, 24, 6, 15, 26]
 solution : [0, 8, 5, 13]


Before backtrack at level 8
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 14, 24, 6, 15, 26]
 solution : [0, 8, 5, 13]

After backtrack at level 8
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 14, 24, 6, 15, 26, 25, 10, 17]
 solution : [0, 8, 5, 13]


Invert decision for 13 at level 7


New level: 8
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 14, 24, 6, 15, 26, 25, 10, 17]
 solution : [0, 8, 5]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 14, 24, 6, 15, 26, 25, 10, 17]
 solution : [0, 8, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 32), (8, -1), (9, 64), (10, -1), (11, 64), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 64), (28, 8), (29, 64), (30, 128), (31, 16), (32, 128), (33, 128), (34, 64), (35, 128), (36, 128), (37, 64), (38, 256), (39, 32), (40, 128), (41, 256), (42, 64), (43, 256), (44, 128), (45, 32), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 128), (53, 32), (54, 256), (55, 256), (56, 32), (57, 32), (58, 256), (59, 64), (60, 128), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, -1), (13, -1), (14, 512), (15, 512), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 8 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 14, 24, 6, 15, 26, 25, 10, 17]
 solution : [0, 8, 5]


Solution : [0, 8, 5] has cost 12.


Decide in level 8 among pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 11, 14, 24, 6, 15, 26, 25, 10, 17]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, -1), (13, -1), (14, 512), (15, 512), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 11 with phase True at level 8

After decision at level 8
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 14, 24, 6, 15, 26, 25, 10, 17]
 solution : [0, 8, 5, 11]


New level: 9
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 14, 24, 6, 15, 26, 25, 10, 17]
 solution : [0, 8, 5, 11]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 14, 24, 6, 15, 26, 25, 10, 17]
 solution : [0, 8, 5, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 128), (11, 512), (12, -1), (13, -1), (14, 512), (15, 512), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, 128), (10, 16), (11, -1), (12, -1), (13, -1), (14, 512), (15, 512), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 16), (22, 256), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 64), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 128), (55, 256), (56, 128), (57, 256), (58, 128), (59, 128), (60, 256), (61, 256)]

Covered at level 9 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 14, 24, 6, 15, 26, 25, 10, 17]
 solution : [0, 8, 5, 11]


Solution : [0, 8, 5, 11] has cost 18.


Decide in level 9 among pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 14, 24, 6, 15, 26, 25, 10, 17]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, 128), (10, 16), (11, -1), (12, -1), (13, -1), (14, 512), (15, 512), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 16), (22, 256), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 64), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 128), (55, 256), (56, 128), (57, 256), (58, 128), (59, 128), (60, 256), (61, 256)]

Decide 14 with phase True at level 9

After decision at level 9
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 24, 6, 15, 26, 25, 10, 17]
 solution : [0, 8, 5, 11, 14]


New level: 10
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 24, 6, 15, 26, 25, 10, 17]
 solution : [0, 8, 5, 11, 14]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 24, 6, 15, 26, 25, 10, 17]
 solution : [0, 8, 5, 11, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, 128), (10, 16), (11, -1), (12, -1), (13, -1), (14, 512), (15, 512), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 16), (22, 256), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 64), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 128), (55, 256), (56, 128), (57, 256), (58, 128), (59, 128), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, 128), (10, 16), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 4), (22, 32), (23, 128), (24, 0), (25, 8), (26, 64), (27, 256), (28, 16), (29, 128), (30, 128), (31, 32), (32, 128), (33, 32), (34, 128), (35, 128), (36, 128), (37, 128), (38, 16), (39, 256), (40, 128), (41, 256), (42, 64), (43, 256), (44, 128), (45, 64), (46, 32), (47, 8), (48, 256), (49, 256), (50, 64), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 64), (58, 64), (59, 128), (60, 256), (61, 64)]

Covered at level 10 : {24}

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 6, 15, 26, 25, 10, 17]
 solution : [0, 8, 5, 11, 14]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 6, 15, 26, 25, 10, 17]
 solution : [0, 8, 5, 11, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, 128), (10, 16), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 4), (22, 32), (23, 128), (24, 0), (25, 8), (26, 64), (27, 256), (28, 16), (29, 128), (30, 128), (31, 32), (32, 128), (33, 32), (34, 128), (35, 128), (36, 128), (37, 128), (38, 16), (39, 256), (40, 128), (41, 256), (42, 64), (43, 256), (44, 128), (45, 64), (46, 32), (47, 8), (48, 256), (49, 256), (50, 64), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 64), (58, 64), (59, 128), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, 128), (10, 16), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 4), (22, 32), (23, 128), (24, -1), (25, 8), (26, 64), (27, 256), (28, 16), (29, 128), (30, 128), (31, 32), (32, 128), (33, 32), (34, 128), (35, 128), (36, 128), (37, 128), (38, 16), (39, 256), (40, 128), (41, 256), (42, 64), (43, 256), (44, 128), (45, 64), (46, 32), (47, 8), (48, 256), (49, 256), (50, 64), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 64), (58, 64), (59, 128), (60, 256), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 6, 15, 26, 25, 10, 17]
 solution : [0, 8, 5, 11, 14]


Solution : [0, 8, 5, 11, 14] has cost 24.


Before backtrack at level 10
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 6, 15, 26, 25, 10, 17]
 solution : [0, 8, 5, 11, 14]

After backtrack at level 10
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 6, 15, 26, 25, 10, 17, 24]
 solution : [0, 8, 5, 11, 14]


Invert decision for 14 at level 9


New level: 10
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 6, 15, 26, 25, 10, 17, 24]
 solution : [0, 8, 5, 11]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 21, 9, 2, 48, 20, 49, 56, 3, 43, 60, 51, 42, 57, 59, 40, 45, 53, 6, 15, 26, 25, 10, 17, 24]
 solution : [0, 8, 5, 11]

Essensial at level 10 : {24, 15}

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, 128), (10, 16), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 4), (22, 32), (23, 128), (24, -1), (25, 8), (26, 64), (27, 256), (28, 16), (29, 128), (30, 128), (31, 32), (32, 128), (33, 32), (34, 128), (35, 128), (36, 128), (37, 128), (38, 16), (39, 256), (40, 128), (41, 256), (42, 64), (43, 256), (44, 128), (45, 64), (46, 32), (47, 8), (48, 256), (49, 256), (50, 64), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 64), (58, 64), (59, 128), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 256), (4, 128), (5, -1), (6, 64), (7, 16), (8, -1), (9, 16), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, 0), (22, 32), (23, 4), (24, -1), (25, 0), (26, 0), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 128), (36, 128), (37, 1), (38, 128), (39, 32), (40, 4), (41, 256), (42, 4), (43, 256), (44, 4), (45, 0), (46, 128), (47, 2), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 8), (54, 4), (55, 256), (56, 0), (57, 8), (58, 16), (59, 4), (60, 128), (61, 256)]

Covered at level 10 : {10, 45, 21, 56, 25, 26}

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 6, 17]
 solution : [0, 8, 5, 11, 24, 15]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 6, 17]
 solution : [0, 8, 5, 11, 24, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 256), (4, 128), (5, -1), (6, 64), (7, 16), (8, -1), (9, 16), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, 0), (22, 32), (23, 4), (24, -1), (25, 0), (26, 0), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 128), (36, 128), (37, 1), (38, 128), (39, 32), (40, 4), (41, 256), (42, 4), (43, 256), (44, 4), (45, 0), (46, 128), (47, 2), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 8), (54, 4), (55, 256), (56, 0), (57, 8), (58, 16), (59, 4), (60, 128), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 256), (4, 128), (5, -1), (6, 64), (7, 16), (8, -1), (9, 16), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 32), (23, 4), (24, -1), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 128), (36, 128), (37, 1), (38, 128), (39, 32), (40, 4), (41, 256), (42, 4), (43, 256), (44, 4), (45, -1), (46, 128), (47, 2), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 8), (54, 4), (55, 256), (56, -1), (57, 8), (58, 16), (59, 4), (60, 128), (61, 256)]

Covered at level 10 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 6, 17]
 solution : [0, 8, 5, 11, 24, 15]


Solution : [0, 8, 5, 11, 24, 15] has cost 34.


Before backtrack at level 10
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 6, 17]
 solution : [0, 8, 5, 11, 24, 15]

After backtrack at level 10
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 6, 17, 15, 24, 21, 56, 45, 26, 25, 10]
 solution : [0, 8, 5, 11]


Before backtrack at level 9
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 6, 17, 15, 24, 21, 56, 45, 26, 25, 10]
 solution : [0, 8, 5, 11]

After backtrack at level 9
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 6, 17, 15, 24, 21, 56, 45, 26, 25, 10, 14]
 solution : [0, 8, 5, 11]


Invert decision for 11 at level 8


New level: 9
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 6, 17, 15, 24, 21, 56, 45, 26, 25, 10, 14]
 solution : [0, 8, 5]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 6, 17, 15, 24, 21, 56, 45, 26, 25, 10, 14]
 solution : [0, 8, 5]

Essensial at level 9 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 256), (4, 128), (5, -1), (6, 64), (7, 16), (8, -1), (9, 16), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 32), (23, 4), (24, -1), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 128), (36, 128), (37, 1), (38, 128), (39, 32), (40, 4), (41, 256), (42, 4), (43, 256), (44, 4), (45, -1), (46, 128), (47, 2), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 8), (54, 4), (55, 256), (56, -1), (57, 8), (58, 16), (59, 4), (60, 128), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 64), (23, 256), (24, 0), (25, 16), (26, 64), (27, 256), (28, 16), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 128), (35, 128), (36, 128), (37, 256), (38, 16), (39, 256), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 128), (46, 32), (47, 16), (48, 256), (49, 256), (50, 64), (51, 256), (52, 128), (53, 256), (54, 256), (55, 256), (56, 128), (57, 64), (58, 128), (59, 256), (60, 256), (61, 64)]

Covered at level 9 : {24}

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 6, 17, 15, 21, 56, 45, 26, 25, 10]
 solution : [0, 8, 5, 14]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 6, 17, 15, 21, 56, 45, 26, 25, 10]
 solution : [0, 8, 5, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 64), (23, 256), (24, 0), (25, 16), (26, 64), (27, 256), (28, 16), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 128), (35, 128), (36, 128), (37, 256), (38, 16), (39, 256), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 128), (46, 32), (47, 16), (48, 256), (49, 256), (50, 64), (51, 256), (52, 128), (53, 256), (54, 256), (55, 256), (56, 128), (57, 64), (58, 128), (59, 256), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 64), (23, 256), (24, -1), (25, 16), (26, 64), (27, 256), (28, 16), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 128), (35, 128), (36, 128), (37, 256), (38, 16), (39, 256), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 128), (46, 32), (47, 16), (48, 256), (49, 256), (50, 64), (51, 256), (52, 128), (53, 256), (54, 256), (55, 256), (56, 128), (57, 64), (58, 128), (59, 256), (60, 256), (61, 64)]

Covered at level 9 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 6, 17, 15, 21, 56, 45, 26, 25, 10]
 solution : [0, 8, 5, 14]


Solution : [0, 8, 5, 14] has cost 18.


Decide in level 9 among pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 6, 17, 15, 21, 56, 45, 26, 25, 10]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 64), (23, 256), (24, -1), (25, 16), (26, 64), (27, 256), (28, 16), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 128), (35, 128), (36, 128), (37, 256), (38, 16), (39, 256), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 128), (46, 32), (47, 16), (48, 256), (49, 256), (50, 64), (51, 256), (52, 128), (53, 256), (54, 256), (55, 256), (56, 128), (57, 64), (58, 128), (59, 256), (60, 256), (61, 64)]

Decide 17 with phase True at level 9

After decision at level 9
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 6, 15, 21, 56, 45, 26, 25, 10]
 solution : [0, 8, 5, 14, 17]


New level: 10
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 6, 15, 21, 56, 45, 26, 25, 10]
 solution : [0, 8, 5, 14, 17]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 6, 15, 21, 56, 45, 26, 25, 10]
 solution : [0, 8, 5, 14, 17]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 64), (23, 256), (24, -1), (25, 16), (26, 64), (27, 256), (28, 16), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 128), (35, 128), (36, 128), (37, 256), (38, 16), (39, 256), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 128), (46, 32), (47, 16), (48, 256), (49, 256), (50, 64), (51, 256), (52, 128), (53, 256), (54, 256), (55, 256), (56, 128), (57, 64), (58, 128), (59, 256), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, -1), (6, 0), (7, 128), (8, -1), (9, 256), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 256), (24, -1), (25, 16), (26, 8), (27, 64), (28, 4), (29, 256), (30, 128), (31, 16), (32, 16), (33, 16), (34, 16), (35, 128), (36, 128), (37, 256), (38, 4), (39, 64), (40, 256), (41, 32), (42, 32), (43, 256), (44, 128), (45, 128), (46, 16), (47, 16), (48, 16), (49, 256), (50, 32), (51, 32), (52, 128), (53, 32), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 32), (60, 32), (61, 32)]

Covered at level 10 : {6}

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 15, 21, 56, 45, 26, 25, 10]
 solution : [0, 8, 5, 14, 17]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 15, 21, 56, 45, 26, 25, 10]
 solution : [0, 8, 5, 14, 17]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, -1), (6, 0), (7, 128), (8, -1), (9, 256), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 256), (24, -1), (25, 16), (26, 8), (27, 64), (28, 4), (29, 256), (30, 128), (31, 16), (32, 16), (33, 16), (34, 16), (35, 128), (36, 128), (37, 256), (38, 4), (39, 64), (40, 256), (41, 32), (42, 32), (43, 256), (44, 128), (45, 128), (46, 16), (47, 16), (48, 16), (49, 256), (50, 32), (51, 32), (52, 128), (53, 32), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, -1), (6, -1), (7, 128), (8, -1), (9, 256), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 256), (24, -1), (25, 16), (26, 8), (27, 64), (28, 4), (29, 256), (30, 128), (31, 16), (32, 16), (33, 16), (34, 16), (35, 128), (36, 128), (37, 256), (38, 4), (39, 64), (40, 256), (41, 32), (42, 32), (43, 256), (44, 128), (45, 128), (46, 16), (47, 16), (48, 16), (49, 256), (50, 32), (51, 32), (52, 128), (53, 32), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 32), (60, 32), (61, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 15, 21, 56, 45, 26, 25, 10]
 solution : [0, 8, 5, 14, 17]


Solution : [0, 8, 5, 14, 17] has cost 24.


Before backtrack at level 10
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 15, 21, 56, 45, 26, 25, 10]
 solution : [0, 8, 5, 14, 17]

After backtrack at level 10
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 15, 21, 56, 45, 26, 25, 10, 6]
 solution : [0, 8, 5, 14, 17]


Invert decision for 17 at level 9


New level: 10
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 15, 21, 56, 45, 26, 25, 10, 6]
 solution : [0, 8, 5, 14]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 15, 21, 56, 45, 26, 25, 10, 6]
 solution : [0, 8, 5, 14]

Essensial at level 10 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, 64), (5, -1), (6, -1), (7, 128), (8, -1), (9, 256), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 256), (24, -1), (25, 16), (26, 8), (27, 64), (28, 4), (29, 256), (30, 128), (31, 16), (32, 16), (33, 16), (34, 16), (35, 128), (36, 128), (37, 256), (38, 4), (39, 64), (40, 256), (41, 32), (42, 32), (43, 256), (44, 128), (45, 128), (46, 16), (47, 16), (48, 16), (49, 256), (50, 32), (51, 32), (52, 128), (53, 32), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 16), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 256), (22, 64), (23, 256), (24, -1), (25, 8), (26, 0), (27, 64), (28, 8), (29, 256), (30, 128), (31, 16), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 32), (43, 256), (44, 256), (45, 64), (46, 32), (47, 16), (48, 64), (49, 256), (50, 64), (51, 128), (52, 128), (53, 64), (54, 256), (55, 256), (56, 64), (57, 32), (58, 128), (59, 64), (60, 128), (61, 64)]

Covered at level 10 : {26}

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6]
 solution : [0, 8, 5, 14, 15]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6]
 solution : [0, 8, 5, 14, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 16), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 256), (22, 64), (23, 256), (24, -1), (25, 8), (26, 0), (27, 64), (28, 8), (29, 256), (30, 128), (31, 16), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 32), (43, 256), (44, 256), (45, 64), (46, 32), (47, 16), (48, 64), (49, 256), (50, 64), (51, 128), (52, 128), (53, 64), (54, 256), (55, 256), (56, 64), (57, 32), (58, 128), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 16), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 256), (22, 64), (23, 256), (24, -1), (25, 8), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 16), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 32), (43, 256), (44, 256), (45, 64), (46, 32), (47, 16), (48, 64), (49, 256), (50, 64), (51, 128), (52, 128), (53, 64), (54, 256), (55, 256), (56, 64), (57, 32), (58, 128), (59, 64), (60, 128), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6]
 solution : [0, 8, 5, 14, 15]


Solution : [0, 8, 5, 14, 15] has cost 24.


Before backtrack at level 10
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6]
 solution : [0, 8, 5, 14, 15]

After backtrack at level 10
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26]
 solution : [0, 8, 5, 14]


Before backtrack at level 9
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26]
 solution : [0, 8, 5, 14]

After backtrack at level 9
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17]
 solution : [0, 8, 5]


Before backtrack at level 8
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17]
 solution : [0, 8, 5]

After backtrack at level 8
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17, 11]
 solution : [0, 8, 5]


Before backtrack at level 7
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17, 11]
 solution : [0, 8, 5]

After backtrack at level 7
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17, 11, 13]
 solution : [0, 8, 5]


Before backtrack at level 6
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17, 11, 13]
 solution : [0, 8, 5]

After backtrack at level 6
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17, 11, 13, 12]
 solution : [0, 8, 5]


Before backtrack at level 5
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17, 11, 13, 12]
 solution : [0, 8, 5]

After backtrack at level 5
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17, 11, 13, 12, 16]
 solution : [0, 8, 5]


Before backtrack at level 4
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17, 11, 13, 12, 16]
 solution : [0, 8, 5]

After backtrack at level 4
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17, 11, 13, 12, 16, 19]
 solution : [0, 8, 5]


Before backtrack at level 3
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17, 11, 13, 12, 16, 19]
 solution : [0, 8, 5]

After backtrack at level 3
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8, 5]


Invert decision for 5 at level 2


New level: 3
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 256), (10, 16), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 256), (22, 64), (23, 256), (24, -1), (25, 8), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 16), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 32), (43, 256), (44, 256), (45, 64), (46, 32), (47, 16), (48, 64), (49, 256), (50, 64), (51, 128), (52, 128), (53, 64), (54, 256), (55, 256), (56, 64), (57, 32), (58, 128), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 3 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8]


Solution : [0, 8] has cost 7.


Decide in level 3 among pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 9, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]

Coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 9 with phase True at level 3

After decision at level 3
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8, 9]


New level: 4
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8, 9]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 7, 33, 44, 22, 38, 34, 4, 32, 39, 37, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 10, 6, 15, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8, 9]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 512), (7, 0), (8, -1), (9, -1), (10, 0), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Covered at level 4 : {10, 7}

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 33, 44, 22, 38, 34, 4, 32, 39, 37, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 6, 15, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8, 9]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 33, 44, 22, 38, 34, 4, 32, 39, 37, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 6, 15, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8, 9]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 512), (7, 0), (8, -1), (9, -1), (10, 0), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 512), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Covered at level 4 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 33, 44, 22, 38, 34, 4, 32, 39, 37, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 6, 15, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8, 9]


Solution : [0, 8, 9] has cost 13.


Decide in level 4 among pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 33, 44, 22, 38, 34, 4, 32, 39, 37, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 6, 15, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 512), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Decide 6 with phase True at level 4

After decision at level 4
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 33, 44, 22, 38, 34, 4, 32, 39, 37, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 15, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8, 9, 6]


New level: 5
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 33, 44, 22, 38, 34, 4, 32, 39, 37, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 15, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8, 9, 6]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 33, 44, 22, 38, 34, 4, 32, 39, 37, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 15, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8, 9, 6]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 512), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Covered at level 5 : set()

After reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 33, 44, 22, 38, 34, 4, 32, 39, 37, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 15, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8, 9, 6]


Solution : [0, 8, 9, 6] has cost 15.


Decide in level 5 among pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 33, 44, 22, 38, 34, 4, 32, 39, 37, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 15, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Decide 15 with phase True at level 5

After decision at level 5
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 33, 44, 22, 38, 34, 4, 32, 39, 37, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8, 9, 6, 15]


New level: 6
 pending : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 33, 44, 22, 38, 34, 4, 32, 39, 37, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8, 9, 6, 15]


Before reduction : 
 pending  : [47, 46, 35, 29, 28, 36, 52, 58, 31, 55, 41, 23, 30, 27, 50, 54, 61, 33, 44, 22, 38, 34, 4, 32, 39, 37, 2, 48, 20, 49, 3, 43, 60, 51, 42, 57, 59, 40, 53, 21, 56, 45, 25, 26, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8, 9, 6, 15]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 64), (14, 256), (15, -1), (16, 256), (17, 256), (18, 512), (19, 512), (20, 0), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, 0), (27, 0), (28, 16), (29, 8), (30, 0), (31, 0), (32, 0), (33, 32), (34, 2), (35, 16), (36, 0), (37, 128), (38, 256), (39, 1), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, 0), (48, 2), (49, 0), (50, 256), (51, 2), (52, 64), (53, 0), (54, 64), (55, 0), (56, 64), (57, 0), (58, 256), (59, 32), (60, 2), (61, 32)]

Covered at level 6 : {32, 36, 47, 49, 20, 53, 55, 57, 26, 27, 30, 31}

After reduction : 
 pending  : [46, 35, 29, 28, 52, 58, 41, 23, 50, 54, 61, 33, 44, 22, 38, 34, 4, 39, 37, 2, 48, 3, 43, 60, 51, 42, 59, 40, 21, 56, 45, 25, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8, 9, 6, 15]


Before reduction : 
 pending  : [46, 35, 29, 28, 52, 58, 41, 23, 50, 54, 61, 33, 44, 22, 38, 34, 4, 39, 37, 2, 48, 3, 43, 60, 51, 42, 59, 40, 21, 56, 45, 25, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8, 9, 6, 15]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 64), (14, 256), (15, -1), (16, 256), (17, 256), (18, 512), (19, 512), (20, 0), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, 0), (27, 0), (28, 16), (29, 8), (30, 0), (31, 0), (32, 0), (33, 32), (34, 2), (35, 16), (36, 0), (37, 128), (38, 256), (39, 1), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, 0), (48, 2), (49, 0), (50, 256), (51, 2), (52, 64), (53, 0), (54, 64), (55, 0), (56, 64), (57, 0), (58, 256), (59, 32), (60, 2), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 64), (14, 256), (15, -1), (16, 256), (17, 256), (18, 512), (19, 512), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 128), (38, 256), (39, 1), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 256), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, 256), (59, 32), (60, 2), (61, 32)]

Covered at level 6 : set()

After reduction : 
 pending  : [46, 35, 29, 28, 52, 58, 41, 23, 50, 54, 61, 33, 44, 22, 38, 34, 4, 39, 37, 2, 48, 3, 43, 60, 51, 42, 59, 40, 21, 56, 45, 25, 14, 24, 17, 11, 13, 12, 16, 19, 18]
 solution : [0, 8, 9, 6, 15]


Solution : [0, 8, 9, 6, 15] has cost 21.


Decide in level 6 among pending : [46, 35, 29, 28, 52, 58, 41, 23, 50, 54, 61, 33, 44, 22, 38, 34, 4, 39, 37, 2, 48, 3, 43, 60, 51, 42, 59, 40, 21, 56, 45, 25, 14, 24, 17, 11, 13, 12, 16, 19, 18]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 64), (14, 256), (15, -1), (16, 256), (17, 256), (18, 512), (19, 512), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 128), (38, 256), (39, 1), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 256), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, 256), (59, 32), (60, 2), (61, 32)]

Decide 12 with phase True at level 6

After decision at level 6
 pending : [46, 35, 29, 28, 52, 58, 41, 23, 50, 54, 61, 33, 44, 22, 38, 34, 4, 39, 37, 2, 48, 3, 43, 60, 51, 42, 59, 40, 21, 56, 45, 25, 14, 24, 17, 11, 13, 16, 19, 18]
 solution : [0, 8, 9, 6, 15, 12]


New level: 7
 pending : [46, 35, 29, 28, 52, 58, 41, 23, 50, 54, 61, 33, 44, 22, 38, 34, 4, 39, 37, 2, 48, 3, 43, 60, 51, 42, 59, 40, 21, 56, 45, 25, 14, 24, 17, 11, 13, 16, 19, 18]
 solution : [0, 8, 9, 6, 15, 12]


Before reduction : 
 pending  : [46, 35, 29, 28, 52, 58, 41, 23, 50, 54, 61, 33, 44, 22, 38, 34, 4, 39, 37, 2, 48, 3, 43, 60, 51, 42, 59, 40, 21, 56, 45, 25, 14, 24, 17, 11, 13, 16, 19, 18]
 solution : [0, 8, 9, 6, 15, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 64), (14, 256), (15, -1), (16, 256), (17, 256), (18, 512), (19, 512), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 128), (38, 256), (39, 1), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 256), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, 256), (59, 32), (60, 2), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, 0), (15, -1), (16, 2), (17, 256), (18, 1), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, 2), (34, 2), (35, 1), (36, -1), (37, 0), (38, 1), (39, 1), (40, 0), (41, 256), (42, 0), (43, 256), (44, 0), (45, 0), (46, 2), (47, -1), (48, 2), (49, -1), (50, 2), (51, 2), (52, 0), (53, -1), (54, 0), (55, -1), (56, 0), (57, -1), (58, 0), (59, 0), (60, 2), (61, 2)]

Covered at level 7 : {2, 11, 13, 14, 19, 21, 22, 23, 24, 25, 28, 29, 37, 40, 42, 44, 45, 52, 54, 56, 58, 59}

After reduction : 
 pending  : [46, 35, 41, 50, 61, 33, 38, 34, 4, 39, 48, 3, 43, 60, 51, 17, 16, 18]
 solution : [0, 8, 9, 6, 15, 12]


Before reduction : 
 pending  : [46, 35, 41, 50, 61, 33, 38, 34, 4, 39, 48, 3, 43, 60, 51, 17, 16, 18]
 solution : [0, 8, 9, 6, 15, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, 0), (15, -1), (16, 2), (17, 256), (18, 1), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, 2), (34, 2), (35, 1), (36, -1), (37, 0), (38, 1), (39, 1), (40, 0), (41, 256), (42, 0), (43, 256), (44, 0), (45, 0), (46, 2), (47, -1), (48, 2), (49, -1), (50, 2), (51, 2), (52, 0), (53, -1), (54, 0), (55, -1), (56, 0), (57, -1), (58, 0), (59, 0), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 256), (18, 1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, 2), (35, 1), (36, -1), (37, -1), (38, 1), (39, 1), (40, -1), (41, 256), (42, -1), (43, 256), (44, -1), (45, -1), (46, 2), (47, -1), (48, 2), (49, -1), (50, 2), (51, 2), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, 2), (61, 2)]

Covered at level 7 : set()

After reduction : 
 pending  : [46, 35, 41, 50, 61, 33, 38, 34, 4, 39, 48, 3, 43, 60, 51, 17, 16, 18]
 solution : [0, 8, 9, 6, 15, 12]


Solution : [0, 8, 9, 6, 15, 12] has cost 27.


Before backtrack at level 7
 pending : [46, 35, 41, 50, 61, 33, 38, 34, 4, 39, 48, 3, 43, 60, 51, 17, 16, 18]
 solution : [0, 8, 9, 6, 15, 12]

After backtrack at level 7
 pending : [46, 35, 41, 50, 61, 33, 38, 34, 4, 39, 48, 3, 43, 60, 51, 17, 16, 18, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 42, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19]
 solution : [0, 8, 9, 6, 15, 12]


Invert decision for 12 at level 6


New level: 7
 pending : [46, 35, 41, 50, 61, 33, 38, 34, 4, 39, 48, 3, 43, 60, 51, 17, 16, 18, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 42, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19]
 solution : [0, 8, 9, 6, 15]


Before reduction : 
 pending  : [46, 35, 41, 50, 61, 33, 38, 34, 4, 39, 48, 3, 43, 60, 51, 17, 16, 18, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 42, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19]
 solution : [0, 8, 9, 6, 15]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 256), (18, 1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, 2), (35, 1), (36, -1), (37, -1), (38, 1), (39, 1), (40, -1), (41, 256), (42, -1), (43, 256), (44, -1), (45, -1), (46, 2), (47, -1), (48, 2), (49, -1), (50, 2), (51, 2), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 256), (17, 256), (18, 512), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 32), (38, 256), (39, 1), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 256), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, 256), (59, 32), (60, 2), (61, 32)]

Covered at level 7 : set()

After reduction : 
 pending  : [46, 35, 41, 50, 61, 33, 38, 34, 4, 39, 48, 3, 43, 60, 51, 17, 16, 18, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 42, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19]
 solution : [0, 8, 9, 6, 15]


Solution : [0, 8, 9, 6, 15] has cost 21.


Decide in level 7 among pending : [46, 35, 41, 50, 61, 33, 38, 34, 4, 39, 48, 3, 43, 60, 51, 17, 16, 18, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 42, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 256), (17, 256), (18, 512), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 32), (38, 256), (39, 1), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 256), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, 256), (59, 32), (60, 2), (61, 32)]

Decide 18 with phase True at level 7

After decision at level 7
 pending : [46, 35, 41, 50, 61, 33, 38, 34, 4, 39, 48, 3, 43, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 42, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19]
 solution : [0, 8, 9, 6, 15, 18]


New level: 8
 pending : [46, 35, 41, 50, 61, 33, 38, 34, 4, 39, 48, 3, 43, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 42, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19]
 solution : [0, 8, 9, 6, 15, 18]


Before reduction : 
 pending  : [46, 35, 41, 50, 61, 33, 38, 34, 4, 39, 48, 3, 43, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 42, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19]
 solution : [0, 8, 9, 6, 15, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 256), (17, 256), (18, 512), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 32), (38, 256), (39, 1), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 256), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, 256), (59, 32), (60, 2), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 1), (20, -1), (21, 16), (22, 64), (23, 16), (24, 64), (25, 16), (26, -1), (27, -1), (28, 8), (29, 4), (30, -1), (31, -1), (32, -1), (33, 16), (34, 1), (35, 0), (36, -1), (37, 4), (38, 16), (39, 0), (40, 8), (41, 0), (42, 0), (43, 0), (44, 2), (45, 8), (46, 16), (47, -1), (48, 1), (49, -1), (50, 128), (51, 1), (52, 32), (53, -1), (54, 32), (55, -1), (56, 32), (57, -1), (58, 64), (59, 8), (60, 1), (61, 16)]

Covered at level 8 : {35, 39, 41, 42, 43}

After reduction : 
 pending  : [46, 50, 61, 33, 38, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19]
 solution : [0, 8, 9, 6, 15, 18]


Before reduction : 
 pending  : [46, 50, 61, 33, 38, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19]
 solution : [0, 8, 9, 6, 15, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 1), (20, -1), (21, 16), (22, 64), (23, 16), (24, 64), (25, 16), (26, -1), (27, -1), (28, 8), (29, 4), (30, -1), (31, -1), (32, -1), (33, 16), (34, 1), (35, 0), (36, -1), (37, 4), (38, 16), (39, 0), (40, 8), (41, 0), (42, 0), (43, 0), (44, 2), (45, 8), (46, 16), (47, -1), (48, 1), (49, -1), (50, 128), (51, 1), (52, 32), (53, -1), (54, 32), (55, -1), (56, 32), (57, -1), (58, 64), (59, 8), (60, 1), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 1), (20, -1), (21, 16), (22, 64), (23, 16), (24, 64), (25, 16), (26, -1), (27, -1), (28, 8), (29, 4), (30, -1), (31, -1), (32, -1), (33, 16), (34, 1), (35, -1), (36, -1), (37, 4), (38, 16), (39, -1), (40, 8), (41, -1), (42, -1), (43, -1), (44, 2), (45, 8), (46, 16), (47, -1), (48, 1), (49, -1), (50, 32), (51, 1), (52, 32), (53, -1), (54, 32), (55, -1), (56, 32), (57, -1), (58, 64), (59, 8), (60, 1), (61, 16)]

Covered at level 8 : set()

After reduction : 
 pending  : [46, 50, 61, 33, 38, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19]
 solution : [0, 8, 9, 6, 15, 18]


Solution : [0, 8, 9, 6, 15, 18] has cost 30.


Before backtrack at level 8
 pending : [46, 50, 61, 33, 38, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19]
 solution : [0, 8, 9, 6, 15, 18]

After backtrack at level 8
 pending : [46, 50, 61, 33, 38, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19, 35, 41, 39, 43, 42]
 solution : [0, 8, 9, 6, 15, 18]


Invert decision for 18 at level 7


New level: 8
 pending : [46, 50, 61, 33, 38, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19, 35, 41, 39, 43, 42]
 solution : [0, 8, 9, 6, 15]


Before reduction : 
 pending  : [46, 50, 61, 33, 38, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19, 35, 41, 39, 43, 42]
 solution : [0, 8, 9, 6, 15]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 1), (20, -1), (21, 16), (22, 64), (23, 16), (24, 64), (25, 16), (26, -1), (27, -1), (28, 8), (29, 4), (30, -1), (31, -1), (32, -1), (33, 16), (34, 1), (35, -1), (36, -1), (37, 4), (38, 16), (39, -1), (40, 8), (41, -1), (42, -1), (43, -1), (44, 2), (45, 8), (46, 16), (47, -1), (48, 1), (49, -1), (50, 32), (51, 1), (52, 32), (53, -1), (54, 32), (55, -1), (56, 32), (57, -1), (58, 64), (59, 8), (60, 1), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 32), (38, 256), (39, 1), (40, 32), (41, 128), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 64), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, 256), (59, 32), (60, 2), (61, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [46, 50, 61, 33, 38, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19, 35, 41, 39, 43, 42]
 solution : [0, 8, 9, 6, 15]


Solution : [0, 8, 9, 6, 15] has cost 21.


Decide in level 8 among pending : [46, 50, 61, 33, 38, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19, 35, 41, 39, 43, 42]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 32), (38, 256), (39, 1), (40, 32), (41, 128), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 64), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, 256), (59, 32), (60, 2), (61, 32)]

Decide 38 with phase True at level 8

After decision at level 8
 pending : [46, 50, 61, 33, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19, 35, 41, 39, 43, 42]
 solution : [0, 8, 9, 6, 15, 38]


New level: 9
 pending : [46, 50, 61, 33, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19, 35, 41, 39, 43, 42]
 solution : [0, 8, 9, 6, 15, 38]


Before reduction : 
 pending  : [46, 50, 61, 33, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 44, 22, 37, 2, 59, 40, 21, 56, 45, 25, 14, 24, 11, 13, 19, 35, 41, 39, 43, 42]
 solution : [0, 8, 9, 6, 15, 38]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 32), (38, 256), (39, 1), (40, 32), (41, 128), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 64), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, 256), (59, 32), (60, 2), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 128), (17, 256), (18, -1), (19, 8), (20, -1), (21, 8), (22, 32), (23, 8), (24, 32), (25, 8), (26, -1), (27, -1), (28, 4), (29, 2), (30, -1), (31, -1), (32, -1), (33, 16), (34, 1), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 4), (46, 16), (47, -1), (48, 1), (49, -1), (50, 32), (51, 1), (52, 64), (53, -1), (54, 16), (55, -1), (56, 64), (57, -1), (58, 256), (59, 4), (60, 1), (61, 16)]

Covered at level 9 : {35, 37, 39, 40, 41, 42, 43, 44}

After reduction : 
 pending  : [46, 50, 61, 33, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19]
 solution : [0, 8, 9, 6, 15, 38]


Before reduction : 
 pending  : [46, 50, 61, 33, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19]
 solution : [0, 8, 9, 6, 15, 38]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 128), (17, 256), (18, -1), (19, 8), (20, -1), (21, 8), (22, 32), (23, 8), (24, 32), (25, 8), (26, -1), (27, -1), (28, 4), (29, 2), (30, -1), (31, -1), (32, -1), (33, 16), (34, 1), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 4), (46, 16), (47, -1), (48, 1), (49, -1), (50, 32), (51, 1), (52, 64), (53, -1), (54, 16), (55, -1), (56, 64), (57, -1), (58, 256), (59, 4), (60, 1), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 128), (17, 256), (18, -1), (19, 8), (20, -1), (21, 8), (22, 32), (23, 8), (24, 32), (25, 8), (26, -1), (27, -1), (28, 4), (29, 2), (30, -1), (31, -1), (32, -1), (33, 16), (34, 1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, 4), (46, 16), (47, -1), (48, 1), (49, -1), (50, 8), (51, 1), (52, 64), (53, -1), (54, 16), (55, -1), (56, 64), (57, -1), (58, 256), (59, 4), (60, 1), (61, 16)]

Covered at level 9 : set()

After reduction : 
 pending  : [46, 50, 61, 33, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19]
 solution : [0, 8, 9, 6, 15, 38]


Solution : [0, 8, 9, 6, 15, 38] has cost 31.


Before backtrack at level 9
 pending : [46, 50, 61, 33, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19]
 solution : [0, 8, 9, 6, 15, 38]

After backtrack at level 9
 pending : [46, 50, 61, 33, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 39, 43, 42]
 solution : [0, 8, 9, 6, 15, 38]


Invert decision for 38 at level 8


New level: 9
 pending : [46, 50, 61, 33, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 39, 43, 42]
 solution : [0, 8, 9, 6, 15]


Before reduction : 
 pending  : [46, 50, 61, 33, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 39, 43, 42]
 solution : [0, 8, 9, 6, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 128), (17, 256), (18, -1), (19, 8), (20, -1), (21, 8), (22, 32), (23, 8), (24, 32), (25, 8), (26, -1), (27, -1), (28, 4), (29, 2), (30, -1), (31, -1), (32, -1), (33, 16), (34, 1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, 4), (46, 16), (47, -1), (48, 1), (49, -1), (50, 8), (51, 1), (52, 64), (53, -1), (54, 16), (55, -1), (56, 64), (57, -1), (58, 256), (59, 4), (60, 1), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 32), (38, -1), (39, 1), (40, 32), (41, 32), (42, 2), (43, 32), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 16), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, 256), (59, 8), (60, 2), (61, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [46, 50, 61, 33, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 39, 43, 42]
 solution : [0, 8, 9, 6, 15]


Solution : [0, 8, 9, 6, 15] has cost 21.


Decide in level 9 among pending : [46, 50, 61, 33, 34, 4, 48, 3, 60, 51, 17, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 39, 43, 42]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 32), (38, -1), (39, 1), (40, 32), (41, 32), (42, 2), (43, 32), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 16), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, 256), (59, 8), (60, 2), (61, 32)]

Decide 17 with phase True at level 9

After decision at level 9
 pending : [46, 50, 61, 33, 34, 4, 48, 3, 60, 51, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 39, 43, 42]
 solution : [0, 8, 9, 6, 15, 17]


New level: 10
 pending : [46, 50, 61, 33, 34, 4, 48, 3, 60, 51, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 39, 43, 42]
 solution : [0, 8, 9, 6, 15, 17]


Before reduction : 
 pending  : [46, 50, 61, 33, 34, 4, 48, 3, 60, 51, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 39, 43, 42]
 solution : [0, 8, 9, 6, 15, 17]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 32), (38, -1), (39, 1), (40, 32), (41, 32), (42, 2), (43, 32), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 16), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, 256), (59, 8), (60, 2), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 4), (34, 0), (35, 2), (36, -1), (37, 32), (38, -1), (39, 0), (40, 32), (41, 2), (42, 2), (43, 2), (44, 16), (45, 64), (46, 4), (47, -1), (48, 0), (49, -1), (50, 2), (51, 0), (52, 64), (53, -1), (54, 16), (55, -1), (56, 64), (57, -1), (58, 256), (59, 2), (60, 0), (61, 4)]

Covered at level 10 : {34, 3, 4, 39, 48, 51, 60}

After reduction : 
 pending  : [46, 50, 61, 33, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 43, 42]
 solution : [0, 8, 9, 6, 15, 17]


Before reduction : 
 pending  : [46, 50, 61, 33, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 43, 42]
 solution : [0, 8, 9, 6, 15, 17]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 4), (34, 0), (35, 2), (36, -1), (37, 32), (38, -1), (39, 0), (40, 32), (41, 2), (42, 2), (43, 2), (44, 16), (45, 64), (46, 4), (47, -1), (48, 0), (49, -1), (50, 2), (51, 0), (52, 64), (53, -1), (54, 16), (55, -1), (56, 64), (57, -1), (58, 256), (59, 2), (60, 0), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, 2), (36, -1), (37, 32), (38, -1), (39, -1), (40, 32), (41, 2), (42, 2), (43, 2), (44, 16), (45, 64), (46, 4), (47, -1), (48, -1), (49, -1), (50, 2), (51, -1), (52, 64), (53, -1), (54, 16), (55, -1), (56, 64), (57, -1), (58, 256), (59, 2), (60, -1), (61, 4)]

Covered at level 10 : set()

After reduction : 
 pending  : [46, 50, 61, 33, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 43, 42]
 solution : [0, 8, 9, 6, 15, 17]


Solution : [0, 8, 9, 6, 15, 17] has cost 27.


Before backtrack at level 10
 pending : [46, 50, 61, 33, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 43, 42]
 solution : [0, 8, 9, 6, 15, 17]

After backtrack at level 10
 pending : [46, 50, 61, 33, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 43, 42, 34, 4, 48, 3, 60, 51, 39]
 solution : [0, 8, 9, 6, 15, 17]


Invert decision for 17 at level 9


New level: 10
 pending : [46, 50, 61, 33, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 43, 42, 34, 4, 48, 3, 60, 51, 39]
 solution : [0, 8, 9, 6, 15]


Before reduction : 
 pending  : [46, 50, 61, 33, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 43, 42, 34, 4, 48, 3, 60, 51, 39]
 solution : [0, 8, 9, 6, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, 2), (36, -1), (37, 32), (38, -1), (39, -1), (40, 32), (41, 2), (42, 2), (43, 2), (44, 16), (45, 64), (46, 4), (47, -1), (48, -1), (49, -1), (50, 2), (51, -1), (52, 64), (53, -1), (54, 16), (55, -1), (56, 64), (57, -1), (58, 256), (59, 2), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 256), (17, -1), (18, -1), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 32), (38, -1), (39, 1), (40, 32), (41, 32), (42, 2), (43, 32), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 16), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, 256), (59, 8), (60, 2), (61, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [46, 50, 61, 33, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 43, 42, 34, 4, 48, 3, 60, 51, 39]
 solution : [0, 8, 9, 6, 15]


Solution : [0, 8, 9, 6, 15] has cost 21.


Decide in level 10 among pending : [46, 50, 61, 33, 16, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 43, 42, 34, 4, 48, 3, 60, 51, 39]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 256), (17, -1), (18, -1), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 32), (38, -1), (39, 1), (40, 32), (41, 32), (42, 2), (43, 32), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 16), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, 256), (59, 8), (60, 2), (61, 32)]

Decide 16 with phase True at level 10

After decision at level 10
 pending : [46, 50, 61, 33, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 43, 42, 34, 4, 48, 3, 60, 51, 39]
 solution : [0, 8, 9, 6, 15, 16]


New level: 11
 pending : [46, 50, 61, 33, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 43, 42, 34, 4, 48, 3, 60, 51, 39]
 solution : [0, 8, 9, 6, 15, 16]


Before reduction : 
 pending  : [46, 50, 61, 33, 29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 44, 37, 40, 35, 41, 43, 42, 34, 4, 48, 3, 60, 51, 39]
 solution : [0, 8, 9, 6, 15, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, 256), (17, -1), (18, -1), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 32), (38, -1), (39, 1), (40, 32), (41, 32), (42, 2), (43, 32), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 16), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, 256), (59, 8), (60, 2), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, 2), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 64), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8), (20, -1), (21, 16), (22, 16), (23, 32), (24, 16), (25, 16), (26, -1), (27, -1), (28, 8), (29, 8), (30, -1), (31, -1), (32, -1), (33, 0), (34, 0), (35, 0), (36, -1), (37, 8), (38, -1), (39, 0), (40, 8), (41, 0), (42, 0), (43, 0), (44, 0), (45, 16), (46, 0), (47, -1), (48, 0), (49, -1), (50, 0), (51, 0), (52, 16), (53, -1), (54, 2), (55, -1), (56, 64), (57, -1), (58, 64), (59, 1), (60, 0), (61, 0)]

Covered at level 11 : {33, 34, 35, 39, 41, 42, 43, 44, 46, 48, 50, 51, 60, 61}

After reduction : 
 pending  : [29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3]
 solution : [0, 8, 9, 6, 15, 16]


Before reduction : 
 pending  : [29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3]
 solution : [0, 8, 9, 6, 15, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, 2), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 64), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8), (20, -1), (21, 16), (22, 16), (23, 32), (24, 16), (25, 16), (26, -1), (27, -1), (28, 8), (29, 8), (30, -1), (31, -1), (32, -1), (33, 0), (34, 0), (35, 0), (36, -1), (37, 8), (38, -1), (39, 0), (40, 8), (41, 0), (42, 0), (43, 0), (44, 0), (45, 16), (46, 0), (47, -1), (48, 0), (49, -1), (50, 0), (51, 0), (52, 16), (53, -1), (54, 2), (55, -1), (56, 64), (57, -1), (58, 64), (59, 1), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, 2), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 64), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8), (20, -1), (21, 16), (22, 16), (23, 32), (24, 16), (25, 16), (26, -1), (27, -1), (28, 8), (29, 8), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 8), (38, -1), (39, -1), (40, 8), (41, -1), (42, -1), (43, -1), (44, -1), (45, 16), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 16), (53, -1), (54, 2), (55, -1), (56, 64), (57, -1), (58, 64), (59, 1), (60, -1), (61, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3]
 solution : [0, 8, 9, 6, 15, 16]


Solution : [0, 8, 9, 6, 15, 16] has cost 27.


Before backtrack at level 11
 pending : [29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3]
 solution : [0, 8, 9, 6, 15, 16]

After backtrack at level 11
 pending : [29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 42, 34, 48, 60, 51, 39]
 solution : [0, 8, 9, 6, 15, 16]


Invert decision for 16 at level 10


New level: 11
 pending : [29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 42, 34, 48, 60, 51, 39]
 solution : [0, 8, 9, 6, 15]


Before reduction : 
 pending  : [29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 42, 34, 48, 60, 51, 39]
 solution : [0, 8, 9, 6, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, 2), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 64), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8), (20, -1), (21, 16), (22, 16), (23, 32), (24, 16), (25, 16), (26, -1), (27, -1), (28, 8), (29, 8), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 8), (38, -1), (39, -1), (40, 8), (41, -1), (42, -1), (43, -1), (44, -1), (45, 16), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 16), (53, -1), (54, 2), (55, -1), (56, 64), (57, -1), (58, 64), (59, 1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 32), (38, -1), (39, 1), (40, 32), (41, 32), (42, 2), (43, 32), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 16), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, 256), (59, 8), (60, 2), (61, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 42, 34, 48, 60, 51, 39]
 solution : [0, 8, 9, 6, 15]


Solution : [0, 8, 9, 6, 15] has cost 21.


Decide in level 11 among pending : [29, 28, 52, 58, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 42, 34, 48, 60, 51, 39]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 32), (38, -1), (39, 1), (40, 32), (41, 32), (42, 2), (43, 32), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 16), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, 256), (59, 8), (60, 2), (61, 32)]

Decide 58 with phase True at level 11

After decision at level 11
 pending : [29, 28, 52, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 42, 34, 48, 60, 51, 39]
 solution : [0, 8, 9, 6, 15, 58]


New level: 12
 pending : [29, 28, 52, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 42, 34, 48, 60, 51, 39]
 solution : [0, 8, 9, 6, 15, 58]


Before reduction : 
 pending  : [29, 28, 52, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 42, 34, 48, 60, 51, 39]
 solution : [0, 8, 9, 6, 15, 58]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 32), (38, -1), (39, 1), (40, 32), (41, 32), (42, 2), (43, 32), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 16), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, 256), (59, 8), (60, 2), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, -1), (13, 32), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1), (20, -1), (21, 8), (22, 32), (23, 16), (24, 64), (25, 8), (26, -1), (27, -1), (28, 8), (29, 4), (30, -1), (31, -1), (32, -1), (33, 4), (34, 2), (35, 2), (36, -1), (37, 4), (38, -1), (39, 1), (40, 8), (41, 2), (42, 0), (43, 2), (44, 2), (45, 8), (46, 4), (47, -1), (48, 2), (49, -1), (50, 4), (51, 2), (52, 4), (53, -1), (54, 64), (55, -1), (56, 16), (57, -1), (58, -1), (59, 2), (60, 2), (61, 4)]

Covered at level 12 : {42}

After reduction : 
 pending  : [29, 28, 52, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 34, 48, 60, 51, 39]
 solution : [0, 8, 9, 6, 15, 58]


Before reduction : 
 pending  : [29, 28, 52, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 34, 48, 60, 51, 39]
 solution : [0, 8, 9, 6, 15, 58]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, -1), (13, 32), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1), (20, -1), (21, 8), (22, 32), (23, 16), (24, 64), (25, 8), (26, -1), (27, -1), (28, 8), (29, 4), (30, -1), (31, -1), (32, -1), (33, 4), (34, 2), (35, 2), (36, -1), (37, 4), (38, -1), (39, 1), (40, 8), (41, 2), (42, 0), (43, 2), (44, 2), (45, 8), (46, 4), (47, -1), (48, 2), (49, -1), (50, 4), (51, 2), (52, 4), (53, -1), (54, 64), (55, -1), (56, 16), (57, -1), (58, -1), (59, 2), (60, 2), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, -1), (13, 32), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1), (20, -1), (21, 8), (22, 32), (23, 16), (24, 64), (25, 8), (26, -1), (27, -1), (28, 8), (29, 4), (30, -1), (31, -1), (32, -1), (33, 4), (34, 2), (35, 2), (36, -1), (37, 4), (38, -1), (39, 1), (40, 8), (41, 2), (42, -1), (43, 2), (44, 2), (45, 8), (46, 4), (47, -1), (48, 2), (49, -1), (50, 4), (51, 2), (52, 4), (53, -1), (54, 64), (55, -1), (56, 16), (57, -1), (58, -1), (59, 2), (60, 2), (61, 4)]

Covered at level 12 : set()

After reduction : 
 pending  : [29, 28, 52, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 34, 48, 60, 51, 39]
 solution : [0, 8, 9, 6, 15, 58]


Solution : [0, 8, 9, 6, 15, 58] has cost 31.


Before backtrack at level 12
 pending : [29, 28, 52, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 34, 48, 60, 51, 39]
 solution : [0, 8, 9, 6, 15, 58]

After backtrack at level 12
 pending : [29, 28, 52, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 34, 48, 60, 51, 39, 42]
 solution : [0, 8, 9, 6, 15, 58]


Invert decision for 58 at level 11


New level: 12
 pending : [29, 28, 52, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 34, 48, 60, 51, 39, 42]
 solution : [0, 8, 9, 6, 15]


Before reduction : 
 pending  : [29, 28, 52, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 34, 48, 60, 51, 39, 42]
 solution : [0, 8, 9, 6, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, -1), (13, 32), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1), (20, -1), (21, 8), (22, 32), (23, 16), (24, 64), (25, 8), (26, -1), (27, -1), (28, 8), (29, 4), (30, -1), (31, -1), (32, -1), (33, 4), (34, 2), (35, 2), (36, -1), (37, 4), (38, -1), (39, 1), (40, 8), (41, 2), (42, -1), (43, 2), (44, 2), (45, 8), (46, 4), (47, -1), (48, 2), (49, -1), (50, 4), (51, 2), (52, 4), (53, -1), (54, 64), (55, -1), (56, 16), (57, -1), (58, -1), (59, 2), (60, 2), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 32), (38, -1), (39, 1), (40, 32), (41, 32), (42, 2), (43, 32), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 16), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, -1), (59, 8), (60, 2), (61, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [29, 28, 52, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 34, 48, 60, 51, 39, 42]
 solution : [0, 8, 9, 6, 15]


Solution : [0, 8, 9, 6, 15] has cost 21.


Decide in level 12 among pending : [29, 28, 52, 23, 54, 22, 2, 59, 21, 56, 45, 25, 14, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 34, 48, 60, 51, 39, 42]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 32), (38, -1), (39, 1), (40, 32), (41, 32), (42, 2), (43, 32), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 16), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, -1), (59, 8), (60, 2), (61, 32)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [29, 28, 52, 23, 54, 22, 2, 59, 21, 56, 45, 25, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 34, 48, 60, 51, 39, 42]
 solution : [0, 8, 9, 6, 15, 14]


New level: 13
 pending : [29, 28, 52, 23, 54, 22, 2, 59, 21, 56, 45, 25, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 34, 48, 60, 51, 39, 42]
 solution : [0, 8, 9, 6, 15, 14]


Before reduction : 
 pending  : [29, 28, 52, 23, 54, 22, 2, 59, 21, 56, 45, 25, 24, 11, 13, 19, 37, 40, 4, 3, 46, 50, 61, 33, 44, 35, 41, 43, 34, 48, 60, 51, 39, 42]
 solution : [0, 8, 9, 6, 15, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, -1), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 2), (35, 16), (36, -1), (37, 32), (38, -1), (39, 1), (40, 32), (41, 32), (42, 2), (43, 32), (44, 16), (45, 64), (46, 32), (47, -1), (48, 2), (49, -1), (50, 16), (51, 2), (52, 64), (53, -1), (54, 64), (55, -1), (56, 64), (57, -1), (58, -1), (59, 8), (60, 2), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, 0), (22, 0), (23, 1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, 4), (34, 2), (35, 2), (36, -1), (37, 0), (38, -1), (39, 1), (40, 0), (41, 2), (42, 0), (43, 2), (44, 0), (45, 0), (46, 4), (47, -1), (48, 2), (49, -1), (50, 4), (51, 2), (52, 0), (53, -1), (54, 16), (55, -1), (56, 2), (57, -1), (58, -1), (59, 8), (60, 2), (61, 4)]

Covered at level 13 : {37, 40, 42, 44, 45, 13, 19, 52, 21, 22, 24, 25, 28, 29}

After reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39]
 solution : [0, 8, 9, 6, 15, 14]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39]
 solution : [0, 8, 9, 6, 15, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, 0), (22, 0), (23, 1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, 4), (34, 2), (35, 2), (36, -1), (37, 0), (38, -1), (39, 1), (40, 0), (41, 2), (42, 0), (43, 2), (44, 0), (45, 0), (46, 4), (47, -1), (48, 2), (49, -1), (50, 4), (51, 2), (52, 0), (53, -1), (54, 16), (55, -1), (56, 2), (57, -1), (58, -1), (59, 8), (60, 2), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4), (34, 2), (35, 2), (36, -1), (37, -1), (38, -1), (39, 1), (40, -1), (41, 2), (42, -1), (43, 2), (44, -1), (45, -1), (46, 4), (47, -1), (48, 2), (49, -1), (50, 4), (51, 2), (52, -1), (53, -1), (54, 16), (55, -1), (56, 2), (57, -1), (58, -1), (59, 8), (60, 2), (61, 4)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39]
 solution : [0, 8, 9, 6, 15, 14]


Solution : [0, 8, 9, 6, 15, 14] has cost 27.


Before backtrack at level 13
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39]
 solution : [0, 8, 9, 6, 15, 14]

After backtrack at level 13
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 25, 24, 13, 19, 37, 40, 44, 42]
 solution : [0, 8, 9, 6, 15, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 25, 24, 13, 19, 37, 40, 44, 42]
 solution : [0, 8, 9, 6, 15]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 25, 24, 13, 19, 37, 40, 44, 42]
 solution : [0, 8, 9, 6, 15]

Essensial at level 13 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4), (34, 2), (35, 2), (36, -1), (37, -1), (38, -1), (39, 1), (40, -1), (41, 2), (42, -1), (43, 2), (44, -1), (45, -1), (46, 4), (47, -1), (48, 2), (49, -1), (50, 4), (51, 2), (52, -1), (53, -1), (54, 16), (55, -1), (56, 2), (57, -1), (58, -1), (59, 8), (60, 2), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8), (20, -1), (21, 8), (22, 32), (23, 32), (24, -1), (25, 0), (26, -1), (27, -1), (28, 4), (29, 4), (30, -1), (31, -1), (32, -1), (33, 16), (34, 2), (35, 8), (36, -1), (37, 16), (38, -1), (39, 1), (40, 16), (41, 8), (42, 1), (43, 8), (44, 1), (45, 64), (46, 16), (47, -1), (48, 2), (49, -1), (50, 16), (51, 2), (52, 64), (53, -1), (54, 16), (55, -1), (56, 64), (57, -1), (58, -1), (59, 8), (60, 2), (61, 16)]

Covered at level 13 : {25}

After reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42]
 solution : [0, 8, 9, 6, 15, 24]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42]
 solution : [0, 8, 9, 6, 15, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8), (20, -1), (21, 8), (22, 32), (23, 32), (24, -1), (25, 0), (26, -1), (27, -1), (28, 4), (29, 4), (30, -1), (31, -1), (32, -1), (33, 16), (34, 2), (35, 8), (36, -1), (37, 16), (38, -1), (39, 1), (40, 16), (41, 8), (42, 1), (43, 8), (44, 1), (45, 64), (46, 16), (47, -1), (48, 2), (49, -1), (50, 16), (51, 2), (52, 64), (53, -1), (54, 16), (55, -1), (56, 64), (57, -1), (58, -1), (59, 8), (60, 2), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8), (20, -1), (21, 8), (22, 32), (23, 32), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, 4), (30, -1), (31, -1), (32, -1), (33, 16), (34, 2), (35, 8), (36, -1), (37, 16), (38, -1), (39, 1), (40, 16), (41, 8), (42, 1), (43, 8), (44, 1), (45, 64), (46, 16), (47, -1), (48, 2), (49, -1), (50, 16), (51, 2), (52, 64), (53, -1), (54, 16), (55, -1), (56, 64), (57, -1), (58, -1), (59, 8), (60, 2), (61, 16)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42]
 solution : [0, 8, 9, 6, 15, 24]


Solution : [0, 8, 9, 6, 15, 24] has cost 31.


Before backtrack at level 13
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42]
 solution : [0, 8, 9, 6, 15, 24]

After backtrack at level 13
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42, 24, 25]
 solution : [0, 8, 9, 6, 15]


Before backtrack at level 12
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42, 24, 25]
 solution : [0, 8, 9, 6, 15]

After backtrack at level 12
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42, 24, 25, 14]
 solution : [0, 8, 9, 6, 15]


Before backtrack at level 11
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42, 24, 25, 14]
 solution : [0, 8, 9, 6, 15]

After backtrack at level 11
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42, 24, 25, 14, 58]
 solution : [0, 8, 9, 6, 15]


Before backtrack at level 10
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42, 24, 25, 14, 58]
 solution : [0, 8, 9, 6, 15]

After backtrack at level 10
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42, 24, 25, 14, 58, 16]
 solution : [0, 8, 9, 6, 15]


Before backtrack at level 9
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42, 24, 25, 14, 58, 16]
 solution : [0, 8, 9, 6, 15]

After backtrack at level 9
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17]
 solution : [0, 8, 9, 6, 15]


Before backtrack at level 8
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17]
 solution : [0, 8, 9, 6, 15]

After backtrack at level 8
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38]
 solution : [0, 8, 9, 6, 15]


Before backtrack at level 7
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38]
 solution : [0, 8, 9, 6, 15]

After backtrack at level 7
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38, 18]
 solution : [0, 8, 9, 6, 15]


Before backtrack at level 6
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38, 18]
 solution : [0, 8, 9, 6, 15]

After backtrack at level 6
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38, 18, 47, 36, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12]
 solution : [0, 8, 9, 6, 15]


Invert decision for 15 at level 5


New level: 6
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38, 18, 47, 36, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12]
 solution : [0, 8, 9, 6]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38, 18, 47, 36, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12]
 solution : [0, 8, 9, 6]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 8), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8), (20, -1), (21, 8), (22, 32), (23, 32), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, 4), (30, -1), (31, -1), (32, -1), (33, 16), (34, 2), (35, 8), (36, -1), (37, 16), (38, -1), (39, 1), (40, 16), (41, 8), (42, 1), (43, 8), (44, 1), (45, 64), (46, 16), (47, -1), (48, 2), (49, -1), (50, 16), (51, 2), (52, 64), (53, -1), (54, 16), (55, -1), (56, 64), (57, -1), (58, -1), (59, 8), (60, 2), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, -1), (16, 512), (17, 512), (18, 512), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38, 18, 47, 36, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12]
 solution : [0, 8, 9, 6]


Solution : [0, 8, 9, 6] has cost 15.


Decide in level 6 among pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 19, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38, 18, 47, 36, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, -1), (16, 512), (17, 512), (18, 512), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Decide 19 with phase True at level 6

After decision at level 6
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38, 18, 47, 36, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12]
 solution : [0, 8, 9, 6, 19]


New level: 7
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38, 18, 47, 36, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12]
 solution : [0, 8, 9, 6, 19]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38, 18, 47, 36, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12]
 solution : [0, 8, 9, 6, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, -1), (16, 512), (17, 512), (18, 512), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, -1), (16, 512), (17, 512), (18, 256), (19, -1), (20, 128), (21, 64), (22, 128), (23, 64), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 16), (31, 32), (32, 32), (33, 64), (34, 64), (35, 32), (36, 0), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 4), (48, 256), (49, 32), (50, 32), (51, 32), (52, 64), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 256), (59, 256), (60, 128), (61, 128)]

Covered at level 7 : {36}

After reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12]
 solution : [0, 8, 9, 6, 19]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12]
 solution : [0, 8, 9, 6, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, -1), (16, 512), (17, 512), (18, 256), (19, -1), (20, 128), (21, 64), (22, 128), (23, 64), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 16), (31, 32), (32, 32), (33, 64), (34, 64), (35, 32), (36, 0), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 4), (48, 256), (49, 32), (50, 32), (51, 32), (52, 64), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 256), (59, 256), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, -1), (16, 512), (17, 512), (18, 256), (19, -1), (20, 128), (21, 64), (22, 128), (23, 64), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 16), (31, 32), (32, 32), (33, 64), (34, 64), (35, 32), (36, -1), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 4), (48, 256), (49, 32), (50, 32), (51, 32), (52, 64), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 256), (59, 256), (60, 128), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12]
 solution : [0, 8, 9, 6, 19]


Solution : [0, 8, 9, 6, 19] has cost 24.


Before backtrack at level 7
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12]
 solution : [0, 8, 9, 6, 19]

After backtrack at level 7
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12, 36]
 solution : [0, 8, 9, 6, 19]


Invert decision for 19 at level 6


New level: 7
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12, 36]
 solution : [0, 8, 9, 6]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12, 36]
 solution : [0, 8, 9, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, -1), (16, 512), (17, 512), (18, 256), (19, -1), (20, 128), (21, 64), (22, 128), (23, 64), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 16), (31, 32), (32, 32), (33, 64), (34, 64), (35, 32), (36, -1), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 4), (48, 256), (49, 32), (50, 32), (51, 32), (52, 64), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 256), (59, 256), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, -1), (16, 512), (17, 512), (18, 512), (19, -1), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12, 36]
 solution : [0, 8, 9, 6]


Solution : [0, 8, 9, 6] has cost 15.


Decide in level 7 among pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 37, 40, 44, 42, 24, 25, 14, 58, 16, 17, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12, 36]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, -1), (16, 512), (17, 512), (18, 512), (19, -1), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Decide 14 with phase True at level 7

After decision at level 7
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 37, 40, 44, 42, 24, 25, 58, 16, 17, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12, 36]
 solution : [0, 8, 9, 6, 14]


New level: 8
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 37, 40, 44, 42, 24, 25, 58, 16, 17, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12, 36]
 solution : [0, 8, 9, 6, 14]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 52, 22, 21, 45, 13, 37, 40, 44, 42, 24, 25, 58, 16, 17, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12, 36]
 solution : [0, 8, 9, 6, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, -1), (16, 512), (17, 512), (18, 512), (19, -1), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 32), (13, 0), (14, -1), (15, -1), (16, 256), (17, 512), (18, 512), (19, -1), (20, 16), (21, 0), (22, 0), (23, 16), (24, 0), (25, 0), (26, 32), (27, 256), (28, 8), (29, 2), (30, 64), (31, 16), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 1), (38, 16), (39, 256), (40, 0), (41, 256), (42, 32), (43, 128), (44, 4), (45, 0), (46, 32), (47, 2), (48, 256), (49, 128), (50, 64), (51, 256), (52, 0), (53, 8), (54, 256), (55, 128), (56, 32), (57, 32), (58, 16), (59, 256), (60, 128), (61, 64)]

Covered at level 8 : {40, 13, 45, 52, 21, 22, 24, 25}

After reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 37, 44, 42, 58, 16, 17, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12, 36]
 solution : [0, 8, 9, 6, 14]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 37, 44, 42, 58, 16, 17, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12, 36]
 solution : [0, 8, 9, 6, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 32), (13, 0), (14, -1), (15, -1), (16, 256), (17, 512), (18, 512), (19, -1), (20, 16), (21, 0), (22, 0), (23, 16), (24, 0), (25, 0), (26, 32), (27, 256), (28, 8), (29, 2), (30, 64), (31, 16), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 1), (38, 16), (39, 256), (40, 0), (41, 256), (42, 32), (43, 128), (44, 4), (45, 0), (46, 32), (47, 2), (48, 256), (49, 128), (50, 64), (51, 256), (52, 0), (53, 8), (54, 256), (55, 128), (56, 32), (57, 32), (58, 16), (59, 256), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 32), (13, -1), (14, -1), (15, -1), (16, 256), (17, 512), (18, 512), (19, -1), (20, 16), (21, -1), (22, -1), (23, 16), (24, -1), (25, -1), (26, 32), (27, 256), (28, 8), (29, 2), (30, 64), (31, 16), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 1), (38, 16), (39, 256), (40, -1), (41, 256), (42, 32), (43, 128), (44, 4), (45, -1), (46, 32), (47, 2), (48, 256), (49, 128), (50, 64), (51, 256), (52, -1), (53, 8), (54, 256), (55, 128), (56, 32), (57, 32), (58, 16), (59, 256), (60, 128), (61, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 37, 44, 42, 58, 16, 17, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12, 36]
 solution : [0, 8, 9, 6, 14]


Solution : [0, 8, 9, 6, 14] has cost 21.


Decide in level 8 among pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 37, 44, 42, 58, 16, 17, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12, 36]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 32), (13, -1), (14, -1), (15, -1), (16, 256), (17, 512), (18, 512), (19, -1), (20, 16), (21, -1), (22, -1), (23, 16), (24, -1), (25, -1), (26, 32), (27, 256), (28, 8), (29, 2), (30, 64), (31, 16), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 1), (38, 16), (39, 256), (40, -1), (41, 256), (42, 32), (43, 128), (44, 4), (45, -1), (46, 32), (47, 2), (48, 256), (49, 128), (50, 64), (51, 256), (52, -1), (53, 8), (54, 256), (55, 128), (56, 32), (57, 32), (58, 16), (59, 256), (60, 128), (61, 64)]

Decide 17 with phase True at level 8

After decision at level 8
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 37, 44, 42, 58, 16, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12, 36]
 solution : [0, 8, 9, 6, 14, 17]


New level: 9
 pending : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 37, 44, 42, 58, 16, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12, 36]
 solution : [0, 8, 9, 6, 14, 17]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 37, 44, 42, 58, 16, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 12, 36]
 solution : [0, 8, 9, 6, 14, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 32), (13, -1), (14, -1), (15, -1), (16, 256), (17, 512), (18, 512), (19, -1), (20, 16), (21, -1), (22, -1), (23, 16), (24, -1), (25, -1), (26, 32), (27, 256), (28, 8), (29, 2), (30, 64), (31, 16), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 1), (38, 16), (39, 256), (40, -1), (41, 256), (42, 32), (43, 128), (44, 4), (45, -1), (46, 32), (47, 2), (48, 256), (49, 128), (50, 64), (51, 256), (52, -1), (53, 8), (54, 256), (55, 128), (56, 32), (57, 32), (58, 16), (59, 256), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 2), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, -1), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, -1), (53, 0), (54, 2), (55, 0), (56, 2), (57, 0), (58, 1), (59, 1), (60, 0), (61, 0)]

Covered at level 9 : {3, 4, 16, 18, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 55, 57, 60, 61}

After reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 58, 12]
 solution : [0, 8, 9, 6, 14, 17]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 58, 12]
 solution : [0, 8, 9, 6, 14, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 2), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, -1), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, -1), (53, 0), (54, 2), (55, 0), (56, 2), (57, 0), (58, 1), (59, 1), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 2), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 2), (55, -1), (56, 2), (57, -1), (58, 1), (59, 1), (60, -1), (61, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 58, 12]
 solution : [0, 8, 9, 6, 14, 17]


Solution : [0, 8, 9, 6, 14, 17] has cost 27.


Before backtrack at level 9
 pending : [23, 54, 2, 59, 56, 11, 58, 12]
 solution : [0, 8, 9, 6, 14, 17]

After backtrack at level 9
 pending : [23, 54, 2, 59, 56, 11, 58, 12, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 37, 44, 42, 16, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 36]
 solution : [0, 8, 9, 6, 14, 17]


Invert decision for 17 at level 8


New level: 9
 pending : [23, 54, 2, 59, 56, 11, 58, 12, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 37, 44, 42, 16, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 36]
 solution : [0, 8, 9, 6, 14]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 58, 12, 4, 3, 46, 50, 61, 33, 35, 41, 43, 34, 48, 60, 51, 39, 29, 28, 37, 44, 42, 16, 38, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 26, 36]
 solution : [0, 8, 9, 6, 14]

Essensial at level 9 : {16, 26}

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 2), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 2), (55, -1), (56, 2), (57, -1), (58, 1), (59, 1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 2), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 1), (19, -1), (20, 4), (21, -1), (22, -1), (23, 16), (24, -1), (25, -1), (26, -1), (27, 64), (28, 1), (29, 1), (30, 32), (31, 1), (32, 1), (33, 0), (34, 1), (35, 1), (36, 64), (37, 0), (38, 0), (39, 0), (40, -1), (41, 1), (42, 1), (43, 0), (44, 0), (45, -1), (46, 1), (47, 1), (48, 128), (49, 32), (50, 2), (51, 256), (52, -1), (53, 4), (54, 64), (55, 2), (56, 32), (57, 2), (58, 1), (59, 256), (60, 2), (61, 0)]

Covered at level 9 : {33, 37, 38, 39, 43, 44, 61}

After reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 58, 12, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36]
 solution : [0, 8, 9, 6, 14, 16, 26]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 58, 12, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36]
 solution : [0, 8, 9, 6, 14, 16, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 2), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 1), (19, -1), (20, 4), (21, -1), (22, -1), (23, 16), (24, -1), (25, -1), (26, -1), (27, 64), (28, 1), (29, 1), (30, 32), (31, 1), (32, 1), (33, 0), (34, 1), (35, 1), (36, 64), (37, 0), (38, 0), (39, 0), (40, -1), (41, 1), (42, 1), (43, 0), (44, 0), (45, -1), (46, 1), (47, 1), (48, 128), (49, 32), (50, 2), (51, 256), (52, -1), (53, 4), (54, 64), (55, 2), (56, 32), (57, 2), (58, 1), (59, 256), (60, 2), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 2), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 1), (19, -1), (20, 4), (21, -1), (22, -1), (23, 16), (24, -1), (25, -1), (26, -1), (27, 64), (28, 1), (29, 1), (30, 32), (31, 1), (32, 1), (33, -1), (34, 1), (35, 1), (36, 64), (37, -1), (38, -1), (39, -1), (40, -1), (41, 1), (42, 1), (43, -1), (44, -1), (45, -1), (46, 1), (47, 1), (48, 64), (49, 32), (50, 2), (51, 256), (52, -1), (53, 4), (54, 64), (55, 2), (56, 32), (57, 2), (58, 1), (59, 256), (60, 2), (61, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 58, 12, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36]
 solution : [0, 8, 9, 6, 14, 16, 26]


Solution : [0, 8, 9, 6, 14, 16, 26] has cost 37.


Before backtrack at level 9
 pending : [23, 54, 2, 59, 56, 11, 58, 12, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36]
 solution : [0, 8, 9, 6, 14, 16, 26]

After backtrack at level 9
 pending : [23, 54, 2, 59, 56, 11, 58, 12, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38]
 solution : [0, 8, 9, 6, 14]


Before backtrack at level 8
 pending : [23, 54, 2, 59, 56, 11, 58, 12, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38]
 solution : [0, 8, 9, 6, 14]

After backtrack at level 8
 pending : [23, 54, 2, 59, 56, 11, 58, 12, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17]
 solution : [0, 8, 9, 6, 14]


Invert decision for 14 at level 7


New level: 8
 pending : [23, 54, 2, 59, 56, 11, 58, 12, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17]
 solution : [0, 8, 9, 6]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 58, 12, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17]
 solution : [0, 8, 9, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 2), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 1), (19, -1), (20, 4), (21, -1), (22, -1), (23, 16), (24, -1), (25, -1), (26, -1), (27, 64), (28, 1), (29, 1), (30, 32), (31, 1), (32, 1), (33, -1), (34, 1), (35, 1), (36, 64), (37, -1), (38, -1), (39, -1), (40, -1), (41, 1), (42, 1), (43, -1), (44, -1), (45, -1), (46, 1), (47, 1), (48, 64), (49, 32), (50, 2), (51, 256), (52, -1), (53, 4), (54, 64), (55, 2), (56, 32), (57, 2), (58, 1), (59, 256), (60, 2), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, -1), (15, -1), (16, 512), (17, 512), (18, 512), (19, -1), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 58, 12, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17]
 solution : [0, 8, 9, 6]


Solution : [0, 8, 9, 6] has cost 15.


Decide in level 8 among pending : [23, 54, 2, 59, 56, 11, 58, 12, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, -1), (15, -1), (16, 512), (17, 512), (18, 512), (19, -1), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Decide 12 with phase True at level 8

After decision at level 8
 pending : [23, 54, 2, 59, 56, 11, 58, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17]
 solution : [0, 8, 9, 6, 12]


New level: 9
 pending : [23, 54, 2, 59, 56, 11, 58, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17]
 solution : [0, 8, 9, 6, 12]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 11, 58, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17]
 solution : [0, 8, 9, 6, 12]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, -1), (15, -1), (16, 512), (17, 512), (18, 512), (19, -1), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 32), (14, -1), (15, -1), (16, 256), (17, 512), (18, 512), (19, -1), (20, 128), (21, 16), (22, 64), (23, 32), (24, 64), (25, 32), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 16), (48, 256), (49, 128), (50, 128), (51, 256), (52, 32), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 9 : {11}

After reduction : 
 pending  : [23, 54, 2, 59, 56, 58, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17]
 solution : [0, 8, 9, 6, 12]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 58, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17]
 solution : [0, 8, 9, 6, 12]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 32), (14, -1), (15, -1), (16, 256), (17, 512), (18, 512), (19, -1), (20, 128), (21, 16), (22, 64), (23, 32), (24, 64), (25, 32), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 16), (48, 256), (49, 128), (50, 128), (51, 256), (52, 32), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 256), (17, 512), (18, 512), (19, -1), (20, 128), (21, 16), (22, 64), (23, 32), (24, 64), (25, 32), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 16), (48, 256), (49, 128), (50, 128), (51, 256), (52, 32), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 54, 2, 59, 56, 58, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17]
 solution : [0, 8, 9, 6, 12]


Solution : [0, 8, 9, 6, 12] has cost 21.


Decide in level 9 among pending : [23, 54, 2, 59, 56, 58, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 18, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 256), (17, 512), (18, 512), (19, -1), (20, 128), (21, 16), (22, 64), (23, 32), (24, 64), (25, 32), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 16), (48, 256), (49, 128), (50, 128), (51, 256), (52, 32), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [23, 54, 2, 59, 56, 58, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17]
 solution : [0, 8, 9, 6, 12, 18]


New level: 10
 pending : [23, 54, 2, 59, 56, 58, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17]
 solution : [0, 8, 9, 6, 12, 18]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 58, 4, 3, 46, 50, 35, 41, 34, 48, 60, 51, 29, 28, 42, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17]
 solution : [0, 8, 9, 6, 12, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 256), (17, 512), (18, 512), (19, -1), (20, 128), (21, 16), (22, 64), (23, 32), (24, 64), (25, 32), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 16), (48, 256), (49, 128), (50, 128), (51, 256), (52, 32), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 256), (17, 512), (18, -1), (19, -1), (20, 128), (21, 16), (22, 64), (23, 16), (24, 64), (25, 32), (26, 128), (27, 128), (28, 64), (29, 32), (30, 64), (31, 64), (32, 64), (33, 16), (34, 32), (35, 0), (36, 16), (37, 8), (38, 16), (39, 32), (40, 8), (41, 16), (42, 16), (43, 8), (44, 16), (45, 16), (46, 128), (47, 16), (48, 256), (49, 64), (50, 64), (51, 128), (52, 16), (53, 32), (54, 32), (55, 64), (56, 32), (57, 64), (58, 8), (59, 16), (60, 32), (61, 16)]

Covered at level 10 : {35}

After reduction : 
 pending  : [23, 54, 2, 59, 56, 58, 4, 3, 46, 50, 41, 34, 48, 60, 51, 29, 28, 42, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17]
 solution : [0, 8, 9, 6, 12, 18]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 58, 4, 3, 46, 50, 41, 34, 48, 60, 51, 29, 28, 42, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17]
 solution : [0, 8, 9, 6, 12, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 256), (17, 512), (18, -1), (19, -1), (20, 128), (21, 16), (22, 64), (23, 16), (24, 64), (25, 32), (26, 128), (27, 128), (28, 64), (29, 32), (30, 64), (31, 64), (32, 64), (33, 16), (34, 32), (35, 0), (36, 16), (37, 8), (38, 16), (39, 32), (40, 8), (41, 16), (42, 16), (43, 8), (44, 16), (45, 16), (46, 128), (47, 16), (48, 256), (49, 64), (50, 64), (51, 128), (52, 16), (53, 32), (54, 32), (55, 64), (56, 32), (57, 64), (58, 8), (59, 16), (60, 32), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 256), (17, 512), (18, -1), (19, -1), (20, 128), (21, 16), (22, 64), (23, 16), (24, 64), (25, 32), (26, 128), (27, 128), (28, 64), (29, 32), (30, 64), (31, 64), (32, 64), (33, 16), (34, 32), (35, -1), (36, 16), (37, 8), (38, 16), (39, 32), (40, 8), (41, 16), (42, 16), (43, 8), (44, 16), (45, 16), (46, 128), (47, 16), (48, 256), (49, 64), (50, 64), (51, 128), (52, 16), (53, 32), (54, 32), (55, 64), (56, 32), (57, 64), (58, 8), (59, 16), (60, 32), (61, 16)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 54, 2, 59, 56, 58, 4, 3, 46, 50, 41, 34, 48, 60, 51, 29, 28, 42, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17]
 solution : [0, 8, 9, 6, 12, 18]


Solution : [0, 8, 9, 6, 12, 18] has cost 30.


Before backtrack at level 10
 pending : [23, 54, 2, 59, 56, 58, 4, 3, 46, 50, 41, 34, 48, 60, 51, 29, 28, 42, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17]
 solution : [0, 8, 9, 6, 12, 18]

After backtrack at level 10
 pending : [23, 54, 2, 59, 56, 58, 4, 3, 46, 50, 41, 34, 48, 60, 51, 29, 28, 42, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17, 35]
 solution : [0, 8, 9, 6, 12, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [23, 54, 2, 59, 56, 58, 4, 3, 46, 50, 41, 34, 48, 60, 51, 29, 28, 42, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17, 35]
 solution : [0, 8, 9, 6, 12]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 58, 4, 3, 46, 50, 41, 34, 48, 60, 51, 29, 28, 42, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17, 35]
 solution : [0, 8, 9, 6, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 256), (17, 512), (18, -1), (19, -1), (20, 128), (21, 16), (22, 64), (23, 16), (24, 64), (25, 32), (26, 128), (27, 128), (28, 64), (29, 32), (30, 64), (31, 64), (32, 64), (33, 16), (34, 32), (35, -1), (36, 16), (37, 8), (38, 16), (39, 32), (40, 8), (41, 16), (42, 16), (43, 8), (44, 16), (45, 16), (46, 128), (47, 16), (48, 256), (49, 64), (50, 64), (51, 128), (52, 16), (53, 32), (54, 32), (55, 64), (56, 32), (57, 64), (58, 8), (59, 16), (60, 32), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 256), (17, 512), (18, -1), (19, -1), (20, 128), (21, 16), (22, 64), (23, 32), (24, 64), (25, 32), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 16), (48, 256), (49, 128), (50, 128), (51, 256), (52, 32), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 54, 2, 59, 56, 58, 4, 3, 46, 50, 41, 34, 48, 60, 51, 29, 28, 42, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17, 35]
 solution : [0, 8, 9, 6, 12]


Solution : [0, 8, 9, 6, 12] has cost 21.


Decide in level 10 among pending : [23, 54, 2, 59, 56, 58, 4, 3, 46, 50, 41, 34, 48, 60, 51, 29, 28, 42, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 17, 35]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 256), (17, 512), (18, -1), (19, -1), (20, 128), (21, 16), (22, 64), (23, 32), (24, 64), (25, 32), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 16), (48, 256), (49, 128), (50, 128), (51, 256), (52, 32), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

Decide 17 with phase True at level 10

After decision at level 10
 pending : [23, 54, 2, 59, 56, 58, 4, 3, 46, 50, 41, 34, 48, 60, 51, 29, 28, 42, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 35]
 solution : [0, 8, 9, 6, 12, 17]


New level: 11
 pending : [23, 54, 2, 59, 56, 58, 4, 3, 46, 50, 41, 34, 48, 60, 51, 29, 28, 42, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 35]
 solution : [0, 8, 9, 6, 12, 17]


Before reduction : 
 pending  : [23, 54, 2, 59, 56, 58, 4, 3, 46, 50, 41, 34, 48, 60, 51, 29, 28, 42, 47, 31, 55, 30, 27, 32, 20, 49, 57, 53, 36, 16, 26, 61, 33, 43, 39, 37, 44, 38, 52, 22, 21, 45, 13, 40, 24, 25, 35]
 solution : [0, 8, 9, 6, 12, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 256), (17, 512), (18, -1), (19, -1), (20, 128), (21, 16), (22, 64), (23, 32), (24, 64), (25, 32), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 16), (48, 256), (49, 128), (50, 128), (51, 256), (52, 32), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 16), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 8), (38, 8), (39, 8), (40, 8), (41, 0), (42, 1), (43, 1), (44, 0), (45, 8), (46, 2), (47, 2), (48, 2), (49, 2), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 2), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 11 : {2, 3, 4, 16, 32, 33, 34, 35, 36, 41, 44, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61}

After reduction : 
 pending  : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25]
 solution : [0, 8, 9, 6, 12, 17]


Before reduction : 
 pending  : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25]
 solution : [0, 8, 9, 6, 12, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 16), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 8), (38, 8), (39, 8), (40, 8), (41, 0), (42, 1), (43, 1), (44, 0), (45, 8), (46, 2), (47, 2), (48, 2), (49, 2), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 2), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 16), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 8), (38, 8), (39, 8), (40, 8), (41, -1), (42, 1), (43, 1), (44, -1), (45, 8), (46, 2), (47, 2), (48, 2), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25]
 solution : [0, 8, 9, 6, 12, 17]


Solution : [0, 8, 9, 6, 12, 17] has cost 27.


Before backtrack at level 11
 pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25]
 solution : [0, 8, 9, 6, 12, 17]

After backtrack at level 11
 pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 54, 2, 59, 58, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 16, 61, 33, 44, 52, 35]
 solution : [0, 8, 9, 6, 12, 17]


Invert decision for 17 at level 10


New level: 11
 pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 54, 2, 59, 58, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 16, 61, 33, 44, 52, 35]
 solution : [0, 8, 9, 6, 12]


Before reduction : 
 pending  : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 54, 2, 59, 58, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 16, 61, 33, 44, 52, 35]
 solution : [0, 8, 9, 6, 12]

Essensial at level 11 : {16, 26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 16), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 8), (38, 8), (39, 8), (40, 8), (41, -1), (42, 1), (43, 1), (44, -1), (45, 8), (46, 2), (47, 2), (48, 2), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 0), (22, 0), (23, 2), (24, 0), (25, 0), (26, -1), (27, 64), (28, 1), (29, 1), (30, 32), (31, 1), (32, 1), (33, 0), (34, 1), (35, 1), (36, 64), (37, 0), (38, 0), (39, 0), (40, 0), (41, 1), (42, 256), (43, 0), (44, 0), (45, 0), (46, 1), (47, 1), (48, 128), (49, 64), (50, 2), (51, 256), (52, 0), (53, 8), (54, 2), (55, 2), (56, 2), (57, 2), (58, 0), (59, 2), (60, 2), (61, 0)]

Covered at level 11 : {33, 37, 38, 39, 40, 43, 44, 45, 13, 52, 21, 22, 24, 25, 58, 61}

After reduction : 
 pending  : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35]
 solution : [0, 8, 9, 6, 12, 16, 26]


Before reduction : 
 pending  : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35]
 solution : [0, 8, 9, 6, 12, 16, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 0), (22, 0), (23, 2), (24, 0), (25, 0), (26, -1), (27, 64), (28, 1), (29, 1), (30, 32), (31, 1), (32, 1), (33, 0), (34, 1), (35, 1), (36, 64), (37, 0), (38, 0), (39, 0), (40, 0), (41, 1), (42, 256), (43, 0), (44, 0), (45, 0), (46, 1), (47, 1), (48, 128), (49, 64), (50, 2), (51, 256), (52, 0), (53, 8), (54, 2), (55, 2), (56, 2), (57, 2), (58, 0), (59, 2), (60, 2), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 2), (24, -1), (25, -1), (26, -1), (27, 32), (28, 1), (29, 1), (30, 16), (31, 1), (32, 1), (33, -1), (34, 1), (35, 1), (36, 64), (37, -1), (38, -1), (39, -1), (40, -1), (41, 1), (42, 1), (43, -1), (44, -1), (45, -1), (46, 1), (47, 1), (48, 128), (49, 64), (50, 2), (51, 256), (52, -1), (53, 8), (54, 2), (55, 2), (56, 2), (57, 2), (58, -1), (59, 2), (60, 2), (61, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35]
 solution : [0, 8, 9, 6, 12, 16, 26]


Solution : [0, 8, 9, 6, 12, 16, 26] has cost 37.


Before backtrack at level 11
 pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35]
 solution : [0, 8, 9, 6, 12, 16, 26]

After backtrack at level 11
 pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35, 26, 16, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 61, 33, 44, 52]
 solution : [0, 8, 9, 6, 12]


Before backtrack at level 10
 pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35, 26, 16, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 61, 33, 44, 52]
 solution : [0, 8, 9, 6, 12]

After backtrack at level 10
 pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35, 26, 16, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 61, 33, 44, 52, 17]
 solution : [0, 8, 9, 6, 12]


Before backtrack at level 9
 pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35, 26, 16, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 61, 33, 44, 52, 17]
 solution : [0, 8, 9, 6, 12]

After backtrack at level 9
 pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35, 26, 16, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 61, 33, 44, 52, 17, 11, 18]
 solution : [0, 8, 9, 6, 12]


Invert decision for 12 at level 8


New level: 9
 pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35, 26, 16, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 61, 33, 44, 52, 17, 11, 18]
 solution : [0, 8, 9, 6]


Before reduction : 
 pending  : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35, 26, 16, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 61, 33, 44, 52, 17, 11, 18]
 solution : [0, 8, 9, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 2), (24, -1), (25, -1), (26, -1), (27, 32), (28, 1), (29, 1), (30, 16), (31, 1), (32, 1), (33, -1), (34, 1), (35, 1), (36, 64), (37, -1), (38, -1), (39, -1), (40, -1), (41, 1), (42, 1), (43, -1), (44, -1), (45, -1), (46, 1), (47, 1), (48, 128), (49, 64), (50, 2), (51, 256), (52, -1), (53, 8), (54, 2), (55, 2), (56, 2), (57, 2), (58, -1), (59, 2), (60, 2), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, 512), (17, 512), (18, 512), (19, -1), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35, 26, 16, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 61, 33, 44, 52, 17, 11, 18]
 solution : [0, 8, 9, 6]


Solution : [0, 8, 9, 6] has cost 15.


Decide in level 9 among pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35, 26, 16, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 61, 33, 44, 52, 17, 11, 18]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, 512), (17, 512), (18, 512), (19, -1), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Decide 16 with phase True at level 9

After decision at level 9
 pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 61, 33, 44, 52, 17, 11, 18]
 solution : [0, 8, 9, 6, 16]


New level: 10
 pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 61, 33, 44, 52, 17, 11, 18]
 solution : [0, 8, 9, 6, 16]


Before reduction : 
 pending  : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 61, 33, 44, 52, 17, 11, 18]
 solution : [0, 8, 9, 6, 16]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, 512), (17, 512), (18, 512), (19, -1), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, 512), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, 0), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 16), (42, 256), (43, 256), (44, 0), (45, 64), (46, 16), (47, 16), (48, 256), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 16), (56, 256), (57, 64), (58, 64), (59, 256), (60, 16), (61, 0)]

Covered at level 10 : {33, 44, 61}

After reduction : 
 pending  : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 18]
 solution : [0, 8, 9, 6, 16]


Before reduction : 
 pending  : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 18]
 solution : [0, 8, 9, 6, 16]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, 512), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, 0), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 16), (42, 256), (43, 256), (44, 0), (45, 64), (46, 16), (47, 16), (48, 256), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 16), (56, 256), (57, 64), (58, 64), (59, 256), (60, 16), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, 512), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 16), (42, 256), (43, 256), (44, -1), (45, 64), (46, 16), (47, 16), (48, 256), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 16), (56, 256), (57, 64), (58, 64), (59, 256), (60, 16), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 18]
 solution : [0, 8, 9, 6, 16]


Solution : [0, 8, 9, 6, 16] has cost 21.


Decide in level 10 among pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 18]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, 512), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 16), (42, 256), (43, 256), (44, -1), (45, 64), (46, 16), (47, 16), (48, 256), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 16), (56, 256), (57, 64), (58, 64), (59, 256), (60, 16), (61, -1)]

Decide 18 with phase True at level 10

After decision at level 10
 pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11]
 solution : [0, 8, 9, 6, 16, 18]


New level: 11
 pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11]
 solution : [0, 8, 9, 6, 16, 18]


Before reduction : 
 pending  : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 35, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11]
 solution : [0, 8, 9, 6, 16, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, 512), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 16), (42, 256), (43, 256), (44, -1), (45, 64), (46, 16), (47, 16), (48, 256), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 16), (56, 256), (57, 64), (58, 64), (59, 256), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 64), (24, 64), (25, 64), (26, 128), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 8), (33, -1), (34, 4), (35, 0), (36, 16), (37, 8), (38, 8), (39, 32), (40, 8), (41, 1), (42, 8), (43, 8), (44, -1), (45, 16), (46, 16), (47, 16), (48, 256), (49, 64), (50, 4), (51, 128), (52, 32), (53, 32), (54, 32), (55, 8), (56, 128), (57, 32), (58, 16), (59, 64), (60, 4), (61, -1)]

Covered at level 11 : {35}

After reduction : 
 pending  : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11]
 solution : [0, 8, 9, 6, 16, 18]


Before reduction : 
 pending  : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11]
 solution : [0, 8, 9, 6, 16, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 64), (24, 64), (25, 64), (26, 128), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 8), (33, -1), (34, 4), (35, 0), (36, 16), (37, 8), (38, 8), (39, 32), (40, 8), (41, 1), (42, 8), (43, 8), (44, -1), (45, 16), (46, 16), (47, 16), (48, 256), (49, 64), (50, 4), (51, 128), (52, 32), (53, 32), (54, 32), (55, 8), (56, 128), (57, 32), (58, 16), (59, 64), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 64), (24, 64), (25, 64), (26, 128), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 8), (33, -1), (34, 4), (35, -1), (36, 16), (37, 8), (38, 8), (39, 32), (40, 8), (41, 1), (42, 8), (43, 8), (44, -1), (45, 16), (46, 16), (47, 16), (48, 256), (49, 64), (50, 4), (51, 128), (52, 32), (53, 32), (54, 32), (55, 8), (56, 128), (57, 32), (58, 16), (59, 64), (60, 4), (61, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11]
 solution : [0, 8, 9, 6, 16, 18]


Solution : [0, 8, 9, 6, 16, 18] has cost 30.


Before backtrack at level 11
 pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11]
 solution : [0, 8, 9, 6, 16, 18]

After backtrack at level 11
 pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35]
 solution : [0, 8, 9, 6, 16, 18]


Invert decision for 18 at level 10


New level: 11
 pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35]
 solution : [0, 8, 9, 6, 16]


Before reduction : 
 pending  : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35]
 solution : [0, 8, 9, 6, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 64), (24, 64), (25, 64), (26, 128), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 8), (33, -1), (34, 4), (35, -1), (36, 16), (37, 8), (38, 8), (39, 32), (40, 8), (41, 1), (42, 8), (43, 8), (44, -1), (45, 16), (46, 16), (47, 16), (48, 256), (49, 64), (50, 4), (51, 128), (52, 32), (53, 32), (54, 32), (55, 8), (56, 128), (57, 32), (58, 16), (59, 64), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 16), (42, 256), (43, 256), (44, -1), (45, 64), (46, 16), (47, 16), (48, 256), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 16), (56, 256), (57, 64), (58, 64), (59, 256), (60, 16), (61, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35]
 solution : [0, 8, 9, 6, 16]


Solution : [0, 8, 9, 6, 16] has cost 21.


Decide in level 11 among pending : [23, 56, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 16), (42, 256), (43, 256), (44, -1), (45, 64), (46, 16), (47, 16), (48, 256), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 16), (56, 256), (57, 64), (58, 64), (59, 256), (60, 16), (61, -1)]

Decide 56 with phase True at level 11

After decision at level 11
 pending : [23, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35]
 solution : [0, 8, 9, 6, 16, 56]


New level: 12
 pending : [23, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35]
 solution : [0, 8, 9, 6, 16, 56]


Before reduction : 
 pending  : [23, 46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 54, 2, 59, 4, 3, 50, 41, 34, 60, 51, 55, 32, 53, 36, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35]
 solution : [0, 8, 9, 6, 16, 56]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 16), (42, 256), (43, 256), (44, -1), (45, 64), (46, 16), (47, 16), (48, 256), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 16), (56, 256), (57, 64), (58, 64), (59, 256), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 64), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 16), (22, 16), (23, 0), (24, 64), (25, 64), (26, 128), (27, 128), (28, 8), (29, 8), (30, 64), (31, 8), (32, 2), (33, -1), (34, 8), (35, 1), (36, 0), (37, 8), (38, 8), (39, 256), (40, 8), (41, 4), (42, 16), (43, 4), (44, -1), (45, 8), (46, 1), (47, 1), (48, 256), (49, 128), (50, 0), (51, 256), (52, 4), (53, 32), (54, 0), (55, 4), (56, -1), (57, 16), (58, 8), (59, 256), (60, 16), (61, -1)]

Covered at level 12 : {2, 36, 50, 54, 23}

After reduction : 
 pending  : [46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 59, 4, 3, 41, 34, 60, 51, 55, 32, 53, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35]
 solution : [0, 8, 9, 6, 16, 56]


Before reduction : 
 pending  : [46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 59, 4, 3, 41, 34, 60, 51, 55, 32, 53, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35]
 solution : [0, 8, 9, 6, 16, 56]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 64), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 16), (22, 16), (23, 0), (24, 64), (25, 64), (26, 128), (27, 128), (28, 8), (29, 8), (30, 64), (31, 8), (32, 2), (33, -1), (34, 8), (35, 1), (36, 0), (37, 8), (38, 8), (39, 256), (40, 8), (41, 4), (42, 16), (43, 4), (44, -1), (45, 8), (46, 1), (47, 1), (48, 256), (49, 128), (50, 0), (51, 256), (52, 4), (53, 32), (54, 0), (55, 4), (56, -1), (57, 16), (58, 8), (59, 256), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 16), (22, 16), (23, -1), (24, 64), (25, 64), (26, 128), (27, 128), (28, 8), (29, 8), (30, 8), (31, 8), (32, 2), (33, -1), (34, 8), (35, 1), (36, -1), (37, 8), (38, 8), (39, 256), (40, 8), (41, 4), (42, 4), (43, 4), (44, -1), (45, 8), (46, 1), (47, 1), (48, 256), (49, 128), (50, -1), (51, 1), (52, 4), (53, 32), (54, -1), (55, 4), (56, -1), (57, 16), (58, 8), (59, 256), (60, 16), (61, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 59, 4, 3, 41, 34, 60, 51, 55, 32, 53, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35]
 solution : [0, 8, 9, 6, 16, 56]


Solution : [0, 8, 9, 6, 16, 56] has cost 31.


Before backtrack at level 12
 pending : [46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 59, 4, 3, 41, 34, 60, 51, 55, 32, 53, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35]
 solution : [0, 8, 9, 6, 16, 56]

After backtrack at level 12
 pending : [46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 59, 4, 3, 41, 34, 60, 51, 55, 32, 53, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35, 23, 54, 2, 50, 36]
 solution : [0, 8, 9, 6, 16, 56]


Invert decision for 56 at level 11


New level: 12
 pending : [46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 59, 4, 3, 41, 34, 60, 51, 55, 32, 53, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35, 23, 54, 2, 50, 36]
 solution : [0, 8, 9, 6, 16]


Before reduction : 
 pending  : [46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 59, 4, 3, 41, 34, 60, 51, 55, 32, 53, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35, 23, 54, 2, 50, 36]
 solution : [0, 8, 9, 6, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 16), (22, 16), (23, -1), (24, 64), (25, 64), (26, 128), (27, 128), (28, 8), (29, 8), (30, 8), (31, 8), (32, 2), (33, -1), (34, 8), (35, 1), (36, -1), (37, 8), (38, 8), (39, 256), (40, 8), (41, 4), (42, 4), (43, 4), (44, -1), (45, 8), (46, 1), (47, 1), (48, 256), (49, 128), (50, -1), (51, 1), (52, 4), (53, 32), (54, -1), (55, 4), (56, -1), (57, 16), (58, 8), (59, 256), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 16), (42, 256), (43, 128), (44, -1), (45, 64), (46, 16), (47, 16), (48, 256), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 32), (55, 16), (56, -1), (57, 64), (58, 64), (59, 256), (60, 16), (61, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 59, 4, 3, 41, 34, 60, 51, 55, 32, 53, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35, 23, 54, 2, 50, 36]
 solution : [0, 8, 9, 6, 16]


Solution : [0, 8, 9, 6, 16] has cost 21.


Decide in level 12 among pending : [46, 48, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 59, 4, 3, 41, 34, 60, 51, 55, 32, 53, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35, 23, 54, 2, 50, 36]

Coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 16), (42, 256), (43, 128), (44, -1), (45, 64), (46, 16), (47, 16), (48, 256), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 32), (55, 16), (56, -1), (57, 64), (58, 64), (59, 256), (60, 16), (61, -1)]

Decide 48 with phase True at level 12

After decision at level 12
 pending : [46, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 59, 4, 3, 41, 34, 60, 51, 55, 32, 53, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35, 23, 54, 2, 50, 36]
 solution : [0, 8, 9, 6, 16, 48]


New level: 13
 pending : [46, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 59, 4, 3, 41, 34, 60, 51, 55, 32, 53, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35, 23, 54, 2, 50, 36]
 solution : [0, 8, 9, 6, 16, 48]


Before reduction : 
 pending  : [46, 29, 28, 42, 47, 31, 30, 27, 20, 49, 57, 59, 4, 3, 41, 34, 60, 51, 55, 32, 53, 26, 43, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 35, 23, 54, 2, 50, 36]
 solution : [0, 8, 9, 6, 16, 48]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 16), (42, 256), (43, 128), (44, -1), (45, 64), (46, 16), (47, 16), (48, 256), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 32), (55, 16), (56, -1), (57, 64), (58, 64), (59, 256), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, 2), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 32), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 32), (27, 0), (28, 64), (29, 64), (30, 0), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, 0), (37, 32), (38, 32), (39, 32), (40, 32), (41, 0), (42, 0), (43, 0), (44, -1), (45, 64), (46, 0), (47, 0), (48, -1), (49, 0), (50, 0), (51, 0), (52, 64), (53, 16), (54, 2), (55, 0), (56, -1), (57, 0), (58, 64), (59, 256), (60, 0), (61, -1)]

Covered at level 13 : {32, 34, 35, 36, 41, 42, 43, 46, 47, 49, 50, 51, 55, 57, 27, 60, 30, 31}

After reduction : 
 pending  : [29, 28, 20, 59, 4, 3, 53, 26, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2]
 solution : [0, 8, 9, 6, 16, 48]


Before reduction : 
 pending  : [29, 28, 20, 59, 4, 3, 53, 26, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2]
 solution : [0, 8, 9, 6, 16, 48]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, 2), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 32), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 32), (27, 0), (28, 64), (29, 64), (30, 0), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, 0), (37, 32), (38, 32), (39, 32), (40, 32), (41, 0), (42, 0), (43, 0), (44, -1), (45, 64), (46, 0), (47, 0), (48, -1), (49, 0), (50, 0), (51, 0), (52, 64), (53, 16), (54, 2), (55, 0), (56, -1), (57, 0), (58, 64), (59, 256), (60, 0), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, 2), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 32), (21, 64), (22, 64), (23, 32), (24, 64), (25, 64), (26, 32), (27, -1), (28, 16), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32), (38, 32), (39, 32), (40, 32), (41, -1), (42, -1), (43, -1), (44, -1), (45, 64), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 64), (53, 4), (54, 2), (55, -1), (56, -1), (57, -1), (58, 64), (59, 256), (60, -1), (61, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [29, 28, 20, 59, 4, 3, 53, 26, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2]
 solution : [0, 8, 9, 6, 16, 48]


Solution : [0, 8, 9, 6, 16, 48] has cost 31.


Before backtrack at level 13
 pending : [29, 28, 20, 59, 4, 3, 53, 26, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2]
 solution : [0, 8, 9, 6, 16, 48]

After backtrack at level 13
 pending : [29, 28, 20, 59, 4, 3, 53, 26, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 48]


Invert decision for 48 at level 12


New level: 13
 pending : [29, 28, 20, 59, 4, 3, 53, 26, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16]


Before reduction : 
 pending  : [29, 28, 20, 59, 4, 3, 53, 26, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, 2), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 32), (21, 64), (22, 64), (23, 32), (24, 64), (25, 64), (26, 32), (27, -1), (28, 16), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32), (38, 32), (39, 32), (40, 32), (41, -1), (42, -1), (43, -1), (44, -1), (45, 64), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 64), (53, 4), (54, 2), (55, -1), (56, -1), (57, -1), (58, 64), (59, 256), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 16), (42, 256), (43, 128), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 32), (55, 16), (56, -1), (57, 64), (58, 64), (59, 256), (60, 16), (61, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [29, 28, 20, 59, 4, 3, 53, 26, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16]


Solution : [0, 8, 9, 6, 16] has cost 21.


Decide in level 13 among pending : [29, 28, 20, 59, 4, 3, 53, 26, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]

Coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 16), (42, 256), (43, 128), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 32), (55, 16), (56, -1), (57, 64), (58, 64), (59, 256), (60, 16), (61, -1)]

Decide 59 with phase True at level 13

After decision at level 13
 pending : [29, 28, 20, 4, 3, 53, 26, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 59]


New level: 14
 pending : [29, 28, 20, 4, 3, 53, 26, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 59]


Before reduction : 
 pending  : [29, 28, 20, 4, 3, 53, 26, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 59]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 16), (42, 256), (43, 128), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 32), (55, 16), (56, -1), (57, 64), (58, 64), (59, 256), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 2), (35, 1), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 16), (42, 256), (43, 128), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 8), (51, 256), (52, 64), (53, 32), (54, 16), (55, 16), (56, -1), (57, 64), (58, 16), (59, -1), (60, 4), (61, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [29, 28, 20, 4, 3, 53, 26, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 59]


Solution : [0, 8, 9, 6, 16, 59] has cost 31.


Before backtrack at level 14
 pending : [29, 28, 20, 4, 3, 53, 26, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 59]

After backtrack at level 14
 pending : [29, 28, 20, 4, 3, 53, 26, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 59]


Invert decision for 59 at level 13


New level: 14
 pending : [29, 28, 20, 4, 3, 53, 26, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16]


Before reduction : 
 pending  : [29, 28, 20, 4, 3, 53, 26, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 2), (35, 1), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 16), (42, 256), (43, 128), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 8), (51, 256), (52, 64), (53, 32), (54, 16), (55, 16), (56, -1), (57, 64), (58, 16), (59, -1), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 16), (42, 256), (43, 128), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 32), (55, 16), (56, -1), (57, 64), (58, 64), (59, -1), (60, 16), (61, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [29, 28, 20, 4, 3, 53, 26, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16]


Solution : [0, 8, 9, 6, 16] has cost 21.


Decide in level 14 among pending : [29, 28, 20, 4, 3, 53, 26, 39, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]

Coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 16), (42, 256), (43, 128), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 32), (55, 16), (56, -1), (57, 64), (58, 64), (59, -1), (60, 16), (61, -1)]

Decide 39 with phase True at level 14

After decision at level 14
 pending : [29, 28, 20, 4, 3, 53, 26, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 39]


New level: 15
 pending : [29, 28, 20, 4, 3, 53, 26, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 39]


Before reduction : 
 pending  : [29, 28, 20, 4, 3, 53, 26, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 39]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 16), (42, 256), (43, 128), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 32), (55, 16), (56, -1), (57, 64), (58, 64), (59, -1), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 16), (32, 4), (33, -1), (34, 4), (35, 2), (36, 64), (37, 8), (38, 8), (39, -1), (40, 8), (41, 2), (42, 2), (43, 1), (44, -1), (45, 64), (46, 8), (47, 8), (48, -1), (49, 64), (50, 16), (51, 256), (52, 64), (53, 32), (54, 32), (55, 8), (56, -1), (57, 32), (58, 64), (59, -1), (60, 8), (61, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [29, 28, 20, 4, 3, 53, 26, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 39]


Solution : [0, 8, 9, 6, 16, 39] has cost 31.


Before backtrack at level 15
 pending : [29, 28, 20, 4, 3, 53, 26, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 39]

After backtrack at level 15
 pending : [29, 28, 20, 4, 3, 53, 26, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 39]


Invert decision for 39 at level 14


New level: 15
 pending : [29, 28, 20, 4, 3, 53, 26, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16]


Before reduction : 
 pending  : [29, 28, 20, 4, 3, 53, 26, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 16), (32, 4), (33, -1), (34, 4), (35, 2), (36, 64), (37, 8), (38, 8), (39, -1), (40, 8), (41, 2), (42, 2), (43, 1), (44, -1), (45, 64), (46, 8), (47, 8), (48, -1), (49, 64), (50, 16), (51, 256), (52, 64), (53, 32), (54, 32), (55, 8), (56, -1), (57, 32), (58, 64), (59, -1), (60, 8), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 16), (42, 256), (43, 128), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 32), (55, 16), (56, -1), (57, 64), (58, 64), (59, -1), (60, 16), (61, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [29, 28, 20, 4, 3, 53, 26, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16]


Solution : [0, 8, 9, 6, 16] has cost 21.


Decide in level 15 among pending : [29, 28, 20, 4, 3, 53, 26, 37, 38, 22, 21, 45, 13, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]

Coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 16), (42, 256), (43, 128), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 32), (55, 16), (56, -1), (57, 64), (58, 64), (59, -1), (60, 16), (61, -1)]

Decide 13 with phase True at level 15

After decision at level 15
 pending : [29, 28, 20, 4, 3, 53, 26, 37, 38, 22, 21, 45, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 13]


New level: 16
 pending : [29, 28, 20, 4, 3, 53, 26, 37, 38, 22, 21, 45, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 13]


Before reduction : 
 pending  : [29, 28, 20, 4, 3, 53, 26, 37, 38, 22, 21, 45, 40, 24, 25, 58, 52, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 16), (42, 256), (43, 128), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 32), (55, 16), (56, -1), (57, 64), (58, 64), (59, -1), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 0), (22, 0), (23, 16), (24, 0), (25, 0), (26, 32), (27, 128), (28, 1), (29, 1), (30, 64), (31, 8), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 0), (38, 0), (39, -1), (40, 0), (41, 16), (42, 16), (43, 8), (44, -1), (45, 0), (46, 1), (47, 1), (48, -1), (49, 128), (50, 2), (51, 256), (52, 0), (53, 4), (54, 32), (55, 16), (56, -1), (57, 16), (58, 1), (59, -1), (60, 16), (61, -1)]

Covered at level 16 : {37, 38, 40, 45, 52, 21, 22, 24, 25}

After reduction : 
 pending  : [29, 28, 20, 4, 3, 53, 26, 58, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 13]


Before reduction : 
 pending  : [29, 28, 20, 4, 3, 53, 26, 58, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 0), (22, 0), (23, 16), (24, 0), (25, 0), (26, 32), (27, 128), (28, 1), (29, 1), (30, 64), (31, 8), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 0), (38, 0), (39, -1), (40, 0), (41, 16), (42, 16), (43, 8), (44, -1), (45, 0), (46, 1), (47, 1), (48, -1), (49, 128), (50, 2), (51, 256), (52, 0), (53, 4), (54, 32), (55, 16), (56, -1), (57, 16), (58, 1), (59, -1), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 16), (24, -1), (25, -1), (26, 32), (27, 128), (28, 1), (29, 1), (30, 64), (31, 8), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, -1), (38, -1), (39, -1), (40, -1), (41, 16), (42, 16), (43, 8), (44, -1), (45, -1), (46, 1), (47, 1), (48, -1), (49, 128), (50, 2), (51, 256), (52, -1), (53, 4), (54, 32), (55, 16), (56, -1), (57, 16), (58, 1), (59, -1), (60, 16), (61, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [29, 28, 20, 4, 3, 53, 26, 58, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 13]


Solution : [0, 8, 9, 6, 16, 13] has cost 27.


Before backtrack at level 16
 pending : [29, 28, 20, 4, 3, 53, 26, 58, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36]
 solution : [0, 8, 9, 6, 16, 13]

After backtrack at level 16
 pending : [29, 28, 20, 4, 3, 53, 26, 58, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25, 52]
 solution : [0, 8, 9, 6, 16, 13]


Invert decision for 13 at level 15


New level: 16
 pending : [29, 28, 20, 4, 3, 53, 26, 58, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25, 52]
 solution : [0, 8, 9, 6, 16]


Before reduction : 
 pending  : [29, 28, 20, 4, 3, 53, 26, 58, 17, 11, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25, 52]
 solution : [0, 8, 9, 6, 16]

Essensial at level 16 : {11}

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 16), (24, -1), (25, -1), (26, 32), (27, 128), (28, 1), (29, 1), (30, 64), (31, 8), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, -1), (38, -1), (39, -1), (40, -1), (41, 16), (42, 16), (43, 8), (44, -1), (45, -1), (46, 1), (47, 1), (48, -1), (49, 128), (50, 2), (51, 256), (52, -1), (53, 4), (54, 32), (55, 16), (56, -1), (57, 16), (58, 1), (59, -1), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 8), (22, 8), (23, 32), (24, 32), (25, 32), (26, 128), (27, 128), (28, 16), (29, 16), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 4), (38, 4), (39, -1), (40, 4), (41, 16), (42, 256), (43, 128), (44, -1), (45, 4), (46, 16), (47, 16), (48, -1), (49, 128), (50, 2), (51, 256), (52, 0), (53, 8), (54, 4), (55, 16), (56, -1), (57, 64), (58, 0), (59, -1), (60, 16), (61, -1)]

Covered at level 16 : {58, 52}

After reduction : 
 pending  : [29, 28, 20, 4, 3, 53, 26, 17, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25]
 solution : [0, 8, 9, 6, 16, 11]


Before reduction : 
 pending  : [29, 28, 20, 4, 3, 53, 26, 17, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25]
 solution : [0, 8, 9, 6, 16, 11]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 8), (22, 8), (23, 32), (24, 32), (25, 32), (26, 128), (27, 128), (28, 16), (29, 16), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 4), (38, 4), (39, -1), (40, 4), (41, 16), (42, 256), (43, 128), (44, -1), (45, 4), (46, 16), (47, 16), (48, -1), (49, 128), (50, 2), (51, 256), (52, 0), (53, 8), (54, 4), (55, 16), (56, -1), (57, 64), (58, 0), (59, -1), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 8), (22, 8), (23, 32), (24, 32), (25, 32), (26, 128), (27, 128), (28, 16), (29, 16), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 4), (38, 4), (39, -1), (40, 4), (41, 16), (42, 256), (43, 128), (44, -1), (45, 4), (46, 16), (47, 16), (48, -1), (49, 128), (50, 2), (51, 256), (52, -1), (53, 8), (54, 4), (55, 16), (56, -1), (57, 64), (58, -1), (59, -1), (60, 16), (61, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [29, 28, 20, 4, 3, 53, 26, 17, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25]
 solution : [0, 8, 9, 6, 16, 11]


Solution : [0, 8, 9, 6, 16, 11] has cost 27.


Before backtrack at level 16
 pending : [29, 28, 20, 4, 3, 53, 26, 17, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25]
 solution : [0, 8, 9, 6, 16, 11]

After backtrack at level 16
 pending : [29, 28, 20, 4, 3, 53, 26, 17, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25, 11, 58, 52]
 solution : [0, 8, 9, 6, 16]


Before backtrack at level 15
 pending : [29, 28, 20, 4, 3, 53, 26, 17, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25, 11, 58, 52]
 solution : [0, 8, 9, 6, 16]

After backtrack at level 15
 pending : [29, 28, 20, 4, 3, 53, 26, 17, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25, 11, 58, 52, 13]
 solution : [0, 8, 9, 6, 16]


Before backtrack at level 14
 pending : [29, 28, 20, 4, 3, 53, 26, 17, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25, 11, 58, 52, 13]
 solution : [0, 8, 9, 6, 16]

After backtrack at level 14
 pending : [29, 28, 20, 4, 3, 53, 26, 17, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25, 11, 58, 52, 13, 39]
 solution : [0, 8, 9, 6, 16]


Before backtrack at level 13
 pending : [29, 28, 20, 4, 3, 53, 26, 17, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25, 11, 58, 52, 13, 39]
 solution : [0, 8, 9, 6, 16]

After backtrack at level 13
 pending : [29, 28, 20, 4, 3, 53, 26, 17, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25, 11, 58, 52, 13, 39, 59]
 solution : [0, 8, 9, 6, 16]


Before backtrack at level 12
 pending : [29, 28, 20, 4, 3, 53, 26, 17, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25, 11, 58, 52, 13, 39, 59]
 solution : [0, 8, 9, 6, 16]

After backtrack at level 12
 pending : [29, 28, 20, 4, 3, 53, 26, 17, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25, 11, 58, 52, 13, 39, 59, 48]
 solution : [0, 8, 9, 6, 16]


Before backtrack at level 11
 pending : [29, 28, 20, 4, 3, 53, 26, 17, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25, 11, 58, 52, 13, 39, 59, 48]
 solution : [0, 8, 9, 6, 16]

After backtrack at level 11
 pending : [29, 28, 20, 4, 3, 53, 26, 17, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25, 11, 58, 52, 13, 39, 59, 48, 56]
 solution : [0, 8, 9, 6, 16]


Before backtrack at level 10
 pending : [29, 28, 20, 4, 3, 53, 26, 17, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25, 11, 58, 52, 13, 39, 59, 48, 56]
 solution : [0, 8, 9, 6, 16]

After backtrack at level 10
 pending : [29, 28, 20, 4, 3, 53, 26, 17, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25, 11, 58, 52, 13, 39, 59, 48, 56, 61, 33, 44, 18]
 solution : [0, 8, 9, 6, 16]


Invert decision for 16 at level 9


New level: 10
 pending : [29, 28, 20, 4, 3, 53, 26, 17, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25, 11, 58, 52, 13, 39, 59, 48, 56, 61, 33, 44, 18]
 solution : [0, 8, 9, 6]


Before reduction : 
 pending  : [29, 28, 20, 4, 3, 53, 26, 17, 23, 54, 2, 46, 42, 47, 31, 30, 27, 49, 57, 41, 34, 60, 51, 55, 32, 43, 35, 50, 36, 37, 38, 22, 21, 45, 40, 24, 25, 11, 58, 52, 13, 39, 59, 48, 56, 61, 33, 44, 18]
 solution : [0, 8, 9, 6]

Essensial at level 10 : {24, 17, 13}

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 64), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 8), (22, 8), (23, 32), (24, 32), (25, 32), (26, 128), (27, 128), (28, 16), (29, 16), (30, 64), (31, 32), (32, 8), (33, -1), (34, 8), (35, 4), (36, 64), (37, 4), (38, 4), (39, -1), (40, 4), (41, 16), (42, 256), (43, 128), (44, -1), (45, 4), (46, 16), (47, 16), (48, -1), (49, 128), (50, 2), (51, 256), (52, -1), (53, 8), (54, 4), (55, 16), (56, -1), (57, 64), (58, -1), (59, -1), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 512), (19, -1), (20, 0), (21, 0), (22, 2), (23, 1), (24, -1), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 2), (34, 0), (35, 1), (36, 0), (37, 1), (38, 32), (39, 0), (40, 1), (41, 1), (42, 1), (43, 1), (44, 1), (45, 1), (46, 128), (47, 0), (48, 0), (49, 0), (50, 2), (51, 0), (52, 2), (53, 0), (54, 4), (55, 0), (56, 4), (57, 0), (58, 256), (59, 2), (60, 0), (61, 2)]

Covered at level 10 : {3, 4, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 39, 47, 48, 49, 51, 53, 55, 57, 60}

After reduction : 
 pending  : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 18]
 solution : [0, 8, 9, 6, 24, 17, 13]


Before reduction : 
 pending  : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 18]
 solution : [0, 8, 9, 6, 24, 17, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 512), (19, -1), (20, 0), (21, 0), (22, 2), (23, 1), (24, -1), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 2), (34, 0), (35, 1), (36, 0), (37, 1), (38, 32), (39, 0), (40, 1), (41, 1), (42, 1), (43, 1), (44, 1), (45, 1), (46, 128), (47, 0), (48, 0), (49, 0), (50, 2), (51, 0), (52, 2), (53, 0), (54, 4), (55, 0), (56, 4), (57, 0), (58, 256), (59, 2), (60, 0), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 512), (19, -1), (20, -1), (21, -1), (22, 2), (23, 1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, 1), (36, -1), (37, 1), (38, 32), (39, -1), (40, 1), (41, 1), (42, 1), (43, 1), (44, 1), (45, 1), (46, 128), (47, -1), (48, -1), (49, -1), (50, 2), (51, -1), (52, 2), (53, -1), (54, 4), (55, -1), (56, 4), (57, -1), (58, 256), (59, 2), (60, -1), (61, 2)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 18]
 solution : [0, 8, 9, 6, 24, 17, 13]


Solution : [0, 8, 9, 6, 24, 17, 13] has cost 37.


Before backtrack at level 10
 pending : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 18]
 solution : [0, 8, 9, 6, 24, 17, 13]

After backtrack at level 10
 pending : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 18, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48]
 solution : [0, 8, 9, 6]


Before backtrack at level 9
 pending : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 18, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48]
 solution : [0, 8, 9, 6]

After backtrack at level 9
 pending : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 18, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16]
 solution : [0, 8, 9, 6]


Before backtrack at level 8
 pending : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 18, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16]
 solution : [0, 8, 9, 6]

After backtrack at level 8
 pending : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 18, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12]
 solution : [0, 8, 9, 6]


Before backtrack at level 7
 pending : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 18, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12]
 solution : [0, 8, 9, 6]

After backtrack at level 7
 pending : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 18, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12, 14]
 solution : [0, 8, 9, 6]


Before backtrack at level 6
 pending : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 18, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12, 14]
 solution : [0, 8, 9, 6]

After backtrack at level 6
 pending : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 18, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12, 14, 19]
 solution : [0, 8, 9, 6]


Before backtrack at level 5
 pending : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 18, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12, 14, 19]
 solution : [0, 8, 9, 6]

After backtrack at level 5
 pending : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 18, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15]
 solution : [0, 8, 9, 6]


Invert decision for 6 at level 4


New level: 5
 pending : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 18, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15]
 solution : [0, 8, 9]


Before reduction : 
 pending  : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 18, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15]
 solution : [0, 8, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 512), (19, -1), (20, -1), (21, -1), (22, 2), (23, 1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, 1), (36, -1), (37, 1), (38, 32), (39, -1), (40, 1), (41, 1), (42, 1), (43, 1), (44, 1), (45, 1), (46, 128), (47, -1), (48, -1), (49, -1), (50, 2), (51, -1), (52, 2), (53, -1), (54, 4), (55, -1), (56, 4), (57, -1), (58, 256), (59, 2), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 18, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15]
 solution : [0, 8, 9]


Solution : [0, 8, 9] has cost 13.


Decide in level 5 among pending : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 18, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Decide 18 with phase True at level 5

After decision at level 5
 pending : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15]
 solution : [0, 8, 9, 18]


New level: 6
 pending : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15]
 solution : [0, 8, 9, 18]


Before reduction : 
 pending  : [23, 54, 2, 46, 42, 41, 43, 35, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15]
 solution : [0, 8, 9, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, 64), (20, 128), (21, 64), (22, 128), (23, 64), (24, 128), (25, 64), (26, 128), (27, 128), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 32), (35, 0), (36, 16), (37, 16), (38, 32), (39, 32), (40, 16), (41, 16), (42, 16), (43, 8), (44, 32), (45, 32), (46, 256), (47, 16), (48, 256), (49, 64), (50, 128), (51, 128), (52, 64), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 64), (59, 64), (60, 32), (61, 32)]

Covered at level 6 : {35}

After reduction : 
 pending  : [23, 54, 2, 46, 42, 41, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15]
 solution : [0, 8, 9, 18]


Before reduction : 
 pending  : [23, 54, 2, 46, 42, 41, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15]
 solution : [0, 8, 9, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, 64), (20, 128), (21, 64), (22, 128), (23, 64), (24, 128), (25, 64), (26, 128), (27, 128), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 32), (35, 0), (36, 16), (37, 16), (38, 32), (39, 32), (40, 16), (41, 16), (42, 16), (43, 8), (44, 32), (45, 32), (46, 256), (47, 16), (48, 256), (49, 64), (50, 128), (51, 128), (52, 64), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 64), (59, 64), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, 64), (20, 128), (21, 64), (22, 128), (23, 64), (24, 128), (25, 64), (26, 128), (27, 128), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 32), (35, -1), (36, 16), (37, 16), (38, 32), (39, 32), (40, 16), (41, 16), (42, 16), (43, 8), (44, 32), (45, 32), (46, 256), (47, 16), (48, 256), (49, 64), (50, 128), (51, 128), (52, 64), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 64), (59, 64), (60, 32), (61, 32)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 54, 2, 46, 42, 41, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15]
 solution : [0, 8, 9, 18]


Solution : [0, 8, 9, 18] has cost 22.


Decide in level 6 among pending : [23, 54, 2, 46, 42, 41, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 17, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15]

Coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, 64), (20, 128), (21, 64), (22, 128), (23, 64), (24, 128), (25, 64), (26, 128), (27, 128), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 32), (35, -1), (36, 16), (37, 16), (38, 32), (39, 32), (40, 16), (41, 16), (42, 16), (43, 8), (44, 32), (45, 32), (46, 256), (47, 16), (48, 256), (49, 64), (50, 128), (51, 128), (52, 64), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 64), (59, 64), (60, 32), (61, 32)]

Decide 17 with phase True at level 6

After decision at level 6
 pending : [23, 54, 2, 46, 42, 41, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15]
 solution : [0, 8, 9, 18, 17]


New level: 7
 pending : [23, 54, 2, 46, 42, 41, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15]
 solution : [0, 8, 9, 18, 17]


Before reduction : 
 pending  : [23, 54, 2, 46, 42, 41, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 24, 13, 29, 28, 20, 4, 3, 53, 26, 47, 31, 30, 27, 49, 57, 34, 60, 51, 55, 32, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15]
 solution : [0, 8, 9, 18, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, 64), (20, 128), (21, 64), (22, 128), (23, 64), (24, 128), (25, 64), (26, 128), (27, 128), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 32), (35, -1), (36, 16), (37, 16), (38, 32), (39, 32), (40, 16), (41, 16), (42, 16), (43, 8), (44, 32), (45, 32), (46, 256), (47, 16), (48, 256), (49, 64), (50, 128), (51, 128), (52, 64), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 64), (59, 64), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 128), (16, 128), (17, -1), (18, -1), (19, 64), (20, 32), (21, 64), (22, 128), (23, 64), (24, 128), (25, 64), (26, 32), (27, 8), (28, 128), (29, 64), (30, 4), (31, 8), (32, 0), (33, 4), (34, 0), (35, -1), (36, 1), (37, 16), (38, 32), (39, 4), (40, 16), (41, 0), (42, 2), (43, 1), (44, 4), (45, 32), (46, 256), (47, 4), (48, 4), (49, 4), (50, 32), (51, 1), (52, 64), (53, 16), (54, 16), (55, 0), (56, 128), (57, 8), (58, 64), (59, 8), (60, 0), (61, 4)]

Covered at level 7 : {32, 34, 3, 4, 41, 55, 60}

After reduction : 
 pending  : [23, 54, 2, 46, 42, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 24, 13, 29, 28, 20, 53, 26, 47, 31, 30, 27, 49, 57, 51, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15]
 solution : [0, 8, 9, 18, 17]


Before reduction : 
 pending  : [23, 54, 2, 46, 42, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 24, 13, 29, 28, 20, 53, 26, 47, 31, 30, 27, 49, 57, 51, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15]
 solution : [0, 8, 9, 18, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 128), (16, 128), (17, -1), (18, -1), (19, 64), (20, 32), (21, 64), (22, 128), (23, 64), (24, 128), (25, 64), (26, 32), (27, 8), (28, 128), (29, 64), (30, 4), (31, 8), (32, 0), (33, 4), (34, 0), (35, -1), (36, 1), (37, 16), (38, 32), (39, 4), (40, 16), (41, 0), (42, 2), (43, 1), (44, 4), (45, 32), (46, 256), (47, 4), (48, 4), (49, 4), (50, 32), (51, 1), (52, 64), (53, 16), (54, 16), (55, 0), (56, 128), (57, 8), (58, 64), (59, 8), (60, 0), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 128), (16, 128), (17, -1), (18, -1), (19, 64), (20, 32), (21, 64), (22, 128), (23, 64), (24, 128), (25, 64), (26, 32), (27, 8), (28, 128), (29, 64), (30, 4), (31, 8), (32, -1), (33, 4), (34, -1), (35, -1), (36, 1), (37, 16), (38, 32), (39, 4), (40, 16), (41, -1), (42, 2), (43, 1), (44, 4), (45, 32), (46, 256), (47, 4), (48, 4), (49, 4), (50, 32), (51, 1), (52, 64), (53, 16), (54, 16), (55, -1), (56, 128), (57, 8), (58, 64), (59, 8), (60, -1), (61, 4)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 54, 2, 46, 42, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 24, 13, 29, 28, 20, 53, 26, 47, 31, 30, 27, 49, 57, 51, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15]
 solution : [0, 8, 9, 18, 17]


Solution : [0, 8, 9, 18, 17] has cost 28.


Before backtrack at level 7
 pending : [23, 54, 2, 46, 42, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 24, 13, 29, 28, 20, 53, 26, 47, 31, 30, 27, 49, 57, 51, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15]
 solution : [0, 8, 9, 18, 17]

After backtrack at level 7
 pending : [23, 54, 2, 46, 42, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 24, 13, 29, 28, 20, 53, 26, 47, 31, 30, 27, 49, 57, 51, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15, 41, 4, 3, 34, 60, 55, 32]
 solution : [0, 8, 9, 18, 17]


Invert decision for 17 at level 6


New level: 7
 pending : [23, 54, 2, 46, 42, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 24, 13, 29, 28, 20, 53, 26, 47, 31, 30, 27, 49, 57, 51, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15, 41, 4, 3, 34, 60, 55, 32]
 solution : [0, 8, 9, 18]


Before reduction : 
 pending  : [23, 54, 2, 46, 42, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 24, 13, 29, 28, 20, 53, 26, 47, 31, 30, 27, 49, 57, 51, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15, 41, 4, 3, 34, 60, 55, 32]
 solution : [0, 8, 9, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 128), (16, 128), (17, -1), (18, -1), (19, 64), (20, 32), (21, 64), (22, 128), (23, 64), (24, 128), (25, 64), (26, 32), (27, 8), (28, 128), (29, 64), (30, 4), (31, 8), (32, -1), (33, 4), (34, -1), (35, -1), (36, 1), (37, 16), (38, 32), (39, 4), (40, 16), (41, -1), (42, 2), (43, 1), (44, 4), (45, 32), (46, 256), (47, 4), (48, 4), (49, 4), (50, 32), (51, 1), (52, 64), (53, 16), (54, 16), (55, -1), (56, 128), (57, 8), (58, 64), (59, 8), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, -1), (18, -1), (19, 64), (20, 128), (21, 64), (22, 128), (23, 64), (24, 128), (25, 64), (26, 128), (27, 128), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 32), (35, -1), (36, 16), (37, 16), (38, 32), (39, 32), (40, 16), (41, 16), (42, 16), (43, 8), (44, 32), (45, 32), (46, 256), (47, 16), (48, 256), (49, 64), (50, 128), (51, 128), (52, 64), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 64), (59, 64), (60, 32), (61, 32)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 54, 2, 46, 42, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 24, 13, 29, 28, 20, 53, 26, 47, 31, 30, 27, 49, 57, 51, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15, 41, 4, 3, 34, 60, 55, 32]
 solution : [0, 8, 9, 18]


Solution : [0, 8, 9, 18] has cost 22.


Decide in level 7 among pending : [23, 54, 2, 46, 42, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 24, 13, 29, 28, 20, 53, 26, 47, 31, 30, 27, 49, 57, 51, 36, 21, 25, 39, 48, 16, 12, 14, 19, 15, 41, 4, 3, 34, 60, 55, 32]

Coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, -1), (18, -1), (19, 64), (20, 128), (21, 64), (22, 128), (23, 64), (24, 128), (25, 64), (26, 128), (27, 128), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 32), (35, -1), (36, 16), (37, 16), (38, 32), (39, 32), (40, 16), (41, 16), (42, 16), (43, 8), (44, 32), (45, 32), (46, 256), (47, 16), (48, 256), (49, 64), (50, 128), (51, 128), (52, 64), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 64), (59, 64), (60, 32), (61, 32)]

Decide 16 with phase True at level 7

After decision at level 7
 pending : [23, 54, 2, 46, 42, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 24, 13, 29, 28, 20, 53, 26, 47, 31, 30, 27, 49, 57, 51, 36, 21, 25, 39, 48, 12, 14, 19, 15, 41, 4, 3, 34, 60, 55, 32]
 solution : [0, 8, 9, 18, 16]


New level: 8
 pending : [23, 54, 2, 46, 42, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 24, 13, 29, 28, 20, 53, 26, 47, 31, 30, 27, 49, 57, 51, 36, 21, 25, 39, 48, 12, 14, 19, 15, 41, 4, 3, 34, 60, 55, 32]
 solution : [0, 8, 9, 18, 16]


Before reduction : 
 pending  : [23, 54, 2, 46, 42, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 61, 33, 44, 24, 13, 29, 28, 20, 53, 26, 47, 31, 30, 27, 49, 57, 51, 36, 21, 25, 39, 48, 12, 14, 19, 15, 41, 4, 3, 34, 60, 55, 32]
 solution : [0, 8, 9, 18, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, -1), (18, -1), (19, 64), (20, 128), (21, 64), (22, 128), (23, 64), (24, 128), (25, 64), (26, 128), (27, 128), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 32), (35, -1), (36, 16), (37, 16), (38, 32), (39, 32), (40, 16), (41, 16), (42, 16), (43, 8), (44, 32), (45, 32), (46, 256), (47, 16), (48, 256), (49, 64), (50, 128), (51, 128), (52, 64), (53, 64), (54, 128), (55, 64), (56, 128), (57, 64), (58, 64), (59, 64), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, 256), (14, 256), (15, 256), (16, -1), (17, -1), (18, -1), (19, 64), (20, 128), (21, 64), (22, 64), (23, 64), (24, 64), (25, 64), (26, 128), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 32), (33, 0), (34, 16), (35, -1), (36, 16), (37, 8), (38, 8), (39, 32), (40, 8), (41, 4), (42, 8), (43, 8), (44, 0), (45, 16), (46, 16), (47, 16), (48, 256), (49, 64), (50, 4), (51, 128), (52, 32), (53, 32), (54, 32), (55, 32), (56, 128), (57, 32), (58, 16), (59, 64), (60, 16), (61, 0)]

Covered at level 8 : {33, 44, 61}

After reduction : 
 pending  : [23, 54, 2, 46, 42, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 20, 53, 26, 47, 31, 30, 27, 49, 57, 51, 36, 21, 25, 39, 48, 12, 14, 19, 15, 41, 4, 3, 34, 60, 55, 32]
 solution : [0, 8, 9, 18, 16]


Before reduction : 
 pending  : [23, 54, 2, 46, 42, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 20, 53, 26, 47, 31, 30, 27, 49, 57, 51, 36, 21, 25, 39, 48, 12, 14, 19, 15, 41, 4, 3, 34, 60, 55, 32]
 solution : [0, 8, 9, 18, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, 256), (14, 256), (15, 256), (16, -1), (17, -1), (18, -1), (19, 64), (20, 128), (21, 64), (22, 64), (23, 64), (24, 64), (25, 64), (26, 128), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 32), (33, 0), (34, 16), (35, -1), (36, 16), (37, 8), (38, 8), (39, 32), (40, 8), (41, 4), (42, 8), (43, 8), (44, 0), (45, 16), (46, 16), (47, 16), (48, 256), (49, 64), (50, 4), (51, 128), (52, 32), (53, 32), (54, 32), (55, 32), (56, 128), (57, 32), (58, 16), (59, 64), (60, 16), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, 256), (14, 256), (15, 256), (16, -1), (17, -1), (18, -1), (19, 64), (20, 128), (21, 64), (22, 64), (23, 64), (24, 64), (25, 64), (26, 128), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 32), (33, -1), (34, 16), (35, -1), (36, 16), (37, 8), (38, 8), (39, 32), (40, 8), (41, 4), (42, 8), (43, 8), (44, -1), (45, 16), (46, 16), (47, 16), (48, 256), (49, 64), (50, 4), (51, 128), (52, 32), (53, 32), (54, 32), (55, 32), (56, 128), (57, 32), (58, 16), (59, 64), (60, 16), (61, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 54, 2, 46, 42, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 20, 53, 26, 47, 31, 30, 27, 49, 57, 51, 36, 21, 25, 39, 48, 12, 14, 19, 15, 41, 4, 3, 34, 60, 55, 32]
 solution : [0, 8, 9, 18, 16]


Solution : [0, 8, 9, 18, 16] has cost 28.


Before backtrack at level 8
 pending : [23, 54, 2, 46, 42, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 20, 53, 26, 47, 31, 30, 27, 49, 57, 51, 36, 21, 25, 39, 48, 12, 14, 19, 15, 41, 4, 3, 34, 60, 55, 32]
 solution : [0, 8, 9, 18, 16]

After backtrack at level 8
 pending : [23, 54, 2, 46, 42, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 20, 53, 26, 47, 31, 30, 27, 49, 57, 51, 36, 21, 25, 39, 48, 12, 14, 19, 15, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44]
 solution : [0, 8, 9, 18, 16]


Invert decision for 16 at level 7


New level: 8
 pending : [23, 54, 2, 46, 42, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 20, 53, 26, 47, 31, 30, 27, 49, 57, 51, 36, 21, 25, 39, 48, 12, 14, 19, 15, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44]
 solution : [0, 8, 9, 18]


Before reduction : 
 pending  : [23, 54, 2, 46, 42, 43, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 20, 53, 26, 47, 31, 30, 27, 49, 57, 51, 36, 21, 25, 39, 48, 12, 14, 19, 15, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44]
 solution : [0, 8, 9, 18]

Essensial at level 8 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, 256), (14, 256), (15, 256), (16, -1), (17, -1), (18, -1), (19, 64), (20, 128), (21, 64), (22, 64), (23, 64), (24, 64), (25, 64), (26, 128), (27, 64), (28, 64), (29, 64), (30, 64), (31, 32), (32, 32), (33, -1), (34, 16), (35, -1), (36, 16), (37, 8), (38, 8), (39, 32), (40, 8), (41, 4), (42, 8), (43, 8), (44, -1), (45, 16), (46, 16), (47, 16), (48, 256), (49, 64), (50, 4), (51, 128), (52, 32), (53, 32), (54, 32), (55, 32), (56, 128), (57, 32), (58, 16), (59, 64), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 64), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, 64), (20, 0), (21, 16), (22, 64), (23, 16), (24, 64), (25, 16), (26, 0), (27, 1), (28, 8), (29, 4), (30, 1), (31, 0), (32, 32), (33, 16), (34, 16), (35, -1), (36, 1), (37, 4), (38, 8), (39, 0), (40, 4), (41, 1), (42, 0), (43, 0), (44, 2), (45, 8), (46, 16), (47, 0), (48, 8), (49, 1), (50, 32), (51, 32), (52, 32), (53, 0), (54, 128), (55, 32), (56, 32), (57, 0), (58, 64), (59, 8), (60, 16), (61, 16)]

Covered at level 8 : {39, 42, 43, 47, 20, 53, 57, 26, 31}

After reduction : 
 pending  : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 12, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44]
 solution : [0, 8, 9, 18, 15]


Before reduction : 
 pending  : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 12, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44]
 solution : [0, 8, 9, 18, 15]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 64), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, 64), (20, 0), (21, 16), (22, 64), (23, 16), (24, 64), (25, 16), (26, 0), (27, 1), (28, 8), (29, 4), (30, 1), (31, 0), (32, 32), (33, 16), (34, 16), (35, -1), (36, 1), (37, 4), (38, 8), (39, 0), (40, 4), (41, 1), (42, 0), (43, 0), (44, 2), (45, 8), (46, 16), (47, 0), (48, 8), (49, 1), (50, 32), (51, 32), (52, 32), (53, 0), (54, 128), (55, 32), (56, 32), (57, 0), (58, 64), (59, 8), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 64), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, 64), (20, -1), (21, 16), (22, 64), (23, 16), (24, 64), (25, 16), (26, -1), (27, 1), (28, 8), (29, 4), (30, 1), (31, -1), (32, 32), (33, 16), (34, 16), (35, -1), (36, 1), (37, 4), (38, 8), (39, -1), (40, 4), (41, 1), (42, -1), (43, -1), (44, 2), (45, 8), (46, 16), (47, -1), (48, 8), (49, 1), (50, 32), (51, 32), (52, 32), (53, -1), (54, 128), (55, 32), (56, 32), (57, -1), (58, 64), (59, 8), (60, 16), (61, 16)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 12, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44]
 solution : [0, 8, 9, 18, 15]


Solution : [0, 8, 9, 18, 15] has cost 28.


Before backtrack at level 8
 pending : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 12, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44]
 solution : [0, 8, 9, 18, 15]

After backtrack at level 8
 pending : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 12, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39]
 solution : [0, 8, 9, 18]


Before backtrack at level 7
 pending : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 12, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39]
 solution : [0, 8, 9, 18]

After backtrack at level 7
 pending : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 12, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16]
 solution : [0, 8, 9, 18]


Before backtrack at level 6
 pending : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 12, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16]
 solution : [0, 8, 9, 18]

After backtrack at level 6
 pending : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 12, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17]
 solution : [0, 8, 9, 18]


Invert decision for 18 at level 5


New level: 6
 pending : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 12, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17]
 solution : [0, 8, 9]


Before reduction : 
 pending  : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 12, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17]
 solution : [0, 8, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 64), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, 64), (20, -1), (21, 16), (22, 64), (23, 16), (24, 64), (25, 16), (26, -1), (27, 1), (28, 8), (29, 4), (30, 1), (31, -1), (32, 32), (33, 16), (34, 16), (35, -1), (36, 1), (37, 4), (38, 8), (39, -1), (40, 4), (41, 1), (42, -1), (43, -1), (44, 2), (45, 8), (46, 16), (47, -1), (48, 8), (49, 1), (50, 32), (51, 32), (52, 32), (53, -1), (54, 128), (55, 32), (56, 32), (57, -1), (58, 64), (59, 8), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 12, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17]
 solution : [0, 8, 9]


Solution : [0, 8, 9] has cost 13.


Decide in level 6 among pending : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 12, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Decide 12 with phase True at level 6

After decision at level 6
 pending : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17]
 solution : [0, 8, 9, 12]


New level: 7
 pending : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17]
 solution : [0, 8, 9, 12]


Before reduction : 
 pending  : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 11, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17]
 solution : [0, 8, 9, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 512), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 32), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, 512), (20, 128), (21, 16), (22, 64), (23, 32), (24, 64), (25, 32), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 16), (48, 256), (49, 128), (50, 128), (51, 256), (52, 32), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 7 : {11}

After reduction : 
 pending  : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17]
 solution : [0, 8, 9, 12]


Before reduction : 
 pending  : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17]
 solution : [0, 8, 9, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 32), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, 512), (20, 128), (21, 16), (22, 64), (23, 32), (24, 64), (25, 32), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 16), (48, 256), (49, 128), (50, 128), (51, 256), (52, 32), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, 512), (20, 128), (21, 16), (22, 64), (23, 32), (24, 64), (25, 32), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 16), (48, 256), (49, 128), (50, 128), (51, 256), (52, 32), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17]
 solution : [0, 8, 9, 12]


Solution : [0, 8, 9, 12] has cost 19.


Decide in level 7 among pending : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 14, 19, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, 512), (20, 128), (21, 16), (22, 64), (23, 32), (24, 64), (25, 32), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 16), (48, 256), (49, 128), (50, 128), (51, 256), (52, 32), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

Decide 19 with phase True at level 7

After decision at level 7
 pending : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 14, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17]
 solution : [0, 8, 9, 12, 19]


New level: 8
 pending : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 14, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17]
 solution : [0, 8, 9, 12, 19]


Before reduction : 
 pending  : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 36, 21, 25, 48, 14, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17]
 solution : [0, 8, 9, 12, 19]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, 512), (20, 128), (21, 16), (22, 64), (23, 32), (24, 64), (25, 32), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 16), (48, 256), (49, 128), (50, 128), (51, 256), (52, 32), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 128), (21, 16), (22, 64), (23, 16), (24, 64), (25, 32), (26, 128), (27, 64), (28, 32), (29, 16), (30, 16), (31, 32), (32, 32), (33, 32), (34, 64), (35, 32), (36, 0), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 4), (48, 256), (49, 32), (50, 16), (51, 32), (52, 16), (53, 32), (54, 32), (55, 64), (56, 32), (57, 64), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 8 : {36}

After reduction : 
 pending  : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 21, 25, 48, 14, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17]
 solution : [0, 8, 9, 12, 19]


Before reduction : 
 pending  : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 21, 25, 48, 14, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17]
 solution : [0, 8, 9, 12, 19]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 128), (21, 16), (22, 64), (23, 16), (24, 64), (25, 32), (26, 128), (27, 64), (28, 32), (29, 16), (30, 16), (31, 32), (32, 32), (33, 32), (34, 64), (35, 32), (36, 0), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 4), (48, 256), (49, 32), (50, 16), (51, 32), (52, 16), (53, 32), (54, 32), (55, 64), (56, 32), (57, 64), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 128), (21, 16), (22, 64), (23, 16), (24, 64), (25, 32), (26, 128), (27, 64), (28, 32), (29, 16), (30, 16), (31, 32), (32, 32), (33, 32), (34, 64), (35, 32), (36, -1), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 4), (48, 256), (49, 32), (50, 16), (51, 32), (52, 16), (53, 32), (54, 32), (55, 64), (56, 32), (57, 64), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 21, 25, 48, 14, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17]
 solution : [0, 8, 9, 12, 19]


Solution : [0, 8, 9, 12, 19] has cost 28.


Before backtrack at level 8
 pending : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 21, 25, 48, 14, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17]
 solution : [0, 8, 9, 12, 19]

After backtrack at level 8
 pending : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 21, 25, 48, 14, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17, 36]
 solution : [0, 8, 9, 12, 19]


Invert decision for 19 at level 7


New level: 8
 pending : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 21, 25, 48, 14, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17, 36]
 solution : [0, 8, 9, 12]


Before reduction : 
 pending  : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 21, 25, 48, 14, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17, 36]
 solution : [0, 8, 9, 12]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 128), (21, 16), (22, 64), (23, 16), (24, 64), (25, 32), (26, 128), (27, 64), (28, 32), (29, 16), (30, 16), (31, 32), (32, 32), (33, 32), (34, 64), (35, 32), (36, -1), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 4), (48, 256), (49, 32), (50, 16), (51, 32), (52, 16), (53, 32), (54, 32), (55, 64), (56, 32), (57, 64), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 128), (21, 16), (22, 64), (23, 32), (24, 64), (25, 32), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 16), (48, 256), (49, 128), (50, 128), (51, 256), (52, 32), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 21, 25, 48, 14, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17, 36]
 solution : [0, 8, 9, 12]


Solution : [0, 8, 9, 12] has cost 19.


Decide in level 8 among pending : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 21, 25, 48, 14, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 15, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17, 36]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 128), (21, 16), (22, 64), (23, 32), (24, 64), (25, 32), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 16), (48, 256), (49, 128), (50, 128), (51, 256), (52, 32), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

Decide 15 with phase True at level 8

After decision at level 8
 pending : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 21, 25, 48, 14, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17, 36]
 solution : [0, 8, 9, 12, 15]


New level: 9
 pending : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 21, 25, 48, 14, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17, 36]
 solution : [0, 8, 9, 12, 15]


Before reduction : 
 pending  : [23, 54, 2, 46, 50, 37, 38, 22, 45, 40, 58, 52, 59, 56, 24, 13, 29, 28, 30, 27, 49, 51, 21, 25, 48, 14, 41, 4, 3, 34, 60, 55, 32, 61, 33, 44, 42, 43, 20, 53, 26, 47, 31, 57, 39, 16, 35, 17, 36]
 solution : [0, 8, 9, 12, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 128), (21, 16), (22, 64), (23, 32), (24, 64), (25, 32), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 16), (48, 256), (49, 128), (50, 128), (51, 256), (52, 32), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 2), (17, 256), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 4), (28, 0), (29, 0), (30, 2), (31, 0), (32, 32), (33, 2), (34, 32), (35, 64), (36, 4), (37, 0), (38, 1), (39, 8), (40, 0), (41, 128), (42, 0), (43, 32), (44, 0), (45, 0), (46, 2), (47, 0), (48, 16), (49, 4), (50, 2), (51, 64), (52, 0), (53, 0), (54, 2), (55, 64), (56, 0), (57, 0), (58, 0), (59, 2), (60, 64), (61, 2)]

Covered at level 9 : {13, 14, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 37, 40, 42, 44, 45, 47, 52, 53, 56, 57, 58}

After reduction : 
 pending  : [54, 2, 46, 50, 38, 59, 30, 27, 49, 51, 48, 41, 4, 3, 34, 60, 55, 32, 61, 33, 43, 39, 16, 35, 17, 36]
 solution : [0, 8, 9, 12, 15]


Before reduction : 
 pending  : [54, 2, 46, 50, 38, 59, 30, 27, 49, 51, 48, 41, 4, 3, 34, 60, 55, 32, 61, 33, 43, 39, 16, 35, 17, 36]
 solution : [0, 8, 9, 12, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 2), (17, 256), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 4), (28, 0), (29, 0), (30, 2), (31, 0), (32, 32), (33, 2), (34, 32), (35, 64), (36, 4), (37, 0), (38, 1), (39, 8), (40, 0), (41, 128), (42, 0), (43, 32), (44, 0), (45, 0), (46, 2), (47, 0), (48, 16), (49, 4), (50, 2), (51, 64), (52, 0), (53, 0), (54, 2), (55, 64), (56, 0), (57, 0), (58, 0), (59, 2), (60, 64), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, -1), (29, -1), (30, 2), (31, -1), (32, 32), (33, 2), (34, 32), (35, 64), (36, 4), (37, -1), (38, 1), (39, 8), (40, -1), (41, 128), (42, -1), (43, 32), (44, -1), (45, -1), (46, 2), (47, -1), (48, 16), (49, 4), (50, 2), (51, 64), (52, -1), (53, -1), (54, 2), (55, 64), (56, -1), (57, -1), (58, -1), (59, 2), (60, 64), (61, 2)]

Covered at level 9 : set()

After reduction : 
 pending  : [54, 2, 46, 50, 38, 59, 30, 27, 49, 51, 48, 41, 4, 3, 34, 60, 55, 32, 61, 33, 43, 39, 16, 35, 17, 36]
 solution : [0, 8, 9, 12, 15]


Solution : [0, 8, 9, 12, 15] has cost 25.


Before backtrack at level 9
 pending : [54, 2, 46, 50, 38, 59, 30, 27, 49, 51, 48, 41, 4, 3, 34, 60, 55, 32, 61, 33, 43, 39, 16, 35, 17, 36]
 solution : [0, 8, 9, 12, 15]

After backtrack at level 9
 pending : [54, 2, 46, 50, 38, 59, 30, 27, 49, 51, 48, 41, 4, 3, 34, 60, 55, 32, 61, 33, 43, 39, 16, 35, 17, 36, 23, 37, 22, 45, 40, 58, 52, 56, 24, 13, 29, 28, 21, 25, 14, 44, 42, 20, 53, 26, 47, 31, 57]
 solution : [0, 8, 9, 12, 15]


Invert decision for 15 at level 8


New level: 9
 pending : [54, 2, 46, 50, 38, 59, 30, 27, 49, 51, 48, 41, 4, 3, 34, 60, 55, 32, 61, 33, 43, 39, 16, 35, 17, 36, 23, 37, 22, 45, 40, 58, 52, 56, 24, 13, 29, 28, 21, 25, 14, 44, 42, 20, 53, 26, 47, 31, 57]
 solution : [0, 8, 9, 12]


Before reduction : 
 pending  : [54, 2, 46, 50, 38, 59, 30, 27, 49, 51, 48, 41, 4, 3, 34, 60, 55, 32, 61, 33, 43, 39, 16, 35, 17, 36, 23, 37, 22, 45, 40, 58, 52, 56, 24, 13, 29, 28, 21, 25, 14, 44, 42, 20, 53, 26, 47, 31, 57]
 solution : [0, 8, 9, 12]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, -1), (29, -1), (30, 2), (31, -1), (32, 32), (33, 2), (34, 32), (35, 64), (36, 4), (37, -1), (38, 1), (39, 8), (40, -1), (41, 128), (42, -1), (43, 32), (44, -1), (45, -1), (46, 2), (47, -1), (48, 16), (49, 4), (50, 2), (51, 64), (52, -1), (53, -1), (54, 2), (55, 64), (56, -1), (57, -1), (58, -1), (59, 2), (60, 64), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 256), (15, -1), (16, 256), (17, 512), (18, -1), (19, -1), (20, 128), (21, 16), (22, 64), (23, 32), (24, 64), (25, 32), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 16), (48, 256), (49, 128), (50, 128), (51, 256), (52, 32), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 9 : set()

After reduction : 
 pending  : [54, 2, 46, 50, 38, 59, 30, 27, 49, 51, 48, 41, 4, 3, 34, 60, 55, 32, 61, 33, 43, 39, 16, 35, 17, 36, 23, 37, 22, 45, 40, 58, 52, 56, 24, 13, 29, 28, 21, 25, 14, 44, 42, 20, 53, 26, 47, 31, 57]
 solution : [0, 8, 9, 12]


Solution : [0, 8, 9, 12] has cost 19.


Decide in level 9 among pending : [54, 2, 46, 50, 38, 59, 30, 27, 49, 51, 48, 41, 4, 3, 34, 60, 55, 32, 61, 33, 43, 39, 16, 35, 17, 36, 23, 37, 22, 45, 40, 58, 52, 56, 24, 13, 29, 28, 21, 25, 14, 44, 42, 20, 53, 26, 47, 31, 57]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 256), (15, -1), (16, 256), (17, 512), (18, -1), (19, -1), (20, 128), (21, 16), (22, 64), (23, 32), (24, 64), (25, 32), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 16), (48, 256), (49, 128), (50, 128), (51, 256), (52, 32), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

Decide 17 with phase True at level 9

After decision at level 9
 pending : [54, 2, 46, 50, 38, 59, 30, 27, 49, 51, 48, 41, 4, 3, 34, 60, 55, 32, 61, 33, 43, 39, 16, 35, 36, 23, 37, 22, 45, 40, 58, 52, 56, 24, 13, 29, 28, 21, 25, 14, 44, 42, 20, 53, 26, 47, 31, 57]
 solution : [0, 8, 9, 12, 17]


New level: 10
 pending : [54, 2, 46, 50, 38, 59, 30, 27, 49, 51, 48, 41, 4, 3, 34, 60, 55, 32, 61, 33, 43, 39, 16, 35, 36, 23, 37, 22, 45, 40, 58, 52, 56, 24, 13, 29, 28, 21, 25, 14, 44, 42, 20, 53, 26, 47, 31, 57]
 solution : [0, 8, 9, 12, 17]


Before reduction : 
 pending  : [54, 2, 46, 50, 38, 59, 30, 27, 49, 51, 48, 41, 4, 3, 34, 60, 55, 32, 61, 33, 43, 39, 16, 35, 36, 23, 37, 22, 45, 40, 58, 52, 56, 24, 13, 29, 28, 21, 25, 14, 44, 42, 20, 53, 26, 47, 31, 57]
 solution : [0, 8, 9, 12, 17]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 256), (15, -1), (16, 256), (17, 512), (18, -1), (19, -1), (20, 128), (21, 16), (22, 64), (23, 32), (24, 64), (25, 32), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 64), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 64), (38, 128), (39, 256), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 128), (47, 16), (48, 256), (49, 128), (50, 128), (51, 256), (52, 32), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 32), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 16), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 8), (38, 8), (39, 8), (40, 8), (41, 0), (42, 1), (43, 1), (44, 0), (45, 8), (46, 2), (47, 2), (48, 2), (49, 2), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 2), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 10 : {2, 3, 4, 16, 32, 33, 34, 35, 36, 41, 44, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61}

After reduction : 
 pending  : [46, 38, 30, 27, 49, 48, 43, 39, 23, 37, 22, 45, 40, 56, 24, 13, 29, 28, 21, 25, 14, 42, 20, 26, 47, 31, 57]
 solution : [0, 8, 9, 12, 17]


Before reduction : 
 pending  : [46, 38, 30, 27, 49, 48, 43, 39, 23, 37, 22, 45, 40, 56, 24, 13, 29, 28, 21, 25, 14, 42, 20, 26, 47, 31, 57]
 solution : [0, 8, 9, 12, 17]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 32), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 16), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 8), (38, 8), (39, 8), (40, 8), (41, 0), (42, 1), (43, 1), (44, 0), (45, 8), (46, 2), (47, 2), (48, 2), (49, 2), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 2), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 16), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 8), (38, 8), (39, 8), (40, 8), (41, -1), (42, 1), (43, 1), (44, -1), (45, 8), (46, 2), (47, 2), (48, 2), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [46, 38, 30, 27, 49, 48, 43, 39, 23, 37, 22, 45, 40, 56, 24, 13, 29, 28, 21, 25, 14, 42, 20, 26, 47, 31, 57]
 solution : [0, 8, 9, 12, 17]


Solution : [0, 8, 9, 12, 17] has cost 25.


Before backtrack at level 10
 pending : [46, 38, 30, 27, 49, 48, 43, 39, 23, 37, 22, 45, 40, 56, 24, 13, 29, 28, 21, 25, 14, 42, 20, 26, 47, 31, 57]
 solution : [0, 8, 9, 12, 17]

After backtrack at level 10
 pending : [46, 38, 30, 27, 49, 48, 43, 39, 23, 37, 22, 45, 40, 56, 24, 13, 29, 28, 21, 25, 14, 42, 20, 26, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 61, 33, 16, 35, 36, 58, 52, 44, 53]
 solution : [0, 8, 9, 12, 17]


Invert decision for 17 at level 9


New level: 10
 pending : [46, 38, 30, 27, 49, 48, 43, 39, 23, 37, 22, 45, 40, 56, 24, 13, 29, 28, 21, 25, 14, 42, 20, 26, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 61, 33, 16, 35, 36, 58, 52, 44, 53]
 solution : [0, 8, 9, 12]


Before reduction : 
 pending  : [46, 38, 30, 27, 49, 48, 43, 39, 23, 37, 22, 45, 40, 56, 24, 13, 29, 28, 21, 25, 14, 42, 20, 26, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 61, 33, 16, 35, 36, 58, 52, 44, 53]
 solution : [0, 8, 9, 12]

Essensial at level 10 : {16, 26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 16), (23, 2), (24, 32), (25, 32), (26, 32), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 8), (38, 8), (39, 8), (40, 8), (41, -1), (42, 1), (43, 1), (44, -1), (45, 8), (46, 2), (47, 2), (48, 2), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 2), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 0), (22, 0), (23, 2), (24, 0), (25, 0), (26, -1), (27, 64), (28, 1), (29, 1), (30, 32), (31, 1), (32, 32), (33, 0), (34, 32), (35, 16), (36, 64), (37, 0), (38, 0), (39, 128), (40, 0), (41, 64), (42, 1), (43, 8), (44, 0), (45, 0), (46, 1), (47, 1), (48, 128), (49, 64), (50, 2), (51, 256), (52, 0), (53, 8), (54, 16), (55, 64), (56, 2), (57, 2), (58, 0), (59, 16), (60, 64), (61, 0)]

Covered at level 10 : {33, 37, 38, 40, 44, 45, 13, 14, 52, 21, 22, 24, 25, 58, 61}

After reduction : 
 pending  : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53]
 solution : [0, 8, 9, 12, 16, 26]


Before reduction : 
 pending  : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53]
 solution : [0, 8, 9, 12, 16, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 0), (22, 0), (23, 2), (24, 0), (25, 0), (26, -1), (27, 64), (28, 1), (29, 1), (30, 32), (31, 1), (32, 32), (33, 0), (34, 32), (35, 16), (36, 64), (37, 0), (38, 0), (39, 128), (40, 0), (41, 64), (42, 1), (43, 8), (44, 0), (45, 0), (46, 1), (47, 1), (48, 128), (49, 64), (50, 2), (51, 256), (52, 0), (53, 8), (54, 16), (55, 64), (56, 2), (57, 2), (58, 0), (59, 16), (60, 64), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 2), (24, -1), (25, -1), (26, -1), (27, 64), (28, 1), (29, 1), (30, 32), (31, 1), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, -1), (38, -1), (39, 128), (40, -1), (41, 64), (42, 1), (43, 8), (44, -1), (45, -1), (46, 1), (47, 1), (48, 128), (49, 64), (50, 2), (51, 256), (52, -1), (53, 8), (54, 16), (55, 64), (56, 2), (57, 2), (58, -1), (59, 16), (60, 64), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53]
 solution : [0, 8, 9, 12, 16, 26]


Solution : [0, 8, 9, 12, 16, 26] has cost 35.


Before backtrack at level 10
 pending : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53]
 solution : [0, 8, 9, 12, 16, 26]

After backtrack at level 10
 pending : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 16, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 61, 33, 58, 52, 44]
 solution : [0, 8, 9, 12]


Before backtrack at level 9
 pending : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 16, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 61, 33, 58, 52, 44]
 solution : [0, 8, 9, 12]

After backtrack at level 9
 pending : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 16, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 61, 33, 58, 52, 44, 17]
 solution : [0, 8, 9, 12]


Before backtrack at level 8
 pending : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 16, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 61, 33, 58, 52, 44, 17]
 solution : [0, 8, 9, 12]

After backtrack at level 8
 pending : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 16, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 61, 33, 58, 52, 44, 17, 15]
 solution : [0, 8, 9, 12]


Before backtrack at level 7
 pending : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 16, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 61, 33, 58, 52, 44, 17, 15]
 solution : [0, 8, 9, 12]

After backtrack at level 7
 pending : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 16, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 61, 33, 58, 52, 44, 17, 15, 11, 19]
 solution : [0, 8, 9, 12]


Invert decision for 12 at level 6


New level: 7
 pending : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 16, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 61, 33, 58, 52, 44, 17, 15, 11, 19]
 solution : [0, 8, 9]


Before reduction : 
 pending  : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 16, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 61, 33, 58, 52, 44, 17, 15, 11, 19]
 solution : [0, 8, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 2), (24, -1), (25, -1), (26, -1), (27, 64), (28, 1), (29, 1), (30, 32), (31, 1), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, -1), (38, -1), (39, 128), (40, -1), (41, 64), (42, 1), (43, 8), (44, -1), (45, -1), (46, 1), (47, 1), (48, 128), (49, 64), (50, 2), (51, 256), (52, -1), (53, 8), (54, 16), (55, 64), (56, 2), (57, 2), (58, -1), (59, 16), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 16, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 61, 33, 58, 52, 44, 17, 15, 11, 19]
 solution : [0, 8, 9]


Solution : [0, 8, 9] has cost 13.


Decide in level 7 among pending : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 16, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 61, 33, 58, 52, 44, 17, 15, 11, 19]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Decide 16 with phase True at level 7

After decision at level 7
 pending : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 61, 33, 58, 52, 44, 17, 15, 11, 19]
 solution : [0, 8, 9, 16]


New level: 8
 pending : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 61, 33, 58, 52, 44, 17, 15, 11, 19]
 solution : [0, 8, 9, 16]


Before reduction : 
 pending  : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 61, 33, 58, 52, 44, 17, 15, 11, 19]
 solution : [0, 8, 9, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, -1), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, 512), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, 0), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 64), (42, 256), (43, 256), (44, 0), (45, 64), (46, 16), (47, 16), (48, 256), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, 256), (57, 64), (58, 64), (59, 256), (60, 64), (61, 0)]

Covered at level 8 : {33, 44, 61}

After reduction : 
 pending  : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 19]
 solution : [0, 8, 9, 16]


Before reduction : 
 pending  : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 19]
 solution : [0, 8, 9, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, 512), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, 0), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 64), (42, 256), (43, 256), (44, 0), (45, 64), (46, 16), (47, 16), (48, 256), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, 256), (57, 64), (58, 64), (59, 256), (60, 64), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, 512), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 64), (42, 256), (43, 256), (44, -1), (45, 64), (46, 16), (47, 16), (48, 256), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, 256), (57, 64), (58, 64), (59, 256), (60, 64), (61, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 19]
 solution : [0, 8, 9, 16]


Solution : [0, 8, 9, 16] has cost 19.


Decide in level 8 among pending : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 19]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, 512), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 64), (42, 256), (43, 256), (44, -1), (45, 64), (46, 16), (47, 16), (48, 256), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, 256), (57, 64), (58, 64), (59, 256), (60, 64), (61, -1)]

Decide 19 with phase True at level 8

After decision at level 8
 pending : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11]
 solution : [0, 8, 9, 16, 19]


New level: 9
 pending : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11]
 solution : [0, 8, 9, 16, 19]


Before reduction : 
 pending  : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 50, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 36, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11]
 solution : [0, 8, 9, 16, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, 512), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 64), (42, 256), (43, 256), (44, -1), (45, 64), (46, 16), (47, 16), (48, 256), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, 256), (57, 64), (58, 64), (59, 256), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 64), (24, 64), (25, 64), (26, 128), (27, 32), (28, 32), (29, 32), (30, 16), (31, 16), (32, 16), (33, -1), (34, 32), (35, 8), (36, 0), (37, 32), (38, 32), (39, 256), (40, 32), (41, 64), (42, 256), (43, 256), (44, -1), (45, 64), (46, 4), (47, 4), (48, 256), (49, 32), (50, 0), (51, 16), (52, 16), (53, 32), (54, 32), (55, 32), (56, 128), (57, 32), (58, 64), (59, 256), (60, 64), (61, -1)]

Covered at level 9 : {50, 36}

After reduction : 
 pending  : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11]
 solution : [0, 8, 9, 16, 19]


Before reduction : 
 pending  : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11]
 solution : [0, 8, 9, 16, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 64), (24, 64), (25, 64), (26, 128), (27, 32), (28, 32), (29, 32), (30, 16), (31, 16), (32, 16), (33, -1), (34, 32), (35, 8), (36, 0), (37, 32), (38, 32), (39, 256), (40, 32), (41, 64), (42, 256), (43, 256), (44, -1), (45, 64), (46, 4), (47, 4), (48, 256), (49, 32), (50, 0), (51, 16), (52, 16), (53, 32), (54, 32), (55, 32), (56, 128), (57, 32), (58, 64), (59, 256), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 64), (24, 64), (25, 64), (26, 128), (27, 32), (28, 32), (29, 32), (30, 16), (31, 16), (32, 16), (33, -1), (34, 32), (35, 8), (36, -1), (37, 32), (38, 32), (39, 256), (40, 32), (41, 64), (42, 256), (43, 256), (44, -1), (45, 64), (46, 4), (47, 4), (48, 256), (49, 32), (50, -1), (51, 16), (52, 16), (53, 32), (54, 32), (55, 32), (56, 128), (57, 32), (58, 64), (59, 256), (60, 64), (61, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11]
 solution : [0, 8, 9, 16, 19]


Solution : [0, 8, 9, 16, 19] has cost 28.


Before backtrack at level 9
 pending : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11]
 solution : [0, 8, 9, 16, 19]

After backtrack at level 9
 pending : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 50, 36]
 solution : [0, 8, 9, 16, 19]


Invert decision for 19 at level 8


New level: 9
 pending : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 50, 36]
 solution : [0, 8, 9, 16]


Before reduction : 
 pending  : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 50, 36]
 solution : [0, 8, 9, 16]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 64), (24, 64), (25, 64), (26, 128), (27, 32), (28, 32), (29, 32), (30, 16), (31, 16), (32, 16), (33, -1), (34, 32), (35, 8), (36, -1), (37, 32), (38, 32), (39, 256), (40, 32), (41, 64), (42, 256), (43, 256), (44, -1), (45, 64), (46, 4), (47, 4), (48, 256), (49, 32), (50, -1), (51, 16), (52, 16), (53, 32), (54, 32), (55, 32), (56, 128), (57, 32), (58, 64), (59, 256), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 64), (42, 256), (43, 256), (44, -1), (45, 64), (46, 16), (47, 16), (48, 256), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, 256), (57, 64), (58, 64), (59, 256), (60, 64), (61, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 50, 36]
 solution : [0, 8, 9, 16]


Solution : [0, 8, 9, 16] has cost 19.


Decide in level 9 among pending : [46, 30, 27, 49, 48, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 50, 36]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 64), (42, 256), (43, 256), (44, -1), (45, 64), (46, 16), (47, 16), (48, 256), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, 256), (57, 64), (58, 64), (59, 256), (60, 64), (61, -1)]

Decide 48 with phase True at level 9

After decision at level 9
 pending : [46, 30, 27, 49, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 50, 36]
 solution : [0, 8, 9, 16, 48]


New level: 10
 pending : [46, 30, 27, 49, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 50, 36]
 solution : [0, 8, 9, 16, 48]


Before reduction : 
 pending  : [46, 30, 27, 49, 43, 39, 23, 56, 29, 28, 42, 20, 47, 31, 57, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 50, 36]
 solution : [0, 8, 9, 16, 48]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 64), (42, 256), (43, 256), (44, -1), (45, 64), (46, 16), (47, 16), (48, 256), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, 256), (57, 64), (58, 64), (59, 256), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, 32), (21, 64), (22, 64), (23, 32), (24, 64), (25, 64), (26, 32), (27, 0), (28, 16), (29, 16), (30, 0), (31, 0), (32, 4), (33, -1), (34, 4), (35, 1), (36, 0), (37, 32), (38, 32), (39, 32), (40, 32), (41, 32), (42, 0), (43, 1), (44, -1), (45, 64), (46, 0), (47, 0), (48, -1), (49, 0), (50, 0), (51, 4), (52, 64), (53, 4), (54, 64), (55, 16), (56, 64), (57, 0), (58, 64), (59, 256), (60, 16), (61, -1)]

Covered at level 10 : {36, 42, 46, 47, 49, 50, 57, 27, 30, 31}

After reduction : 
 pending  : [43, 39, 23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11]
 solution : [0, 8, 9, 16, 48]


Before reduction : 
 pending  : [43, 39, 23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11]
 solution : [0, 8, 9, 16, 48]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, 32), (21, 64), (22, 64), (23, 32), (24, 64), (25, 64), (26, 32), (27, 0), (28, 16), (29, 16), (30, 0), (31, 0), (32, 4), (33, -1), (34, 4), (35, 1), (36, 0), (37, 32), (38, 32), (39, 32), (40, 32), (41, 32), (42, 0), (43, 1), (44, -1), (45, 64), (46, 0), (47, 0), (48, -1), (49, 0), (50, 0), (51, 4), (52, 64), (53, 4), (54, 64), (55, 16), (56, 64), (57, 0), (58, 64), (59, 256), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, 32), (21, 64), (22, 64), (23, 32), (24, 64), (25, 64), (26, 32), (27, -1), (28, 16), (29, 16), (30, -1), (31, -1), (32, 4), (33, -1), (34, 4), (35, 1), (36, -1), (37, 32), (38, 32), (39, 32), (40, 32), (41, 32), (42, -1), (43, 1), (44, -1), (45, 64), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4), (52, 32), (53, 4), (54, 64), (55, 16), (56, 64), (57, -1), (58, 64), (59, 256), (60, 16), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [43, 39, 23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11]
 solution : [0, 8, 9, 16, 48]


Solution : [0, 8, 9, 16, 48] has cost 29.


Before backtrack at level 10
 pending : [43, 39, 23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11]
 solution : [0, 8, 9, 16, 48]

After backtrack at level 10
 pending : [43, 39, 23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16, 48]


Invert decision for 48 at level 9


New level: 10
 pending : [43, 39, 23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16]


Before reduction : 
 pending  : [43, 39, 23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, 32), (21, 64), (22, 64), (23, 32), (24, 64), (25, 64), (26, 32), (27, -1), (28, 16), (29, 16), (30, -1), (31, -1), (32, 4), (33, -1), (34, 4), (35, 1), (36, -1), (37, 32), (38, 32), (39, 32), (40, 32), (41, 32), (42, -1), (43, 1), (44, -1), (45, 64), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4), (52, 32), (53, 4), (54, 64), (55, 16), (56, 64), (57, -1), (58, 64), (59, 256), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 64), (42, 256), (43, 256), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, 256), (57, 64), (58, 64), (59, 256), (60, 64), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [43, 39, 23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16]


Solution : [0, 8, 9, 16] has cost 19.


Decide in level 10 among pending : [43, 39, 23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 64), (42, 256), (43, 256), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, 256), (57, 64), (58, 64), (59, 256), (60, 64), (61, -1)]

Decide 43 with phase True at level 10

After decision at level 10
 pending : [39, 23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16, 43]


New level: 11
 pending : [39, 23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16, 43]


Before reduction : 
 pending  : [39, 23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16, 43]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 64), (42, 256), (43, 256), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, 256), (57, 64), (58, 64), (59, 256), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 64), (28, 128), (29, 128), (30, 32), (31, 16), (32, 32), (33, -1), (34, 16), (35, 1), (36, 64), (37, 16), (38, 16), (39, 32), (40, 16), (41, 32), (42, 1), (43, -1), (44, -1), (45, 64), (46, 8), (47, 8), (48, -1), (49, 64), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, 256), (57, 32), (58, 64), (59, 256), (60, 64), (61, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [39, 23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16, 43]


Solution : [0, 8, 9, 16, 43] has cost 29.


Before backtrack at level 11
 pending : [39, 23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16, 43]

After backtrack at level 11
 pending : [39, 23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16, 43]


Invert decision for 43 at level 10


New level: 11
 pending : [39, 23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16]


Before reduction : 
 pending  : [39, 23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 64), (28, 128), (29, 128), (30, 32), (31, 16), (32, 32), (33, -1), (34, 16), (35, 1), (36, 64), (37, 16), (38, 16), (39, 32), (40, 16), (41, 32), (42, 1), (43, -1), (44, -1), (45, 64), (46, 8), (47, 8), (48, -1), (49, 64), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, 256), (57, 32), (58, 64), (59, 256), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, 256), (57, 64), (58, 64), (59, 256), (60, 64), (61, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [39, 23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16]


Solution : [0, 8, 9, 16] has cost 19.


Decide in level 11 among pending : [39, 23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, 256), (57, 64), (58, 64), (59, 256), (60, 64), (61, -1)]

Decide 39 with phase True at level 11

After decision at level 11
 pending : [23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16, 39]


New level: 12
 pending : [23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16, 39]


Before reduction : 
 pending  : [23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16, 39]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, 256), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, 256), (57, 64), (58, 64), (59, 256), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 128), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 16), (32, 32), (33, -1), (34, 16), (35, 8), (36, 64), (37, 8), (38, 8), (39, -1), (40, 8), (41, 64), (42, 2), (43, -1), (44, -1), (45, 64), (46, 8), (47, 8), (48, -1), (49, 64), (50, 16), (51, 256), (52, 64), (53, 32), (54, 64), (55, 64), (56, 256), (57, 32), (58, 64), (59, 256), (60, 64), (61, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16, 39]


Solution : [0, 8, 9, 16, 39] has cost 29.


Before backtrack at level 12
 pending : [23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16, 39]

After backtrack at level 12
 pending : [23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16, 39]


Invert decision for 39 at level 11


New level: 12
 pending : [23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16]


Before reduction : 
 pending  : [23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 128), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 16), (32, 32), (33, -1), (34, 16), (35, 8), (36, 64), (37, 8), (38, 8), (39, -1), (40, 8), (41, 64), (42, 2), (43, -1), (44, -1), (45, 64), (46, 8), (47, 8), (48, -1), (49, 64), (50, 16), (51, 256), (52, 64), (53, 32), (54, 64), (55, 64), (56, 256), (57, 32), (58, 64), (59, 256), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, 256), (57, 64), (58, 64), (59, 256), (60, 64), (61, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16]


Solution : [0, 8, 9, 16] has cost 19.


Decide in level 12 among pending : [23, 56, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, 256), (57, 64), (58, 64), (59, 256), (60, 64), (61, -1)]

Decide 56 with phase True at level 12

After decision at level 12
 pending : [23, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16, 56]


New level: 13
 pending : [23, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16, 56]


Before reduction : 
 pending  : [23, 29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 50, 36]
 solution : [0, 8, 9, 16, 56]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, 256), (57, 64), (58, 64), (59, 256), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 16), (22, 16), (23, 0), (24, 64), (25, 64), (26, 128), (27, 128), (28, 8), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1), (34, 32), (35, 16), (36, 4), (37, 8), (38, 8), (39, -1), (40, 8), (41, 64), (42, 4), (43, -1), (44, -1), (45, 8), (46, 1), (47, 1), (48, -1), (49, 128), (50, 0), (51, 64), (52, 4), (53, 32), (54, 2), (55, 64), (56, -1), (57, 16), (58, 8), (59, 256), (60, 64), (61, -1)]

Covered at level 13 : {50, 23}

After reduction : 
 pending  : [29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36]
 solution : [0, 8, 9, 16, 56]


Before reduction : 
 pending  : [29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36]
 solution : [0, 8, 9, 16, 56]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 16), (22, 16), (23, 0), (24, 64), (25, 64), (26, 128), (27, 128), (28, 8), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1), (34, 32), (35, 16), (36, 4), (37, 8), (38, 8), (39, -1), (40, 8), (41, 64), (42, 4), (43, -1), (44, -1), (45, 8), (46, 1), (47, 1), (48, -1), (49, 128), (50, 0), (51, 64), (52, 4), (53, 32), (54, 2), (55, 64), (56, -1), (57, 16), (58, 8), (59, 256), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 16), (22, 16), (23, -1), (24, 64), (25, 64), (26, 128), (27, 128), (28, 8), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1), (34, 32), (35, 16), (36, 4), (37, 8), (38, 8), (39, -1), (40, 8), (41, 64), (42, 4), (43, -1), (44, -1), (45, 8), (46, 1), (47, 1), (48, -1), (49, 128), (50, -1), (51, 64), (52, 4), (53, 32), (54, 2), (55, 64), (56, -1), (57, 16), (58, 8), (59, 256), (60, 64), (61, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36]
 solution : [0, 8, 9, 16, 56]


Solution : [0, 8, 9, 16, 56] has cost 29.


Before backtrack at level 13
 pending : [29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36]
 solution : [0, 8, 9, 16, 56]

After backtrack at level 13
 pending : [29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36, 23, 50]
 solution : [0, 8, 9, 16, 56]


Invert decision for 56 at level 12


New level: 13
 pending : [29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36, 23, 50]
 solution : [0, 8, 9, 16]


Before reduction : 
 pending  : [29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36, 23, 50]
 solution : [0, 8, 9, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 16), (22, 16), (23, -1), (24, 64), (25, 64), (26, 128), (27, 128), (28, 8), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1), (34, 32), (35, 16), (36, 4), (37, 8), (38, 8), (39, -1), (40, 8), (41, 64), (42, 4), (43, -1), (44, -1), (45, 8), (46, 1), (47, 1), (48, -1), (49, 128), (50, -1), (51, 64), (52, 4), (53, 32), (54, 2), (55, 64), (56, -1), (57, 16), (58, 8), (59, 256), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, -1), (57, 64), (58, 64), (59, 256), (60, 64), (61, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36, 23, 50]
 solution : [0, 8, 9, 16]


Solution : [0, 8, 9, 16] has cost 19.


Decide in level 13 among pending : [29, 28, 20, 54, 2, 59, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36, 23, 50]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, -1), (57, 64), (58, 64), (59, 256), (60, 64), (61, -1)]

Decide 59 with phase True at level 13

After decision at level 13
 pending : [29, 28, 20, 54, 2, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36, 23, 50]
 solution : [0, 8, 9, 16, 59]


New level: 14
 pending : [29, 28, 20, 54, 2, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36, 23, 50]
 solution : [0, 8, 9, 16, 59]


Before reduction : 
 pending  : [29, 28, 20, 54, 2, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36, 23, 50]
 solution : [0, 8, 9, 16, 59]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, -1), (57, 64), (58, 64), (59, 256), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 16), (35, 8), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 32), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 4), (51, 256), (52, 64), (53, 32), (54, 16), (55, 64), (56, -1), (57, 64), (58, 16), (59, -1), (60, 32), (61, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [29, 28, 20, 54, 2, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36, 23, 50]
 solution : [0, 8, 9, 16, 59]


Solution : [0, 8, 9, 16, 59] has cost 29.


Before backtrack at level 14
 pending : [29, 28, 20, 54, 2, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36, 23, 50]
 solution : [0, 8, 9, 16, 59]

After backtrack at level 14
 pending : [29, 28, 20, 54, 2, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36, 23, 50]
 solution : [0, 8, 9, 16, 59]


Invert decision for 59 at level 13


New level: 14
 pending : [29, 28, 20, 54, 2, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36, 23, 50]
 solution : [0, 8, 9, 16]


Before reduction : 
 pending  : [29, 28, 20, 54, 2, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36, 23, 50]
 solution : [0, 8, 9, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 16), (35, 8), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 32), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 4), (51, 256), (52, 64), (53, 32), (54, 16), (55, 64), (56, -1), (57, 64), (58, 16), (59, -1), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, -1), (57, 64), (58, 64), (59, -1), (60, 64), (61, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [29, 28, 20, 54, 2, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36, 23, 50]
 solution : [0, 8, 9, 16]


Solution : [0, 8, 9, 16] has cost 19.


Decide in level 14 among pending : [29, 28, 20, 54, 2, 51, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36, 23, 50]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, -1), (57, 64), (58, 64), (59, -1), (60, 64), (61, -1)]

Decide 51 with phase True at level 14

After decision at level 14
 pending : [29, 28, 20, 54, 2, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36, 23, 50]
 solution : [0, 8, 9, 16, 51]


New level: 15
 pending : [29, 28, 20, 54, 2, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36, 23, 50]
 solution : [0, 8, 9, 16, 51]


Before reduction : 
 pending  : [29, 28, 20, 54, 2, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 36, 23, 50]
 solution : [0, 8, 9, 16, 51]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, 256), (52, 64), (53, 64), (54, 64), (55, 64), (56, -1), (57, 64), (58, 64), (59, -1), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 32), (28, 64), (29, 64), (30, 16), (31, 16), (32, 16), (33, -1), (34, 16), (35, 8), (36, 0), (37, 32), (38, 32), (39, -1), (40, 32), (41, 32), (42, 256), (43, -1), (44, -1), (45, 64), (46, 4), (47, 4), (48, -1), (49, 32), (50, 0), (51, -1), (52, 64), (53, 16), (54, 32), (55, 32), (56, -1), (57, 32), (58, 64), (59, -1), (60, 32), (61, -1)]

Covered at level 15 : {50, 36}

After reduction : 
 pending  : [29, 28, 20, 54, 2, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23]
 solution : [0, 8, 9, 16, 51]


Before reduction : 
 pending  : [29, 28, 20, 54, 2, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23]
 solution : [0, 8, 9, 16, 51]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 32), (28, 64), (29, 64), (30, 16), (31, 16), (32, 16), (33, -1), (34, 16), (35, 8), (36, 0), (37, 32), (38, 32), (39, -1), (40, 32), (41, 32), (42, 256), (43, -1), (44, -1), (45, 64), (46, 4), (47, 4), (48, -1), (49, 32), (50, 0), (51, -1), (52, 64), (53, 16), (54, 32), (55, 32), (56, -1), (57, 32), (58, 64), (59, -1), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 32), (28, 64), (29, 64), (30, 16), (31, 16), (32, 16), (33, -1), (34, 16), (35, 8), (36, -1), (37, 32), (38, 32), (39, -1), (40, 32), (41, 32), (42, 256), (43, -1), (44, -1), (45, 64), (46, 4), (47, 4), (48, -1), (49, 32), (50, -1), (51, -1), (52, 64), (53, 16), (54, 32), (55, 32), (56, -1), (57, 32), (58, 64), (59, -1), (60, 32), (61, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [29, 28, 20, 54, 2, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23]
 solution : [0, 8, 9, 16, 51]


Solution : [0, 8, 9, 16, 51] has cost 29.


Before backtrack at level 15
 pending : [29, 28, 20, 54, 2, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23]
 solution : [0, 8, 9, 16, 51]

After backtrack at level 15
 pending : [29, 28, 20, 54, 2, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50]
 solution : [0, 8, 9, 16, 51]


Invert decision for 51 at level 14


New level: 15
 pending : [29, 28, 20, 54, 2, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50]
 solution : [0, 8, 9, 16]


Before reduction : 
 pending  : [29, 28, 20, 54, 2, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50]
 solution : [0, 8, 9, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 32), (28, 64), (29, 64), (30, 16), (31, 16), (32, 16), (33, -1), (34, 16), (35, 8), (36, -1), (37, 32), (38, 32), (39, -1), (40, 32), (41, 32), (42, 256), (43, -1), (44, -1), (45, 64), (46, 4), (47, 4), (48, -1), (49, 32), (50, -1), (51, -1), (52, 64), (53, 16), (54, 32), (55, 32), (56, -1), (57, 32), (58, 64), (59, -1), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, -1), (52, 64), (53, 64), (54, 64), (55, 64), (56, -1), (57, 64), (58, 64), (59, -1), (60, 64), (61, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [29, 28, 20, 54, 2, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50]
 solution : [0, 8, 9, 16]


Solution : [0, 8, 9, 16] has cost 19.


Decide in level 15 among pending : [29, 28, 20, 54, 2, 41, 4, 3, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, -1), (52, 64), (53, 64), (54, 64), (55, 64), (56, -1), (57, 64), (58, 64), (59, -1), (60, 64), (61, -1)]

Decide 3 with phase True at level 15

After decision at level 15
 pending : [29, 28, 20, 54, 2, 41, 4, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50]
 solution : [0, 8, 9, 16, 3]


New level: 16
 pending : [29, 28, 20, 54, 2, 41, 4, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50]
 solution : [0, 8, 9, 16, 3]


Before reduction : 
 pending  : [29, 28, 20, 54, 2, 41, 4, 34, 60, 55, 32, 35, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50]
 solution : [0, 8, 9, 16, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, -1), (52, 64), (53, 64), (54, 64), (55, 64), (56, -1), (57, 64), (58, 64), (59, -1), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 64), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 8), (28, 128), (29, 128), (30, 8), (31, 8), (32, 0), (33, -1), (34, 4), (35, 0), (36, 2), (37, 32), (38, 32), (39, -1), (40, 32), (41, 0), (42, 2), (43, -1), (44, -1), (45, 64), (46, 8), (47, 8), (48, -1), (49, 8), (50, 2), (51, -1), (52, 64), (53, 64), (54, 4), (55, 0), (56, -1), (57, 8), (58, 64), (59, -1), (60, 4), (61, -1)]

Covered at level 16 : {32, 35, 4, 41, 55}

After reduction : 
 pending  : [29, 28, 20, 54, 2, 34, 60, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50]
 solution : [0, 8, 9, 16, 3]


Before reduction : 
 pending  : [29, 28, 20, 54, 2, 34, 60, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50]
 solution : [0, 8, 9, 16, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 64), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 8), (28, 128), (29, 128), (30, 8), (31, 8), (32, 0), (33, -1), (34, 4), (35, 0), (36, 2), (37, 32), (38, 32), (39, -1), (40, 32), (41, 0), (42, 2), (43, -1), (44, -1), (45, 64), (46, 8), (47, 8), (48, -1), (49, 8), (50, 2), (51, -1), (52, 64), (53, 64), (54, 4), (55, 0), (56, -1), (57, 8), (58, 64), (59, -1), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 64), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 8), (28, 128), (29, 128), (30, 8), (31, 8), (32, -1), (33, -1), (34, 4), (35, -1), (36, 2), (37, 32), (38, 32), (39, -1), (40, 32), (41, -1), (42, 2), (43, -1), (44, -1), (45, 64), (46, 8), (47, 8), (48, -1), (49, 8), (50, 2), (51, -1), (52, 64), (53, 64), (54, 4), (55, -1), (56, -1), (57, 8), (58, 64), (59, -1), (60, 4), (61, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [29, 28, 20, 54, 2, 34, 60, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50]
 solution : [0, 8, 9, 16, 3]


Solution : [0, 8, 9, 16, 3] has cost 25.


Before backtrack at level 16
 pending : [29, 28, 20, 54, 2, 34, 60, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50]
 solution : [0, 8, 9, 16, 3]

After backtrack at level 16
 pending : [29, 28, 20, 54, 2, 34, 60, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35]
 solution : [0, 8, 9, 16, 3]


Invert decision for 3 at level 15


New level: 16
 pending : [29, 28, 20, 54, 2, 34, 60, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35]
 solution : [0, 8, 9, 16]


Before reduction : 
 pending  : [29, 28, 20, 54, 2, 34, 60, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35]
 solution : [0, 8, 9, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 64), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 8), (28, 128), (29, 128), (30, 8), (31, 8), (32, -1), (33, -1), (34, 4), (35, -1), (36, 2), (37, 32), (38, 32), (39, -1), (40, 32), (41, -1), (42, 2), (43, -1), (44, -1), (45, 64), (46, 8), (47, 8), (48, -1), (49, 8), (50, 2), (51, -1), (52, 64), (53, 64), (54, 4), (55, -1), (56, -1), (57, 8), (58, 64), (59, -1), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, -1), (52, 64), (53, 64), (54, 64), (55, 64), (56, -1), (57, 64), (58, 64), (59, -1), (60, 64), (61, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [29, 28, 20, 54, 2, 34, 60, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35]
 solution : [0, 8, 9, 16]


Solution : [0, 8, 9, 16] has cost 19.


Decide in level 16 among pending : [29, 28, 20, 54, 2, 34, 60, 53, 26, 38, 37, 22, 45, 40, 24, 13, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, -1), (52, 64), (53, 64), (54, 64), (55, 64), (56, -1), (57, 64), (58, 64), (59, -1), (60, 64), (61, -1)]

Decide 13 with phase True at level 16

After decision at level 16
 pending : [29, 28, 20, 54, 2, 34, 60, 53, 26, 38, 37, 22, 45, 40, 24, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35]
 solution : [0, 8, 9, 16, 13]


New level: 17
 pending : [29, 28, 20, 54, 2, 34, 60, 53, 26, 38, 37, 22, 45, 40, 24, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35]
 solution : [0, 8, 9, 16, 13]


Before reduction : 
 pending  : [29, 28, 20, 54, 2, 34, 60, 53, 26, 38, 37, 22, 45, 40, 24, 21, 25, 14, 58, 52, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35]
 solution : [0, 8, 9, 16, 13]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, -1), (52, 64), (53, 64), (54, 64), (55, 64), (56, -1), (57, 64), (58, 64), (59, -1), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, -1), (14, 0), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 0), (22, 0), (23, 16), (24, 0), (25, 0), (26, 32), (27, 128), (28, 1), (29, 1), (30, 64), (31, 8), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 0), (38, 0), (39, -1), (40, 0), (41, 64), (42, 16), (43, -1), (44, -1), (45, 0), (46, 1), (47, 1), (48, -1), (49, 128), (50, 2), (51, -1), (52, 0), (53, 4), (54, 64), (55, 64), (56, -1), (57, 16), (58, 1), (59, -1), (60, 64), (61, -1)]

Covered at level 17 : {37, 38, 40, 45, 14, 52, 21, 22, 24, 25}

After reduction : 
 pending  : [29, 28, 20, 54, 2, 34, 60, 53, 26, 58, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35]
 solution : [0, 8, 9, 16, 13]


Before reduction : 
 pending  : [29, 28, 20, 54, 2, 34, 60, 53, 26, 58, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35]
 solution : [0, 8, 9, 16, 13]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, -1), (14, 0), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 0), (22, 0), (23, 16), (24, 0), (25, 0), (26, 32), (27, 128), (28, 1), (29, 1), (30, 64), (31, 8), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 0), (38, 0), (39, -1), (40, 0), (41, 64), (42, 16), (43, -1), (44, -1), (45, 0), (46, 1), (47, 1), (48, -1), (49, 128), (50, 2), (51, -1), (52, 0), (53, 4), (54, 64), (55, 64), (56, -1), (57, 16), (58, 1), (59, -1), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, -1), (14, -1), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 16), (24, -1), (25, -1), (26, 32), (27, 128), (28, 1), (29, 1), (30, 64), (31, 8), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, -1), (38, -1), (39, -1), (40, -1), (41, 64), (42, 16), (43, -1), (44, -1), (45, -1), (46, 1), (47, 1), (48, -1), (49, 128), (50, 2), (51, -1), (52, -1), (53, 4), (54, 64), (55, 64), (56, -1), (57, 16), (58, 1), (59, -1), (60, 64), (61, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [29, 28, 20, 54, 2, 34, 60, 53, 26, 58, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35]
 solution : [0, 8, 9, 16, 13]


Solution : [0, 8, 9, 16, 13] has cost 25.


Before backtrack at level 17
 pending : [29, 28, 20, 54, 2, 34, 60, 53, 26, 58, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35]
 solution : [0, 8, 9, 16, 13]

After backtrack at level 17
 pending : [29, 28, 20, 54, 2, 34, 60, 53, 26, 58, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52]
 solution : [0, 8, 9, 16, 13]


Invert decision for 13 at level 16


New level: 17
 pending : [29, 28, 20, 54, 2, 34, 60, 53, 26, 58, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52]
 solution : [0, 8, 9, 16]


Before reduction : 
 pending  : [29, 28, 20, 54, 2, 34, 60, 53, 26, 58, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52]
 solution : [0, 8, 9, 16]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, -1), (14, -1), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 16), (24, -1), (25, -1), (26, 32), (27, 128), (28, 1), (29, 1), (30, 64), (31, 8), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, -1), (38, -1), (39, -1), (40, -1), (41, 64), (42, 16), (43, -1), (44, -1), (45, -1), (46, 1), (47, 1), (48, -1), (49, 128), (50, 2), (51, -1), (52, -1), (53, 4), (54, 64), (55, 64), (56, -1), (57, 16), (58, 1), (59, -1), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, -1), (52, 64), (53, 64), (54, 64), (55, 64), (56, -1), (57, 64), (58, 64), (59, -1), (60, 64), (61, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [29, 28, 20, 54, 2, 34, 60, 53, 26, 58, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52]
 solution : [0, 8, 9, 16]


Solution : [0, 8, 9, 16] has cost 19.


Decide in level 17 among pending : [29, 28, 20, 54, 2, 34, 60, 53, 26, 58, 17, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, -1), (52, 64), (53, 64), (54, 64), (55, 64), (56, -1), (57, 64), (58, 64), (59, -1), (60, 64), (61, -1)]

Decide 17 with phase True at level 17

After decision at level 17
 pending : [29, 28, 20, 54, 2, 34, 60, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52]
 solution : [0, 8, 9, 16, 17]


New level: 18
 pending : [29, 28, 20, 54, 2, 34, 60, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52]
 solution : [0, 8, 9, 16, 17]


Before reduction : 
 pending  : [29, 28, 20, 54, 2, 34, 60, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 41, 4, 55, 32, 35, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52]
 solution : [0, 8, 9, 16, 17]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 256), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 128), (30, 64), (31, 32), (32, 32), (33, -1), (34, 32), (35, 16), (36, 64), (37, 32), (38, 32), (39, -1), (40, 32), (41, 64), (42, 256), (43, -1), (44, -1), (45, 64), (46, 16), (47, 16), (48, -1), (49, 128), (50, 16), (51, -1), (52, 64), (53, 64), (54, 64), (55, 64), (56, -1), (57, 64), (58, 64), (59, -1), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 256), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 32), (27, 4), (28, 128), (29, 128), (30, 4), (31, 4), (32, 0), (33, -1), (34, 0), (35, 0), (36, 2), (37, 32), (38, 32), (39, -1), (40, 32), (41, 0), (42, 2), (43, -1), (44, -1), (45, 64), (46, 4), (47, 4), (48, -1), (49, 4), (50, 2), (51, -1), (52, 64), (53, 16), (54, 4), (55, 0), (56, -1), (57, 4), (58, 64), (59, -1), (60, 0), (61, -1)]

Covered at level 18 : {32, 34, 35, 4, 41, 55, 60}

After reduction : 
 pending  : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52]
 solution : [0, 8, 9, 16, 17]


Before reduction : 
 pending  : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52]
 solution : [0, 8, 9, 16, 17]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 256), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 32), (27, 4), (28, 128), (29, 128), (30, 4), (31, 4), (32, 0), (33, -1), (34, 0), (35, 0), (36, 2), (37, 32), (38, 32), (39, -1), (40, 32), (41, 0), (42, 2), (43, -1), (44, -1), (45, 64), (46, 4), (47, 4), (48, -1), (49, 4), (50, 2), (51, -1), (52, 64), (53, 16), (54, 4), (55, 0), (56, -1), (57, 4), (58, 64), (59, -1), (60, 0), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 256), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 32), (27, 4), (28, 128), (29, 128), (30, 4), (31, 4), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2), (37, 32), (38, 32), (39, -1), (40, 32), (41, -1), (42, 2), (43, -1), (44, -1), (45, 64), (46, 4), (47, 4), (48, -1), (49, 4), (50, 2), (51, -1), (52, 64), (53, 16), (54, 4), (55, -1), (56, -1), (57, 4), (58, 64), (59, -1), (60, -1), (61, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52]
 solution : [0, 8, 9, 16, 17]


Solution : [0, 8, 9, 16, 17] has cost 25.


Before backtrack at level 18
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52]
 solution : [0, 8, 9, 16, 17]

After backtrack at level 18
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 4, 55, 32, 35]
 solution : [0, 8, 9, 16, 17]


Invert decision for 17 at level 17


New level: 18
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 4, 55, 32, 35]
 solution : [0, 8, 9, 16]


Before reduction : 
 pending  : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 4, 55, 32, 35]
 solution : [0, 8, 9, 16]

Essensial at level 18 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 256), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 32), (27, 4), (28, 128), (29, 128), (30, 4), (31, 4), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2), (37, 32), (38, 32), (39, -1), (40, 32), (41, -1), (42, 2), (43, -1), (44, -1), (45, 64), (46, 4), (47, 4), (48, -1), (49, 4), (50, 2), (51, -1), (52, 64), (53, 16), (54, 4), (55, -1), (56, -1), (57, 4), (58, 64), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 256), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 64), (28, 128), (29, 128), (30, 8), (31, 8), (32, 0), (33, -1), (34, 8), (35, 4), (36, 16), (37, 32), (38, 32), (39, -1), (40, 32), (41, 32), (42, 256), (43, -1), (44, -1), (45, 64), (46, 8), (47, 8), (48, -1), (49, 64), (50, 16), (51, -1), (52, 64), (53, 64), (54, 32), (55, 32), (56, -1), (57, 64), (58, 64), (59, -1), (60, 64), (61, -1)]

Covered at level 18 : {32}

After reduction : 
 pending  : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35]
 solution : [0, 8, 9, 16, 4]


Before reduction : 
 pending  : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35]
 solution : [0, 8, 9, 16, 4]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 256), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 64), (28, 128), (29, 128), (30, 8), (31, 8), (32, 0), (33, -1), (34, 8), (35, 4), (36, 16), (37, 32), (38, 32), (39, -1), (40, 32), (41, 32), (42, 256), (43, -1), (44, -1), (45, 64), (46, 8), (47, 8), (48, -1), (49, 64), (50, 16), (51, -1), (52, 64), (53, 64), (54, 32), (55, 32), (56, -1), (57, 64), (58, 64), (59, -1), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 256), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 64), (28, 128), (29, 128), (30, 8), (31, 8), (32, -1), (33, -1), (34, 8), (35, 4), (36, 16), (37, 32), (38, 32), (39, -1), (40, 32), (41, 32), (42, 256), (43, -1), (44, -1), (45, 64), (46, 8), (47, 8), (48, -1), (49, 64), (50, 16), (51, -1), (52, 64), (53, 64), (54, 32), (55, 32), (56, -1), (57, 64), (58, 64), (59, -1), (60, 64), (61, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35]
 solution : [0, 8, 9, 16, 4]


Solution : [0, 8, 9, 16, 4] has cost 28.


Before backtrack at level 18
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35]
 solution : [0, 8, 9, 16, 4]

After backtrack at level 18
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32]
 solution : [0, 8, 9, 16]


Before backtrack at level 17
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32]
 solution : [0, 8, 9, 16]

After backtrack at level 17
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17]
 solution : [0, 8, 9, 16]


Before backtrack at level 16
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17]
 solution : [0, 8, 9, 16]

After backtrack at level 16
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13]
 solution : [0, 8, 9, 16]


Before backtrack at level 15
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13]
 solution : [0, 8, 9, 16]

After backtrack at level 15
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3]
 solution : [0, 8, 9, 16]


Before backtrack at level 14
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3]
 solution : [0, 8, 9, 16]

After backtrack at level 14
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51]
 solution : [0, 8, 9, 16]


Before backtrack at level 13
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51]
 solution : [0, 8, 9, 16]

After backtrack at level 13
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59]
 solution : [0, 8, 9, 16]


Before backtrack at level 12
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59]
 solution : [0, 8, 9, 16]

After backtrack at level 12
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56]
 solution : [0, 8, 9, 16]


Before backtrack at level 11
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56]
 solution : [0, 8, 9, 16]

After backtrack at level 11
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39]
 solution : [0, 8, 9, 16]


Before backtrack at level 10
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39]
 solution : [0, 8, 9, 16]

After backtrack at level 10
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43]
 solution : [0, 8, 9, 16]


Before backtrack at level 9
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43]
 solution : [0, 8, 9, 16]

After backtrack at level 9
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48]
 solution : [0, 8, 9, 16]


Before backtrack at level 8
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48]
 solution : [0, 8, 9, 16]

After backtrack at level 8
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 19]
 solution : [0, 8, 9, 16]


Invert decision for 16 at level 7


New level: 8
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 19]
 solution : [0, 8, 9]


Before reduction : 
 pending  : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 19]
 solution : [0, 8, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 256), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 64), (22, 64), (23, 128), (24, 64), (25, 64), (26, 128), (27, 64), (28, 128), (29, 128), (30, 8), (31, 8), (32, -1), (33, -1), (34, 8), (35, 4), (36, 16), (37, 32), (38, 32), (39, -1), (40, 32), (41, 32), (42, 256), (43, -1), (44, -1), (45, 64), (46, 8), (47, 8), (48, -1), (49, 64), (50, 16), (51, -1), (52, 64), (53, 64), (54, 32), (55, 32), (56, -1), (57, 64), (58, 64), (59, -1), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 512), (15, 512), (16, -1), (17, 512), (18, -1), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 19]
 solution : [0, 8, 9]


Solution : [0, 8, 9] has cost 13.


Decide in level 8 among pending : [29, 28, 20, 54, 2, 53, 26, 58, 15, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 19]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 512), (15, 512), (16, -1), (17, 512), (18, -1), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

Decide 15 with phase True at level 8

After decision at level 8
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 19]
 solution : [0, 8, 9, 15]


New level: 9
 pending : [29, 28, 20, 54, 2, 53, 26, 58, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 19]
 solution : [0, 8, 9, 15]


Before reduction : 
 pending  : [29, 28, 20, 54, 2, 53, 26, 58, 11, 46, 30, 27, 49, 42, 47, 31, 57, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 19]
 solution : [0, 8, 9, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 512), (15, 512), (16, -1), (17, 512), (18, -1), (19, 512), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 64), (31, 64), (32, 64), (33, 64), (34, 64), (35, 64), (36, 64), (37, 128), (38, 256), (39, 256), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 16), (48, 256), (49, 128), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 128), (56, 256), (57, 128), (58, 256), (59, 256), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, 512), (20, 0), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, 0), (27, 4), (28, 16), (29, 8), (30, 2), (31, 0), (32, 32), (33, 32), (34, 32), (35, 64), (36, 4), (37, 32), (38, 256), (39, 8), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, 0), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, 0), (54, 256), (55, 64), (56, 64), (57, 0), (58, 256), (59, 32), (60, 64), (61, 32)]

Covered at level 9 : {47, 20, 53, 57, 26, 31}

After reduction : 
 pending  : [29, 28, 54, 2, 58, 11, 46, 30, 27, 49, 42, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 19]
 solution : [0, 8, 9, 15]


Before reduction : 
 pending  : [29, 28, 54, 2, 58, 11, 46, 30, 27, 49, 42, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 19]
 solution : [0, 8, 9, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, 512), (20, 0), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, 0), (27, 4), (28, 16), (29, 8), (30, 2), (31, 0), (32, 32), (33, 32), (34, 32), (35, 64), (36, 4), (37, 32), (38, 256), (39, 8), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, 0), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, 0), (54, 256), (55, 64), (56, 64), (57, 0), (58, 256), (59, 32), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, 512), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, 4), (28, 16), (29, 8), (30, 2), (31, -1), (32, 32), (33, 32), (34, 32), (35, 64), (36, 4), (37, 32), (38, 256), (39, 8), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, 256), (55, 64), (56, 64), (57, -1), (58, 256), (59, 32), (60, 64), (61, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [29, 28, 54, 2, 58, 11, 46, 30, 27, 49, 42, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 19]
 solution : [0, 8, 9, 15]


Solution : [0, 8, 9, 15] has cost 19.


Decide in level 9 among pending : [29, 28, 54, 2, 58, 11, 46, 30, 27, 49, 42, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 19]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, 512), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, 4), (28, 16), (29, 8), (30, 2), (31, -1), (32, 32), (33, 32), (34, 32), (35, 64), (36, 4), (37, 32), (38, 256), (39, 8), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, 256), (55, 64), (56, 64), (57, -1), (58, 256), (59, 32), (60, 64), (61, 32)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [29, 28, 54, 2, 58, 11, 46, 30, 27, 49, 42, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44]
 solution : [0, 8, 9, 15, 19]


New level: 10
 pending : [29, 28, 54, 2, 58, 11, 46, 30, 27, 49, 42, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44]
 solution : [0, 8, 9, 15, 19]


Before reduction : 
 pending  : [29, 28, 54, 2, 58, 11, 46, 30, 27, 49, 42, 23, 36, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44]
 solution : [0, 8, 9, 15, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, 512), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, 4), (28, 16), (29, 8), (30, 2), (31, -1), (32, 32), (33, 32), (34, 32), (35, 64), (36, 4), (37, 32), (38, 256), (39, 8), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, 256), (55, 64), (56, 64), (57, -1), (58, 256), (59, 32), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 16), (24, 64), (25, 16), (26, -1), (27, 0), (28, 8), (29, 4), (30, 0), (31, -1), (32, 4), (33, 32), (34, 32), (35, 32), (36, 0), (37, 32), (38, 256), (39, 2), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 4), (49, 0), (50, 16), (51, 8), (52, 32), (53, -1), (54, 128), (55, 8), (56, 32), (57, -1), (58, 256), (59, 16), (60, 64), (61, 32)]

Covered at level 10 : {49, 27, 36, 30}

After reduction : 
 pending  : [29, 28, 54, 2, 58, 11, 46, 42, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44]
 solution : [0, 8, 9, 15, 19]


Before reduction : 
 pending  : [29, 28, 54, 2, 58, 11, 46, 42, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44]
 solution : [0, 8, 9, 15, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 16), (24, 64), (25, 16), (26, -1), (27, 0), (28, 8), (29, 4), (30, 0), (31, -1), (32, 4), (33, 32), (34, 32), (35, 32), (36, 0), (37, 32), (38, 256), (39, 2), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 4), (49, 0), (50, 16), (51, 8), (52, 32), (53, -1), (54, 128), (55, 8), (56, 32), (57, -1), (58, 256), (59, 16), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 16), (24, 64), (25, 16), (26, -1), (27, -1), (28, 8), (29, 4), (30, -1), (31, -1), (32, 4), (33, 32), (34, 32), (35, 32), (36, -1), (37, 32), (38, 256), (39, 2), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 4), (49, -1), (50, 16), (51, 8), (52, 32), (53, -1), (54, 128), (55, 8), (56, 32), (57, -1), (58, 256), (59, 16), (60, 64), (61, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [29, 28, 54, 2, 58, 11, 46, 42, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44]
 solution : [0, 8, 9, 15, 19]


Solution : [0, 8, 9, 15, 19] has cost 28.


Before backtrack at level 10
 pending : [29, 28, 54, 2, 58, 11, 46, 42, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44]
 solution : [0, 8, 9, 15, 19]

After backtrack at level 10
 pending : [29, 28, 54, 2, 58, 11, 46, 42, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36]
 solution : [0, 8, 9, 15, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [29, 28, 54, 2, 58, 11, 46, 42, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36]
 solution : [0, 8, 9, 15]


Before reduction : 
 pending  : [29, 28, 54, 2, 58, 11, 46, 42, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36]
 solution : [0, 8, 9, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 16), (24, 64), (25, 16), (26, -1), (27, -1), (28, 8), (29, 4), (30, -1), (31, -1), (32, 4), (33, 32), (34, 32), (35, 32), (36, -1), (37, 32), (38, 256), (39, 2), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 4), (49, -1), (50, 16), (51, 8), (52, 32), (53, -1), (54, 128), (55, 8), (56, 32), (57, -1), (58, 256), (59, 16), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, 4), (28, 16), (29, 8), (30, 2), (31, -1), (32, 32), (33, 32), (34, 32), (35, 64), (36, 4), (37, 32), (38, 256), (39, 8), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, 256), (55, 64), (56, 64), (57, -1), (58, 256), (59, 32), (60, 64), (61, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [29, 28, 54, 2, 58, 11, 46, 42, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36]
 solution : [0, 8, 9, 15]


Solution : [0, 8, 9, 15] has cost 19.


Decide in level 10 among pending : [29, 28, 54, 2, 58, 11, 46, 42, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, 4), (28, 16), (29, 8), (30, 2), (31, -1), (32, 32), (33, 32), (34, 32), (35, 64), (36, 4), (37, 32), (38, 256), (39, 8), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, 256), (55, 64), (56, 64), (57, -1), (58, 256), (59, 32), (60, 64), (61, 32)]

Decide 54 with phase True at level 10

After decision at level 10
 pending : [29, 28, 2, 58, 11, 46, 42, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36]
 solution : [0, 8, 9, 15, 54]


New level: 11
 pending : [29, 28, 2, 58, 11, 46, 42, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36]
 solution : [0, 8, 9, 15, 54]


Before reduction : 
 pending  : [29, 28, 2, 58, 11, 46, 42, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 59, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36]
 solution : [0, 8, 9, 15, 54]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, 4), (28, 16), (29, 8), (30, 2), (31, -1), (32, 32), (33, 32), (34, 32), (35, 64), (36, 4), (37, 32), (38, 256), (39, 8), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, 256), (55, 64), (56, 64), (57, -1), (58, 256), (59, 32), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 8), (24, 64), (25, 16), (26, -1), (27, 4), (28, 8), (29, 8), (30, 2), (31, -1), (32, 8), (33, 32), (34, 32), (35, 8), (36, 4), (37, 32), (38, 256), (39, 8), (40, 32), (41, 256), (42, 0), (43, 256), (44, 1), (45, 64), (46, 32), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, -1), (55, 16), (56, 16), (57, -1), (58, 256), (59, 0), (60, 64), (61, 32)]

Covered at level 11 : {2, 59, 42}

After reduction : 
 pending  : [29, 28, 58, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36]
 solution : [0, 8, 9, 15, 54]


Before reduction : 
 pending  : [29, 28, 58, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36]
 solution : [0, 8, 9, 15, 54]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 8), (24, 64), (25, 16), (26, -1), (27, 4), (28, 8), (29, 8), (30, 2), (31, -1), (32, 8), (33, 32), (34, 32), (35, 8), (36, 4), (37, 32), (38, 256), (39, 8), (40, 32), (41, 256), (42, 0), (43, 256), (44, 1), (45, 64), (46, 32), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, -1), (55, 16), (56, 16), (57, -1), (58, 256), (59, 0), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 8), (24, 64), (25, 16), (26, -1), (27, 4), (28, 8), (29, 8), (30, 2), (31, -1), (32, 8), (33, 32), (34, 32), (35, 8), (36, 4), (37, 32), (38, 256), (39, 8), (40, 32), (41, 256), (42, -1), (43, 256), (44, 1), (45, 64), (46, 32), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, -1), (55, 16), (56, 16), (57, -1), (58, 256), (59, -1), (60, 64), (61, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [29, 28, 58, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36]
 solution : [0, 8, 9, 15, 54]


Solution : [0, 8, 9, 15, 54] has cost 29.


Before backtrack at level 11
 pending : [29, 28, 58, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36]
 solution : [0, 8, 9, 15, 54]

After backtrack at level 11
 pending : [29, 28, 58, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 42, 59]
 solution : [0, 8, 9, 15, 54]


Invert decision for 54 at level 10


New level: 11
 pending : [29, 28, 58, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 42, 59]
 solution : [0, 8, 9, 15]


Before reduction : 
 pending  : [29, 28, 58, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 42, 59]
 solution : [0, 8, 9, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 8), (24, 64), (25, 16), (26, -1), (27, 4), (28, 8), (29, 8), (30, 2), (31, -1), (32, 8), (33, 32), (34, 32), (35, 8), (36, 4), (37, 32), (38, 256), (39, 8), (40, 32), (41, 256), (42, -1), (43, 256), (44, 1), (45, 64), (46, 32), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, -1), (55, 16), (56, 16), (57, -1), (58, 256), (59, -1), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, 4), (28, 16), (29, 8), (30, 2), (31, -1), (32, 32), (33, 32), (34, 32), (35, 64), (36, 4), (37, 32), (38, 256), (39, 8), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, -1), (55, 64), (56, 64), (57, -1), (58, 256), (59, 32), (60, 64), (61, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [29, 28, 58, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 42, 59]
 solution : [0, 8, 9, 15]


Solution : [0, 8, 9, 15] has cost 19.


Decide in level 11 among pending : [29, 28, 58, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 42, 59]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, 4), (28, 16), (29, 8), (30, 2), (31, -1), (32, 32), (33, 32), (34, 32), (35, 64), (36, 4), (37, 32), (38, 256), (39, 8), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, -1), (55, 64), (56, 64), (57, -1), (58, 256), (59, 32), (60, 64), (61, 32)]

Decide 58 with phase True at level 11

After decision at level 11
 pending : [29, 28, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 42, 59]
 solution : [0, 8, 9, 15, 58]


New level: 12
 pending : [29, 28, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 42, 59]
 solution : [0, 8, 9, 15, 58]


Before reduction : 
 pending  : [29, 28, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 42, 59]
 solution : [0, 8, 9, 15, 58]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, 4), (28, 16), (29, 8), (30, 2), (31, -1), (32, 32), (33, 32), (34, 32), (35, 64), (36, 4), (37, 32), (38, 256), (39, 8), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, -1), (55, 64), (56, 64), (57, -1), (58, 256), (59, 32), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, -1), (13, 32), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 8), (22, 16), (23, 16), (24, 64), (25, 8), (26, -1), (27, 4), (28, 8), (29, 4), (30, 2), (31, -1), (32, 32), (33, 4), (34, 32), (35, 64), (36, 4), (37, 4), (38, 256), (39, 8), (40, 4), (41, 256), (42, 0), (43, 256), (44, 2), (45, 8), (46, 4), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 4), (53, -1), (54, -1), (55, 64), (56, 16), (57, -1), (58, -1), (59, 4), (60, 64), (61, 4)]

Covered at level 12 : {42}

After reduction : 
 pending  : [29, 28, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 59]
 solution : [0, 8, 9, 15, 58]


Before reduction : 
 pending  : [29, 28, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 59]
 solution : [0, 8, 9, 15, 58]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, -1), (13, 32), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 8), (22, 16), (23, 16), (24, 64), (25, 8), (26, -1), (27, 4), (28, 8), (29, 4), (30, 2), (31, -1), (32, 32), (33, 4), (34, 32), (35, 64), (36, 4), (37, 4), (38, 256), (39, 8), (40, 4), (41, 256), (42, 0), (43, 256), (44, 2), (45, 8), (46, 4), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 4), (53, -1), (54, -1), (55, 64), (56, 16), (57, -1), (58, -1), (59, 4), (60, 64), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, -1), (13, 32), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 8), (22, 16), (23, 16), (24, 64), (25, 8), (26, -1), (27, 4), (28, 8), (29, 4), (30, 2), (31, -1), (32, 32), (33, 4), (34, 32), (35, 64), (36, 4), (37, 4), (38, 256), (39, 8), (40, 4), (41, 256), (42, -1), (43, 256), (44, 2), (45, 8), (46, 4), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 4), (53, -1), (54, -1), (55, 64), (56, 16), (57, -1), (58, -1), (59, 4), (60, 64), (61, 4)]

Covered at level 12 : set()

After reduction : 
 pending  : [29, 28, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 59]
 solution : [0, 8, 9, 15, 58]


Solution : [0, 8, 9, 15, 58] has cost 29.


Before backtrack at level 12
 pending : [29, 28, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 59]
 solution : [0, 8, 9, 15, 58]

After backtrack at level 12
 pending : [29, 28, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 59, 42]
 solution : [0, 8, 9, 15, 58]


Invert decision for 58 at level 11


New level: 12
 pending : [29, 28, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 59, 42]
 solution : [0, 8, 9, 15]


Before reduction : 
 pending  : [29, 28, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 59, 42]
 solution : [0, 8, 9, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, -1), (13, 32), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 8), (22, 16), (23, 16), (24, 64), (25, 8), (26, -1), (27, 4), (28, 8), (29, 4), (30, 2), (31, -1), (32, 32), (33, 4), (34, 32), (35, 64), (36, 4), (37, 4), (38, 256), (39, 8), (40, 4), (41, 256), (42, -1), (43, 256), (44, 2), (45, 8), (46, 4), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 4), (53, -1), (54, -1), (55, 64), (56, 16), (57, -1), (58, -1), (59, 4), (60, 64), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, 4), (28, 16), (29, 8), (30, 2), (31, -1), (32, 32), (33, 32), (34, 32), (35, 64), (36, 4), (37, 32), (38, 256), (39, 8), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, -1), (55, 64), (56, 64), (57, -1), (58, -1), (59, 32), (60, 64), (61, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [29, 28, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 59, 42]
 solution : [0, 8, 9, 15]


Solution : [0, 8, 9, 15] has cost 19.


Decide in level 12 among pending : [29, 28, 11, 46, 23, 50, 38, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 59, 42]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, 4), (28, 16), (29, 8), (30, 2), (31, -1), (32, 32), (33, 32), (34, 32), (35, 64), (36, 4), (37, 32), (38, 256), (39, 8), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, -1), (55, 64), (56, 64), (57, -1), (58, -1), (59, 32), (60, 64), (61, 32)]

Decide 38 with phase True at level 12

After decision at level 12
 pending : [29, 28, 11, 46, 23, 50, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 59, 42]
 solution : [0, 8, 9, 15, 38]


New level: 13
 pending : [29, 28, 11, 46, 23, 50, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 59, 42]
 solution : [0, 8, 9, 15, 38]


Before reduction : 
 pending  : [29, 28, 11, 46, 23, 50, 37, 22, 45, 40, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 44, 30, 27, 49, 36, 2, 59, 42]
 solution : [0, 8, 9, 15, 38]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, 4), (28, 16), (29, 8), (30, 2), (31, -1), (32, 32), (33, 32), (34, 32), (35, 64), (36, 4), (37, 32), (38, 256), (39, 8), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, -1), (55, 64), (56, 64), (57, -1), (58, -1), (59, 32), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 8), (24, 32), (25, 8), (26, -1), (27, 4), (28, 4), (29, 2), (30, 2), (31, -1), (32, 32), (33, 16), (34, 32), (35, 8), (36, 4), (37, 0), (38, -1), (39, 4), (40, 0), (41, 256), (42, 0), (43, 8), (44, 0), (45, 4), (46, 16), (47, -1), (48, 16), (49, 4), (50, 32), (51, 64), (52, 64), (53, -1), (54, -1), (55, 64), (56, 64), (57, -1), (58, -1), (59, 32), (60, 64), (61, 16)]

Covered at level 13 : {40, 42, 44, 37}

After reduction : 
 pending  : [29, 28, 11, 46, 23, 50, 22, 45, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59]
 solution : [0, 8, 9, 15, 38]


Before reduction : 
 pending  : [29, 28, 11, 46, 23, 50, 22, 45, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59]
 solution : [0, 8, 9, 15, 38]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 8), (24, 32), (25, 8), (26, -1), (27, 4), (28, 4), (29, 2), (30, 2), (31, -1), (32, 32), (33, 16), (34, 32), (35, 8), (36, 4), (37, 0), (38, -1), (39, 4), (40, 0), (41, 256), (42, 0), (43, 8), (44, 0), (45, 4), (46, 16), (47, -1), (48, 16), (49, 4), (50, 32), (51, 64), (52, 64), (53, -1), (54, -1), (55, 64), (56, 64), (57, -1), (58, -1), (59, 32), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 8), (24, 32), (25, 8), (26, -1), (27, 4), (28, 4), (29, 2), (30, 2), (31, -1), (32, 32), (33, 16), (34, 32), (35, 8), (36, 4), (37, -1), (38, -1), (39, 4), (40, -1), (41, 256), (42, -1), (43, 8), (44, -1), (45, 4), (46, 16), (47, -1), (48, 16), (49, 4), (50, 32), (51, 64), (52, 64), (53, -1), (54, -1), (55, 64), (56, 64), (57, -1), (58, -1), (59, 32), (60, 64), (61, 16)]

Covered at level 13 : set()

After reduction : 
 pending  : [29, 28, 11, 46, 23, 50, 22, 45, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59]
 solution : [0, 8, 9, 15, 38]


Solution : [0, 8, 9, 15, 38] has cost 29.


Before backtrack at level 13
 pending : [29, 28, 11, 46, 23, 50, 22, 45, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59]
 solution : [0, 8, 9, 15, 38]

After backtrack at level 13
 pending : [29, 28, 11, 46, 23, 50, 22, 45, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 37, 40, 44, 42]
 solution : [0, 8, 9, 15, 38]


Invert decision for 38 at level 12


New level: 13
 pending : [29, 28, 11, 46, 23, 50, 22, 45, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 37, 40, 44, 42]
 solution : [0, 8, 9, 15]


Before reduction : 
 pending  : [29, 28, 11, 46, 23, 50, 22, 45, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 37, 40, 44, 42]
 solution : [0, 8, 9, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 8), (24, 32), (25, 8), (26, -1), (27, 4), (28, 4), (29, 2), (30, 2), (31, -1), (32, 32), (33, 16), (34, 32), (35, 8), (36, 4), (37, -1), (38, -1), (39, 4), (40, -1), (41, 256), (42, -1), (43, 8), (44, -1), (45, 4), (46, 16), (47, -1), (48, 16), (49, 4), (50, 32), (51, 64), (52, 64), (53, -1), (54, -1), (55, 64), (56, 64), (57, -1), (58, -1), (59, 32), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, 4), (28, 16), (29, 8), (30, 2), (31, -1), (32, 32), (33, 32), (34, 32), (35, 64), (36, 4), (37, 32), (38, -1), (39, 8), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, -1), (55, 64), (56, 64), (57, -1), (58, -1), (59, 32), (60, 64), (61, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [29, 28, 11, 46, 23, 50, 22, 45, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 37, 40, 44, 42]
 solution : [0, 8, 9, 15]


Solution : [0, 8, 9, 15] has cost 19.


Decide in level 13 among pending : [29, 28, 11, 46, 23, 50, 22, 45, 24, 21, 25, 14, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 37, 40, 44, 42]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, 4), (28, 16), (29, 8), (30, 2), (31, -1), (32, 32), (33, 32), (34, 32), (35, 64), (36, 4), (37, 32), (38, -1), (39, 8), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, -1), (55, 64), (56, 64), (57, -1), (58, -1), (59, 32), (60, 64), (61, 32)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [29, 28, 11, 46, 23, 50, 22, 45, 24, 21, 25, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 37, 40, 44, 42]
 solution : [0, 8, 9, 15, 14]


New level: 14
 pending : [29, 28, 11, 46, 23, 50, 22, 45, 24, 21, 25, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 37, 40, 44, 42]
 solution : [0, 8, 9, 15, 14]


Before reduction : 
 pending  : [29, 28, 11, 46, 23, 50, 22, 45, 24, 21, 25, 52, 34, 60, 41, 55, 35, 4, 32, 17, 13, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 37, 40, 44, 42]
 solution : [0, 8, 9, 15, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, 256), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 32), (24, 64), (25, 16), (26, -1), (27, 4), (28, 16), (29, 8), (30, 2), (31, -1), (32, 32), (33, 32), (34, 32), (35, 64), (36, 4), (37, 32), (38, -1), (39, 8), (40, 32), (41, 256), (42, 2), (43, 256), (44, 16), (45, 64), (46, 32), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, -1), (55, 64), (56, 64), (57, -1), (58, -1), (59, 32), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 1), (24, 0), (25, 0), (26, -1), (27, 4), (28, 0), (29, 0), (30, 2), (31, -1), (32, 32), (33, 4), (34, 32), (35, 64), (36, 4), (37, 0), (38, -1), (39, 8), (40, 0), (41, 256), (42, 0), (43, 32), (44, 0), (45, 0), (46, 4), (47, -1), (48, 16), (49, 4), (50, 4), (51, 64), (52, 0), (53, -1), (54, -1), (55, 64), (56, 2), (57, -1), (58, -1), (59, 32), (60, 64), (61, 4)]

Covered at level 14 : {37, 40, 42, 44, 45, 13, 52, 21, 22, 24, 25, 28, 29}

After reduction : 
 pending  : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59]
 solution : [0, 8, 9, 15, 14]


Before reduction : 
 pending  : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59]
 solution : [0, 8, 9, 15, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 1), (24, 0), (25, 0), (26, -1), (27, 4), (28, 0), (29, 0), (30, 2), (31, -1), (32, 32), (33, 4), (34, 32), (35, 64), (36, 4), (37, 0), (38, -1), (39, 8), (40, 0), (41, 256), (42, 0), (43, 32), (44, 0), (45, 0), (46, 4), (47, -1), (48, 16), (49, 4), (50, 4), (51, 64), (52, 0), (53, -1), (54, -1), (55, 64), (56, 2), (57, -1), (58, -1), (59, 32), (60, 64), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, -1), (27, 4), (28, -1), (29, -1), (30, 2), (31, -1), (32, 32), (33, 4), (34, 32), (35, 64), (36, 4), (37, -1), (38, -1), (39, 8), (40, -1), (41, 256), (42, -1), (43, 32), (44, -1), (45, -1), (46, 4), (47, -1), (48, 16), (49, 4), (50, 4), (51, 64), (52, -1), (53, -1), (54, -1), (55, 64), (56, 2), (57, -1), (58, -1), (59, 32), (60, 64), (61, 4)]

Covered at level 14 : set()

After reduction : 
 pending  : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59]
 solution : [0, 8, 9, 15, 14]


Solution : [0, 8, 9, 15, 14] has cost 25.


Before backtrack at level 14
 pending : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59]
 solution : [0, 8, 9, 15, 14]

After backtrack at level 14
 pending : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 24, 21, 25, 52, 13, 37, 40, 44, 42]
 solution : [0, 8, 9, 15, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 24, 21, 25, 52, 13, 37, 40, 44, 42]
 solution : [0, 8, 9, 15]


Before reduction : 
 pending  : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 24, 21, 25, 52, 13, 37, 40, 44, 42]
 solution : [0, 8, 9, 15]

Essensial at level 14 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, -1), (27, 4), (28, -1), (29, -1), (30, 2), (31, -1), (32, 32), (33, 4), (34, 32), (35, 64), (36, 4), (37, -1), (38, -1), (39, 8), (40, -1), (41, 256), (42, -1), (43, 32), (44, -1), (45, -1), (46, 4), (47, -1), (48, 16), (49, 4), (50, 4), (51, 64), (52, -1), (53, -1), (54, -1), (55, 64), (56, 2), (57, -1), (58, -1), (59, 32), (60, 64), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 32), (24, -1), (25, 0), (26, -1), (27, 4), (28, 4), (29, 4), (30, 2), (31, -1), (32, 32), (33, 16), (34, 32), (35, 64), (36, 4), (37, 16), (38, -1), (39, 8), (40, 16), (41, 256), (42, 1), (43, 256), (44, 1), (45, 64), (46, 16), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, -1), (55, 64), (56, 64), (57, -1), (58, -1), (59, 32), (60, 64), (61, 16)]

Covered at level 14 : {25}

After reduction : 
 pending  : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42]
 solution : [0, 8, 9, 15, 24]


Before reduction : 
 pending  : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42]
 solution : [0, 8, 9, 15, 24]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 32), (24, -1), (25, 0), (26, -1), (27, 4), (28, 4), (29, 4), (30, 2), (31, -1), (32, 32), (33, 16), (34, 32), (35, 64), (36, 4), (37, 16), (38, -1), (39, 8), (40, 16), (41, 256), (42, 1), (43, 256), (44, 1), (45, 64), (46, 16), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, -1), (55, 64), (56, 64), (57, -1), (58, -1), (59, 32), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 32), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 4), (30, 2), (31, -1), (32, 32), (33, 16), (34, 32), (35, 64), (36, 4), (37, 16), (38, -1), (39, 8), (40, 16), (41, 256), (42, 1), (43, 256), (44, 1), (45, 64), (46, 16), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, -1), (55, 64), (56, 64), (57, -1), (58, -1), (59, 32), (60, 64), (61, 16)]

Covered at level 14 : set()

After reduction : 
 pending  : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42]
 solution : [0, 8, 9, 15, 24]


Solution : [0, 8, 9, 15, 24] has cost 29.


Before backtrack at level 14
 pending : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42]
 solution : [0, 8, 9, 15, 24]

After backtrack at level 14
 pending : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25]
 solution : [0, 8, 9, 15]


Before backtrack at level 13
 pending : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25]
 solution : [0, 8, 9, 15]

After backtrack at level 13
 pending : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 14]
 solution : [0, 8, 9, 15]


Before backtrack at level 12
 pending : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 14]
 solution : [0, 8, 9, 15]

After backtrack at level 12
 pending : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 14, 38]
 solution : [0, 8, 9, 15]


Before backtrack at level 11
 pending : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 14, 38]
 solution : [0, 8, 9, 15]

After backtrack at level 11
 pending : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 14, 38, 58]
 solution : [0, 8, 9, 15]


Before backtrack at level 10
 pending : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 14, 38, 58]
 solution : [0, 8, 9, 15]

After backtrack at level 10
 pending : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 14, 38, 58, 54]
 solution : [0, 8, 9, 15]


Before backtrack at level 9
 pending : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 14, 38, 58, 54]
 solution : [0, 8, 9, 15]

After backtrack at level 9
 pending : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 14, 38, 58, 54, 20, 53, 26, 47, 31, 57, 19]
 solution : [0, 8, 9, 15]


Invert decision for 15 at level 8


New level: 9
 pending : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 14, 38, 58, 54, 20, 53, 26, 47, 31, 57, 19]
 solution : [0, 8, 9]


Before reduction : 
 pending  : [11, 46, 23, 50, 34, 60, 41, 55, 35, 4, 32, 17, 3, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 14, 38, 58, 54, 20, 53, 26, 47, 31, 57, 19]
 solution : [0, 8, 9]

Essensial at level 9 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 32), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 4), (30, 2), (31, -1), (32, 32), (33, 16), (34, 32), (35, 64), (36, 4), (37, 16), (38, -1), (39, 8), (40, 16), (41, 256), (42, 1), (43, 256), (44, 1), (45, 64), (46, 16), (47, -1), (48, 16), (49, 4), (50, 64), (51, 64), (52, 64), (53, -1), (54, -1), (55, 64), (56, 64), (57, -1), (58, -1), (59, 32), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 512), (15, -1), (16, -1), (17, -1), (18, -1), (19, 512), (20, 32), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 32), (27, 16), (28, 256), (29, 128), (30, 4), (31, 8), (32, 0), (33, 8), (34, 0), (35, 4), (36, 4), (37, 128), (38, 256), (39, 16), (40, 64), (41, 4), (42, 64), (43, 32), (44, 32), (45, 128), (46, 256), (47, 4), (48, 4), (49, 4), (50, 64), (51, 4), (52, 128), (53, 32), (54, 32), (55, 0), (56, 256), (57, 8), (58, 256), (59, 32), (60, 0), (61, 8)]

Covered at level 9 : {32, 34, 3, 4, 55, 60}

After reduction : 
 pending  : [11, 46, 23, 50, 41, 35, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 14, 38, 58, 54, 20, 53, 26, 47, 31, 57, 19]
 solution : [0, 8, 9, 17]


Before reduction : 
 pending  : [11, 46, 23, 50, 41, 35, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 14, 38, 58, 54, 20, 53, 26, 47, 31, 57, 19]
 solution : [0, 8, 9, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 512), (15, -1), (16, -1), (17, -1), (18, -1), (19, 512), (20, 32), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 32), (27, 16), (28, 256), (29, 128), (30, 4), (31, 8), (32, 0), (33, 8), (34, 0), (35, 4), (36, 4), (37, 128), (38, 256), (39, 16), (40, 64), (41, 4), (42, 64), (43, 32), (44, 32), (45, 128), (46, 256), (47, 4), (48, 4), (49, 4), (50, 64), (51, 4), (52, 128), (53, 32), (54, 32), (55, 0), (56, 256), (57, 8), (58, 256), (59, 32), (60, 0), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 512), (15, -1), (16, -1), (17, -1), (18, -1), (19, 512), (20, 32), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 32), (27, 16), (28, 256), (29, 128), (30, 4), (31, 8), (32, -1), (33, 8), (34, -1), (35, 4), (36, 4), (37, 128), (38, 256), (39, 16), (40, 64), (41, 4), (42, 64), (43, 32), (44, 32), (45, 128), (46, 256), (47, 4), (48, 4), (49, 4), (50, 64), (51, 4), (52, 128), (53, 32), (54, 32), (55, -1), (56, 256), (57, 8), (58, 256), (59, 32), (60, -1), (61, 8)]

Covered at level 9 : set()

After reduction : 
 pending  : [11, 46, 23, 50, 41, 35, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 14, 38, 58, 54, 20, 53, 26, 47, 31, 57, 19]
 solution : [0, 8, 9, 17]


Solution : [0, 8, 9, 17] has cost 19.


Decide in level 9 among pending : [11, 46, 23, 50, 41, 35, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 14, 38, 58, 54, 20, 53, 26, 47, 31, 57, 19]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 512), (15, -1), (16, -1), (17, -1), (18, -1), (19, 512), (20, 32), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 32), (27, 16), (28, 256), (29, 128), (30, 4), (31, 8), (32, -1), (33, 8), (34, -1), (35, 4), (36, 4), (37, 128), (38, 256), (39, 16), (40, 64), (41, 4), (42, 64), (43, 32), (44, 32), (45, 128), (46, 256), (47, 4), (48, 4), (49, 4), (50, 64), (51, 4), (52, 128), (53, 32), (54, 32), (55, -1), (56, 256), (57, 8), (58, 256), (59, 32), (60, -1), (61, 8)]

Decide 14 with phase True at level 9

After decision at level 9
 pending : [11, 46, 23, 50, 41, 35, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 38, 58, 54, 20, 53, 26, 47, 31, 57, 19]
 solution : [0, 8, 9, 17, 14]


New level: 10
 pending : [11, 46, 23, 50, 41, 35, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 38, 58, 54, 20, 53, 26, 47, 31, 57, 19]
 solution : [0, 8, 9, 17, 14]


Before reduction : 
 pending  : [11, 46, 23, 50, 41, 35, 51, 56, 39, 43, 48, 61, 33, 30, 27, 49, 36, 2, 59, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 38, 58, 54, 20, 53, 26, 47, 31, 57, 19]
 solution : [0, 8, 9, 17, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 256), (14, 512), (15, -1), (16, -1), (17, -1), (18, -1), (19, 512), (20, 32), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 32), (27, 16), (28, 256), (29, 128), (30, 4), (31, 8), (32, -1), (33, 8), (34, -1), (35, 4), (36, 4), (37, 128), (38, 256), (39, 16), (40, 64), (41, 4), (42, 64), (43, 32), (44, 32), (45, 128), (46, 256), (47, 4), (48, 4), (49, 4), (50, 64), (51, 4), (52, 128), (53, 32), (54, 32), (55, -1), (56, 256), (57, 8), (58, 256), (59, 32), (60, -1), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 1), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 2), (55, -1), (56, 2), (57, 0), (58, 1), (59, 1), (60, -1), (61, 0)]

Covered at level 10 : {13, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 61}

After reduction : 
 pending  : [11, 23, 56, 2, 59, 58, 54]
 solution : [0, 8, 9, 17, 14]


Before reduction : 
 pending  : [11, 23, 56, 2, 59, 58, 54]
 solution : [0, 8, 9, 17, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 1), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 2), (55, -1), (56, 2), (57, 0), (58, 1), (59, 1), (60, -1), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 2), (55, -1), (56, 2), (57, -1), (58, 1), (59, 1), (60, -1), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [11, 23, 56, 2, 59, 58, 54]
 solution : [0, 8, 9, 17, 14]


Solution : [0, 8, 9, 17, 14] has cost 25.


Before backtrack at level 10
 pending : [11, 23, 56, 2, 59, 58, 54]
 solution : [0, 8, 9, 17, 14]

After backtrack at level 10
 pending : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 51, 39, 43, 48, 61, 33, 30, 27, 49, 36, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 38, 20, 53, 26, 47, 31, 57, 19]
 solution : [0, 8, 9, 17, 14]


Invert decision for 14 at level 9


New level: 10
 pending : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 51, 39, 43, 48, 61, 33, 30, 27, 49, 36, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 38, 20, 53, 26, 47, 31, 57, 19]
 solution : [0, 8, 9, 17]


Before reduction : 
 pending  : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 51, 39, 43, 48, 61, 33, 30, 27, 49, 36, 29, 28, 22, 45, 21, 52, 13, 37, 40, 44, 42, 24, 25, 38, 20, 53, 26, 47, 31, 57, 19]
 solution : [0, 8, 9, 17]

Essensial at level 10 : {24, 13}

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, 2), (55, -1), (56, 2), (57, -1), (58, 1), (59, 1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 2), (23, 1), (24, -1), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, 2), (34, -1), (35, 1), (36, 0), (37, 1), (38, 32), (39, 0), (40, 1), (41, 1), (42, 1), (43, 1), (44, 1), (45, 1), (46, 2), (47, 0), (48, 0), (49, 0), (50, 2), (51, 0), (52, 2), (53, 0), (54, 4), (55, -1), (56, 4), (57, 0), (58, 256), (59, 2), (60, -1), (61, 2)]

Covered at level 10 : {36, 39, 57, 47, 48, 49, 51, 20, 21, 53, 19, 25, 26, 27, 28, 29, 30, 31}

After reduction : 
 pending  : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38]
 solution : [0, 8, 9, 17, 24, 13]


Before reduction : 
 pending  : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38]
 solution : [0, 8, 9, 17, 24, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 2), (23, 1), (24, -1), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, 2), (34, -1), (35, 1), (36, 0), (37, 1), (38, 32), (39, 0), (40, 1), (41, 1), (42, 1), (43, 1), (44, 1), (45, 1), (46, 2), (47, 0), (48, 0), (49, 0), (50, 2), (51, 0), (52, 2), (53, 0), (54, 4), (55, -1), (56, 4), (57, 0), (58, 256), (59, 2), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, 1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, 1), (36, -1), (37, 1), (38, 16), (39, -1), (40, 1), (41, 1), (42, 1), (43, 1), (44, 1), (45, 1), (46, 2), (47, -1), (48, -1), (49, -1), (50, 2), (51, -1), (52, 2), (53, -1), (54, 4), (55, -1), (56, 4), (57, -1), (58, 256), (59, 2), (60, -1), (61, 2)]

Covered at level 10 : set()

After reduction : 
 pending  : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38]
 solution : [0, 8, 9, 17, 24, 13]


Solution : [0, 8, 9, 17, 24, 13] has cost 35.


Before backtrack at level 10
 pending : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38]
 solution : [0, 8, 9, 17, 24, 13]

After backtrack at level 10
 pending : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19]
 solution : [0, 8, 9, 17]


Before backtrack at level 9
 pending : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19]
 solution : [0, 8, 9, 17]

After backtrack at level 9
 pending : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14]
 solution : [0, 8, 9]


Before backtrack at level 8
 pending : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14]
 solution : [0, 8, 9]

After backtrack at level 8
 pending : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14, 15]
 solution : [0, 8, 9]


Before backtrack at level 7
 pending : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14, 15]
 solution : [0, 8, 9]

After backtrack at level 7
 pending : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16]
 solution : [0, 8, 9]


Before backtrack at level 6
 pending : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16]
 solution : [0, 8, 9]

After backtrack at level 6
 pending : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12]
 solution : [0, 8, 9]


Before backtrack at level 5
 pending : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12]
 solution : [0, 8, 9]

After backtrack at level 5
 pending : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18]
 solution : [0, 8, 9]


Before backtrack at level 4
 pending : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18]
 solution : [0, 8, 9]

After backtrack at level 4
 pending : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]
 solution : [0, 8, 9]


Invert decision for 9 at level 3


New level: 4
 pending : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]
 solution : [0, 8]


Before reduction : 
 pending  : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]
 solution : [0, 8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, 1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, 1), (36, -1), (37, 1), (38, 16), (39, -1), (40, 1), (41, 1), (42, 1), (43, 1), (44, 1), (45, 1), (46, 2), (47, -1), (48, -1), (49, -1), (50, 2), (51, -1), (52, 2), (53, -1), (54, 4), (55, -1), (56, 4), (57, -1), (58, 256), (59, 2), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 4 : set()

After reduction : 
 pending  : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]
 solution : [0, 8]


Solution : [0, 8] has cost 7.


Decide in level 4 among pending : [11, 23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]

Coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 11 with phase True at level 4

After decision at level 4
 pending : [23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]
 solution : [0, 8, 11]


New level: 5
 pending : [23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]
 solution : [0, 8, 11]


Before reduction : 
 pending  : [23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]
 solution : [0, 8, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 16), (22, 256), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 128), (55, 256), (56, 128), (57, 256), (58, 128), (59, 128), (60, 256), (61, 256)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]
 solution : [0, 8, 11]


Solution : [0, 8, 11] has cost 13.


Decide in level 5 among pending : [23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 19, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 16), (22, 256), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 128), (55, 256), (56, 128), (57, 256), (58, 128), (59, 128), (60, 256), (61, 256)]

Decide 19 with phase True at level 5

After decision at level 5
 pending : [23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]
 solution : [0, 8, 11, 19]


New level: 6
 pending : [23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]
 solution : [0, 8, 11, 19]


Before reduction : 
 pending  : [23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 36, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]
 solution : [0, 8, 11, 19]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 16), (22, 256), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 128), (55, 256), (56, 128), (57, 256), (58, 128), (59, 128), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 256), (19, -1), (20, 256), (21, 16), (22, 256), (23, 32), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, 0), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 64), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 128), (59, 128), (60, 256), (61, 256)]

Covered at level 6 : {36}

After reduction : 
 pending  : [23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]
 solution : [0, 8, 11, 19]


Before reduction : 
 pending  : [23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]
 solution : [0, 8, 11, 19]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 256), (19, -1), (20, 256), (21, 16), (22, 256), (23, 32), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, 0), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 64), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 128), (59, 128), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 256), (19, -1), (20, 256), (21, 16), (22, 256), (23, 32), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 64), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 128), (59, 128), (60, 256), (61, 256)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]
 solution : [0, 8, 11, 19]


Solution : [0, 8, 11, 19] has cost 22.


Decide in level 6 among pending : [23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 17, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 256), (19, -1), (20, 256), (21, 16), (22, 256), (23, 32), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 64), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 128), (59, 128), (60, 256), (61, 256)]

Decide 17 with phase True at level 6

After decision at level 6
 pending : [23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]
 solution : [0, 8, 11, 19, 17]


New level: 7
 pending : [23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]
 solution : [0, 8, 11, 19, 17]


Before reduction : 
 pending  : [23, 56, 2, 59, 58, 54, 46, 50, 41, 35, 43, 61, 33, 22, 45, 52, 37, 40, 44, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 53, 26, 47, 31, 57, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 18, 7, 10, 6]
 solution : [0, 8, 11, 19, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 256), (19, -1), (20, 256), (21, 16), (22, 256), (23, 32), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 64), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 128), (59, 128), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, 512), (15, 256), (16, 256), (17, -1), (18, 0), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 64), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, 0), (36, -1), (37, 8), (38, 64), (39, 8), (40, 8), (41, 8), (42, 256), (43, 256), (44, 0), (45, 16), (46, 256), (47, 128), (48, 128), (49, 64), (50, 64), (51, 8), (52, 16), (53, 0), (54, 0), (55, 16), (56, 16), (57, 128), (58, 16), (59, 0), (60, 16), (61, 256)]

Covered at level 7 : {35, 44, 18, 53, 54, 59}

After reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 7, 10, 6]
 solution : [0, 8, 11, 19, 17]


Before reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 7, 10, 6]
 solution : [0, 8, 11, 19, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, 512), (15, 256), (16, 256), (17, -1), (18, 0), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 64), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, 0), (36, -1), (37, 8), (38, 64), (39, 8), (40, 8), (41, 8), (42, 256), (43, 256), (44, 0), (45, 16), (46, 256), (47, 128), (48, 128), (49, 64), (50, 64), (51, 8), (52, 16), (53, 0), (54, 0), (55, 16), (56, 16), (57, 128), (58, 16), (59, 0), (60, 16), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, 512), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 64), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, 256), (47, 128), (48, 128), (49, 64), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 128), (58, 16), (59, -1), (60, 16), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 7, 10, 6]
 solution : [0, 8, 11, 19, 17]


Solution : [0, 8, 11, 19, 17] has cost 28.


Before backtrack at level 7
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 7, 10, 6]
 solution : [0, 8, 11, 19, 17]

After backtrack at level 7
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 7, 10, 6, 59, 54, 35, 44, 53, 18]
 solution : [0, 8, 11, 19, 17]


Invert decision for 17 at level 6


New level: 7
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 7, 10, 6, 59, 54, 35, 44, 53, 18]
 solution : [0, 8, 11, 19]


Before reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 7, 10, 6, 59, 54, 35, 44, 53, 18]
 solution : [0, 8, 11, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, 512), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 64), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, 256), (47, 128), (48, 128), (49, 64), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 128), (58, 16), (59, -1), (60, 16), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, -1), (18, 256), (19, -1), (20, 256), (21, 16), (22, 256), (23, 32), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 64), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 128), (59, 128), (60, 256), (61, 256)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 7, 10, 6, 59, 54, 35, 44, 53, 18]
 solution : [0, 8, 11, 19]


Solution : [0, 8, 11, 19] has cost 22.


Decide in level 7 among pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 4, 32, 3, 14, 15, 16, 12, 7, 10, 6, 59, 54, 35, 44, 53, 18]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, -1), (18, 256), (19, -1), (20, 256), (21, 16), (22, 256), (23, 32), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 64), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 128), (59, 128), (60, 256), (61, 256)]

Decide 3 with phase True at level 7

After decision at level 7
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 4, 32, 14, 15, 16, 12, 7, 10, 6, 59, 54, 35, 44, 53, 18]
 solution : [0, 8, 11, 19, 3]


New level: 8
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 4, 32, 14, 15, 16, 12, 7, 10, 6, 59, 54, 35, 44, 53, 18]
 solution : [0, 8, 11, 19, 3]


Before reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 4, 32, 14, 15, 16, 12, 7, 10, 6, 59, 54, 35, 44, 53, 18]
 solution : [0, 8, 11, 19, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, -1), (18, 256), (19, -1), (20, 256), (21, 16), (22, 256), (23, 32), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 64), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 128), (59, 128), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 0), (5, -1), (6, 0), (7, 64), (8, -1), (9, -1), (10, 32), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, -1), (18, 256), (19, -1), (20, 256), (21, 16), (22, 256), (23, 32), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 16), (31, 32), (32, 32), (33, 64), (34, 64), (35, 16), (36, -1), (37, 128), (38, 256), (39, 256), (40, 128), (41, 128), (42, 128), (43, 64), (44, 128), (45, 128), (46, 128), (47, 64), (48, 128), (49, 32), (50, 32), (51, 32), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 128), (59, 128), (60, 128), (61, 128)]

Covered at level 8 : {4, 6}

After reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18]
 solution : [0, 8, 11, 19, 3]


Before reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18]
 solution : [0, 8, 11, 19, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 0), (5, -1), (6, 0), (7, 64), (8, -1), (9, -1), (10, 32), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, -1), (18, 256), (19, -1), (20, 256), (21, 16), (22, 256), (23, 32), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 16), (31, 32), (32, 32), (33, 64), (34, 64), (35, 16), (36, -1), (37, 128), (38, 256), (39, 256), (40, 128), (41, 128), (42, 128), (43, 64), (44, 128), (45, 128), (46, 128), (47, 64), (48, 128), (49, 32), (50, 32), (51, 32), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 128), (59, 128), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 32), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, -1), (18, 256), (19, -1), (20, 256), (21, 16), (22, 256), (23, 32), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 16), (31, 32), (32, 32), (33, 64), (34, 64), (35, 16), (36, -1), (37, 128), (38, 256), (39, 256), (40, 128), (41, 128), (42, 128), (43, 64), (44, 128), (45, 128), (46, 128), (47, 64), (48, 128), (49, 32), (50, 32), (51, 32), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 128), (59, 128), (60, 128), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18]
 solution : [0, 8, 11, 19, 3]


Solution : [0, 8, 11, 19, 3] has cost 28.


Before backtrack at level 8
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18]
 solution : [0, 8, 11, 19, 3]

After backtrack at level 8
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18, 4, 6]
 solution : [0, 8, 11, 19, 3]


Invert decision for 3 at level 7


New level: 8
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18, 4, 6]
 solution : [0, 8, 11, 19]


Before reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18, 4, 6]
 solution : [0, 8, 11, 19]

Essensial at level 8 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 32), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, -1), (18, 256), (19, -1), (20, 256), (21, 16), (22, 256), (23, 32), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 16), (31, 32), (32, 32), (33, 64), (34, 64), (35, 16), (36, -1), (37, 128), (38, 256), (39, 256), (40, 128), (41, 128), (42, 128), (43, 64), (44, 128), (45, 128), (46, 128), (47, 64), (48, 128), (49, 32), (50, 32), (51, 32), (52, 64), (53, 64), (54, 64), (55, 64), (56, 64), (57, 64), (58, 128), (59, 128), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, 0), (7, 64), (8, -1), (9, -1), (10, 16), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, -1), (18, 256), (19, -1), (20, 256), (21, 16), (22, 256), (23, 32), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 16), (31, 32), (32, 32), (33, 64), (34, 64), (35, 32), (36, -1), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 128), (44, 128), (45, 128), (46, 128), (47, 64), (48, 128), (49, 64), (50, 32), (51, 32), (52, 64), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 128), (59, 128), (60, 256), (61, 256)]

Covered at level 8 : {6}

After reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18]
 solution : [0, 8, 11, 19, 4]


Before reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18]
 solution : [0, 8, 11, 19, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, 0), (7, 64), (8, -1), (9, -1), (10, 16), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, -1), (18, 256), (19, -1), (20, 256), (21, 16), (22, 256), (23, 32), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 16), (31, 32), (32, 32), (33, 64), (34, 64), (35, 32), (36, -1), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 128), (44, 128), (45, 128), (46, 128), (47, 64), (48, 128), (49, 64), (50, 32), (51, 32), (52, 64), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 128), (59, 128), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 16), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, -1), (18, 256), (19, -1), (20, 256), (21, 16), (22, 256), (23, 32), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 16), (31, 32), (32, 32), (33, 64), (34, 64), (35, 32), (36, -1), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 128), (44, 128), (45, 128), (46, 128), (47, 64), (48, 128), (49, 64), (50, 32), (51, 32), (52, 64), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 128), (59, 128), (60, 256), (61, 256)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18]
 solution : [0, 8, 11, 19, 4]


Solution : [0, 8, 11, 19, 4] has cost 31.


Before backtrack at level 8
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18]
 solution : [0, 8, 11, 19, 4]

After backtrack at level 8
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18, 4, 6]
 solution : [0, 8, 11, 19]


Before backtrack at level 7
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18, 4, 6]
 solution : [0, 8, 11, 19]

After backtrack at level 7
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18, 4, 6, 3]
 solution : [0, 8, 11, 19]


Before backtrack at level 6
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18, 4, 6, 3]
 solution : [0, 8, 11, 19]

After backtrack at level 6
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18, 4, 6, 3, 36, 17]
 solution : [0, 8, 11, 19]


Invert decision for 19 at level 5


New level: 6
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18, 4, 6, 3, 36, 17]
 solution : [0, 8, 11]


Before reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18, 4, 6, 3, 36, 17]
 solution : [0, 8, 11]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 16), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, -1), (18, 256), (19, -1), (20, 256), (21, 16), (22, 256), (23, 32), (24, 128), (25, 64), (26, 128), (27, 64), (28, 64), (29, 32), (30, 16), (31, 32), (32, 32), (33, 64), (34, 64), (35, 32), (36, -1), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 128), (44, 128), (45, 128), (46, 128), (47, 64), (48, 128), (49, 64), (50, 32), (51, 32), (52, 64), (53, 64), (54, 64), (55, 128), (56, 64), (57, 128), (58, 128), (59, 128), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, -1), (20, 256), (21, 16), (22, 256), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 128), (55, 256), (56, 128), (57, 256), (58, 128), (59, 128), (60, 256), (61, 256)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18, 4, 6, 3, 36, 17]
 solution : [0, 8, 11]


Solution : [0, 8, 11] has cost 13.


Decide in level 6 among pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 14, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18, 4, 6, 3, 36, 17]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, -1), (20, 256), (21, 16), (22, 256), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 128), (55, 256), (56, 128), (57, 256), (58, 128), (59, 128), (60, 256), (61, 256)]

Decide 14 with phase True at level 6

After decision at level 6
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18, 4, 6, 3, 36, 17]
 solution : [0, 8, 11, 14]


New level: 7
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18, 4, 6, 3, 36, 17]
 solution : [0, 8, 11, 14]


Before reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 24, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18, 4, 6, 3, 36, 17]
 solution : [0, 8, 11, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, -1), (20, 256), (21, 16), (22, 256), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 128), (55, 256), (56, 128), (57, 256), (58, 128), (59, 128), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, 0), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 7 : {24}

After reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18, 4, 6, 3, 36, 17]
 solution : [0, 8, 11, 14]


Before reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18, 4, 6, 3, 36, 17]
 solution : [0, 8, 11, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, 0), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18, 4, 6, 3, 36, 17]
 solution : [0, 8, 11, 14]


Solution : [0, 8, 11, 14] has cost 19.


Decide in level 7 among pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 18, 4, 6, 3, 36, 17]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 18 with phase True at level 7

After decision at level 7
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 4, 6, 3, 36, 17]
 solution : [0, 8, 11, 14, 18]


New level: 8
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 4, 6, 3, 36, 17]
 solution : [0, 8, 11, 14, 18]


Before reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 38, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 35, 44, 53, 4, 6, 3, 36, 17]
 solution : [0, 8, 11, 14, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 16), (23, 64), (24, -1), (25, 32), (26, 64), (27, 128), (28, 8), (29, 64), (30, 128), (31, 64), (32, 128), (33, 32), (34, 64), (35, 0), (36, 32), (37, 8), (38, 0), (39, 16), (40, 8), (41, 32), (42, 16), (43, 8), (44, 32), (45, 16), (46, 32), (47, 128), (48, 256), (49, 128), (50, 64), (51, 128), (52, 32), (53, 64), (54, 64), (55, 128), (56, 32), (57, 64), (58, 16), (59, 32), (60, 64), (61, 32)]

Covered at level 8 : {35, 38}

After reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 44, 53, 4, 6, 3, 36, 17]
 solution : [0, 8, 11, 14, 18]


Before reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 44, 53, 4, 6, 3, 36, 17]
 solution : [0, 8, 11, 14, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 16), (23, 64), (24, -1), (25, 32), (26, 64), (27, 128), (28, 8), (29, 64), (30, 128), (31, 64), (32, 128), (33, 32), (34, 64), (35, 0), (36, 32), (37, 8), (38, 0), (39, 16), (40, 8), (41, 32), (42, 16), (43, 8), (44, 32), (45, 16), (46, 32), (47, 128), (48, 256), (49, 128), (50, 64), (51, 128), (52, 32), (53, 64), (54, 64), (55, 128), (56, 32), (57, 64), (58, 16), (59, 32), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 16), (23, 64), (24, -1), (25, 32), (26, 64), (27, 128), (28, 8), (29, 64), (30, 128), (31, 64), (32, 128), (33, 32), (34, 64), (35, -1), (36, 32), (37, 8), (38, -1), (39, 16), (40, 8), (41, 32), (42, 16), (43, 8), (44, 32), (45, 16), (46, 32), (47, 128), (48, 256), (49, 128), (50, 64), (51, 128), (52, 32), (53, 64), (54, 64), (55, 128), (56, 32), (57, 64), (58, 16), (59, 32), (60, 64), (61, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 44, 53, 4, 6, 3, 36, 17]
 solution : [0, 8, 11, 14, 18]


Solution : [0, 8, 11, 14, 18] has cost 28.


Before backtrack at level 8
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 44, 53, 4, 6, 3, 36, 17]
 solution : [0, 8, 11, 14, 18]

After backtrack at level 8
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 44, 53, 4, 6, 3, 36, 17, 38, 35]
 solution : [0, 8, 11, 14, 18]


Invert decision for 18 at level 7


New level: 8
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 44, 53, 4, 6, 3, 36, 17, 38, 35]
 solution : [0, 8, 11, 14]


Before reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 44, 53, 4, 6, 3, 36, 17, 38, 35]
 solution : [0, 8, 11, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 16), (23, 64), (24, -1), (25, 32), (26, 64), (27, 128), (28, 8), (29, 64), (30, 128), (31, 64), (32, 128), (33, 32), (34, 64), (35, -1), (36, 32), (37, 8), (38, -1), (39, 16), (40, 8), (41, 32), (42, 16), (43, 8), (44, 32), (45, 16), (46, 32), (47, 128), (48, 256), (49, 128), (50, 64), (51, 128), (52, 32), (53, 64), (54, 64), (55, 128), (56, 32), (57, 64), (58, 16), (59, 32), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 44, 53, 4, 6, 3, 36, 17, 38, 35]
 solution : [0, 8, 11, 14]


Solution : [0, 8, 11, 14] has cost 19.


Decide in level 8 among pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 44, 53, 4, 6, 3, 36, 17, 38, 35]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 6 with phase True at level 8

After decision at level 8
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 44, 53, 4, 3, 36, 17, 38, 35]
 solution : [0, 8, 11, 14, 6]


New level: 9
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 44, 53, 4, 3, 36, 17, 38, 35]
 solution : [0, 8, 11, 14, 6]


Before reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 44, 53, 4, 3, 36, 17, 38, 35]
 solution : [0, 8, 11, 14, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 44, 53, 4, 3, 36, 17, 38, 35]
 solution : [0, 8, 11, 14, 6]


Solution : [0, 8, 11, 14, 6] has cost 21.


Decide in level 9 among pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 44, 53, 4, 3, 36, 17, 38, 35]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 17 with phase True at level 9

After decision at level 9
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 44, 53, 4, 3, 36, 38, 35]
 solution : [0, 8, 11, 14, 6, 17]


New level: 10
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 44, 53, 4, 3, 36, 38, 35]
 solution : [0, 8, 11, 14, 6, 17]


Before reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 28, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 59, 54, 44, 53, 4, 3, 36, 38, 35]
 solution : [0, 8, 11, 14, 6, 17]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 128), (16, 128), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 4), (23, 4), (24, -1), (25, 32), (26, 32), (27, 4), (28, 0), (29, 4), (30, 128), (31, 32), (32, 16), (33, 32), (34, 16), (35, 0), (36, 0), (37, 4), (38, 0), (39, 4), (40, 4), (41, 8), (42, 64), (43, 32), (44, 0), (45, 8), (46, 64), (47, 128), (48, 128), (49, 256), (50, 128), (51, 8), (52, 8), (53, 0), (54, 0), (55, 16), (56, 8), (57, 128), (58, 8), (59, 0), (60, 16), (61, 64)]

Covered at level 10 : {35, 36, 38, 44, 53, 54, 59, 28}

After reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 4, 3]
 solution : [0, 8, 11, 14, 6, 17]


Before reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 4, 3]
 solution : [0, 8, 11, 14, 6, 17]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 128), (16, 128), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 4), (23, 4), (24, -1), (25, 32), (26, 32), (27, 4), (28, 0), (29, 4), (30, 128), (31, 32), (32, 16), (33, 32), (34, 16), (35, 0), (36, 0), (37, 4), (38, 0), (39, 4), (40, 4), (41, 8), (42, 64), (43, 32), (44, 0), (45, 8), (46, 64), (47, 128), (48, 128), (49, 256), (50, 128), (51, 8), (52, 8), (53, 0), (54, 0), (55, 16), (56, 8), (57, 128), (58, 8), (59, 0), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 128), (16, 128), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 4), (23, 4), (24, -1), (25, 32), (26, 32), (27, 4), (28, -1), (29, 4), (30, 16), (31, 32), (32, 16), (33, 32), (34, 16), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, 8), (42, 64), (43, 32), (44, -1), (45, 8), (46, 64), (47, 128), (48, 128), (49, 256), (50, 128), (51, 8), (52, 8), (53, -1), (54, -1), (55, 16), (56, 8), (57, 128), (58, 8), (59, -1), (60, 16), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 4, 3]
 solution : [0, 8, 11, 14, 6, 17]


Solution : [0, 8, 11, 14, 6, 17] has cost 27.


Before backtrack at level 10
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 4, 3]
 solution : [0, 8, 11, 14, 6, 17]

After backtrack at level 10
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35]
 solution : [0, 8, 11, 14, 6, 17]


Invert decision for 17 at level 9


New level: 10
 pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35]
 solution : [0, 8, 11, 14, 6]


Before reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35]
 solution : [0, 8, 11, 14, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 128), (16, 128), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 4), (23, 4), (24, -1), (25, 32), (26, 32), (27, 4), (28, -1), (29, 4), (30, 16), (31, 32), (32, 16), (33, 32), (34, 16), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, 8), (42, 64), (43, 32), (44, -1), (45, 8), (46, 64), (47, 128), (48, 128), (49, 256), (50, 128), (51, 8), (52, 8), (53, -1), (54, -1), (55, 16), (56, 8), (57, 128), (58, 8), (59, -1), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35]
 solution : [0, 8, 11, 14, 6]


Solution : [0, 8, 11, 14, 6] has cost 21.


Decide in level 10 among pending : [23, 56, 2, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 2 with phase True at level 10

After decision at level 10
 pending : [23, 56, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35]
 solution : [0, 8, 11, 14, 6, 2]


New level: 11
 pending : [23, 56, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35]
 solution : [0, 8, 11, 14, 6, 2]


Before reduction : 
 pending  : [23, 56, 58, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 12, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35]
 solution : [0, 8, 11, 14, 6, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 4), (11, -1), (12, 0), (13, 32), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 2), (22, 8), (23, 2), (24, -1), (25, 32), (26, 64), (27, 256), (28, 8), (29, 128), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 128), (38, 8), (39, 256), (40, 128), (41, 128), (42, 64), (43, 128), (44, 128), (45, 32), (46, 16), (47, 16), (48, 256), (49, 256), (50, 32), (51, 128), (52, 16), (53, 128), (54, 8), (55, 256), (56, 0), (57, 64), (58, 0), (59, 8), (60, 256), (61, 32)]

Covered at level 11 : {56, 58, 12}

After reduction : 
 pending  : [23, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35]
 solution : [0, 8, 11, 14, 6, 2]


Before reduction : 
 pending  : [23, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35]
 solution : [0, 8, 11, 14, 6, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 4), (11, -1), (12, 0), (13, 32), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 2), (22, 8), (23, 2), (24, -1), (25, 32), (26, 64), (27, 256), (28, 8), (29, 128), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 128), (38, 8), (39, 256), (40, 128), (41, 128), (42, 64), (43, 128), (44, 128), (45, 32), (46, 16), (47, 16), (48, 256), (49, 256), (50, 32), (51, 128), (52, 16), (53, 128), (54, 8), (55, 256), (56, 0), (57, 64), (58, 0), (59, 8), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 4), (11, -1), (12, -1), (13, 32), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 2), (22, 8), (23, 2), (24, -1), (25, 32), (26, 64), (27, 256), (28, 8), (29, 128), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 128), (38, 8), (39, 256), (40, 128), (41, 128), (42, 64), (43, 128), (44, 128), (45, 32), (46, 16), (47, 16), (48, 256), (49, 256), (50, 32), (51, 128), (52, 16), (53, 128), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 8), (60, 256), (61, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35]
 solution : [0, 8, 11, 14, 6, 2]


Solution : [0, 8, 11, 14, 6, 2] has cost 27.


Before backtrack at level 11
 pending : [23, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35]
 solution : [0, 8, 11, 14, 6, 2]

After backtrack at level 11
 pending : [23, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35, 56, 58, 12]
 solution : [0, 8, 11, 14, 6, 2]


Invert decision for 2 at level 10


New level: 11
 pending : [23, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35, 56, 58, 12]
 solution : [0, 8, 11, 14, 6]


Before reduction : 
 pending  : [23, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35, 56, 58, 12]
 solution : [0, 8, 11, 14, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 4), (11, -1), (12, -1), (13, 32), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 2), (22, 8), (23, 2), (24, -1), (25, 32), (26, 64), (27, 256), (28, 8), (29, 128), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 128), (38, 8), (39, 256), (40, 128), (41, 128), (42, 64), (43, 128), (44, 128), (45, 32), (46, 16), (47, 16), (48, 256), (49, 256), (50, 32), (51, 128), (52, 16), (53, 128), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 8), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35, 56, 58, 12]
 solution : [0, 8, 11, 14, 6]


Solution : [0, 8, 11, 14, 6] has cost 21.


Decide in level 11 among pending : [23, 46, 50, 41, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35, 56, 58, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 41 with phase True at level 11

After decision at level 11
 pending : [23, 46, 50, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35, 56, 58, 12]
 solution : [0, 8, 11, 14, 6, 41]


New level: 12
 pending : [23, 46, 50, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35, 56, 58, 12]
 solution : [0, 8, 11, 14, 6, 41]


Before reduction : 
 pending  : [23, 46, 50, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 38, 35, 56, 58, 12]
 solution : [0, 8, 11, 14, 6, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 4), (36, 128), (37, 128), (38, 0), (39, 256), (40, 128), (41, -1), (42, 32), (43, 64), (44, 32), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 128), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 12 : {38}

After reduction : 
 pending  : [23, 46, 50, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12]
 solution : [0, 8, 11, 14, 6, 41]


Before reduction : 
 pending  : [23, 46, 50, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12]
 solution : [0, 8, 11, 14, 6, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 4), (36, 128), (37, 128), (38, 0), (39, 256), (40, 128), (41, -1), (42, 32), (43, 64), (44, 32), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 128), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 16), (29, 128), (30, 128), (31, 64), (32, 64), (33, 32), (34, 128), (35, 4), (36, 128), (37, 128), (38, -1), (39, 256), (40, 128), (41, -1), (42, 32), (43, 64), (44, 32), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 128), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 46, 50, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12]
 solution : [0, 8, 11, 14, 6, 41]


Solution : [0, 8, 11, 14, 6, 41] has cost 31.


Before backtrack at level 12
 pending : [23, 46, 50, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12]
 solution : [0, 8, 11, 14, 6, 41]

After backtrack at level 12
 pending : [23, 46, 50, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12, 38]
 solution : [0, 8, 11, 14, 6, 41]


Invert decision for 41 at level 11


New level: 12
 pending : [23, 46, 50, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12, 38]
 solution : [0, 8, 11, 14, 6]


Before reduction : 
 pending  : [23, 46, 50, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12, 38]
 solution : [0, 8, 11, 14, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 16), (29, 128), (30, 128), (31, 64), (32, 64), (33, 32), (34, 128), (35, 4), (36, 128), (37, 128), (38, -1), (39, 256), (40, 128), (41, -1), (42, 32), (43, 64), (44, 32), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 128), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, -1), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 46, 50, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12, 38]
 solution : [0, 8, 11, 14, 6]


Solution : [0, 8, 11, 14, 6] has cost 21.


Decide in level 12 among pending : [23, 46, 50, 43, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, -1), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 43 with phase True at level 12

After decision at level 12
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12, 38]
 solution : [0, 8, 11, 14, 6, 43]


New level: 13
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12, 38]
 solution : [0, 8, 11, 14, 6, 43]


Before reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12, 38]
 solution : [0, 8, 11, 14, 6, 43]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, -1), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 8), (29, 128), (30, 64), (31, 64), (32, 128), (33, 32), (34, 128), (35, 16), (36, 128), (37, 32), (38, 0), (39, 64), (40, 32), (41, -1), (42, 64), (43, -1), (44, 128), (45, 64), (46, 32), (47, 64), (48, 128), (49, 128), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 13 : {38}

After reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12]
 solution : [0, 8, 11, 14, 6, 43]


Before reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12]
 solution : [0, 8, 11, 14, 6, 43]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 8), (29, 128), (30, 64), (31, 64), (32, 128), (33, 32), (34, 128), (35, 16), (36, 128), (37, 32), (38, 0), (39, 64), (40, 32), (41, -1), (42, 64), (43, -1), (44, 128), (45, 64), (46, 32), (47, 64), (48, 128), (49, 128), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 8), (29, 128), (30, 64), (31, 64), (32, 128), (33, 32), (34, 128), (35, 16), (36, 128), (37, 32), (38, -1), (39, 64), (40, 32), (41, -1), (42, 64), (43, -1), (44, 128), (45, 64), (46, 32), (47, 64), (48, 128), (49, 128), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12]
 solution : [0, 8, 11, 14, 6, 43]


Solution : [0, 8, 11, 14, 6, 43] has cost 31.


Before backtrack at level 13
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12]
 solution : [0, 8, 11, 14, 6, 43]

After backtrack at level 13
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12, 38]
 solution : [0, 8, 11, 14, 6, 43]


Invert decision for 43 at level 12


New level: 13
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12, 38]
 solution : [0, 8, 11, 14, 6]


Before reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12, 38]
 solution : [0, 8, 11, 14, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 8), (29, 128), (30, 64), (31, 64), (32, 128), (33, 32), (34, 128), (35, 16), (36, 128), (37, 32), (38, -1), (39, 64), (40, 32), (41, -1), (42, 64), (43, -1), (44, 128), (45, 64), (46, 32), (47, 64), (48, 128), (49, 128), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12, 38]
 solution : [0, 8, 11, 14, 6]


Solution : [0, 8, 11, 14, 6] has cost 21.


Decide in level 13 among pending : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 51, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 51 with phase True at level 13

After decision at level 13
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12, 38]
 solution : [0, 8, 11, 14, 6, 51]


New level: 14
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12, 38]
 solution : [0, 8, 11, 14, 6, 51]


Before reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 28, 59, 54, 44, 53, 36, 35, 56, 58, 12, 38]
 solution : [0, 8, 11, 14, 6, 51]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 0), (29, 16), (30, 128), (31, 32), (32, 64), (33, 64), (34, 64), (35, 64), (36, 0), (37, 128), (38, 1), (39, 256), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 16), (47, 16), (48, 32), (49, 256), (50, 32), (51, -1), (52, 32), (53, 32), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 128), (61, 128)]

Covered at level 14 : {28, 36}

After reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38]
 solution : [0, 8, 11, 14, 6, 51]


Before reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38]
 solution : [0, 8, 11, 14, 6, 51]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 0), (29, 16), (30, 128), (31, 32), (32, 64), (33, 64), (34, 64), (35, 64), (36, 0), (37, 128), (38, 1), (39, 256), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 16), (47, 16), (48, 32), (49, 256), (50, 32), (51, -1), (52, 32), (53, 32), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, -1), (15, 128), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 16), (23, 16), (24, -1), (25, 32), (26, 64), (27, 32), (28, -1), (29, 16), (30, 16), (31, 32), (32, 64), (33, 64), (34, 64), (35, 64), (36, -1), (37, 128), (38, 1), (39, 256), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 16), (47, 16), (48, 32), (49, 256), (50, 32), (51, -1), (52, 32), (53, 32), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 128), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38]
 solution : [0, 8, 11, 14, 6, 51]


Solution : [0, 8, 11, 14, 6, 51] has cost 31.


Before backtrack at level 14
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38]
 solution : [0, 8, 11, 14, 6, 51]

After backtrack at level 14
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36]
 solution : [0, 8, 11, 14, 6, 51]


Invert decision for 51 at level 13


New level: 14
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36]
 solution : [0, 8, 11, 14, 6]


Before reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36]
 solution : [0, 8, 11, 14, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, -1), (15, 128), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 16), (23, 16), (24, -1), (25, 32), (26, 64), (27, 32), (28, -1), (29, 16), (30, 16), (31, 32), (32, 64), (33, 64), (34, 64), (35, 64), (36, -1), (37, 128), (38, 1), (39, 256), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 16), (47, 16), (48, 32), (49, 256), (50, 32), (51, -1), (52, 32), (53, 32), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36]
 solution : [0, 8, 11, 14, 6]


Solution : [0, 8, 11, 14, 6] has cost 21.


Decide in level 14 among pending : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 39, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 39 with phase True at level 14

After decision at level 14
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36]
 solution : [0, 8, 11, 14, 6, 39]


New level: 15
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36]
 solution : [0, 8, 11, 14, 6, 39]


Before reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 37, 40, 42, 13, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36]
 solution : [0, 8, 11, 14, 6, 39]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 128), (21, 4), (22, 32), (23, 64), (24, -1), (25, 16), (26, 32), (27, 128), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, 64), (35, 16), (36, 128), (37, 0), (38, 4), (39, -1), (40, 0), (41, -1), (42, 128), (43, -1), (44, 32), (45, 16), (46, 64), (47, 64), (48, 128), (49, 256), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 15 : {40, 37}

After reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36]
 solution : [0, 8, 11, 14, 6, 39]


Before reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36]
 solution : [0, 8, 11, 14, 6, 39]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 128), (21, 4), (22, 32), (23, 64), (24, -1), (25, 16), (26, 32), (27, 128), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, 64), (35, 16), (36, 128), (37, 0), (38, 4), (39, -1), (40, 0), (41, -1), (42, 128), (43, -1), (44, 32), (45, 16), (46, 64), (47, 64), (48, 128), (49, 256), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 128), (21, 4), (22, 32), (23, 64), (24, -1), (25, 16), (26, 32), (27, 128), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, 64), (35, 16), (36, 128), (37, -1), (38, 4), (39, -1), (40, -1), (41, -1), (42, 128), (43, -1), (44, 32), (45, 16), (46, 64), (47, 64), (48, 128), (49, 256), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36]
 solution : [0, 8, 11, 14, 6, 39]


Solution : [0, 8, 11, 14, 6, 39] has cost 31.


Before backtrack at level 15
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36]
 solution : [0, 8, 11, 14, 6, 39]

After backtrack at level 15
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40]
 solution : [0, 8, 11, 14, 6, 39]


Invert decision for 39 at level 14


New level: 15
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40]
 solution : [0, 8, 11, 14, 6]


Before reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40]
 solution : [0, 8, 11, 14, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 128), (21, 4), (22, 32), (23, 64), (24, -1), (25, 16), (26, 32), (27, 128), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, 64), (35, 16), (36, 128), (37, -1), (38, 4), (39, -1), (40, -1), (41, -1), (42, 128), (43, -1), (44, 32), (45, 16), (46, 64), (47, 64), (48, 128), (49, 256), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40]
 solution : [0, 8, 11, 14, 6]


Solution : [0, 8, 11, 14, 6] has cost 21.


Decide in level 15 among pending : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 48, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 48 with phase True at level 15

After decision at level 15
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40]
 solution : [0, 8, 11, 14, 6, 48]


New level: 16
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40]
 solution : [0, 8, 11, 14, 6, 48]


Before reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 27, 49, 29, 21, 25, 20, 26, 47, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40]
 solution : [0, 8, 11, 14, 6, 48]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 128), (21, 4), (22, 16), (23, 32), (24, -1), (25, 8), (26, 16), (27, 64), (28, 2), (29, 32), (30, 16), (31, 64), (32, 128), (33, 64), (34, 64), (35, 128), (36, 128), (37, 32), (38, 4), (39, -1), (40, 32), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 16), (47, 0), (48, -1), (49, 32), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 128), (61, 128)]

Covered at level 16 : {47}

After reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 27, 49, 29, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40]
 solution : [0, 8, 11, 14, 6, 48]


Before reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 27, 49, 29, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40]
 solution : [0, 8, 11, 14, 6, 48]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 128), (21, 4), (22, 16), (23, 32), (24, -1), (25, 8), (26, 16), (27, 64), (28, 2), (29, 32), (30, 16), (31, 64), (32, 128), (33, 64), (34, 64), (35, 128), (36, 128), (37, 32), (38, 4), (39, -1), (40, 32), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 16), (47, 0), (48, -1), (49, 32), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 128), (21, 4), (22, 16), (23, 32), (24, -1), (25, 8), (26, 16), (27, 64), (28, 2), (29, 32), (30, 16), (31, 64), (32, 128), (33, 64), (34, 64), (35, 128), (36, 128), (37, 32), (38, 4), (39, -1), (40, 32), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 16), (47, -1), (48, -1), (49, 32), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 128), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 27, 49, 29, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40]
 solution : [0, 8, 11, 14, 6, 48]


Solution : [0, 8, 11, 14, 6, 48] has cost 31.


Before backtrack at level 16
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 27, 49, 29, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40]
 solution : [0, 8, 11, 14, 6, 48]

After backtrack at level 16
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 27, 49, 29, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47]
 solution : [0, 8, 11, 14, 6, 48]


Invert decision for 48 at level 15


New level: 16
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 27, 49, 29, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47]
 solution : [0, 8, 11, 14, 6]


Before reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 27, 49, 29, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47]
 solution : [0, 8, 11, 14, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 128), (21, 4), (22, 16), (23, 32), (24, -1), (25, 8), (26, 16), (27, 64), (28, 2), (29, 32), (30, 16), (31, 64), (32, 128), (33, 64), (34, 64), (35, 128), (36, 128), (37, 32), (38, 4), (39, -1), (40, 32), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 16), (47, -1), (48, -1), (49, 32), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, -1), (49, 256), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 27, 49, 29, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47]
 solution : [0, 8, 11, 14, 6]


Solution : [0, 8, 11, 14, 6] has cost 21.


Decide in level 16 among pending : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 27, 49, 29, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, -1), (49, 256), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 27 with phase True at level 16

After decision at level 16
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 49, 29, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47]
 solution : [0, 8, 11, 14, 6, 27]


New level: 17
 pending : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 49, 29, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47]
 solution : [0, 8, 11, 14, 6, 27]


Before reduction : 
 pending  : [23, 46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 49, 29, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47]
 solution : [0, 8, 11, 14, 6, 27]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, -1), (49, 256), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 128), (21, 2), (22, 8), (23, 0), (24, -1), (25, 16), (26, 32), (27, -1), (28, 1), (29, 0), (30, 2), (31, 64), (32, 64), (33, 64), (34, 128), (35, 128), (36, 4), (37, 64), (38, 32), (39, -1), (40, 64), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 16), (48, -1), (49, 32), (50, 128), (51, -1), (52, 32), (53, 64), (54, 64), (55, 256), (56, 32), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 17 : {29, 23}

After reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 49, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47]
 solution : [0, 8, 11, 14, 6, 27]


Before reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 49, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47]
 solution : [0, 8, 11, 14, 6, 27]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 128), (21, 2), (22, 8), (23, 0), (24, -1), (25, 16), (26, 32), (27, -1), (28, 1), (29, 0), (30, 2), (31, 64), (32, 64), (33, 64), (34, 128), (35, 128), (36, 4), (37, 64), (38, 32), (39, -1), (40, 64), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 16), (48, -1), (49, 32), (50, 128), (51, -1), (52, 32), (53, 64), (54, 64), (55, 256), (56, 32), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 128), (21, 2), (22, 8), (23, -1), (24, -1), (25, 16), (26, 32), (27, -1), (28, 1), (29, -1), (30, 2), (31, 64), (32, 64), (33, 64), (34, 128), (35, 128), (36, 4), (37, 64), (38, 32), (39, -1), (40, 64), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 16), (48, -1), (49, 32), (50, 128), (51, -1), (52, 32), (53, 64), (54, 64), (55, 256), (56, 32), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 49, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47]
 solution : [0, 8, 11, 14, 6, 27]


Solution : [0, 8, 11, 14, 6, 27] has cost 31.


Before backtrack at level 17
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 49, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47]
 solution : [0, 8, 11, 14, 6, 27]

After backtrack at level 17
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 49, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47, 23, 29]
 solution : [0, 8, 11, 14, 6, 27]


Invert decision for 27 at level 16


New level: 17
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 49, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47, 23, 29]
 solution : [0, 8, 11, 14, 6]


Before reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 49, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47, 23, 29]
 solution : [0, 8, 11, 14, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 128), (21, 2), (22, 8), (23, -1), (24, -1), (25, 16), (26, 32), (27, -1), (28, 1), (29, -1), (30, 2), (31, 64), (32, 64), (33, 64), (34, 128), (35, 128), (36, 4), (37, 64), (38, 32), (39, -1), (40, 64), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 16), (48, -1), (49, 32), (50, 128), (51, -1), (52, 32), (53, 64), (54, 64), (55, 256), (56, 32), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, -1), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, -1), (49, 256), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 49, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47, 23, 29]
 solution : [0, 8, 11, 14, 6]


Solution : [0, 8, 11, 14, 6] has cost 21.


Decide in level 17 among pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 49, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47, 23, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, -1), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, -1), (49, 256), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 49 with phase True at level 17

After decision at level 17
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47, 23, 29]
 solution : [0, 8, 11, 14, 6, 49]


New level: 18
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47, 23, 29]
 solution : [0, 8, 11, 14, 6, 49]


Before reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 30, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 28, 36, 37, 40, 47, 23, 29]
 solution : [0, 8, 11, 14, 6, 49]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, -1), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, -1), (49, 256), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 32), (24, -1), (25, 32), (26, 64), (27, -1), (28, 0), (29, 32), (30, 0), (31, 16), (32, 64), (33, 64), (34, 128), (35, 128), (36, 8), (37, 128), (38, 8), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 16), (47, 16), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 128), (56, 64), (57, 64), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 18 : {28, 30}

After reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 40, 47, 23, 29]
 solution : [0, 8, 11, 14, 6, 49]


Before reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 40, 47, 23, 29]
 solution : [0, 8, 11, 14, 6, 49]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 32), (24, -1), (25, 32), (26, 64), (27, -1), (28, 0), (29, 32), (30, 0), (31, 16), (32, 64), (33, 64), (34, 128), (35, 128), (36, 8), (37, 128), (38, 8), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 16), (47, 16), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 128), (56, 64), (57, 64), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 32), (24, -1), (25, 32), (26, 64), (27, -1), (28, -1), (29, 32), (30, -1), (31, 16), (32, 64), (33, 64), (34, 128), (35, 128), (36, 8), (37, 128), (38, 8), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 16), (47, 16), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 128), (56, 64), (57, 64), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 18 : set()

After reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 40, 47, 23, 29]
 solution : [0, 8, 11, 14, 6, 49]


Solution : [0, 8, 11, 14, 6, 49] has cost 31.


Before backtrack at level 18
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 40, 47, 23, 29]
 solution : [0, 8, 11, 14, 6, 49]

After backtrack at level 18
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 40, 47, 23, 29, 30, 28]
 solution : [0, 8, 11, 14, 6, 49]


Invert decision for 49 at level 17


New level: 18
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 40, 47, 23, 29, 30, 28]
 solution : [0, 8, 11, 14, 6]


Before reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 40, 47, 23, 29, 30, 28]
 solution : [0, 8, 11, 14, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 32), (24, -1), (25, 32), (26, 64), (27, -1), (28, -1), (29, 32), (30, -1), (31, 16), (32, 64), (33, 64), (34, 128), (35, 128), (36, 8), (37, 128), (38, 8), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 16), (47, 16), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 128), (56, 64), (57, 64), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, -1), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 18 : set()

After reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 40, 47, 23, 29, 30, 28]
 solution : [0, 8, 11, 14, 6]


Solution : [0, 8, 11, 14, 6] has cost 21.


Decide in level 18 among pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 21, 25, 20, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 40, 47, 23, 29, 30, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, -1), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 20 with phase True at level 18

After decision at level 18
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 21, 25, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 40, 47, 23, 29, 30, 28]
 solution : [0, 8, 11, 14, 6, 20]


New level: 19
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 21, 25, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 40, 47, 23, 29, 30, 28]
 solution : [0, 8, 11, 14, 6, 20]


Before reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 21, 25, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 40, 47, 23, 29, 30, 28]
 solution : [0, 8, 11, 14, 6, 20]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, -1), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 2), (23, 0), (24, -1), (25, 16), (26, 32), (27, -1), (28, 32), (29, 32), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 32), (38, 32), (39, -1), (40, 0), (41, -1), (42, 128), (43, -1), (44, 64), (45, 32), (46, 64), (47, 64), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 64), (54, 64), (55, 256), (56, 32), (57, 128), (58, 64), (59, 64), (60, 256), (61, 128)]

Covered at level 19 : {40, 21, 23}

After reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28]
 solution : [0, 8, 11, 14, 6, 20]


Before reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28]
 solution : [0, 8, 11, 14, 6, 20]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 2), (23, 0), (24, -1), (25, 16), (26, 32), (27, -1), (28, 32), (29, 32), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 32), (38, 32), (39, -1), (40, 0), (41, -1), (42, 128), (43, -1), (44, 64), (45, 32), (46, 64), (47, 64), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 64), (54, 64), (55, 256), (56, 32), (57, 128), (58, 64), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, -1), (24, -1), (25, 16), (26, 32), (27, -1), (28, 32), (29, 32), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 32), (38, 32), (39, -1), (40, -1), (41, -1), (42, 128), (43, -1), (44, 64), (45, 32), (46, 64), (47, 64), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 64), (54, 64), (55, 256), (56, 32), (57, 128), (58, 64), (59, 64), (60, 256), (61, 128)]

Covered at level 19 : set()

After reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28]
 solution : [0, 8, 11, 14, 6, 20]


Solution : [0, 8, 11, 14, 6, 20] has cost 31.


Before backtrack at level 19
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28]
 solution : [0, 8, 11, 14, 6, 20]

After backtrack at level 19
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23]
 solution : [0, 8, 11, 14, 6, 20]


Invert decision for 20 at level 18


New level: 19
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23]
 solution : [0, 8, 11, 14, 6]


Before reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23]
 solution : [0, 8, 11, 14, 6]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, -1), (24, -1), (25, 16), (26, 32), (27, -1), (28, 32), (29, 32), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 32), (38, 32), (39, -1), (40, -1), (41, -1), (42, 128), (43, -1), (44, 64), (45, 32), (46, 64), (47, 64), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 64), (54, 64), (55, 256), (56, 32), (57, 128), (58, 64), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, -1), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 19 : set()

After reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23]
 solution : [0, 8, 11, 14, 6]


Solution : [0, 8, 11, 14, 6] has cost 21.


Decide in level 19 among pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 34, 60, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, -1), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 60 with phase True at level 19

After decision at level 19
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 34, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23]
 solution : [0, 8, 11, 14, 6, 60]


New level: 20
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 34, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23]
 solution : [0, 8, 11, 14, 6, 60]


Before reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 34, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23]
 solution : [0, 8, 11, 14, 6, 60]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, -1), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, -1), (28, 32), (29, 128), (30, 128), (31, 64), (32, 64), (33, 16), (34, 0), (35, 4), (36, 128), (37, 32), (38, 4), (39, -1), (40, 32), (41, -1), (42, 128), (43, -1), (44, 128), (45, 32), (46, 64), (47, 32), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 64), (59, 32), (60, -1), (61, 32)]

Covered at level 20 : {34}

After reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23]
 solution : [0, 8, 11, 14, 6, 60]


Before reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23]
 solution : [0, 8, 11, 14, 6, 60]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, -1), (28, 32), (29, 128), (30, 128), (31, 64), (32, 64), (33, 16), (34, 0), (35, 4), (36, 128), (37, 32), (38, 4), (39, -1), (40, 32), (41, -1), (42, 128), (43, -1), (44, 128), (45, 32), (46, 64), (47, 32), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 64), (59, 32), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, -1), (28, 32), (29, 128), (30, 128), (31, 64), (32, 64), (33, 16), (34, -1), (35, 4), (36, 128), (37, 32), (38, 4), (39, -1), (40, 32), (41, -1), (42, 128), (43, -1), (44, 128), (45, 32), (46, 64), (47, 32), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 64), (59, 32), (60, -1), (61, 32)]

Covered at level 20 : set()

After reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23]
 solution : [0, 8, 11, 14, 6, 60]


Solution : [0, 8, 11, 14, 6, 60] has cost 31.


Before backtrack at level 20
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23]
 solution : [0, 8, 11, 14, 6, 60]

After backtrack at level 20
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23, 34]
 solution : [0, 8, 11, 14, 6, 60]


Invert decision for 60 at level 19


New level: 20
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23, 34]
 solution : [0, 8, 11, 14, 6]


Before reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23, 34]
 solution : [0, 8, 11, 14, 6]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, -1), (28, 32), (29, 128), (30, 128), (31, 64), (32, 64), (33, 16), (34, -1), (35, 4), (36, 128), (37, 32), (38, 4), (39, -1), (40, 32), (41, -1), (42, 128), (43, -1), (44, 128), (45, 32), (46, 64), (47, 32), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 64), (59, 32), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, -1), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, -1), (61, 128)]

Covered at level 20 : set()

After reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23, 34]
 solution : [0, 8, 11, 14, 6]


Solution : [0, 8, 11, 14, 6] has cost 21.


Decide in level 20 among pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 55, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, -1), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, -1), (61, 128)]

Decide 55 with phase True at level 20

After decision at level 20
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23, 34]
 solution : [0, 8, 11, 14, 6, 55]


New level: 21
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23, 34]
 solution : [0, 8, 11, 14, 6, 55]


Before reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 32, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 36, 37, 47, 29, 30, 28, 21, 40, 23, 34]
 solution : [0, 8, 11, 14, 6, 55]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, -1), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 32), (24, -1), (25, 32), (26, 64), (27, -1), (28, 0), (29, 16), (30, 4), (31, 8), (32, 0), (33, 64), (34, 64), (35, 128), (36, 0), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 32), (46, 64), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 32), (55, -1), (56, 32), (57, 32), (58, 64), (59, 128), (60, -1), (61, 128)]

Covered at level 21 : {32, 36, 28}

After reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 37, 47, 29, 30, 21, 40, 23, 34]
 solution : [0, 8, 11, 14, 6, 55]


Before reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 37, 47, 29, 30, 21, 40, 23, 34]
 solution : [0, 8, 11, 14, 6, 55]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 32), (24, -1), (25, 32), (26, 64), (27, -1), (28, 0), (29, 16), (30, 4), (31, 8), (32, 0), (33, 64), (34, 64), (35, 128), (36, 0), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 32), (46, 64), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 32), (55, -1), (56, 32), (57, 32), (58, 64), (59, 128), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 64), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 16), (23, 32), (24, -1), (25, 32), (26, 64), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 128), (38, 8), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 32), (46, 64), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 32), (55, -1), (56, 32), (57, 32), (58, 64), (59, 128), (60, -1), (61, 128)]

Covered at level 21 : set()

After reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 37, 47, 29, 30, 21, 40, 23, 34]
 solution : [0, 8, 11, 14, 6, 55]


Solution : [0, 8, 11, 14, 6, 55] has cost 31.


Before backtrack at level 21
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 37, 47, 29, 30, 21, 40, 23, 34]
 solution : [0, 8, 11, 14, 6, 55]

After backtrack at level 21
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 37, 47, 29, 30, 21, 40, 23, 34, 32, 36, 28]
 solution : [0, 8, 11, 14, 6, 55]


Invert decision for 55 at level 20


New level: 21
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 37, 47, 29, 30, 21, 40, 23, 34, 32, 36, 28]
 solution : [0, 8, 11, 14, 6]


Before reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 37, 47, 29, 30, 21, 40, 23, 34, 32, 36, 28]
 solution : [0, 8, 11, 14, 6]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 64), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 16), (23, 32), (24, -1), (25, 32), (26, 64), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 128), (38, 8), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 32), (46, 64), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 32), (55, -1), (56, 32), (57, 32), (58, 64), (59, 128), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, -1), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, -1), (56, 64), (57, 128), (58, 64), (59, 128), (60, -1), (61, 128)]

Covered at level 21 : set()

After reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 37, 47, 29, 30, 21, 40, 23, 34, 32, 36, 28]
 solution : [0, 8, 11, 14, 6]


Solution : [0, 8, 11, 14, 6] has cost 21.


Decide in level 21 among pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 15, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 37, 47, 29, 30, 21, 40, 23, 34, 32, 36, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, -1), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, -1), (56, 64), (57, 128), (58, 64), (59, 128), (60, -1), (61, 128)]

Decide 15 with phase True at level 21

After decision at level 21
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 37, 47, 29, 30, 21, 40, 23, 34, 32, 36, 28]
 solution : [0, 8, 11, 14, 6, 15]


New level: 22
 pending : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 37, 47, 29, 30, 21, 40, 23, 34, 32, 36, 28]
 solution : [0, 8, 11, 14, 6, 15]


Before reduction : 
 pending  : [46, 50, 61, 33, 22, 45, 52, 42, 13, 25, 26, 31, 57, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 56, 58, 12, 38, 37, 47, 29, 30, 21, 40, 23, 34, 32, 36, 28]
 solution : [0, 8, 11, 14, 6, 15]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, -1), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, -1), (40, 128), (41, -1), (42, 128), (43, -1), (44, 128), (45, 64), (46, 64), (47, 128), (48, -1), (49, -1), (50, 128), (51, -1), (52, 64), (53, 128), (54, 128), (55, -1), (56, 64), (57, 128), (58, 64), (59, 128), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 4), (13, 0), (14, -1), (15, -1), (16, 32), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 16), (23, 4), (24, -1), (25, 0), (26, 0), (27, -1), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 64), (34, 32), (35, 128), (36, 128), (37, 1), (38, 32), (39, -1), (40, 4), (41, -1), (42, 4), (43, -1), (44, 4), (45, 0), (46, 64), (47, 2), (48, -1), (49, -1), (50, 128), (51, -1), (52, 16), (53, 8), (54, 64), (55, -1), (56, 0), (57, 8), (58, 8), (59, 64), (60, -1), (61, 128)]

Covered at level 22 : {13, 45, 21, 56, 25, 26}

After reduction : 
 pending  : [46, 50, 61, 33, 22, 52, 42, 31, 57, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 58, 12, 38, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28]
 solution : [0, 8, 11, 14, 6, 15]


Before reduction : 
 pending  : [46, 50, 61, 33, 22, 52, 42, 31, 57, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 58, 12, 38, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28]
 solution : [0, 8, 11, 14, 6, 15]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 4), (13, 0), (14, -1), (15, -1), (16, 32), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 16), (23, 4), (24, -1), (25, 0), (26, 0), (27, -1), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 64), (34, 32), (35, 128), (36, 128), (37, 1), (38, 32), (39, -1), (40, 4), (41, -1), (42, 4), (43, -1), (44, 4), (45, 0), (46, 64), (47, 2), (48, -1), (49, -1), (50, 128), (51, -1), (52, 16), (53, 8), (54, 64), (55, -1), (56, 0), (57, 8), (58, 8), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 4), (13, -1), (14, -1), (15, -1), (16, 32), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 4), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 64), (34, 32), (35, 128), (36, 128), (37, 1), (38, 32), (39, -1), (40, 4), (41, -1), (42, 4), (43, -1), (44, 4), (45, -1), (46, 64), (47, 2), (48, -1), (49, -1), (50, 128), (51, -1), (52, 16), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 8), (59, 64), (60, -1), (61, 128)]

Covered at level 22 : set()

After reduction : 
 pending  : [46, 50, 61, 33, 22, 52, 42, 31, 57, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 58, 12, 38, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28]
 solution : [0, 8, 11, 14, 6, 15]


Solution : [0, 8, 11, 14, 6, 15] has cost 27.


Before backtrack at level 22
 pending : [46, 50, 61, 33, 22, 52, 42, 31, 57, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 58, 12, 38, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28]
 solution : [0, 8, 11, 14, 6, 15]

After backtrack at level 22
 pending : [46, 50, 61, 33, 22, 52, 42, 31, 57, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 58, 12, 38, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 13, 25, 26, 56, 21]
 solution : [0, 8, 11, 14, 6, 15]


Invert decision for 15 at level 21


New level: 22
 pending : [46, 50, 61, 33, 22, 52, 42, 31, 57, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 58, 12, 38, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 13, 25, 26, 56, 21]
 solution : [0, 8, 11, 14, 6]


Before reduction : 
 pending  : [46, 50, 61, 33, 22, 52, 42, 31, 57, 16, 7, 10, 4, 3, 59, 54, 44, 53, 35, 58, 12, 38, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 13, 25, 26, 56, 21]
 solution : [0, 8, 11, 14, 6]

Essensial at level 22 : {16, 26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 4), (13, -1), (14, -1), (15, -1), (16, 32), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 4), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 64), (34, 32), (35, 128), (36, 128), (37, 1), (38, 32), (39, -1), (40, 4), (41, -1), (42, 4), (43, -1), (44, 4), (45, -1), (46, 64), (47, 2), (48, -1), (49, -1), (50, 128), (51, -1), (52, 16), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 8), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 0), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 4), (24, -1), (25, 0), (26, -1), (27, -1), (28, 2), (29, 2), (30, 128), (31, 64), (32, 32), (33, 4), (34, 128), (35, 128), (36, 128), (37, 1), (38, 0), (39, -1), (40, 16), (41, -1), (42, 128), (43, -1), (44, 64), (45, 4), (46, 4), (47, 4), (48, -1), (49, -1), (50, 8), (51, -1), (52, 0), (53, 64), (54, 4), (55, -1), (56, 4), (57, 128), (58, 0), (59, 4), (60, -1), (61, 8)]

Covered at level 22 : {38, 12, 13, 52, 21, 22, 25, 58}

After reduction : 
 pending  : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56]
 solution : [0, 8, 11, 14, 6, 16, 26]


Before reduction : 
 pending  : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56]
 solution : [0, 8, 11, 14, 6, 16, 26]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 0), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 4), (24, -1), (25, 0), (26, -1), (27, -1), (28, 2), (29, 2), (30, 128), (31, 64), (32, 32), (33, 4), (34, 128), (35, 128), (36, 128), (37, 1), (38, 0), (39, -1), (40, 16), (41, -1), (42, 128), (43, -1), (44, 64), (45, 4), (46, 4), (47, 4), (48, -1), (49, -1), (50, 8), (51, -1), (52, 0), (53, 64), (54, 4), (55, -1), (56, 4), (57, 128), (58, 0), (59, 4), (60, -1), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, -1), (25, -1), (26, -1), (27, -1), (28, 2), (29, 2), (30, 128), (31, 64), (32, 32), (33, 4), (34, 128), (35, 32), (36, 128), (37, 1), (38, -1), (39, -1), (40, 4), (41, -1), (42, 128), (43, -1), (44, 64), (45, 4), (46, 4), (47, 4), (48, -1), (49, -1), (50, 8), (51, -1), (52, -1), (53, 64), (54, 4), (55, -1), (56, 4), (57, 128), (58, -1), (59, 4), (60, -1), (61, 8)]

Covered at level 22 : set()

After reduction : 
 pending  : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56]
 solution : [0, 8, 11, 14, 6, 16, 26]


Solution : [0, 8, 11, 14, 6, 16, 26] has cost 37.


Before backtrack at level 22
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56]
 solution : [0, 8, 11, 14, 6, 16, 26]

After backtrack at level 22
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21]
 solution : [0, 8, 11, 14, 6]


Before backtrack at level 21
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21]
 solution : [0, 8, 11, 14, 6]

After backtrack at level 21
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15]
 solution : [0, 8, 11, 14, 6]


Before backtrack at level 20
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15]
 solution : [0, 8, 11, 14, 6]

After backtrack at level 20
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55]
 solution : [0, 8, 11, 14, 6]


Before backtrack at level 19
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55]
 solution : [0, 8, 11, 14, 6]

After backtrack at level 19
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60]
 solution : [0, 8, 11, 14, 6]


Before backtrack at level 18
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60]
 solution : [0, 8, 11, 14, 6]

After backtrack at level 18
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20]
 solution : [0, 8, 11, 14, 6]


Before backtrack at level 17
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20]
 solution : [0, 8, 11, 14, 6]

After backtrack at level 17
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49]
 solution : [0, 8, 11, 14, 6]


Before backtrack at level 16
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49]
 solution : [0, 8, 11, 14, 6]

After backtrack at level 16
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27]
 solution : [0, 8, 11, 14, 6]


Before backtrack at level 15
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27]
 solution : [0, 8, 11, 14, 6]

After backtrack at level 15
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48]
 solution : [0, 8, 11, 14, 6]


Before backtrack at level 14
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48]
 solution : [0, 8, 11, 14, 6]

After backtrack at level 14
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48, 39]
 solution : [0, 8, 11, 14, 6]


Before backtrack at level 13
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48, 39]
 solution : [0, 8, 11, 14, 6]

After backtrack at level 13
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48, 39, 51]
 solution : [0, 8, 11, 14, 6]


Before backtrack at level 12
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48, 39, 51]
 solution : [0, 8, 11, 14, 6]

After backtrack at level 12
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48, 39, 51, 43]
 solution : [0, 8, 11, 14, 6]


Before backtrack at level 11
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48, 39, 51, 43]
 solution : [0, 8, 11, 14, 6]

After backtrack at level 11
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48, 39, 51, 43, 41]
 solution : [0, 8, 11, 14, 6]


Before backtrack at level 10
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48, 39, 51, 43, 41]
 solution : [0, 8, 11, 14, 6]

After backtrack at level 10
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48, 39, 51, 43, 41, 2]
 solution : [0, 8, 11, 14, 6]


Before backtrack at level 9
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48, 39, 51, 43, 41, 2]
 solution : [0, 8, 11, 14, 6]

After backtrack at level 9
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48, 39, 51, 43, 41, 2, 17]
 solution : [0, 8, 11, 14, 6]


Invert decision for 6 at level 8


New level: 9
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48, 39, 51, 43, 41, 2, 17]
 solution : [0, 8, 11, 14]


Before reduction : 
 pending  : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48, 39, 51, 43, 41, 2, 17]
 solution : [0, 8, 11, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, -1), (25, -1), (26, -1), (27, -1), (28, 2), (29, 2), (30, 128), (31, 64), (32, 32), (33, 4), (34, 128), (35, 32), (36, 128), (37, 1), (38, -1), (39, -1), (40, 4), (41, -1), (42, 128), (43, -1), (44, 64), (45, 4), (46, 4), (47, 4), (48, -1), (49, -1), (50, 8), (51, -1), (52, -1), (53, 64), (54, 4), (55, -1), (56, 4), (57, 128), (58, -1), (59, 4), (60, -1), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48, 39, 51, 43, 41, 2, 17]
 solution : [0, 8, 11, 14]


Solution : [0, 8, 11, 14] has cost 19.


Decide in level 9 among pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 3, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48, 39, 51, 43, 41, 2, 17]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 3 with phase True at level 9

After decision at level 9
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48, 39, 51, 43, 41, 2, 17]
 solution : [0, 8, 11, 14, 3]


New level: 10
 pending : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48, 39, 51, 43, 41, 2, 17]
 solution : [0, 8, 11, 14, 3]


Before reduction : 
 pending  : [46, 50, 61, 33, 42, 31, 57, 7, 10, 4, 59, 54, 44, 53, 35, 37, 47, 29, 30, 40, 23, 34, 32, 36, 28, 45, 56, 16, 26, 22, 52, 58, 12, 38, 13, 25, 21, 15, 55, 60, 20, 49, 27, 48, 39, 51, 43, 41, 2, 17]
 solution : [0, 8, 11, 14, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 0), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 32), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 4), (22, 4), (23, 4), (24, -1), (25, 32), (26, 64), (27, 8), (28, 0), (29, 4), (30, 0), (31, 0), (32, 8), (33, 0), (34, 16), (35, 0), (36, 0), (37, 4), (38, 0), (39, 8), (40, 4), (41, 4), (42, 0), (43, 0), (44, 128), (45, 8), (46, 0), (47, 2), (48, 8), (49, 0), (50, 0), (51, 8), (52, 8), (53, 128), (54, 128), (55, 8), (56, 8), (57, 0), (58, 8), (59, 128), (60, 16), (61, 0)]

Covered at level 10 : {33, 35, 4, 36, 38, 42, 43, 46, 49, 50, 57, 28, 61, 30, 31}

After reduction : 
 pending  : [7, 10, 59, 54, 44, 53, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 17]
 solution : [0, 8, 11, 14, 3]


Before reduction : 
 pending  : [7, 10, 59, 54, 44, 53, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 17]
 solution : [0, 8, 11, 14, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 0), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 32), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 4), (22, 4), (23, 4), (24, -1), (25, 32), (26, 64), (27, 8), (28, 0), (29, 4), (30, 0), (31, 0), (32, 8), (33, 0), (34, 16), (35, 0), (36, 0), (37, 4), (38, 0), (39, 8), (40, 4), (41, 4), (42, 0), (43, 0), (44, 128), (45, 8), (46, 0), (47, 2), (48, 8), (49, 0), (50, 0), (51, 8), (52, 8), (53, 128), (54, 128), (55, 8), (56, 8), (57, 0), (58, 8), (59, 128), (60, 16), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 16), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 4), (22, 4), (23, 4), (24, -1), (25, 32), (26, 64), (27, 8), (28, -1), (29, 4), (30, -1), (31, -1), (32, 8), (33, -1), (34, 16), (35, -1), (36, -1), (37, 4), (38, -1), (39, 8), (40, 4), (41, 4), (42, -1), (43, -1), (44, 128), (45, 8), (46, -1), (47, 2), (48, 8), (49, -1), (50, -1), (51, 8), (52, 8), (53, 128), (54, 128), (55, 8), (56, 8), (57, -1), (58, 8), (59, 128), (60, 16), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [7, 10, 59, 54, 44, 53, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 17]
 solution : [0, 8, 11, 14, 3]


Solution : [0, 8, 11, 14, 3] has cost 25.


Before backtrack at level 10
 pending : [7, 10, 59, 54, 44, 53, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 17]
 solution : [0, 8, 11, 14, 3]

After backtrack at level 10
 pending : [7, 10, 59, 54, 44, 53, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 17, 46, 50, 61, 33, 42, 31, 57, 4, 35, 30, 36, 28, 38, 49, 43]
 solution : [0, 8, 11, 14, 3]


Invert decision for 3 at level 9


New level: 10
 pending : [7, 10, 59, 54, 44, 53, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 17, 46, 50, 61, 33, 42, 31, 57, 4, 35, 30, 36, 28, 38, 49, 43]
 solution : [0, 8, 11, 14]


Before reduction : 
 pending  : [7, 10, 59, 54, 44, 53, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 17, 46, 50, 61, 33, 42, 31, 57, 4, 35, 30, 36, 28, 38, 49, 43]
 solution : [0, 8, 11, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 16), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 4), (22, 4), (23, 4), (24, -1), (25, 32), (26, 64), (27, 8), (28, -1), (29, 4), (30, -1), (31, -1), (32, 8), (33, -1), (34, 16), (35, -1), (36, -1), (37, 4), (38, -1), (39, 8), (40, 4), (41, 4), (42, -1), (43, -1), (44, 128), (45, 8), (46, -1), (47, 2), (48, 8), (49, -1), (50, -1), (51, 8), (52, 8), (53, 128), (54, 128), (55, 8), (56, 8), (57, -1), (58, 8), (59, 128), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [7, 10, 59, 54, 44, 53, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 17, 46, 50, 61, 33, 42, 31, 57, 4, 35, 30, 36, 28, 38, 49, 43]
 solution : [0, 8, 11, 14]


Solution : [0, 8, 11, 14] has cost 19.


Decide in level 10 among pending : [7, 10, 59, 54, 44, 53, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 17, 46, 50, 61, 33, 42, 31, 57, 4, 35, 30, 36, 28, 38, 49, 43]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 17 with phase True at level 10

After decision at level 10
 pending : [7, 10, 59, 54, 44, 53, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 46, 50, 61, 33, 42, 31, 57, 4, 35, 30, 36, 28, 38, 49, 43]
 solution : [0, 8, 11, 14, 17]


New level: 11
 pending : [7, 10, 59, 54, 44, 53, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 46, 50, 61, 33, 42, 31, 57, 4, 35, 30, 36, 28, 38, 49, 43]
 solution : [0, 8, 11, 14, 17]


Before reduction : 
 pending  : [7, 10, 59, 54, 44, 53, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 46, 50, 61, 33, 42, 31, 57, 4, 35, 30, 36, 28, 38, 49, 43]
 solution : [0, 8, 11, 14, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 32), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 32), (29, 128), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 128), (38, 32), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 128), (16, 128), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 4), (23, 4), (24, -1), (25, 32), (26, 32), (27, 4), (28, 0), (29, 4), (30, 16), (31, 32), (32, 16), (33, 32), (34, 16), (35, 0), (36, 0), (37, 4), (38, 0), (39, 4), (40, 4), (41, 8), (42, 64), (43, 32), (44, 0), (45, 8), (46, 8), (47, 128), (48, 128), (49, 16), (50, 16), (51, 8), (52, 8), (53, 0), (54, 0), (55, 16), (56, 8), (57, 64), (58, 8), (59, 0), (60, 16), (61, 32)]

Covered at level 11 : {35, 36, 38, 44, 53, 54, 59, 28}

After reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 46, 50, 61, 33, 42, 31, 57, 4, 30, 49, 43]
 solution : [0, 8, 11, 14, 17]


Before reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 46, 50, 61, 33, 42, 31, 57, 4, 30, 49, 43]
 solution : [0, 8, 11, 14, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 128), (16, 128), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 4), (23, 4), (24, -1), (25, 32), (26, 32), (27, 4), (28, 0), (29, 4), (30, 16), (31, 32), (32, 16), (33, 32), (34, 16), (35, 0), (36, 0), (37, 4), (38, 0), (39, 4), (40, 4), (41, 8), (42, 64), (43, 32), (44, 0), (45, 8), (46, 8), (47, 128), (48, 128), (49, 16), (50, 16), (51, 8), (52, 8), (53, 0), (54, 0), (55, 16), (56, 8), (57, 64), (58, 8), (59, 0), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 128), (16, 128), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 4), (23, 4), (24, -1), (25, 32), (26, 32), (27, 4), (28, -1), (29, 4), (30, 16), (31, 32), (32, 16), (33, 32), (34, 16), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, 8), (42, 64), (43, 32), (44, -1), (45, 8), (46, 8), (47, 128), (48, 128), (49, 16), (50, 16), (51, 8), (52, 8), (53, -1), (54, -1), (55, 16), (56, 8), (57, 32), (58, 8), (59, -1), (60, 16), (61, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 46, 50, 61, 33, 42, 31, 57, 4, 30, 49, 43]
 solution : [0, 8, 11, 14, 17]


Solution : [0, 8, 11, 14, 17] has cost 25.


Before backtrack at level 11
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 46, 50, 61, 33, 42, 31, 57, 4, 30, 49, 43]
 solution : [0, 8, 11, 14, 17]

After backtrack at level 11
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 46, 50, 61, 33, 42, 31, 57, 4, 30, 49, 43, 59, 54, 44, 53, 35, 36, 28, 38]
 solution : [0, 8, 11, 14, 17]


Invert decision for 17 at level 10


New level: 11
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 46, 50, 61, 33, 42, 31, 57, 4, 30, 49, 43, 59, 54, 44, 53, 35, 36, 28, 38]
 solution : [0, 8, 11, 14]


Before reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 46, 50, 61, 33, 42, 31, 57, 4, 30, 49, 43, 59, 54, 44, 53, 35, 36, 28, 38]
 solution : [0, 8, 11, 14]

Essensial at level 11 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 128), (16, 128), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 4), (23, 4), (24, -1), (25, 32), (26, 32), (27, 4), (28, -1), (29, 4), (30, 16), (31, 32), (32, 16), (33, 32), (34, 16), (35, -1), (36, -1), (37, 4), (38, -1), (39, 4), (40, 4), (41, 8), (42, 64), (43, 32), (44, -1), (45, 8), (46, 8), (47, 128), (48, 128), (49, 16), (50, 16), (51, 8), (52, 8), (53, -1), (54, -1), (55, 16), (56, 8), (57, 32), (58, 8), (59, -1), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 16), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 4), (22, 4), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 0), (29, 128), (30, 0), (31, 0), (32, 16), (33, 0), (34, 32), (35, 32), (36, 16), (37, 128), (38, 0), (39, 256), (40, 128), (41, 256), (42, 64), (43, 32), (44, 128), (45, 64), (46, 0), (47, 8), (48, 32), (49, 32), (50, 32), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 64), (58, 64), (59, 128), (60, 256), (61, 32)]

Covered at level 11 : {33, 38, 46, 28, 30, 31}

After reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36]
 solution : [0, 8, 11, 14, 4]


Before reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36]
 solution : [0, 8, 11, 14, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 16), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 4), (22, 4), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, 0), (29, 128), (30, 0), (31, 0), (32, 16), (33, 0), (34, 32), (35, 32), (36, 16), (37, 128), (38, 0), (39, 256), (40, 128), (41, 256), (42, 64), (43, 32), (44, 128), (45, 64), (46, 0), (47, 8), (48, 32), (49, 32), (50, 32), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 64), (58, 64), (59, 128), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 16), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 4), (22, 4), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, -1), (29, 128), (30, -1), (31, -1), (32, 16), (33, -1), (34, 32), (35, 32), (36, 16), (37, 128), (38, -1), (39, 256), (40, 128), (41, 256), (42, 64), (43, 32), (44, 128), (45, 64), (46, -1), (47, 8), (48, 32), (49, 32), (50, 32), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 64), (58, 64), (59, 128), (60, 256), (61, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36]
 solution : [0, 8, 11, 14, 4]


Solution : [0, 8, 11, 14, 4] has cost 28.


Before backtrack at level 11
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36]
 solution : [0, 8, 11, 14, 4]

After backtrack at level 11
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38]
 solution : [0, 8, 11, 14]


Before backtrack at level 10
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38]
 solution : [0, 8, 11, 14]

After backtrack at level 10
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17]
 solution : [0, 8, 11, 14]


Before backtrack at level 9
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17]
 solution : [0, 8, 11, 14]

After backtrack at level 9
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17, 3]
 solution : [0, 8, 11, 14]


Before backtrack at level 8
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17, 3]
 solution : [0, 8, 11, 14]

After backtrack at level 8
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17, 3, 6]
 solution : [0, 8, 11, 14]


Before backtrack at level 7
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17, 3, 6]
 solution : [0, 8, 11, 14]

After backtrack at level 7
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17, 3, 6, 24, 18]
 solution : [0, 8, 11, 14]


Invert decision for 14 at level 6


New level: 7
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17, 3, 6, 24, 18]
 solution : [0, 8, 11]


Before reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17, 3, 6, 24, 18]
 solution : [0, 8, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 16), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 4), (22, 4), (23, 128), (24, -1), (25, 32), (26, 64), (27, 256), (28, -1), (29, 128), (30, -1), (31, -1), (32, 16), (33, -1), (34, 32), (35, 32), (36, 16), (37, 128), (38, -1), (39, 256), (40, 128), (41, 256), (42, 64), (43, 32), (44, 128), (45, 64), (46, -1), (47, 8), (48, 32), (49, 32), (50, 32), (51, 256), (52, 64), (53, 128), (54, 128), (55, 256), (56, 64), (57, 64), (58, 64), (59, 128), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, 512), (16, 512), (17, 512), (18, 512), (19, -1), (20, 256), (21, 16), (22, 256), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 128), (55, 256), (56, 128), (57, 256), (58, 128), (59, 128), (60, 256), (61, 256)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17, 3, 6, 24, 18]
 solution : [0, 8, 11]


Solution : [0, 8, 11] has cost 13.


Decide in level 7 among pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 16, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17, 3, 6, 24, 18]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, 512), (16, 512), (17, 512), (18, 512), (19, -1), (20, 256), (21, 16), (22, 256), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 128), (55, 256), (56, 128), (57, 256), (58, 128), (59, 128), (60, 256), (61, 256)]

Decide 16 with phase True at level 7

After decision at level 7
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17, 3, 6, 24, 18]
 solution : [0, 8, 11, 16]


New level: 8
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17, 3, 6, 24, 18]
 solution : [0, 8, 11, 16]


Before reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 26, 22, 52, 58, 12, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17, 3, 6, 24, 18]
 solution : [0, 8, 11, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, 512), (16, 512), (17, 512), (18, 512), (19, -1), (20, 256), (21, 16), (22, 256), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 128), (55, 256), (56, 128), (57, 256), (58, 128), (59, 128), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 0), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, 0), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, 0), (59, 32), (60, 256), (61, 16)]

Covered at level 8 : {58, 52, 12}

After reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 26, 22, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17, 3, 6, 24, 18]
 solution : [0, 8, 11, 16]


Before reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 26, 22, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17, 3, 6, 24, 18]
 solution : [0, 8, 11, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 0), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, 0), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, 0), (59, 32), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 26, 22, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17, 3, 6, 24, 18]
 solution : [0, 8, 11, 16]


Solution : [0, 8, 11, 16] has cost 19.


Decide in level 8 among pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 26, 22, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17, 3, 6, 24, 18]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

Decide 3 with phase True at level 8

After decision at level 8
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 26, 22, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17, 6, 24, 18]
 solution : [0, 8, 11, 16, 3]


New level: 9
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 26, 22, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17, 6, 24, 18]
 solution : [0, 8, 11, 16, 3]


Before reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 32, 45, 56, 26, 22, 13, 25, 21, 15, 55, 60, 20, 27, 48, 39, 51, 41, 2, 50, 61, 42, 57, 49, 43, 59, 54, 44, 53, 35, 36, 4, 46, 33, 31, 30, 28, 38, 17, 6, 24, 18]
 solution : [0, 8, 11, 16, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, 0), (7, 16), (8, -1), (9, -1), (10, 4), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 64), (18, 1), (19, -1), (20, 256), (21, 16), (22, 8), (23, 2), (24, 32), (25, 64), (26, 128), (27, 16), (28, 16), (29, 16), (30, 4), (31, 4), (32, 0), (33, 1), (34, 16), (35, 0), (36, 0), (37, 128), (38, 4), (39, 256), (40, 128), (41, 0), (42, 1), (43, 1), (44, 2), (45, 64), (46, 32), (47, 64), (48, 128), (49, 16), (50, 0), (51, 1), (52, -1), (53, 16), (54, 0), (55, 0), (56, 2), (57, 16), (58, -1), (59, 2), (60, 64), (61, 2)]

Covered at level 9 : {32, 2, 35, 36, 4, 6, 41, 50, 54, 55}

After reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 45, 56, 26, 22, 13, 25, 21, 15, 60, 20, 27, 48, 39, 51, 61, 42, 57, 49, 43, 59, 44, 53, 46, 33, 31, 30, 28, 38, 17, 24, 18]
 solution : [0, 8, 11, 16, 3]


Before reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 45, 56, 26, 22, 13, 25, 21, 15, 60, 20, 27, 48, 39, 51, 61, 42, 57, 49, 43, 59, 44, 53, 46, 33, 31, 30, 28, 38, 17, 24, 18]
 solution : [0, 8, 11, 16, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, 0), (7, 16), (8, -1), (9, -1), (10, 4), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 64), (18, 1), (19, -1), (20, 256), (21, 16), (22, 8), (23, 2), (24, 32), (25, 64), (26, 128), (27, 16), (28, 16), (29, 16), (30, 4), (31, 4), (32, 0), (33, 1), (34, 16), (35, 0), (36, 0), (37, 128), (38, 4), (39, 256), (40, 128), (41, 0), (42, 1), (43, 1), (44, 2), (45, 64), (46, 32), (47, 64), (48, 128), (49, 16), (50, 0), (51, 1), (52, -1), (53, 16), (54, 0), (55, 0), (56, 2), (57, 16), (58, -1), (59, 2), (60, 64), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 4), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 64), (18, 1), (19, -1), (20, 256), (21, 16), (22, 8), (23, 2), (24, 32), (25, 64), (26, 128), (27, 16), (28, 16), (29, 16), (30, 4), (31, 4), (32, -1), (33, 1), (34, 16), (35, -1), (36, -1), (37, 128), (38, 4), (39, 256), (40, 128), (41, -1), (42, 1), (43, 1), (44, 2), (45, 64), (46, 32), (47, 64), (48, 128), (49, 16), (50, -1), (51, 1), (52, -1), (53, 16), (54, -1), (55, -1), (56, 2), (57, 16), (58, -1), (59, 2), (60, 64), (61, 2)]

Covered at level 9 : set()

After reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 45, 56, 26, 22, 13, 25, 21, 15, 60, 20, 27, 48, 39, 51, 61, 42, 57, 49, 43, 59, 44, 53, 46, 33, 31, 30, 28, 38, 17, 24, 18]
 solution : [0, 8, 11, 16, 3]


Solution : [0, 8, 11, 16, 3] has cost 25.


Before backtrack at level 9
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 45, 56, 26, 22, 13, 25, 21, 15, 60, 20, 27, 48, 39, 51, 61, 42, 57, 49, 43, 59, 44, 53, 46, 33, 31, 30, 28, 38, 17, 24, 18]
 solution : [0, 8, 11, 16, 3]

After backtrack at level 9
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 45, 56, 26, 22, 13, 25, 21, 15, 60, 20, 27, 48, 39, 51, 61, 42, 57, 49, 43, 59, 44, 53, 46, 33, 31, 30, 28, 38, 17, 24, 18, 32, 55, 41, 2, 50, 54, 35, 36, 4, 6]
 solution : [0, 8, 11, 16, 3]


Invert decision for 3 at level 8


New level: 9
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 45, 56, 26, 22, 13, 25, 21, 15, 60, 20, 27, 48, 39, 51, 61, 42, 57, 49, 43, 59, 44, 53, 46, 33, 31, 30, 28, 38, 17, 24, 18, 32, 55, 41, 2, 50, 54, 35, 36, 4, 6]
 solution : [0, 8, 11, 16]


Before reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 45, 56, 26, 22, 13, 25, 21, 15, 60, 20, 27, 48, 39, 51, 61, 42, 57, 49, 43, 59, 44, 53, 46, 33, 31, 30, 28, 38, 17, 24, 18, 32, 55, 41, 2, 50, 54, 35, 36, 4, 6]
 solution : [0, 8, 11, 16]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 4), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 64), (18, 1), (19, -1), (20, 256), (21, 16), (22, 8), (23, 2), (24, 32), (25, 64), (26, 128), (27, 16), (28, 16), (29, 16), (30, 4), (31, 4), (32, -1), (33, 1), (34, 16), (35, -1), (36, -1), (37, 128), (38, 4), (39, 256), (40, 128), (41, -1), (42, 1), (43, 1), (44, 2), (45, 64), (46, 32), (47, 64), (48, 128), (49, 16), (50, -1), (51, 1), (52, -1), (53, 16), (54, -1), (55, -1), (56, 2), (57, 16), (58, -1), (59, 2), (60, 64), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

Covered at level 9 : set()

After reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 45, 56, 26, 22, 13, 25, 21, 15, 60, 20, 27, 48, 39, 51, 61, 42, 57, 49, 43, 59, 44, 53, 46, 33, 31, 30, 28, 38, 17, 24, 18, 32, 55, 41, 2, 50, 54, 35, 36, 4, 6]
 solution : [0, 8, 11, 16]


Solution : [0, 8, 11, 16] has cost 19.


Decide in level 9 among pending : [7, 10, 37, 47, 29, 40, 23, 34, 45, 56, 26, 22, 13, 25, 21, 15, 60, 20, 27, 48, 39, 51, 61, 42, 57, 49, 43, 59, 44, 53, 46, 33, 31, 30, 28, 38, 17, 24, 18, 32, 55, 41, 2, 50, 54, 35, 36, 4, 6]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

Decide 6 with phase True at level 9

After decision at level 9
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 45, 56, 26, 22, 13, 25, 21, 15, 60, 20, 27, 48, 39, 51, 61, 42, 57, 49, 43, 59, 44, 53, 46, 33, 31, 30, 28, 38, 17, 24, 18, 32, 55, 41, 2, 50, 54, 35, 36, 4]
 solution : [0, 8, 11, 16, 6]


New level: 10
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 45, 56, 26, 22, 13, 25, 21, 15, 60, 20, 27, 48, 39, 51, 61, 42, 57, 49, 43, 59, 44, 53, 46, 33, 31, 30, 28, 38, 17, 24, 18, 32, 55, 41, 2, 50, 54, 35, 36, 4]
 solution : [0, 8, 11, 16, 6]


Before reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 45, 56, 26, 22, 13, 25, 21, 15, 60, 20, 27, 48, 39, 51, 61, 42, 57, 49, 43, 59, 44, 53, 46, 33, 31, 30, 28, 38, 17, 24, 18, 32, 55, 41, 2, 50, 54, 35, 36, 4]
 solution : [0, 8, 11, 16, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, 256), (58, -1), (59, 8), (60, 256), (61, 16)]

Covered at level 10 : set()

After reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 45, 56, 26, 22, 13, 25, 21, 15, 60, 20, 27, 48, 39, 51, 61, 42, 57, 49, 43, 59, 44, 53, 46, 33, 31, 30, 28, 38, 17, 24, 18, 32, 55, 41, 2, 50, 54, 35, 36, 4]
 solution : [0, 8, 11, 16, 6]


Solution : [0, 8, 11, 16, 6] has cost 21.


Decide in level 10 among pending : [7, 10, 37, 47, 29, 40, 23, 34, 45, 56, 26, 22, 13, 25, 21, 15, 60, 20, 27, 48, 39, 51, 61, 42, 57, 49, 43, 59, 44, 53, 46, 33, 31, 30, 28, 38, 17, 24, 18, 32, 55, 41, 2, 50, 54, 35, 36, 4]

Coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, 256), (58, -1), (59, 8), (60, 256), (61, 16)]

Decide 15 with phase True at level 10

After decision at level 10
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 45, 56, 26, 22, 13, 25, 21, 60, 20, 27, 48, 39, 51, 61, 42, 57, 49, 43, 59, 44, 53, 46, 33, 31, 30, 28, 38, 17, 24, 18, 32, 55, 41, 2, 50, 54, 35, 36, 4]
 solution : [0, 8, 11, 16, 6, 15]


New level: 11
 pending : [7, 10, 37, 47, 29, 40, 23, 34, 45, 56, 26, 22, 13, 25, 21, 60, 20, 27, 48, 39, 51, 61, 42, 57, 49, 43, 59, 44, 53, 46, 33, 31, 30, 28, 38, 17, 24, 18, 32, 55, 41, 2, 50, 54, 35, 36, 4]
 solution : [0, 8, 11, 16, 6, 15]


Before reduction : 
 pending  : [7, 10, 37, 47, 29, 40, 23, 34, 45, 56, 26, 22, 13, 25, 21, 60, 20, 27, 48, 39, 51, 61, 42, 57, 49, 43, 59, 44, 53, 46, 33, 31, 30, 28, 38, 17, 24, 18, 32, 55, 41, 2, 50, 54, 35, 36, 4]
 solution : [0, 8, 11, 16, 6, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, 256), (58, -1), (59, 8), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, 128), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, 2), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 128), (31, 4), (32, 4), (33, 4), (34, 4), (35, 0), (36, 0), (37, 0), (38, 0), (39, 0), (40, 0), (41, 2), (42, 2), (43, 256), (44, 0), (45, 0), (46, 1), (47, 1), (48, 1), (49, 256), (50, 2), (51, 2), (52, -1), (53, 0), (54, 0), (55, 4), (56, 0), (57, 4), (58, -1), (59, 0), (60, 4), (61, 4)]

Covered at level 11 : {13, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 37, 38, 39, 40, 44, 45, 53, 54, 56, 59}

After reduction : 
 pending  : [7, 10, 47, 34, 60, 48, 51, 61, 42, 57, 49, 43, 46, 33, 31, 30, 17, 32, 55, 41, 2, 50, 4]
 solution : [0, 8, 11, 16, 6, 15]


Before reduction : 
 pending  : [7, 10, 47, 34, 60, 48, 51, 61, 42, 57, 49, 43, 46, 33, 31, 30, 17, 32, 55, 41, 2, 50, 4]
 solution : [0, 8, 11, 16, 6, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, 128), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, 2), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 128), (31, 4), (32, 4), (33, 4), (34, 4), (35, 0), (36, 0), (37, 0), (38, 0), (39, 0), (40, 0), (41, 2), (42, 2), (43, 256), (44, 0), (45, 0), (46, 1), (47, 1), (48, 1), (49, 256), (50, 2), (51, 2), (52, -1), (53, 0), (54, 0), (55, 4), (56, 0), (57, 4), (58, -1), (59, 0), (60, 4), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, 128), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 4), (33, 4), (34, 4), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2), (42, 2), (43, 1), (44, -1), (45, -1), (46, 1), (47, 1), (48, 1), (49, 256), (50, 2), (51, 2), (52, -1), (53, -1), (54, -1), (55, 4), (56, -1), (57, 4), (58, -1), (59, -1), (60, 4), (61, 4)]

Covered at level 11 : set()

After reduction : 
 pending  : [7, 10, 47, 34, 60, 48, 51, 61, 42, 57, 49, 43, 46, 33, 31, 30, 17, 32, 55, 41, 2, 50, 4]
 solution : [0, 8, 11, 16, 6, 15]


Solution : [0, 8, 11, 16, 6, 15] has cost 27.


Before backtrack at level 11
 pending : [7, 10, 47, 34, 60, 48, 51, 61, 42, 57, 49, 43, 46, 33, 31, 30, 17, 32, 55, 41, 2, 50, 4]
 solution : [0, 8, 11, 16, 6, 15]

After backtrack at level 11
 pending : [7, 10, 47, 34, 60, 48, 51, 61, 42, 57, 49, 43, 46, 33, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 59, 44, 53, 28, 38, 24, 18, 54, 35, 36]
 solution : [0, 8, 11, 16, 6, 15]


Invert decision for 15 at level 10


New level: 11
 pending : [7, 10, 47, 34, 60, 48, 51, 61, 42, 57, 49, 43, 46, 33, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 59, 44, 53, 28, 38, 24, 18, 54, 35, 36]
 solution : [0, 8, 11, 16, 6]


Before reduction : 
 pending  : [7, 10, 47, 34, 60, 48, 51, 61, 42, 57, 49, 43, 46, 33, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 59, 44, 53, 28, 38, 24, 18, 54, 35, 36]
 solution : [0, 8, 11, 16, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, 128), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 4), (33, 4), (34, 4), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2), (42, 2), (43, 1), (44, -1), (45, -1), (46, 1), (47, 1), (48, 1), (49, 256), (50, 2), (51, 2), (52, -1), (53, -1), (54, -1), (55, 4), (56, -1), (57, 4), (58, -1), (59, -1), (60, 4), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, 256), (58, -1), (59, 8), (60, 256), (61, 16)]

Covered at level 11 : set()

After reduction : 
 pending  : [7, 10, 47, 34, 60, 48, 51, 61, 42, 57, 49, 43, 46, 33, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 59, 44, 53, 28, 38, 24, 18, 54, 35, 36]
 solution : [0, 8, 11, 16, 6]


Solution : [0, 8, 11, 16, 6] has cost 21.


Decide in level 11 among pending : [7, 10, 47, 34, 60, 48, 51, 61, 42, 57, 49, 43, 46, 33, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 59, 44, 53, 28, 38, 24, 18, 54, 35, 36]

Coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, 256), (58, -1), (59, 8), (60, 256), (61, 16)]

Decide 60 with phase True at level 11

After decision at level 11
 pending : [7, 10, 47, 34, 48, 51, 61, 42, 57, 49, 43, 46, 33, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 59, 44, 53, 28, 38, 24, 18, 54, 35, 36]
 solution : [0, 8, 11, 16, 6, 60]


New level: 12
 pending : [7, 10, 47, 34, 48, 51, 61, 42, 57, 49, 43, 46, 33, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 59, 44, 53, 28, 38, 24, 18, 54, 35, 36]
 solution : [0, 8, 11, 16, 6, 60]


Before reduction : 
 pending  : [7, 10, 47, 34, 48, 51, 61, 42, 57, 49, 43, 46, 33, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 59, 44, 53, 28, 38, 24, 18, 54, 35, 36]
 solution : [0, 8, 11, 16, 6, 60]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, 256), (58, -1), (59, 8), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 0), (19, -1), (20, 256), (21, 16), (22, 8), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 16), (29, 32), (30, 128), (31, 128), (32, 16), (33, 0), (34, 0), (35, 0), (36, 64), (37, 64), (38, 4), (39, 128), (40, 64), (41, 32), (42, 256), (43, 256), (44, 32), (45, 64), (46, 16), (47, 32), (48, 64), (49, 256), (50, 1), (51, 64), (52, -1), (53, 32), (54, 4), (55, 16), (56, 16), (57, 256), (58, -1), (59, 0), (60, -1), (61, 0)]

Covered at level 12 : {33, 34, 35, 18, 59, 61}

After reduction : 
 pending  : [7, 10, 47, 48, 51, 42, 57, 49, 43, 46, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 44, 53, 28, 38, 24, 54, 36]
 solution : [0, 8, 11, 16, 6, 60]


Before reduction : 
 pending  : [7, 10, 47, 48, 51, 42, 57, 49, 43, 46, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 44, 53, 28, 38, 24, 54, 36]
 solution : [0, 8, 11, 16, 6, 60]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 0), (19, -1), (20, 256), (21, 16), (22, 8), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 16), (29, 32), (30, 128), (31, 128), (32, 16), (33, 0), (34, 0), (35, 0), (36, 64), (37, 64), (38, 4), (39, 128), (40, 64), (41, 32), (42, 256), (43, 256), (44, 32), (45, 64), (46, 16), (47, 32), (48, 64), (49, 256), (50, 1), (51, 64), (52, -1), (53, 32), (54, 4), (55, 16), (56, 16), (57, 256), (58, -1), (59, 0), (60, -1), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 16), (22, 8), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 16), (29, 32), (30, 128), (31, 128), (32, 16), (33, -1), (34, -1), (35, -1), (36, 64), (37, 64), (38, 4), (39, 128), (40, 64), (41, 32), (42, 128), (43, 64), (44, 16), (45, 32), (46, 16), (47, 32), (48, 64), (49, 256), (50, 1), (51, 64), (52, -1), (53, 32), (54, 4), (55, 16), (56, 16), (57, 256), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [7, 10, 47, 48, 51, 42, 57, 49, 43, 46, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 44, 53, 28, 38, 24, 54, 36]
 solution : [0, 8, 11, 16, 6, 60]


Solution : [0, 8, 11, 16, 6, 60] has cost 31.


Before backtrack at level 12
 pending : [7, 10, 47, 48, 51, 42, 57, 49, 43, 46, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 44, 53, 28, 38, 24, 54, 36]
 solution : [0, 8, 11, 16, 6, 60]

After backtrack at level 12
 pending : [7, 10, 47, 48, 51, 42, 57, 49, 43, 46, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 44, 53, 28, 38, 24, 54, 36, 34, 61, 33, 59, 18, 35]
 solution : [0, 8, 11, 16, 6, 60]


Invert decision for 60 at level 11


New level: 12
 pending : [7, 10, 47, 48, 51, 42, 57, 49, 43, 46, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 44, 53, 28, 38, 24, 54, 36, 34, 61, 33, 59, 18, 35]
 solution : [0, 8, 11, 16, 6]


Before reduction : 
 pending  : [7, 10, 47, 48, 51, 42, 57, 49, 43, 46, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 44, 53, 28, 38, 24, 54, 36, 34, 61, 33, 59, 18, 35]
 solution : [0, 8, 11, 16, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 16), (22, 8), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 16), (29, 32), (30, 128), (31, 128), (32, 16), (33, -1), (34, -1), (35, -1), (36, 64), (37, 64), (38, 4), (39, 128), (40, 64), (41, 32), (42, 128), (43, 64), (44, 16), (45, 32), (46, 16), (47, 32), (48, 64), (49, 256), (50, 1), (51, 64), (52, -1), (53, 32), (54, 4), (55, 16), (56, 16), (57, 256), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, 256), (58, -1), (59, 8), (60, -1), (61, 16)]

Covered at level 12 : set()

After reduction : 
 pending  : [7, 10, 47, 48, 51, 42, 57, 49, 43, 46, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 44, 53, 28, 38, 24, 54, 36, 34, 61, 33, 59, 18, 35]
 solution : [0, 8, 11, 16, 6]


Solution : [0, 8, 11, 16, 6] has cost 21.


Decide in level 12 among pending : [7, 10, 47, 48, 51, 42, 57, 49, 43, 46, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 44, 53, 28, 38, 24, 54, 36, 34, 61, 33, 59, 18, 35]

Coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, 256), (58, -1), (59, 8), (60, -1), (61, 16)]

Decide 48 with phase True at level 12

After decision at level 12
 pending : [7, 10, 47, 51, 42, 57, 49, 43, 46, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 44, 53, 28, 38, 24, 54, 36, 34, 61, 33, 59, 18, 35]
 solution : [0, 8, 11, 16, 6, 48]


New level: 13
 pending : [7, 10, 47, 51, 42, 57, 49, 43, 46, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 44, 53, 28, 38, 24, 54, 36, 34, 61, 33, 59, 18, 35]
 solution : [0, 8, 11, 16, 6, 48]


Before reduction : 
 pending  : [7, 10, 47, 51, 42, 57, 49, 43, 46, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 29, 40, 23, 45, 56, 26, 22, 13, 25, 21, 20, 27, 39, 44, 53, 28, 38, 24, 54, 36, 34, 61, 33, 59, 18, 35]
 solution : [0, 8, 11, 16, 6, 48]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, 256), (58, -1), (59, 8), (60, -1), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, -1), (17, 256), (18, 0), (19, -1), (20, 64), (21, 4), (22, 2), (23, 0), (24, 8), (25, 16), (26, 32), (27, 0), (28, 0), (29, 0), (30, 2), (31, 4), (32, 4), (33, 2), (34, 2), (35, 0), (36, 0), (37, 16), (38, 1), (39, 32), (40, 16), (41, 2), (42, 2), (43, 1), (44, 1), (45, 8), (46, 0), (47, 0), (48, -1), (49, 2), (50, 1), (51, 1), (52, -1), (53, 0), (54, 0), (55, 4), (56, 0), (57, 256), (58, -1), (59, 0), (60, -1), (61, 2)]

Covered at level 13 : {35, 36, 59, 46, 47, 18, 53, 54, 23, 56, 27, 28, 29}

After reduction : 
 pending  : [7, 10, 51, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33]
 solution : [0, 8, 11, 16, 6, 48]


Before reduction : 
 pending  : [7, 10, 51, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33]
 solution : [0, 8, 11, 16, 6, 48]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, -1), (17, 256), (18, 0), (19, -1), (20, 64), (21, 4), (22, 2), (23, 0), (24, 8), (25, 16), (26, 32), (27, 0), (28, 0), (29, 0), (30, 2), (31, 4), (32, 4), (33, 2), (34, 2), (35, 0), (36, 0), (37, 16), (38, 1), (39, 32), (40, 16), (41, 2), (42, 2), (43, 1), (44, 1), (45, 8), (46, 0), (47, 0), (48, -1), (49, 2), (50, 1), (51, 1), (52, -1), (53, 0), (54, 0), (55, 4), (56, 0), (57, 256), (58, -1), (59, 0), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 4), (22, 2), (23, -1), (24, 8), (25, 16), (26, 32), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 4), (33, 2), (34, 2), (35, -1), (36, -1), (37, 16), (38, 1), (39, 32), (40, 16), (41, 2), (42, 2), (43, 1), (44, 1), (45, 8), (46, -1), (47, -1), (48, -1), (49, 2), (50, 1), (51, 1), (52, -1), (53, -1), (54, -1), (55, 4), (56, -1), (57, 256), (58, -1), (59, -1), (60, -1), (61, 2)]

Covered at level 13 : set()

After reduction : 
 pending  : [7, 10, 51, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33]
 solution : [0, 8, 11, 16, 6, 48]


Solution : [0, 8, 11, 16, 6, 48] has cost 31.


Before backtrack at level 13
 pending : [7, 10, 51, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33]
 solution : [0, 8, 11, 16, 6, 48]

After backtrack at level 13
 pending : [7, 10, 51, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 36, 59, 18, 35]
 solution : [0, 8, 11, 16, 6, 48]


Invert decision for 48 at level 12


New level: 13
 pending : [7, 10, 51, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 36, 59, 18, 35]
 solution : [0, 8, 11, 16, 6]


Before reduction : 
 pending  : [7, 10, 51, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 36, 59, 18, 35]
 solution : [0, 8, 11, 16, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 4), (22, 2), (23, -1), (24, 8), (25, 16), (26, 32), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 4), (33, 2), (34, 2), (35, -1), (36, -1), (37, 16), (38, 1), (39, 32), (40, 16), (41, 2), (42, 2), (43, 1), (44, 1), (45, 8), (46, -1), (47, -1), (48, -1), (49, 2), (50, 1), (51, 1), (52, -1), (53, -1), (54, -1), (55, 4), (56, -1), (57, 256), (58, -1), (59, -1), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, -1), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, 256), (58, -1), (59, 8), (60, -1), (61, 16)]

Covered at level 13 : set()

After reduction : 
 pending  : [7, 10, 51, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 36, 59, 18, 35]
 solution : [0, 8, 11, 16, 6]


Solution : [0, 8, 11, 16, 6] has cost 21.


Decide in level 13 among pending : [7, 10, 51, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 36, 59, 18, 35]

Coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, -1), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, 256), (58, -1), (59, 8), (60, -1), (61, 16)]

Decide 51 with phase True at level 13

After decision at level 13
 pending : [7, 10, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 36, 59, 18, 35]
 solution : [0, 8, 11, 16, 6, 51]


New level: 14
 pending : [7, 10, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 36, 59, 18, 35]
 solution : [0, 8, 11, 16, 6, 51]


Before reduction : 
 pending  : [7, 10, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 50, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 36, 59, 18, 35]
 solution : [0, 8, 11, 16, 6, 51]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, -1), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, 256), (58, -1), (59, 8), (60, -1), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 16), (24, 32), (25, 64), (26, 128), (27, 32), (28, 8), (29, 16), (30, 128), (31, 128), (32, 16), (33, 4), (34, 64), (35, 16), (36, 0), (37, 128), (38, 4), (39, 256), (40, 128), (41, 32), (42, 256), (43, 256), (44, 64), (45, 64), (46, 16), (47, 32), (48, -1), (49, 256), (50, 0), (51, -1), (52, -1), (53, 8), (54, 4), (55, 32), (56, 16), (57, 256), (58, -1), (59, 4), (60, -1), (61, 8)]

Covered at level 14 : {50, 36}

After reduction : 
 pending  : [7, 10, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 35]
 solution : [0, 8, 11, 16, 6, 51]


Before reduction : 
 pending  : [7, 10, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 35]
 solution : [0, 8, 11, 16, 6, 51]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 16), (24, 32), (25, 64), (26, 128), (27, 32), (28, 8), (29, 16), (30, 128), (31, 128), (32, 16), (33, 4), (34, 64), (35, 16), (36, 0), (37, 128), (38, 4), (39, 256), (40, 128), (41, 32), (42, 256), (43, 256), (44, 64), (45, 64), (46, 16), (47, 32), (48, -1), (49, 256), (50, 0), (51, -1), (52, -1), (53, 8), (54, 4), (55, 32), (56, 16), (57, 256), (58, -1), (59, 4), (60, -1), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 16), (24, 32), (25, 64), (26, 128), (27, 32), (28, 8), (29, 16), (30, 32), (31, 64), (32, 16), (33, 4), (34, 64), (35, 16), (36, -1), (37, 128), (38, 4), (39, 256), (40, 128), (41, 16), (42, 256), (43, 64), (44, 64), (45, 64), (46, 16), (47, 32), (48, -1), (49, 256), (50, -1), (51, -1), (52, -1), (53, 8), (54, 4), (55, 32), (56, 16), (57, 256), (58, -1), (59, 4), (60, -1), (61, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [7, 10, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 35]
 solution : [0, 8, 11, 16, 6, 51]


Solution : [0, 8, 11, 16, 6, 51] has cost 31.


Before backtrack at level 14
 pending : [7, 10, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 35]
 solution : [0, 8, 11, 16, 6, 51]

After backtrack at level 14
 pending : [7, 10, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 35, 50, 36]
 solution : [0, 8, 11, 16, 6, 51]


Invert decision for 51 at level 13


New level: 14
 pending : [7, 10, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 35, 50, 36]
 solution : [0, 8, 11, 16, 6]


Before reduction : 
 pending  : [7, 10, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 35, 50, 36]
 solution : [0, 8, 11, 16, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 16), (24, 32), (25, 64), (26, 128), (27, 32), (28, 8), (29, 16), (30, 32), (31, 64), (32, 16), (33, 4), (34, 64), (35, 16), (36, -1), (37, 128), (38, 4), (39, 256), (40, 128), (41, 16), (42, 256), (43, 64), (44, 64), (45, 64), (46, 16), (47, 32), (48, -1), (49, 256), (50, -1), (51, -1), (52, -1), (53, 8), (54, 4), (55, 32), (56, 16), (57, 256), (58, -1), (59, 4), (60, -1), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, 256), (43, 128), (44, 64), (45, 64), (46, 64), (47, 128), (48, -1), (49, 256), (50, 8), (51, -1), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, 256), (58, -1), (59, 8), (60, -1), (61, 16)]

Covered at level 14 : set()

After reduction : 
 pending  : [7, 10, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 35, 50, 36]
 solution : [0, 8, 11, 16, 6]


Solution : [0, 8, 11, 16, 6] has cost 21.


Decide in level 14 among pending : [7, 10, 42, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 35, 50, 36]

Coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, 256), (43, 128), (44, 64), (45, 64), (46, 64), (47, 128), (48, -1), (49, 256), (50, 8), (51, -1), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, 256), (58, -1), (59, 8), (60, -1), (61, 16)]

Decide 42 with phase True at level 14

After decision at level 14
 pending : [7, 10, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 35, 50, 36]
 solution : [0, 8, 11, 16, 6, 42]


New level: 15
 pending : [7, 10, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 35, 50, 36]
 solution : [0, 8, 11, 16, 6, 42]


Before reduction : 
 pending  : [7, 10, 57, 49, 43, 31, 30, 17, 32, 55, 41, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 35, 50, 36]
 solution : [0, 8, 11, 16, 6, 42]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, 256), (43, 128), (44, 64), (45, 64), (46, 64), (47, 128), (48, -1), (49, 256), (50, 8), (51, -1), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, 256), (58, -1), (59, 8), (60, -1), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 64), (32, 16), (33, 8), (34, 128), (35, 0), (36, 128), (37, 128), (38, 1), (39, 256), (40, 128), (41, 0), (42, -1), (43, 0), (44, 64), (45, 8), (46, 64), (47, 128), (48, -1), (49, 256), (50, 4), (51, -1), (52, -1), (53, 64), (54, 2), (55, 16), (56, 8), (57, 128), (58, -1), (59, 2), (60, -1), (61, 16)]

Covered at level 15 : {41, 43, 35}

After reduction : 
 pending  : [7, 10, 57, 49, 31, 30, 17, 32, 55, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 50, 36]
 solution : [0, 8, 11, 16, 6, 42]


Before reduction : 
 pending  : [7, 10, 57, 49, 31, 30, 17, 32, 55, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 50, 36]
 solution : [0, 8, 11, 16, 6, 42]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 64), (32, 16), (33, 8), (34, 128), (35, 0), (36, 128), (37, 128), (38, 1), (39, 256), (40, 128), (41, 0), (42, -1), (43, 0), (44, 64), (45, 8), (46, 64), (47, 128), (48, -1), (49, 256), (50, 4), (51, -1), (52, -1), (53, 64), (54, 2), (55, 16), (56, 8), (57, 128), (58, -1), (59, 2), (60, -1), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 1), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 64), (32, 16), (33, 8), (34, 128), (35, -1), (36, 128), (37, 128), (38, 1), (39, 256), (40, 128), (41, -1), (42, -1), (43, -1), (44, 64), (45, 8), (46, 64), (47, 128), (48, -1), (49, 256), (50, 4), (51, -1), (52, -1), (53, 64), (54, 2), (55, 16), (56, 8), (57, 128), (58, -1), (59, 2), (60, -1), (61, 16)]

Covered at level 15 : set()

After reduction : 
 pending  : [7, 10, 57, 49, 31, 30, 17, 32, 55, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 50, 36]
 solution : [0, 8, 11, 16, 6, 42]


Solution : [0, 8, 11, 16, 6, 42] has cost 31.


Before backtrack at level 15
 pending : [7, 10, 57, 49, 31, 30, 17, 32, 55, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 50, 36]
 solution : [0, 8, 11, 16, 6, 42]

After backtrack at level 15
 pending : [7, 10, 57, 49, 31, 30, 17, 32, 55, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 50, 36, 43, 41, 35]
 solution : [0, 8, 11, 16, 6, 42]


Invert decision for 42 at level 14


New level: 15
 pending : [7, 10, 57, 49, 31, 30, 17, 32, 55, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 50, 36, 43, 41, 35]
 solution : [0, 8, 11, 16, 6]


Before reduction : 
 pending  : [7, 10, 57, 49, 31, 30, 17, 32, 55, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 50, 36, 43, 41, 35]
 solution : [0, 8, 11, 16, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 1), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 64), (32, 16), (33, 8), (34, 128), (35, -1), (36, 128), (37, 128), (38, 1), (39, 256), (40, 128), (41, -1), (42, -1), (43, -1), (44, 64), (45, 8), (46, 64), (47, 128), (48, -1), (49, 256), (50, 4), (51, -1), (52, -1), (53, 64), (54, 2), (55, 16), (56, 8), (57, 128), (58, -1), (59, 2), (60, -1), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, -1), (43, 128), (44, 64), (45, 64), (46, 64), (47, 128), (48, -1), (49, 256), (50, 8), (51, -1), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, 256), (58, -1), (59, 8), (60, -1), (61, 16)]

Covered at level 15 : set()

After reduction : 
 pending  : [7, 10, 57, 49, 31, 30, 17, 32, 55, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 50, 36, 43, 41, 35]
 solution : [0, 8, 11, 16, 6]


Solution : [0, 8, 11, 16, 6] has cost 21.


Decide in level 15 among pending : [7, 10, 57, 49, 31, 30, 17, 32, 55, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 50, 36, 43, 41, 35]

Coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, -1), (43, 128), (44, 64), (45, 64), (46, 64), (47, 128), (48, -1), (49, 256), (50, 8), (51, -1), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, 256), (58, -1), (59, 8), (60, -1), (61, 16)]

Decide 57 with phase True at level 15

After decision at level 15
 pending : [7, 10, 49, 31, 30, 17, 32, 55, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 50, 36, 43, 41, 35]
 solution : [0, 8, 11, 16, 6, 57]


New level: 16
 pending : [7, 10, 49, 31, 30, 17, 32, 55, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 50, 36, 43, 41, 35]
 solution : [0, 8, 11, 16, 6, 57]


Before reduction : 
 pending  : [7, 10, 49, 31, 30, 17, 32, 55, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 29, 23, 56, 27, 53, 28, 54, 59, 18, 50, 36, 43, 41, 35]
 solution : [0, 8, 11, 16, 6, 57]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, -1), (43, 128), (44, 64), (45, 64), (46, 64), (47, 128), (48, -1), (49, 256), (50, 8), (51, -1), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, 256), (58, -1), (59, 8), (60, -1), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, 32), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 0), (19, -1), (20, 256), (21, 4), (22, 2), (23, 0), (24, 32), (25, 64), (26, 128), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 4), (34, 128), (35, 0), (36, 0), (37, 128), (38, 1), (39, 256), (40, 128), (41, 0), (42, -1), (43, 0), (44, 64), (45, 64), (46, 4), (47, 16), (48, -1), (49, 0), (50, 1), (51, -1), (52, -1), (53, 1), (54, 0), (55, 0), (56, 0), (57, -1), (58, -1), (59, 2), (60, -1), (61, 4)]

Covered at level 16 : {32, 35, 36, 41, 43, 49, 18, 23, 54, 55, 56, 27, 28, 29, 30, 31}

After reduction : 
 pending  : [7, 10, 17, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 53, 59, 50]
 solution : [0, 8, 11, 16, 6, 57]


Before reduction : 
 pending  : [7, 10, 17, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 53, 59, 50]
 solution : [0, 8, 11, 16, 6, 57]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, 32), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 0), (19, -1), (20, 256), (21, 4), (22, 2), (23, 0), (24, 32), (25, 64), (26, 128), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 4), (34, 128), (35, 0), (36, 0), (37, 128), (38, 1), (39, 256), (40, 128), (41, 0), (42, -1), (43, 0), (44, 64), (45, 64), (46, 4), (47, 16), (48, -1), (49, 0), (50, 1), (51, -1), (52, -1), (53, 1), (54, 0), (55, 0), (56, 0), (57, -1), (58, -1), (59, 2), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, 32), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 4), (22, 2), (23, -1), (24, 32), (25, 64), (26, 128), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4), (34, 128), (35, -1), (36, -1), (37, 128), (38, 1), (39, 256), (40, 128), (41, -1), (42, -1), (43, -1), (44, 32), (45, 64), (46, 4), (47, 16), (48, -1), (49, -1), (50, 1), (51, -1), (52, -1), (53, 1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, 2), (60, -1), (61, 4)]

Covered at level 16 : set()

After reduction : 
 pending  : [7, 10, 17, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 53, 59, 50]
 solution : [0, 8, 11, 16, 6, 57]


Solution : [0, 8, 11, 16, 6, 57] has cost 31.


Before backtrack at level 16
 pending : [7, 10, 17, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 53, 59, 50]
 solution : [0, 8, 11, 16, 6, 57]

After backtrack at level 16
 pending : [7, 10, 17, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 53, 59, 50, 49, 31, 30, 32, 55, 29, 23, 56, 27, 28, 54, 18, 36, 43, 41, 35]
 solution : [0, 8, 11, 16, 6, 57]


Invert decision for 57 at level 15


New level: 16
 pending : [7, 10, 17, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 53, 59, 50, 49, 31, 30, 32, 55, 29, 23, 56, 27, 28, 54, 18, 36, 43, 41, 35]
 solution : [0, 8, 11, 16, 6]


Before reduction : 
 pending  : [7, 10, 17, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 53, 59, 50, 49, 31, 30, 32, 55, 29, 23, 56, 27, 28, 54, 18, 36, 43, 41, 35]
 solution : [0, 8, 11, 16, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, -1), (4, 32), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 4), (22, 2), (23, -1), (24, 32), (25, 64), (26, 128), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4), (34, 128), (35, -1), (36, -1), (37, 128), (38, 1), (39, 256), (40, 128), (41, -1), (42, -1), (43, -1), (44, 32), (45, 64), (46, 4), (47, 16), (48, -1), (49, -1), (50, 1), (51, -1), (52, -1), (53, 1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, 2), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, -1), (43, 128), (44, 64), (45, 64), (46, 64), (47, 128), (48, -1), (49, 256), (50, 8), (51, -1), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, -1), (58, -1), (59, 8), (60, -1), (61, 16)]

Covered at level 16 : set()

After reduction : 
 pending  : [7, 10, 17, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 53, 59, 50, 49, 31, 30, 32, 55, 29, 23, 56, 27, 28, 54, 18, 36, 43, 41, 35]
 solution : [0, 8, 11, 16, 6]


Solution : [0, 8, 11, 16, 6] has cost 21.


Decide in level 16 among pending : [7, 10, 17, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 53, 59, 50, 49, 31, 30, 32, 55, 29, 23, 56, 27, 28, 54, 18, 36, 43, 41, 35]

Coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, -1), (43, 128), (44, 64), (45, 64), (46, 64), (47, 128), (48, -1), (49, 256), (50, 8), (51, -1), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, -1), (58, -1), (59, 8), (60, -1), (61, 16)]

Decide 17 with phase True at level 16

After decision at level 16
 pending : [7, 10, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 53, 59, 50, 49, 31, 30, 32, 55, 29, 23, 56, 27, 28, 54, 18, 36, 43, 41, 35]
 solution : [0, 8, 11, 16, 6, 17]


New level: 17
 pending : [7, 10, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 53, 59, 50, 49, 31, 30, 32, 55, 29, 23, 56, 27, 28, 54, 18, 36, 43, 41, 35]
 solution : [0, 8, 11, 16, 6, 17]


Before reduction : 
 pending  : [7, 10, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 44, 38, 24, 34, 61, 33, 47, 46, 53, 59, 50, 49, 31, 30, 32, 55, 29, 23, 56, 27, 28, 54, 18, 36, 43, 41, 35]
 solution : [0, 8, 11, 16, 6, 17]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 32), (33, 8), (34, 128), (35, 32), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, -1), (43, 128), (44, 64), (45, 64), (46, 64), (47, 128), (48, -1), (49, 256), (50, 8), (51, -1), (52, -1), (53, 64), (54, 8), (55, 64), (56, 32), (57, -1), (58, -1), (59, 8), (60, -1), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 16), (21, 16), (22, 8), (23, 4), (24, 32), (25, 64), (26, 64), (27, 4), (28, 2), (29, 4), (30, 32), (31, 64), (32, 4), (33, 8), (34, 16), (35, 0), (36, 0), (37, 8), (38, 4), (39, 8), (40, 8), (41, 2), (42, -1), (43, 64), (44, 0), (45, 8), (46, 64), (47, 128), (48, -1), (49, 32), (50, 2), (51, -1), (52, -1), (53, 0), (54, 0), (55, 4), (56, 4), (57, -1), (58, -1), (59, 0), (60, -1), (61, 8)]

Covered at level 17 : {35, 36, 44, 18, 53, 54, 59}

After reduction : 
 pending  : [7, 10, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 38, 24, 34, 61, 33, 47, 46, 50, 49, 31, 30, 32, 55, 29, 23, 56, 27, 28, 43, 41]
 solution : [0, 8, 11, 16, 6, 17]


Before reduction : 
 pending  : [7, 10, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 38, 24, 34, 61, 33, 47, 46, 50, 49, 31, 30, 32, 55, 29, 23, 56, 27, 28, 43, 41]
 solution : [0, 8, 11, 16, 6, 17]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 16), (21, 16), (22, 8), (23, 4), (24, 32), (25, 64), (26, 64), (27, 4), (28, 2), (29, 4), (30, 32), (31, 64), (32, 4), (33, 8), (34, 16), (35, 0), (36, 0), (37, 8), (38, 4), (39, 8), (40, 8), (41, 2), (42, -1), (43, 64), (44, 0), (45, 8), (46, 64), (47, 128), (48, -1), (49, 32), (50, 2), (51, -1), (52, -1), (53, 0), (54, 0), (55, 4), (56, 4), (57, -1), (58, -1), (59, 0), (60, -1), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 8), (23, 4), (24, 32), (25, 64), (26, 64), (27, 4), (28, 2), (29, 4), (30, 32), (31, 64), (32, 4), (33, 8), (34, 16), (35, -1), (36, -1), (37, 8), (38, 4), (39, 8), (40, 8), (41, 2), (42, -1), (43, 64), (44, -1), (45, 8), (46, 64), (47, 128), (48, -1), (49, 32), (50, 2), (51, -1), (52, -1), (53, -1), (54, -1), (55, 4), (56, 4), (57, -1), (58, -1), (59, -1), (60, -1), (61, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [7, 10, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 38, 24, 34, 61, 33, 47, 46, 50, 49, 31, 30, 32, 55, 29, 23, 56, 27, 28, 43, 41]
 solution : [0, 8, 11, 16, 6, 17]


Solution : [0, 8, 11, 16, 6, 17] has cost 27.


Before backtrack at level 17
 pending : [7, 10, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 38, 24, 34, 61, 33, 47, 46, 50, 49, 31, 30, 32, 55, 29, 23, 56, 27, 28, 43, 41]
 solution : [0, 8, 11, 16, 6, 17]

After backtrack at level 17
 pending : [7, 10, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 38, 24, 34, 61, 33, 47, 46, 50, 49, 31, 30, 32, 55, 29, 23, 56, 27, 28, 43, 41, 44, 53, 59, 54, 18, 36, 35]
 solution : [0, 8, 11, 16, 6, 17]


Invert decision for 17 at level 16


New level: 17
 pending : [7, 10, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 38, 24, 34, 61, 33, 47, 46, 50, 49, 31, 30, 32, 55, 29, 23, 56, 27, 28, 43, 41, 44, 53, 59, 54, 18, 36, 35]
 solution : [0, 8, 11, 16, 6]


Before reduction : 
 pending  : [7, 10, 2, 4, 37, 40, 45, 26, 22, 13, 25, 21, 20, 39, 38, 24, 34, 61, 33, 47, 46, 50, 49, 31, 30, 32, 55, 29, 23, 56, 27, 28, 43, 41, 44, 53, 59, 54, 18, 36, 35]
 solution : [0, 8, 11, 16, 6]

Essensial at level 17 : {26, 4}

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 8), (23, 4), (24, 32), (25, 64), (26, 64), (27, 4), (28, 2), (29, 4), (30, 32), (31, 64), (32, 4), (33, 8), (34, 16), (35, -1), (36, -1), (37, 8), (38, 4), (39, 8), (40, 8), (41, 2), (42, -1), (43, 64), (44, -1), (45, 8), (46, 64), (47, 128), (48, -1), (49, 32), (50, 2), (51, -1), (52, -1), (53, -1), (54, -1), (55, 4), (56, 4), (57, -1), (58, -1), (59, -1), (60, -1), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, 256), (19, -1), (20, 4), (21, 0), (22, 0), (23, 2), (24, 0), (25, 0), (26, -1), (27, 2), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 2), (35, 32), (36, 1), (37, 1), (38, 0), (39, 64), (40, 2), (41, 32), (42, -1), (43, 16), (44, 2), (45, 8), (46, 0), (47, 0), (48, -1), (49, 16), (50, 2), (51, -1), (52, -1), (53, 4), (54, 2), (55, 32), (56, 2), (57, -1), (58, -1), (59, 4), (60, -1), (61, 2)]

Covered at level 17 : {32, 33, 38, 7, 10, 13, 46, 47, 21, 22, 24, 25, 28, 29, 30, 31}

After reduction : 
 pending  : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35]
 solution : [0, 8, 11, 16, 6, 26, 4]


Before reduction : 
 pending  : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35]
 solution : [0, 8, 11, 16, 6, 26, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, 256), (19, -1), (20, 4), (21, 0), (22, 0), (23, 2), (24, 0), (25, 0), (26, -1), (27, 2), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 2), (35, 32), (36, 1), (37, 1), (38, 0), (39, 64), (40, 2), (41, 32), (42, -1), (43, 16), (44, 2), (45, 8), (46, 0), (47, 0), (48, -1), (49, 16), (50, 2), (51, -1), (52, -1), (53, 4), (54, 2), (55, 32), (56, 2), (57, -1), (58, -1), (59, 4), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 256), (19, -1), (20, 4), (21, -1), (22, -1), (23, 2), (24, -1), (25, -1), (26, -1), (27, 2), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 2), (35, 32), (36, 1), (37, 1), (38, -1), (39, 64), (40, 2), (41, 32), (42, -1), (43, 16), (44, 2), (45, 2), (46, -1), (47, -1), (48, -1), (49, 16), (50, 2), (51, -1), (52, -1), (53, 4), (54, 2), (55, 32), (56, 2), (57, -1), (58, -1), (59, 4), (60, -1), (61, 2)]

Covered at level 17 : set()

After reduction : 
 pending  : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35]
 solution : [0, 8, 11, 16, 6, 26, 4]


Solution : [0, 8, 11, 16, 6, 26, 4] has cost 40.


Before backtrack at level 17
 pending : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35]
 solution : [0, 8, 11, 16, 6, 26, 4]

After backtrack at level 17
 pending : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28]
 solution : [0, 8, 11, 16, 6]


Before backtrack at level 16
 pending : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28]
 solution : [0, 8, 11, 16, 6]

After backtrack at level 16
 pending : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17]
 solution : [0, 8, 11, 16, 6]


Before backtrack at level 15
 pending : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17]
 solution : [0, 8, 11, 16, 6]

After backtrack at level 15
 pending : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17, 57]
 solution : [0, 8, 11, 16, 6]


Before backtrack at level 14
 pending : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17, 57]
 solution : [0, 8, 11, 16, 6]

After backtrack at level 14
 pending : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17, 57, 42]
 solution : [0, 8, 11, 16, 6]


Before backtrack at level 13
 pending : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17, 57, 42]
 solution : [0, 8, 11, 16, 6]

After backtrack at level 13
 pending : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17, 57, 42, 51]
 solution : [0, 8, 11, 16, 6]


Before backtrack at level 12
 pending : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17, 57, 42, 51]
 solution : [0, 8, 11, 16, 6]

After backtrack at level 12
 pending : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17, 57, 42, 51, 48]
 solution : [0, 8, 11, 16, 6]


Before backtrack at level 11
 pending : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17, 57, 42, 51, 48]
 solution : [0, 8, 11, 16, 6]

After backtrack at level 11
 pending : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17, 57, 42, 51, 48, 60]
 solution : [0, 8, 11, 16, 6]


Before backtrack at level 10
 pending : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17, 57, 42, 51, 48, 60]
 solution : [0, 8, 11, 16, 6]

After backtrack at level 10
 pending : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17, 57, 42, 51, 48, 60, 15]
 solution : [0, 8, 11, 16, 6]


Invert decision for 6 at level 9


New level: 10
 pending : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17, 57, 42, 51, 48, 60, 15]
 solution : [0, 8, 11, 16]


Before reduction : 
 pending  : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17, 57, 42, 51, 48, 60, 15]
 solution : [0, 8, 11, 16]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 256), (19, -1), (20, 4), (21, -1), (22, -1), (23, 2), (24, -1), (25, -1), (26, -1), (27, 2), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 2), (35, 32), (36, 1), (37, 1), (38, -1), (39, 64), (40, 2), (41, 32), (42, -1), (43, 16), (44, 2), (45, 2), (46, -1), (47, -1), (48, -1), (49, 16), (50, 2), (51, -1), (52, -1), (53, 4), (54, 2), (55, 32), (56, 2), (57, -1), (58, -1), (59, 4), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17, 57, 42, 51, 48, 60, 15]
 solution : [0, 8, 11, 16]


Solution : [0, 8, 11, 16] has cost 19.


Decide in level 10 among pending : [2, 37, 40, 45, 20, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17, 57, 42, 51, 48, 60, 15]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

Decide 20 with phase True at level 10

After decision at level 10
 pending : [2, 37, 40, 45, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17, 57, 42, 51, 48, 60, 15]
 solution : [0, 8, 11, 16, 20]


New level: 11
 pending : [2, 37, 40, 45, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17, 57, 42, 51, 48, 60, 15]
 solution : [0, 8, 11, 16, 20]


Before reduction : 
 pending  : [2, 37, 40, 45, 39, 34, 61, 50, 49, 55, 23, 56, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 22, 13, 25, 21, 38, 24, 33, 47, 46, 31, 30, 32, 29, 28, 17, 57, 42, 51, 48, 60, 15]
 solution : [0, 8, 11, 16, 20]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, 256), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 32), (14, -1), (15, 64), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 4), (25, 32), (26, 64), (27, 32), (28, 0), (29, 8), (30, 128), (31, 64), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 8), (38, 0), (39, 64), (40, 0), (41, 128), (42, 256), (43, 256), (44, 16), (45, 0), (46, 4), (47, 64), (48, 128), (49, 256), (50, 2), (51, 256), (52, -1), (53, 16), (54, 8), (55, 128), (56, 0), (57, 256), (58, -1), (59, 8), (60, 256), (61, 8)]

Covered at level 11 : {38, 40, 45, 21, 22, 23, 56, 28}

After reduction : 
 pending  : [2, 37, 39, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15]
 solution : [0, 8, 11, 16, 20]


Before reduction : 
 pending  : [2, 37, 39, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15]
 solution : [0, 8, 11, 16, 20]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 32), (14, -1), (15, 64), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 4), (25, 32), (26, 64), (27, 32), (28, 0), (29, 8), (30, 128), (31, 64), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 8), (38, 0), (39, 64), (40, 0), (41, 128), (42, 256), (43, 256), (44, 16), (45, 0), (46, 4), (47, 64), (48, 128), (49, 256), (50, 2), (51, 256), (52, -1), (53, 16), (54, 8), (55, 128), (56, 0), (57, 256), (58, -1), (59, 8), (60, 256), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 32), (14, -1), (15, 64), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4), (25, 32), (26, 64), (27, 32), (28, -1), (29, 8), (30, 128), (31, 64), (32, 64), (33, 8), (34, 128), (35, 64), (36, 64), (37, 8), (38, -1), (39, 64), (40, -1), (41, 128), (42, 128), (43, 256), (44, 16), (45, -1), (46, 4), (47, 64), (48, 128), (49, 256), (50, 2), (51, 256), (52, -1), (53, 16), (54, 8), (55, 128), (56, -1), (57, 256), (58, -1), (59, 8), (60, 256), (61, 8)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 37, 39, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15]
 solution : [0, 8, 11, 16, 20]


Solution : [0, 8, 11, 16, 20] has cost 29.


Before backtrack at level 11
 pending : [2, 37, 39, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15]
 solution : [0, 8, 11, 16, 20]

After backtrack at level 11
 pending : [2, 37, 39, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 40, 45, 23, 56, 22, 21, 38, 28]
 solution : [0, 8, 11, 16, 20]


Invert decision for 20 at level 10


New level: 11
 pending : [2, 37, 39, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 40, 45, 23, 56, 22, 21, 38, 28]
 solution : [0, 8, 11, 16]


Before reduction : 
 pending  : [2, 37, 39, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 40, 45, 23, 56, 22, 21, 38, 28]
 solution : [0, 8, 11, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 32), (14, -1), (15, 64), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4), (25, 32), (26, 64), (27, 32), (28, -1), (29, 8), (30, 128), (31, 64), (32, 64), (33, 8), (34, 128), (35, 64), (36, 64), (37, 8), (38, -1), (39, 64), (40, -1), (41, 128), (42, 128), (43, 256), (44, 16), (45, -1), (46, 4), (47, 64), (48, 128), (49, 256), (50, 2), (51, 256), (52, -1), (53, 16), (54, 8), (55, 128), (56, -1), (57, 256), (58, -1), (59, 8), (60, 256), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 37, 39, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 40, 45, 23, 56, 22, 21, 38, 28]
 solution : [0, 8, 11, 16]


Solution : [0, 8, 11, 16] has cost 19.


Decide in level 11 among pending : [2, 37, 39, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 40, 45, 23, 56, 22, 21, 38, 28]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

Decide 39 with phase True at level 11

After decision at level 11
 pending : [2, 37, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 40, 45, 23, 56, 22, 21, 38, 28]
 solution : [0, 8, 11, 16, 39]


New level: 12
 pending : [2, 37, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 40, 45, 23, 56, 22, 21, 38, 28]
 solution : [0, 8, 11, 16, 39]


Before reduction : 
 pending  : [2, 37, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 40, 45, 23, 56, 22, 21, 38, 28]
 solution : [0, 8, 11, 16, 39]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, 256), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 32), (14, -1), (15, 128), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 8), (22, 4), (23, 32), (24, 16), (25, 32), (26, 64), (27, 64), (28, 16), (29, 32), (30, 128), (31, 128), (32, 64), (33, 8), (34, 64), (35, 8), (36, 128), (37, 0), (38, 0), (39, -1), (40, 0), (41, 128), (42, 8), (43, 16), (44, 4), (45, 0), (46, 32), (47, 64), (48, 128), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 16), (57, 256), (58, -1), (59, 32), (60, 256), (61, 8)]

Covered at level 12 : {40, 45, 37, 38}

After reduction : 
 pending  : [2, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 23, 56, 22, 21, 28]
 solution : [0, 8, 11, 16, 39]


Before reduction : 
 pending  : [2, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 23, 56, 22, 21, 28]
 solution : [0, 8, 11, 16, 39]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 32), (14, -1), (15, 128), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 8), (22, 4), (23, 32), (24, 16), (25, 32), (26, 64), (27, 64), (28, 16), (29, 32), (30, 128), (31, 128), (32, 64), (33, 8), (34, 64), (35, 8), (36, 128), (37, 0), (38, 0), (39, -1), (40, 0), (41, 128), (42, 8), (43, 16), (44, 4), (45, 0), (46, 32), (47, 64), (48, 128), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 16), (57, 256), (58, -1), (59, 32), (60, 256), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 32), (14, -1), (15, 128), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 8), (22, 4), (23, 32), (24, 16), (25, 32), (26, 64), (27, 64), (28, 16), (29, 32), (30, 128), (31, 128), (32, 64), (33, 8), (34, 64), (35, 8), (36, 128), (37, -1), (38, -1), (39, -1), (40, -1), (41, 128), (42, 8), (43, 16), (44, 4), (45, -1), (46, 32), (47, 64), (48, 128), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 16), (57, 256), (58, -1), (59, 32), (60, 256), (61, 8)]

Covered at level 12 : set()

After reduction : 
 pending  : [2, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 23, 56, 22, 21, 28]
 solution : [0, 8, 11, 16, 39]


Solution : [0, 8, 11, 16, 39] has cost 29.


Before backtrack at level 12
 pending : [2, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 23, 56, 22, 21, 28]
 solution : [0, 8, 11, 16, 39]

After backtrack at level 12
 pending : [2, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 23, 56, 22, 21, 28, 37, 40, 45, 38]
 solution : [0, 8, 11, 16, 39]


Invert decision for 39 at level 11


New level: 12
 pending : [2, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 23, 56, 22, 21, 28, 37, 40, 45, 38]
 solution : [0, 8, 11, 16]


Before reduction : 
 pending  : [2, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 23, 56, 22, 21, 28, 37, 40, 45, 38]
 solution : [0, 8, 11, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 32), (14, -1), (15, 128), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 8), (22, 4), (23, 32), (24, 16), (25, 32), (26, 64), (27, 64), (28, 16), (29, 32), (30, 128), (31, 128), (32, 64), (33, 8), (34, 64), (35, 8), (36, 128), (37, -1), (38, -1), (39, -1), (40, -1), (41, 128), (42, 8), (43, 16), (44, 4), (45, -1), (46, 32), (47, 64), (48, 128), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 16), (57, 256), (58, -1), (59, 32), (60, 256), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, -1), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

Covered at level 12 : set()

After reduction : 
 pending  : [2, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 23, 56, 22, 21, 28, 37, 40, 45, 38]
 solution : [0, 8, 11, 16]


Solution : [0, 8, 11, 16] has cost 19.


Decide in level 12 among pending : [2, 34, 61, 50, 49, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 23, 56, 22, 21, 28, 37, 40, 45, 38]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, -1), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

Decide 49 with phase True at level 12

After decision at level 12
 pending : [2, 34, 61, 50, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 23, 56, 22, 21, 28, 37, 40, 45, 38]
 solution : [0, 8, 11, 16, 49]


New level: 13
 pending : [2, 34, 61, 50, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 23, 56, 22, 21, 28, 37, 40, 45, 38]
 solution : [0, 8, 11, 16, 49]


Before reduction : 
 pending  : [2, 34, 61, 50, 55, 27, 43, 41, 44, 53, 59, 54, 18, 36, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 30, 32, 29, 17, 57, 42, 51, 48, 60, 15, 23, 56, 22, 21, 28, 37, 40, 45, 38]
 solution : [0, 8, 11, 16, 49]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, -1), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, 256), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 128), (19, -1), (20, -1), (21, 4), (22, 2), (23, 0), (24, 16), (25, 32), (26, 64), (27, 0), (28, 0), (29, 0), (30, 0), (31, 2), (32, 16), (33, 8), (34, 128), (35, 16), (36, 0), (37, 64), (38, 1), (39, -1), (40, 64), (41, 128), (42, 256), (43, 64), (44, 64), (45, 64), (46, 4), (47, 16), (48, 64), (49, -1), (50, 2), (51, 256), (52, -1), (53, 16), (54, 8), (55, 64), (56, 0), (57, 4), (58, -1), (59, 32), (60, 256), (61, 16)]

Covered at level 13 : {36, 23, 56, 27, 28, 29, 30}

After reduction : 
 pending  : [2, 34, 61, 50, 55, 43, 41, 44, 53, 59, 54, 18, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38]
 solution : [0, 8, 11, 16, 49]


Before reduction : 
 pending  : [2, 34, 61, 50, 55, 43, 41, 44, 53, 59, 54, 18, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38]
 solution : [0, 8, 11, 16, 49]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 128), (19, -1), (20, -1), (21, 4), (22, 2), (23, 0), (24, 16), (25, 32), (26, 64), (27, 0), (28, 0), (29, 0), (30, 0), (31, 2), (32, 16), (33, 8), (34, 128), (35, 16), (36, 0), (37, 64), (38, 1), (39, -1), (40, 64), (41, 128), (42, 256), (43, 64), (44, 64), (45, 64), (46, 4), (47, 16), (48, 64), (49, -1), (50, 2), (51, 256), (52, -1), (53, 16), (54, 8), (55, 64), (56, 0), (57, 4), (58, -1), (59, 32), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 128), (19, -1), (20, -1), (21, 4), (22, 2), (23, -1), (24, 16), (25, 32), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 2), (32, 16), (33, 8), (34, 128), (35, 16), (36, -1), (37, 64), (38, 1), (39, -1), (40, 64), (41, 128), (42, 256), (43, 64), (44, 64), (45, 64), (46, 4), (47, 16), (48, 64), (49, -1), (50, 2), (51, 256), (52, -1), (53, 16), (54, 8), (55, 64), (56, -1), (57, 4), (58, -1), (59, 32), (60, 256), (61, 16)]

Covered at level 13 : set()

After reduction : 
 pending  : [2, 34, 61, 50, 55, 43, 41, 44, 53, 59, 54, 18, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38]
 solution : [0, 8, 11, 16, 49]


Solution : [0, 8, 11, 16, 49] has cost 29.


Before backtrack at level 13
 pending : [2, 34, 61, 50, 55, 43, 41, 44, 53, 59, 54, 18, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38]
 solution : [0, 8, 11, 16, 49]

After backtrack at level 13
 pending : [2, 34, 61, 50, 55, 43, 41, 44, 53, 59, 54, 18, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16, 49]


Invert decision for 49 at level 12


New level: 13
 pending : [2, 34, 61, 50, 55, 43, 41, 44, 53, 59, 54, 18, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16]


Before reduction : 
 pending  : [2, 34, 61, 50, 55, 43, 41, 44, 53, 59, 54, 18, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 128), (19, -1), (20, -1), (21, 4), (22, 2), (23, -1), (24, 16), (25, 32), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 2), (32, 16), (33, 8), (34, 128), (35, 16), (36, -1), (37, 64), (38, 1), (39, -1), (40, 64), (41, 128), (42, 256), (43, 64), (44, 64), (45, 64), (46, 4), (47, 16), (48, 64), (49, -1), (50, 2), (51, 256), (52, -1), (53, 16), (54, 8), (55, 64), (56, -1), (57, 4), (58, -1), (59, 32), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, -1), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, -1), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

Covered at level 13 : set()

After reduction : 
 pending  : [2, 34, 61, 50, 55, 43, 41, 44, 53, 59, 54, 18, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16]


Solution : [0, 8, 11, 16] has cost 19.


Decide in level 13 among pending : [2, 34, 61, 50, 55, 43, 41, 44, 53, 59, 54, 18, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, -1), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, -1), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

Decide 43 with phase True at level 13

After decision at level 13
 pending : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 18, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16, 43]


New level: 14
 pending : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 18, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16, 43]


Before reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 18, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16, 43]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, -1), (40, 128), (41, 128), (42, 256), (43, 256), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, -1), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 16), (22, 8), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 16), (29, 32), (30, 64), (31, 128), (32, 64), (33, 8), (34, 64), (35, 1), (36, 128), (37, 16), (38, 1), (39, -1), (40, 16), (41, 64), (42, 4), (43, -1), (44, 64), (45, 8), (46, 32), (47, 64), (48, 128), (49, -1), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 16), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

Covered at level 14 : set()

After reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 18, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16, 43]


Solution : [0, 8, 11, 16, 43] has cost 29.


Before backtrack at level 14
 pending : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 18, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16, 43]

After backtrack at level 14
 pending : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 18, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16, 43]


Invert decision for 43 at level 13


New level: 14
 pending : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 18, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16]


Before reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 18, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 16), (22, 8), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 16), (29, 32), (30, 64), (31, 128), (32, 64), (33, 8), (34, 64), (35, 1), (36, 128), (37, 16), (38, 1), (39, -1), (40, 16), (41, 64), (42, 4), (43, -1), (44, 64), (45, 8), (46, 32), (47, 64), (48, 128), (49, -1), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 16), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, -1), (40, 128), (41, 128), (42, 256), (43, -1), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, -1), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

Covered at level 14 : set()

After reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 18, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16]


Solution : [0, 8, 11, 16] has cost 19.


Decide in level 14 among pending : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 18, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, -1), (40, 128), (41, 128), (42, 256), (43, -1), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, -1), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

Decide 18 with phase True at level 14

After decision at level 14
 pending : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16, 18]


New level: 15
 pending : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16, 18]


Before reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 35, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, 256), (19, -1), (20, -1), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, -1), (40, 128), (41, 128), (42, 256), (43, -1), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, -1), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 8), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 16), (29, 32), (30, 128), (31, 128), (32, 64), (33, 8), (34, 64), (35, 0), (36, 32), (37, 16), (38, 4), (39, -1), (40, 16), (41, 16), (42, 32), (43, -1), (44, 16), (45, 16), (46, 64), (47, 128), (48, 256), (49, -1), (50, 8), (51, 128), (52, -1), (53, 32), (54, 16), (55, 64), (56, 16), (57, 128), (58, -1), (59, 8), (60, 64), (61, 8)]

Covered at level 15 : {35}

After reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16, 18]


Before reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 8), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 16), (29, 32), (30, 128), (31, 128), (32, 64), (33, 8), (34, 64), (35, 0), (36, 32), (37, 16), (38, 4), (39, -1), (40, 16), (41, 16), (42, 32), (43, -1), (44, 16), (45, 16), (46, 64), (47, 128), (48, 256), (49, -1), (50, 8), (51, 128), (52, -1), (53, 32), (54, 16), (55, 64), (56, 16), (57, 128), (58, -1), (59, 8), (60, 64), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 8), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 16), (29, 32), (30, 128), (31, 128), (32, 64), (33, 8), (34, 64), (35, -1), (36, 32), (37, 16), (38, 4), (39, -1), (40, 16), (41, 16), (42, 32), (43, -1), (44, 16), (45, 16), (46, 64), (47, 128), (48, 256), (49, -1), (50, 8), (51, 128), (52, -1), (53, 32), (54, 16), (55, 64), (56, 16), (57, 128), (58, -1), (59, 8), (60, 64), (61, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16, 18]


Solution : [0, 8, 11, 16, 18] has cost 28.


Before backtrack at level 15
 pending : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28]
 solution : [0, 8, 11, 16, 18]

After backtrack at level 15
 pending : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28, 35]
 solution : [0, 8, 11, 16, 18]


Invert decision for 18 at level 14


New level: 15
 pending : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28, 35]
 solution : [0, 8, 11, 16]


Before reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28, 35]
 solution : [0, 8, 11, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 8), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 16), (29, 32), (30, 128), (31, 128), (32, 64), (33, 8), (34, 64), (35, -1), (36, 32), (37, 16), (38, 4), (39, -1), (40, 16), (41, 16), (42, 32), (43, -1), (44, 16), (45, 16), (46, 64), (47, 128), (48, 256), (49, -1), (50, 8), (51, 128), (52, -1), (53, 32), (54, 16), (55, 64), (56, 16), (57, 128), (58, -1), (59, 8), (60, 64), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, -1), (40, 128), (41, 128), (42, 256), (43, -1), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, -1), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28, 35]
 solution : [0, 8, 11, 16]


Solution : [0, 8, 11, 16] has cost 19.


Decide in level 15 among pending : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 4, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28, 35]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, -1), (40, 128), (41, 128), (42, 256), (43, -1), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, -1), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

Decide 4 with phase True at level 15

After decision at level 15
 pending : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28, 35]
 solution : [0, 8, 11, 16, 4]


New level: 16
 pending : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28, 35]
 solution : [0, 8, 11, 16, 4]


Before reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 32, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28, 35]
 solution : [0, 8, 11, 16, 4]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 8), (23, 64), (24, 32), (25, 64), (26, 128), (27, 128), (28, 32), (29, 64), (30, 128), (31, 128), (32, 64), (33, 8), (34, 128), (35, 64), (36, 128), (37, 128), (38, 4), (39, -1), (40, 128), (41, 128), (42, 256), (43, -1), (44, 64), (45, 64), (46, 64), (47, 128), (48, 256), (49, -1), (50, 8), (51, 256), (52, -1), (53, 64), (54, 32), (55, 128), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 4), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 8), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 16), (29, 32), (30, 4), (31, 4), (32, 0), (33, 1), (34, 32), (35, 32), (36, 1), (37, 128), (38, 4), (39, -1), (40, 128), (41, 64), (42, 256), (43, -1), (44, 64), (45, 64), (46, 32), (47, 64), (48, 128), (49, -1), (50, 2), (51, 256), (52, -1), (53, 64), (54, 16), (55, 64), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

Covered at level 16 : {32}

After reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28, 35]
 solution : [0, 8, 11, 16, 4]


Before reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28, 35]
 solution : [0, 8, 11, 16, 4]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 4), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 8), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 16), (29, 32), (30, 4), (31, 4), (32, 0), (33, 1), (34, 32), (35, 32), (36, 1), (37, 128), (38, 4), (39, -1), (40, 128), (41, 64), (42, 256), (43, -1), (44, 64), (45, 64), (46, 32), (47, 64), (48, 128), (49, -1), (50, 2), (51, 256), (52, -1), (53, 64), (54, 16), (55, 64), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 4), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 8), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 16), (29, 32), (30, 4), (31, 4), (32, -1), (33, 1), (34, 32), (35, 32), (36, 1), (37, 128), (38, 4), (39, -1), (40, 128), (41, 64), (42, 256), (43, -1), (44, 64), (45, 64), (46, 32), (47, 64), (48, 128), (49, -1), (50, 2), (51, 256), (52, -1), (53, 64), (54, 16), (55, 64), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

Covered at level 16 : set()

After reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28, 35]
 solution : [0, 8, 11, 16, 4]


Solution : [0, 8, 11, 16, 4] has cost 28.


Before backtrack at level 16
 pending : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28, 35]
 solution : [0, 8, 11, 16, 4]

After backtrack at level 16
 pending : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28, 35, 32]
 solution : [0, 8, 11, 16, 4]


Invert decision for 4 at level 15


New level: 16
 pending : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28, 35, 32]
 solution : [0, 8, 11, 16]


Before reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 44, 53, 59, 54, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 17, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 36, 30, 29, 23, 56, 28, 35, 32]
 solution : [0, 8, 11, 16]

Essensial at level 16 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 4), (11, -1), (12, -1), (13, 64), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, 16), (22, 8), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 16), (29, 32), (30, 4), (31, 4), (32, -1), (33, 1), (34, 32), (35, 32), (36, 1), (37, 128), (38, 4), (39, -1), (40, 128), (41, 64), (42, 256), (43, -1), (44, 64), (45, 64), (46, 32), (47, 64), (48, 128), (49, -1), (50, 2), (51, 256), (52, -1), (53, 64), (54, 16), (55, 64), (56, 32), (57, 256), (58, -1), (59, 32), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16), (22, 8), (23, 4), (24, 32), (25, 64), (26, 64), (27, 4), (28, 2), (29, 4), (30, 32), (31, 64), (32, 8), (33, 8), (34, 16), (35, 0), (36, 0), (37, 8), (38, 4), (39, -1), (40, 8), (41, 4), (42, 128), (43, -1), (44, 0), (45, 8), (46, 64), (47, 128), (48, 128), (49, -1), (50, 2), (51, 4), (52, -1), (53, 0), (54, 0), (55, 8), (56, 4), (57, 64), (58, -1), (59, 0), (60, 16), (61, 8)]

Covered at level 16 : {35, 36, 44, 53, 54, 59}

After reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32]
 solution : [0, 8, 11, 16, 17]


Before reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32]
 solution : [0, 8, 11, 16, 17]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16), (22, 8), (23, 4), (24, 32), (25, 64), (26, 64), (27, 4), (28, 2), (29, 4), (30, 32), (31, 64), (32, 8), (33, 8), (34, 16), (35, 0), (36, 0), (37, 8), (38, 4), (39, -1), (40, 8), (41, 4), (42, 128), (43, -1), (44, 0), (45, 8), (46, 64), (47, 128), (48, 128), (49, -1), (50, 2), (51, 4), (52, -1), (53, 0), (54, 0), (55, 8), (56, 4), (57, 64), (58, -1), (59, 0), (60, 16), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16), (22, 8), (23, 4), (24, 32), (25, 64), (26, 64), (27, 4), (28, 2), (29, 4), (30, 32), (31, 64), (32, 8), (33, 8), (34, 16), (35, -1), (36, -1), (37, 8), (38, 4), (39, -1), (40, 8), (41, 4), (42, 128), (43, -1), (44, -1), (45, 8), (46, 64), (47, 128), (48, 128), (49, -1), (50, 2), (51, 4), (52, -1), (53, -1), (54, -1), (55, 8), (56, 4), (57, 64), (58, -1), (59, -1), (60, 16), (61, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32]
 solution : [0, 8, 11, 16, 17]


Solution : [0, 8, 11, 16, 17] has cost 25.


Before backtrack at level 16
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32]
 solution : [0, 8, 11, 16, 17]

After backtrack at level 16
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35]
 solution : [0, 8, 11, 16]


Before backtrack at level 15
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35]
 solution : [0, 8, 11, 16]

After backtrack at level 15
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4]
 solution : [0, 8, 11, 16]


Before backtrack at level 14
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4]
 solution : [0, 8, 11, 16]

After backtrack at level 14
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18]
 solution : [0, 8, 11, 16]


Before backtrack at level 13
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18]
 solution : [0, 8, 11, 16]

After backtrack at level 13
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43]
 solution : [0, 8, 11, 16]


Before backtrack at level 12
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43]
 solution : [0, 8, 11, 16]

After backtrack at level 12
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49]
 solution : [0, 8, 11, 16]


Before backtrack at level 11
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49]
 solution : [0, 8, 11, 16]

After backtrack at level 11
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49, 39]
 solution : [0, 8, 11, 16]


Before backtrack at level 10
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49, 39]
 solution : [0, 8, 11, 16]

After backtrack at level 10
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49, 39, 20]
 solution : [0, 8, 11, 16]


Before backtrack at level 9
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49, 39, 20]
 solution : [0, 8, 11, 16]

After backtrack at level 9
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49, 39, 20, 6]
 solution : [0, 8, 11, 16]


Before backtrack at level 8
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49, 39, 20, 6]
 solution : [0, 8, 11, 16]

After backtrack at level 8
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49, 39, 20, 6, 52, 58, 12, 3]
 solution : [0, 8, 11, 16]


Invert decision for 16 at level 7


New level: 8
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49, 39, 20, 6, 52, 58, 12, 3]
 solution : [0, 8, 11]


Before reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49, 39, 20, 6, 52, 58, 12, 3]
 solution : [0, 8, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16), (22, 8), (23, 4), (24, 32), (25, 64), (26, 64), (27, 4), (28, 2), (29, 4), (30, 32), (31, 64), (32, 8), (33, 8), (34, 16), (35, -1), (36, -1), (37, 8), (38, 4), (39, -1), (40, 8), (41, 4), (42, 128), (43, -1), (44, -1), (45, 8), (46, 64), (47, 128), (48, 128), (49, -1), (50, 2), (51, 4), (52, -1), (53, -1), (54, -1), (55, 8), (56, 4), (57, 64), (58, -1), (59, -1), (60, 16), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, 512), (16, -1), (17, 512), (18, 512), (19, -1), (20, 256), (21, 16), (22, 256), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 128), (55, 256), (56, 128), (57, 256), (58, 128), (59, 128), (60, 256), (61, 256)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49, 39, 20, 6, 52, 58, 12, 3]
 solution : [0, 8, 11]


Solution : [0, 8, 11] has cost 13.


Decide in level 8 among pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 15, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49, 39, 20, 6, 52, 58, 12, 3]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, 512), (16, -1), (17, 512), (18, 512), (19, -1), (20, 256), (21, 16), (22, 256), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 128), (55, 256), (56, 128), (57, 256), (58, 128), (59, 128), (60, 256), (61, 256)]

Decide 15 with phase True at level 8

After decision at level 8
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49, 39, 20, 6, 52, 58, 12, 3]
 solution : [0, 8, 11, 15]


New level: 9
 pending : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49, 39, 20, 6, 52, 58, 12, 3]
 solution : [0, 8, 11, 15]


Before reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 26, 7, 10, 13, 25, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 21, 37, 40, 45, 38, 27, 30, 29, 23, 56, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49, 39, 20, 6, 52, 58, 12, 3]
 solution : [0, 8, 11, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, 512), (16, -1), (17, 512), (18, 512), (19, -1), (20, 256), (21, 16), (22, 256), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 128), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 128), (38, 256), (39, 256), (40, 128), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 128), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 128), (55, 256), (56, 128), (57, 256), (58, 128), (59, 128), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 0), (14, -1), (15, -1), (16, -1), (17, 256), (18, 512), (19, -1), (20, 16), (21, 0), (22, 256), (23, 8), (24, 32), (25, 0), (26, 0), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, 256), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, 0), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, 0), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

Covered at level 9 : {45, 13, 21, 56, 25, 26}

After reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 37, 40, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49, 39, 20, 6, 52, 58, 12, 3]
 solution : [0, 8, 11, 15]


Before reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 37, 40, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49, 39, 20, 6, 52, 58, 12, 3]
 solution : [0, 8, 11, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 0), (14, -1), (15, -1), (16, -1), (17, 256), (18, 512), (19, -1), (20, 16), (21, 0), (22, 256), (23, 8), (24, 32), (25, 0), (26, 0), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, 256), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, 0), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, 0), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, 512), (19, -1), (20, 16), (21, -1), (22, 256), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, 256), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 37, 40, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49, 39, 20, 6, 52, 58, 12, 3]
 solution : [0, 8, 11, 15]


Solution : [0, 8, 11, 15] has cost 19.


Decide in level 9 among pending : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 37, 40, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 18, 43, 49, 39, 20, 6, 52, 58, 12, 3]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, 512), (19, -1), (20, 16), (21, -1), (22, 256), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, 256), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 37, 40, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 43, 49, 39, 20, 6, 52, 58, 12, 3]
 solution : [0, 8, 11, 15, 18]


New level: 10
 pending : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 37, 40, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 43, 49, 39, 20, 6, 52, 58, 12, 3]
 solution : [0, 8, 11, 15, 18]


Before reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 37, 40, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 35, 4, 43, 49, 39, 20, 6, 52, 58, 12, 3]
 solution : [0, 8, 11, 15, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, 512), (19, -1), (20, 16), (21, -1), (22, 256), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, 256), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 2), (24, 32), (25, -1), (26, -1), (27, 16), (28, 1), (29, 2), (30, 128), (31, 8), (32, 128), (33, 64), (34, 32), (35, 0), (36, 32), (37, 0), (38, 1), (39, 0), (40, 0), (41, 32), (42, 2), (43, 1), (44, 1), (45, -1), (46, 256), (47, 8), (48, 32), (49, 128), (50, 128), (51, 64), (52, 16), (53, 16), (54, 32), (55, 128), (56, -1), (57, 8), (58, 16), (59, 16), (60, 32), (61, 64)]

Covered at level 10 : {40, 35, 37, 39}

After reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 4, 43, 49, 20, 6, 52, 58, 12, 3]
 solution : [0, 8, 11, 15, 18]


Before reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 4, 43, 49, 20, 6, 52, 58, 12, 3]
 solution : [0, 8, 11, 15, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 2), (24, 32), (25, -1), (26, -1), (27, 16), (28, 1), (29, 2), (30, 128), (31, 8), (32, 128), (33, 64), (34, 32), (35, 0), (36, 32), (37, 0), (38, 1), (39, 0), (40, 0), (41, 32), (42, 2), (43, 1), (44, 1), (45, -1), (46, 256), (47, 8), (48, 32), (49, 128), (50, 128), (51, 64), (52, 16), (53, 16), (54, 32), (55, 128), (56, -1), (57, 8), (58, 16), (59, 16), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 2), (24, 32), (25, -1), (26, -1), (27, 16), (28, 1), (29, 2), (30, 128), (31, 8), (32, 128), (33, 64), (34, 32), (35, -1), (36, 32), (37, -1), (38, 1), (39, -1), (40, -1), (41, 32), (42, 2), (43, 1), (44, 1), (45, -1), (46, 256), (47, 8), (48, 32), (49, 128), (50, 128), (51, 64), (52, 16), (53, 16), (54, 32), (55, 128), (56, -1), (57, 8), (58, 16), (59, 16), (60, 32), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 4, 43, 49, 20, 6, 52, 58, 12, 3]
 solution : [0, 8, 11, 15, 18]


Solution : [0, 8, 11, 15, 18] has cost 28.


Before backtrack at level 10
 pending : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 4, 43, 49, 20, 6, 52, 58, 12, 3]
 solution : [0, 8, 11, 15, 18]

After backtrack at level 10
 pending : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 4, 43, 49, 20, 6, 52, 58, 12, 3, 37, 40, 35, 39]
 solution : [0, 8, 11, 15, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 4, 43, 49, 20, 6, 52, 58, 12, 3, 37, 40, 35, 39]
 solution : [0, 8, 11, 15]


Before reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 4, 43, 49, 20, 6, 52, 58, 12, 3, 37, 40, 35, 39]
 solution : [0, 8, 11, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 2), (24, 32), (25, -1), (26, -1), (27, 16), (28, 1), (29, 2), (30, 128), (31, 8), (32, 128), (33, 64), (34, 32), (35, -1), (36, 32), (37, -1), (38, 1), (39, -1), (40, -1), (41, 32), (42, 2), (43, 1), (44, 1), (45, -1), (46, 256), (47, 8), (48, 32), (49, 128), (50, 128), (51, 64), (52, 16), (53, 16), (54, 32), (55, 128), (56, -1), (57, 8), (58, 16), (59, 16), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, 256), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, 256), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 4, 43, 49, 20, 6, 52, 58, 12, 3, 37, 40, 35, 39]
 solution : [0, 8, 11, 15]


Solution : [0, 8, 11, 15] has cost 19.


Decide in level 10 among pending : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 4, 43, 49, 20, 6, 52, 58, 12, 3, 37, 40, 35, 39]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, 256), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, 256), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

Decide 6 with phase True at level 10

After decision at level 10
 pending : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 37, 40, 35, 39]
 solution : [0, 8, 11, 15, 6]


New level: 11
 pending : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 37, 40, 35, 39]
 solution : [0, 8, 11, 15, 6]


Before reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 37, 40, 35, 39]
 solution : [0, 8, 11, 15, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, 256), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, 256), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 128), (37, 1), (38, 256), (39, 16), (40, 4), (41, 256), (42, 4), (43, 256), (44, 4), (45, -1), (46, 256), (47, 2), (48, 32), (49, 256), (50, 256), (51, 64), (52, 32), (53, 8), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, 256)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 37, 40, 35, 39]
 solution : [0, 8, 11, 15, 6]


Solution : [0, 8, 11, 15, 6] has cost 21.


Decide in level 11 among pending : [2, 34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 37, 40, 35, 39]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 128), (37, 1), (38, 256), (39, 16), (40, 4), (41, 256), (42, 4), (43, 256), (44, 4), (45, -1), (46, 256), (47, 2), (48, 32), (49, 256), (50, 256), (51, 64), (52, 32), (53, 8), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, 256)]

Decide 2 with phase True at level 11

After decision at level 11
 pending : [34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 37, 40, 35, 39]
 solution : [0, 8, 11, 15, 6, 2]


New level: 12
 pending : [34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 37, 40, 35, 39]
 solution : [0, 8, 11, 15, 6, 2]


Before reduction : 
 pending  : [34, 61, 50, 55, 41, 7, 10, 24, 33, 47, 46, 31, 57, 42, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 59, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 37, 40, 35, 39]
 solution : [0, 8, 11, 15, 6, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 128), (37, 1), (38, 256), (39, 16), (40, 4), (41, 256), (42, 4), (43, 256), (44, 4), (45, -1), (46, 256), (47, 2), (48, 32), (49, 256), (50, 256), (51, 64), (52, 32), (53, 8), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, -1), (7, 4), (8, -1), (9, -1), (10, 0), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 2), (21, -1), (22, 256), (23, 2), (24, 32), (25, -1), (26, -1), (27, 64), (28, 2), (29, 2), (30, 128), (31, 4), (32, 128), (33, 128), (34, 16), (35, 8), (36, 64), (37, 0), (38, 256), (39, 8), (40, 1), (41, 8), (42, 0), (43, 8), (44, 1), (45, -1), (46, 256), (47, 0), (48, 16), (49, 128), (50, 64), (51, 16), (52, 32), (53, 2), (54, 2), (55, 128), (56, -1), (57, 4), (58, 4), (59, 0), (60, 16), (61, 128)]

Covered at level 12 : {37, 10, 42, 47, 59}

After reduction : 
 pending  : [34, 61, 50, 55, 41, 7, 24, 33, 46, 31, 57, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 40, 35, 39]
 solution : [0, 8, 11, 15, 6, 2]


Before reduction : 
 pending  : [34, 61, 50, 55, 41, 7, 24, 33, 46, 31, 57, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 40, 35, 39]
 solution : [0, 8, 11, 15, 6, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, -1), (7, 4), (8, -1), (9, -1), (10, 0), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 2), (21, -1), (22, 256), (23, 2), (24, 32), (25, -1), (26, -1), (27, 64), (28, 2), (29, 2), (30, 128), (31, 4), (32, 128), (33, 128), (34, 16), (35, 8), (36, 64), (37, 0), (38, 256), (39, 8), (40, 1), (41, 8), (42, 0), (43, 8), (44, 1), (45, -1), (46, 256), (47, 0), (48, 16), (49, 128), (50, 64), (51, 16), (52, 32), (53, 2), (54, 2), (55, 128), (56, -1), (57, 4), (58, 4), (59, 0), (60, 16), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, -1), (7, 4), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 2), (21, -1), (22, 256), (23, 2), (24, 32), (25, -1), (26, -1), (27, 64), (28, 2), (29, 2), (30, 128), (31, 4), (32, 128), (33, 128), (34, 16), (35, 8), (36, 64), (37, -1), (38, 256), (39, 8), (40, 1), (41, 8), (42, -1), (43, 8), (44, 1), (45, -1), (46, 256), (47, -1), (48, 16), (49, 128), (50, 64), (51, 16), (52, 32), (53, 2), (54, 2), (55, 128), (56, -1), (57, 4), (58, 4), (59, -1), (60, 16), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [34, 61, 50, 55, 41, 7, 24, 33, 46, 31, 57, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 40, 35, 39]
 solution : [0, 8, 11, 15, 6, 2]


Solution : [0, 8, 11, 15, 6, 2] has cost 27.


Before backtrack at level 12
 pending : [34, 61, 50, 55, 41, 7, 24, 33, 46, 31, 57, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 40, 35, 39]
 solution : [0, 8, 11, 15, 6, 2]

After backtrack at level 12
 pending : [34, 61, 50, 55, 41, 7, 24, 33, 46, 31, 57, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 40, 35, 39, 10, 47, 42, 59, 37]
 solution : [0, 8, 11, 15, 6, 2]


Invert decision for 2 at level 11


New level: 12
 pending : [34, 61, 50, 55, 41, 7, 24, 33, 46, 31, 57, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 40, 35, 39, 10, 47, 42, 59, 37]
 solution : [0, 8, 11, 15, 6]


Before reduction : 
 pending  : [34, 61, 50, 55, 41, 7, 24, 33, 46, 31, 57, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 40, 35, 39, 10, 47, 42, 59, 37]
 solution : [0, 8, 11, 15, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, -1), (7, 4), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 2), (21, -1), (22, 256), (23, 2), (24, 32), (25, -1), (26, -1), (27, 64), (28, 2), (29, 2), (30, 128), (31, 4), (32, 128), (33, 128), (34, 16), (35, 8), (36, 64), (37, -1), (38, 256), (39, 8), (40, 1), (41, 8), (42, -1), (43, 8), (44, 1), (45, -1), (46, 256), (47, -1), (48, 16), (49, 128), (50, 64), (51, 16), (52, 32), (53, 2), (54, 2), (55, 128), (56, -1), (57, 4), (58, 4), (59, -1), (60, 16), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 128), (37, 1), (38, 256), (39, 16), (40, 4), (41, 256), (42, 4), (43, 256), (44, 4), (45, -1), (46, 256), (47, 2), (48, 32), (49, 256), (50, 256), (51, 64), (52, 32), (53, 8), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, 256)]

Covered at level 12 : set()

After reduction : 
 pending  : [34, 61, 50, 55, 41, 7, 24, 33, 46, 31, 57, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 40, 35, 39, 10, 47, 42, 59, 37]
 solution : [0, 8, 11, 15, 6]


Solution : [0, 8, 11, 15, 6] has cost 21.


Decide in level 12 among pending : [34, 61, 50, 55, 41, 7, 24, 33, 46, 31, 57, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 40, 35, 39, 10, 47, 42, 59, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 128), (37, 1), (38, 256), (39, 16), (40, 4), (41, 256), (42, 4), (43, 256), (44, 4), (45, -1), (46, 256), (47, 2), (48, 32), (49, 256), (50, 256), (51, 64), (52, 32), (53, 8), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, 256)]

Decide 61 with phase True at level 12

After decision at level 12
 pending : [34, 50, 55, 41, 7, 24, 33, 46, 31, 57, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 40, 35, 39, 10, 47, 42, 59, 37]
 solution : [0, 8, 11, 15, 6, 61]


New level: 13
 pending : [34, 50, 55, 41, 7, 24, 33, 46, 31, 57, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 40, 35, 39, 10, 47, 42, 59, 37]
 solution : [0, 8, 11, 15, 6, 61]


Before reduction : 
 pending  : [34, 50, 55, 41, 7, 24, 33, 46, 31, 57, 51, 48, 60, 22, 38, 27, 30, 29, 23, 28, 32, 17, 44, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 40, 35, 39, 10, 47, 42, 59, 37]
 solution : [0, 8, 11, 15, 6, 61]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 128), (37, 1), (38, 256), (39, 16), (40, 4), (41, 256), (42, 4), (43, 256), (44, 4), (45, -1), (46, 256), (47, 2), (48, 32), (49, 256), (50, 256), (51, 64), (52, 32), (53, 8), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 1), (21, -1), (22, 256), (23, 1), (24, 16), (25, -1), (26, -1), (27, 64), (28, 1), (29, 1), (30, 128), (31, 4), (32, 128), (33, 0), (34, 0), (35, 0), (36, 128), (37, 0), (38, 1), (39, 0), (40, 0), (41, 1), (42, 1), (43, 256), (44, 0), (45, -1), (46, 1), (47, 0), (48, 1), (49, 256), (50, 1), (51, 1), (52, 1), (53, 1), (54, 1), (55, 256), (56, -1), (57, 4), (58, 1), (59, 0), (60, 0), (61, -1)]

Covered at level 13 : {33, 34, 35, 37, 39, 40, 44, 47, 59, 60}

After reduction : 
 pending  : [50, 55, 41, 7, 24, 46, 31, 57, 51, 48, 22, 38, 27, 30, 29, 23, 28, 32, 17, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 10, 42]
 solution : [0, 8, 11, 15, 6, 61]


Before reduction : 
 pending  : [50, 55, 41, 7, 24, 46, 31, 57, 51, 48, 22, 38, 27, 30, 29, 23, 28, 32, 17, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 10, 42]
 solution : [0, 8, 11, 15, 6, 61]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 1), (21, -1), (22, 256), (23, 1), (24, 16), (25, -1), (26, -1), (27, 64), (28, 1), (29, 1), (30, 128), (31, 4), (32, 128), (33, 0), (34, 0), (35, 0), (36, 128), (37, 0), (38, 1), (39, 0), (40, 0), (41, 1), (42, 1), (43, 256), (44, 0), (45, -1), (46, 1), (47, 0), (48, 1), (49, 256), (50, 1), (51, 1), (52, 1), (53, 1), (54, 1), (55, 256), (56, -1), (57, 4), (58, 1), (59, 0), (60, 0), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 1), (21, -1), (22, 256), (23, 1), (24, 16), (25, -1), (26, -1), (27, 64), (28, 1), (29, 1), (30, 128), (31, 4), (32, 128), (33, -1), (34, -1), (35, -1), (36, 128), (37, -1), (38, 1), (39, -1), (40, -1), (41, 1), (42, 1), (43, 256), (44, -1), (45, -1), (46, 1), (47, -1), (48, 1), (49, 256), (50, 1), (51, 1), (52, 1), (53, 1), (54, 1), (55, 256), (56, -1), (57, 4), (58, 1), (59, -1), (60, -1), (61, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [50, 55, 41, 7, 24, 46, 31, 57, 51, 48, 22, 38, 27, 30, 29, 23, 28, 32, 17, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 10, 42]
 solution : [0, 8, 11, 15, 6, 61]


Solution : [0, 8, 11, 15, 6, 61] has cost 31.


Before backtrack at level 13
 pending : [50, 55, 41, 7, 24, 46, 31, 57, 51, 48, 22, 38, 27, 30, 29, 23, 28, 32, 17, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 10, 42]
 solution : [0, 8, 11, 15, 6, 61]

After backtrack at level 13
 pending : [50, 55, 41, 7, 24, 46, 31, 57, 51, 48, 22, 38, 27, 30, 29, 23, 28, 32, 17, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 10, 42, 34, 33, 60, 44, 40, 35, 39, 47, 59, 37]
 solution : [0, 8, 11, 15, 6, 61]


Invert decision for 61 at level 12


New level: 13
 pending : [50, 55, 41, 7, 24, 46, 31, 57, 51, 48, 22, 38, 27, 30, 29, 23, 28, 32, 17, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 10, 42, 34, 33, 60, 44, 40, 35, 39, 47, 59, 37]
 solution : [0, 8, 11, 15, 6]


Before reduction : 
 pending  : [50, 55, 41, 7, 24, 46, 31, 57, 51, 48, 22, 38, 27, 30, 29, 23, 28, 32, 17, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 10, 42, 34, 33, 60, 44, 40, 35, 39, 47, 59, 37]
 solution : [0, 8, 11, 15, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 1), (21, -1), (22, 256), (23, 1), (24, 16), (25, -1), (26, -1), (27, 64), (28, 1), (29, 1), (30, 128), (31, 4), (32, 128), (33, -1), (34, -1), (35, -1), (36, 128), (37, -1), (38, 1), (39, -1), (40, -1), (41, 1), (42, 1), (43, 256), (44, -1), (45, -1), (46, 1), (47, -1), (48, 1), (49, 256), (50, 1), (51, 1), (52, 1), (53, 1), (54, 1), (55, 256), (56, -1), (57, 4), (58, 1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 128), (37, 1), (38, 256), (39, 16), (40, 4), (41, 256), (42, 4), (43, 256), (44, 4), (45, -1), (46, 256), (47, 2), (48, 32), (49, 256), (50, 256), (51, 64), (52, 32), (53, 8), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [50, 55, 41, 7, 24, 46, 31, 57, 51, 48, 22, 38, 27, 30, 29, 23, 28, 32, 17, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 10, 42, 34, 33, 60, 44, 40, 35, 39, 47, 59, 37]
 solution : [0, 8, 11, 15, 6]


Solution : [0, 8, 11, 15, 6] has cost 21.


Decide in level 13 among pending : [50, 55, 41, 7, 24, 46, 31, 57, 51, 48, 22, 38, 27, 30, 29, 23, 28, 32, 17, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 10, 42, 34, 33, 60, 44, 40, 35, 39, 47, 59, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 128), (37, 1), (38, 256), (39, 16), (40, 4), (41, 256), (42, 4), (43, 256), (44, 4), (45, -1), (46, 256), (47, 2), (48, 32), (49, 256), (50, 256), (51, 64), (52, 32), (53, 8), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

Decide 50 with phase True at level 13

After decision at level 13
 pending : [55, 41, 7, 24, 46, 31, 57, 51, 48, 22, 38, 27, 30, 29, 23, 28, 32, 17, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 10, 42, 34, 33, 60, 44, 40, 35, 39, 47, 59, 37]
 solution : [0, 8, 11, 15, 6, 50]


New level: 14
 pending : [55, 41, 7, 24, 46, 31, 57, 51, 48, 22, 38, 27, 30, 29, 23, 28, 32, 17, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 10, 42, 34, 33, 60, 44, 40, 35, 39, 47, 59, 37]
 solution : [0, 8, 11, 15, 6, 50]


Before reduction : 
 pending  : [55, 41, 7, 24, 46, 31, 57, 51, 48, 22, 38, 27, 30, 29, 23, 28, 32, 17, 53, 54, 36, 4, 43, 49, 20, 52, 58, 12, 3, 10, 42, 34, 33, 60, 44, 40, 35, 39, 47, 59, 37]
 solution : [0, 8, 11, 15, 6, 50]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 128), (37, 1), (38, 256), (39, 16), (40, 4), (41, 256), (42, 4), (43, 256), (44, 4), (45, -1), (46, 256), (47, 2), (48, 32), (49, 256), (50, 256), (51, 64), (52, 32), (53, 8), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, 0), (21, -1), (22, 4), (23, 0), (24, 32), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 128), (31, 4), (32, 4), (33, 64), (34, 1), (35, 0), (36, 0), (37, 0), (38, 1), (39, 0), (40, 0), (41, 1), (42, 1), (43, 256), (44, 0), (45, -1), (46, 16), (47, 0), (48, 0), (49, 2), (50, -1), (51, 0), (52, 0), (53, 0), (54, 0), (55, 4), (56, -1), (57, 4), (58, 2), (59, 0), (60, 1), (61, -1)]

Covered at level 14 : {35, 36, 37, 39, 40, 59, 44, 47, 48, 51, 20, 53, 54, 23, 52, 27, 28, 29}

After reduction : 
 pending  : [55, 41, 7, 24, 46, 31, 57, 22, 38, 30, 32, 17, 4, 43, 49, 58, 12, 3, 10, 42, 34, 33, 60]
 solution : [0, 8, 11, 15, 6, 50]


Before reduction : 
 pending  : [55, 41, 7, 24, 46, 31, 57, 22, 38, 30, 32, 17, 4, 43, 49, 58, 12, 3, 10, 42, 34, 33, 60]
 solution : [0, 8, 11, 15, 6, 50]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, 0), (21, -1), (22, 4), (23, 0), (24, 32), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 128), (31, 4), (32, 4), (33, 64), (34, 1), (35, 0), (36, 0), (37, 0), (38, 1), (39, 0), (40, 0), (41, 1), (42, 1), (43, 256), (44, 0), (45, -1), (46, 16), (47, 0), (48, 0), (49, 2), (50, -1), (51, 0), (52, 0), (53, 0), (54, 0), (55, 4), (56, -1), (57, 4), (58, 2), (59, 0), (60, 1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, -1), (21, -1), (22, 4), (23, -1), (24, 32), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 4), (33, 64), (34, 1), (35, -1), (36, -1), (37, -1), (38, 1), (39, -1), (40, -1), (41, 1), (42, 1), (43, 256), (44, -1), (45, -1), (46, 16), (47, -1), (48, -1), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, 4), (56, -1), (57, 4), (58, 2), (59, -1), (60, 1), (61, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [55, 41, 7, 24, 46, 31, 57, 22, 38, 30, 32, 17, 4, 43, 49, 58, 12, 3, 10, 42, 34, 33, 60]
 solution : [0, 8, 11, 15, 6, 50]


Solution : [0, 8, 11, 15, 6, 50] has cost 31.


Before backtrack at level 14
 pending : [55, 41, 7, 24, 46, 31, 57, 22, 38, 30, 32, 17, 4, 43, 49, 58, 12, 3, 10, 42, 34, 33, 60]
 solution : [0, 8, 11, 15, 6, 50]

After backtrack at level 14
 pending : [55, 41, 7, 24, 46, 31, 57, 22, 38, 30, 32, 17, 4, 43, 49, 58, 12, 3, 10, 42, 34, 33, 60, 51, 48, 27, 29, 23, 28, 53, 54, 36, 20, 52, 44, 40, 35, 39, 47, 59, 37]
 solution : [0, 8, 11, 15, 6, 50]


Invert decision for 50 at level 13


New level: 14
 pending : [55, 41, 7, 24, 46, 31, 57, 22, 38, 30, 32, 17, 4, 43, 49, 58, 12, 3, 10, 42, 34, 33, 60, 51, 48, 27, 29, 23, 28, 53, 54, 36, 20, 52, 44, 40, 35, 39, 47, 59, 37]
 solution : [0, 8, 11, 15, 6]


Before reduction : 
 pending  : [55, 41, 7, 24, 46, 31, 57, 22, 38, 30, 32, 17, 4, 43, 49, 58, 12, 3, 10, 42, 34, 33, 60, 51, 48, 27, 29, 23, 28, 53, 54, 36, 20, 52, 44, 40, 35, 39, 47, 59, 37]
 solution : [0, 8, 11, 15, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, -1), (21, -1), (22, 4), (23, -1), (24, 32), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 4), (33, 64), (34, 1), (35, -1), (36, -1), (37, -1), (38, 1), (39, -1), (40, -1), (41, 1), (42, 1), (43, 256), (44, -1), (45, -1), (46, 16), (47, -1), (48, -1), (49, 2), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, 4), (56, -1), (57, 4), (58, 2), (59, -1), (60, 1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 128), (37, 1), (38, 256), (39, 16), (40, 4), (41, 256), (42, 4), (43, 256), (44, 4), (45, -1), (46, 256), (47, 2), (48, 32), (49, 256), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [55, 41, 7, 24, 46, 31, 57, 22, 38, 30, 32, 17, 4, 43, 49, 58, 12, 3, 10, 42, 34, 33, 60, 51, 48, 27, 29, 23, 28, 53, 54, 36, 20, 52, 44, 40, 35, 39, 47, 59, 37]
 solution : [0, 8, 11, 15, 6]


Solution : [0, 8, 11, 15, 6] has cost 21.


Decide in level 14 among pending : [55, 41, 7, 24, 46, 31, 57, 22, 38, 30, 32, 17, 4, 43, 49, 58, 12, 3, 10, 42, 34, 33, 60, 51, 48, 27, 29, 23, 28, 53, 54, 36, 20, 52, 44, 40, 35, 39, 47, 59, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 128), (37, 1), (38, 256), (39, 16), (40, 4), (41, 256), (42, 4), (43, 256), (44, 4), (45, -1), (46, 256), (47, 2), (48, 32), (49, 256), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

Decide 55 with phase True at level 14

After decision at level 14
 pending : [41, 7, 24, 46, 31, 57, 22, 38, 30, 32, 17, 4, 43, 49, 58, 12, 3, 10, 42, 34, 33, 60, 51, 48, 27, 29, 23, 28, 53, 54, 36, 20, 52, 44, 40, 35, 39, 47, 59, 37]
 solution : [0, 8, 11, 15, 6, 55]


New level: 15
 pending : [41, 7, 24, 46, 31, 57, 22, 38, 30, 32, 17, 4, 43, 49, 58, 12, 3, 10, 42, 34, 33, 60, 51, 48, 27, 29, 23, 28, 53, 54, 36, 20, 52, 44, 40, 35, 39, 47, 59, 37]
 solution : [0, 8, 11, 15, 6, 55]


Before reduction : 
 pending  : [41, 7, 24, 46, 31, 57, 22, 38, 30, 32, 17, 4, 43, 49, 58, 12, 3, 10, 42, 34, 33, 60, 51, 48, 27, 29, 23, 28, 53, 54, 36, 20, 52, 44, 40, 35, 39, 47, 59, 37]
 solution : [0, 8, 11, 15, 6, 55]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 128), (37, 1), (38, 256), (39, 16), (40, 4), (41, 256), (42, 4), (43, 256), (44, 4), (45, -1), (46, 256), (47, 2), (48, 32), (49, 256), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 2), (21, -1), (22, 256), (23, 0), (24, 32), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 128), (34, 8), (35, 8), (36, 0), (37, 1), (38, 256), (39, 4), (40, 1), (41, 4), (42, 0), (43, 8), (44, 1), (45, -1), (46, 256), (47, 2), (48, 8), (49, 0), (50, -1), (51, 8), (52, 8), (53, 2), (54, 2), (55, -1), (56, -1), (57, 0), (58, 64), (59, 64), (60, 8), (61, -1)]

Covered at level 15 : {32, 36, 42, 49, 23, 57, 27, 28, 29, 30, 31}

After reduction : 
 pending  : [41, 7, 24, 46, 22, 38, 17, 4, 43, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 44, 40, 35, 39, 47, 59, 37]
 solution : [0, 8, 11, 15, 6, 55]


Before reduction : 
 pending  : [41, 7, 24, 46, 22, 38, 17, 4, 43, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 44, 40, 35, 39, 47, 59, 37]
 solution : [0, 8, 11, 15, 6, 55]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 2), (21, -1), (22, 256), (23, 0), (24, 32), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 128), (34, 8), (35, 8), (36, 0), (37, 1), (38, 256), (39, 4), (40, 1), (41, 4), (42, 0), (43, 8), (44, 1), (45, -1), (46, 256), (47, 2), (48, 8), (49, 0), (50, -1), (51, 8), (52, 8), (53, 2), (54, 2), (55, -1), (56, -1), (57, 0), (58, 64), (59, 64), (60, 8), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 32), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 2), (21, -1), (22, 256), (23, -1), (24, 32), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 8), (35, 8), (36, -1), (37, 1), (38, 256), (39, 4), (40, 1), (41, 4), (42, -1), (43, 8), (44, 1), (45, -1), (46, 64), (47, 2), (48, 8), (49, -1), (50, -1), (51, 8), (52, 8), (53, 2), (54, 2), (55, -1), (56, -1), (57, -1), (58, 64), (59, 64), (60, 8), (61, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [41, 7, 24, 46, 22, 38, 17, 4, 43, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 44, 40, 35, 39, 47, 59, 37]
 solution : [0, 8, 11, 15, 6, 55]


Solution : [0, 8, 11, 15, 6, 55] has cost 31.


Before backtrack at level 15
 pending : [41, 7, 24, 46, 22, 38, 17, 4, 43, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 44, 40, 35, 39, 47, 59, 37]
 solution : [0, 8, 11, 15, 6, 55]

After backtrack at level 15
 pending : [41, 7, 24, 46, 22, 38, 17, 4, 43, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 44, 40, 35, 39, 47, 59, 37, 31, 57, 30, 32, 49, 42, 27, 29, 23, 28, 36]
 solution : [0, 8, 11, 15, 6, 55]


Invert decision for 55 at level 14


New level: 15
 pending : [41, 7, 24, 46, 22, 38, 17, 4, 43, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 44, 40, 35, 39, 47, 59, 37, 31, 57, 30, 32, 49, 42, 27, 29, 23, 28, 36]
 solution : [0, 8, 11, 15, 6]


Before reduction : 
 pending  : [41, 7, 24, 46, 22, 38, 17, 4, 43, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 44, 40, 35, 39, 47, 59, 37, 31, 57, 30, 32, 49, 42, 27, 29, 23, 28, 36]
 solution : [0, 8, 11, 15, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 32), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 2), (21, -1), (22, 256), (23, -1), (24, 32), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 8), (35, 8), (36, -1), (37, 1), (38, 256), (39, 4), (40, 1), (41, 4), (42, -1), (43, 8), (44, 1), (45, -1), (46, 64), (47, 2), (48, 8), (49, -1), (50, -1), (51, 8), (52, 8), (53, 2), (54, 2), (55, -1), (56, -1), (57, -1), (58, 64), (59, 64), (60, 8), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 128), (37, 1), (38, 256), (39, 16), (40, 4), (41, 256), (42, 4), (43, 256), (44, 4), (45, -1), (46, 256), (47, 2), (48, 32), (49, 256), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [41, 7, 24, 46, 22, 38, 17, 4, 43, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 44, 40, 35, 39, 47, 59, 37, 31, 57, 30, 32, 49, 42, 27, 29, 23, 28, 36]
 solution : [0, 8, 11, 15, 6]


Solution : [0, 8, 11, 15, 6] has cost 21.


Decide in level 15 among pending : [41, 7, 24, 46, 22, 38, 17, 4, 43, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 44, 40, 35, 39, 47, 59, 37, 31, 57, 30, 32, 49, 42, 27, 29, 23, 28, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 128), (37, 1), (38, 256), (39, 16), (40, 4), (41, 256), (42, 4), (43, 256), (44, 4), (45, -1), (46, 256), (47, 2), (48, 32), (49, 256), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

Decide 41 with phase True at level 15

After decision at level 15
 pending : [7, 24, 46, 22, 38, 17, 4, 43, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 44, 40, 35, 39, 47, 59, 37, 31, 57, 30, 32, 49, 42, 27, 29, 23, 28, 36]
 solution : [0, 8, 11, 15, 6, 41]


New level: 16
 pending : [7, 24, 46, 22, 38, 17, 4, 43, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 44, 40, 35, 39, 47, 59, 37, 31, 57, 30, 32, 49, 42, 27, 29, 23, 28, 36]
 solution : [0, 8, 11, 15, 6, 41]


Before reduction : 
 pending  : [7, 24, 46, 22, 38, 17, 4, 43, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 44, 40, 35, 39, 47, 59, 37, 31, 57, 30, 32, 49, 42, 27, 29, 23, 28, 36]
 solution : [0, 8, 11, 15, 6, 41]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 128), (37, 1), (38, 256), (39, 16), (40, 4), (41, 256), (42, 4), (43, 256), (44, 4), (45, -1), (46, 256), (47, 2), (48, 32), (49, 256), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 4), (21, -1), (22, 256), (23, 1), (24, 32), (25, -1), (26, -1), (27, 32), (28, 1), (29, 1), (30, 64), (31, 4), (32, 64), (33, 128), (34, 16), (35, 0), (36, 128), (37, 0), (38, 256), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, 0), (45, -1), (46, 256), (47, 1), (48, 32), (49, 64), (50, -1), (51, 32), (52, 16), (53, 4), (54, 32), (55, -1), (56, -1), (57, 4), (58, 64), (59, 32), (60, 16), (61, -1)]

Covered at level 16 : {35, 37, 39, 40, 42, 43, 44}

After reduction : 
 pending  : [7, 24, 46, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 47, 59, 31, 57, 30, 32, 49, 27, 29, 23, 28, 36]
 solution : [0, 8, 11, 15, 6, 41]


Before reduction : 
 pending  : [7, 24, 46, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 47, 59, 31, 57, 30, 32, 49, 27, 29, 23, 28, 36]
 solution : [0, 8, 11, 15, 6, 41]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 4), (21, -1), (22, 256), (23, 1), (24, 32), (25, -1), (26, -1), (27, 32), (28, 1), (29, 1), (30, 64), (31, 4), (32, 64), (33, 128), (34, 16), (35, 0), (36, 128), (37, 0), (38, 256), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, 0), (45, -1), (46, 256), (47, 1), (48, 32), (49, 64), (50, -1), (51, 32), (52, 16), (53, 4), (54, 32), (55, -1), (56, -1), (57, 4), (58, 64), (59, 32), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 4), (21, -1), (22, 256), (23, 1), (24, 32), (25, -1), (26, -1), (27, 32), (28, 1), (29, 1), (30, 64), (31, 4), (32, 64), (33, 128), (34, 16), (35, -1), (36, 128), (37, -1), (38, 256), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 256), (47, 1), (48, 32), (49, 64), (50, -1), (51, 32), (52, 16), (53, 4), (54, 32), (55, -1), (56, -1), (57, 4), (58, 64), (59, 32), (60, 16), (61, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [7, 24, 46, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 47, 59, 31, 57, 30, 32, 49, 27, 29, 23, 28, 36]
 solution : [0, 8, 11, 15, 6, 41]


Solution : [0, 8, 11, 15, 6, 41] has cost 31.


Before backtrack at level 16
 pending : [7, 24, 46, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 47, 59, 31, 57, 30, 32, 49, 27, 29, 23, 28, 36]
 solution : [0, 8, 11, 15, 6, 41]

After backtrack at level 16
 pending : [7, 24, 46, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 47, 59, 31, 57, 30, 32, 49, 27, 29, 23, 28, 36, 43, 44, 40, 35, 39, 37, 42]
 solution : [0, 8, 11, 15, 6, 41]


Invert decision for 41 at level 15


New level: 16
 pending : [7, 24, 46, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 47, 59, 31, 57, 30, 32, 49, 27, 29, 23, 28, 36, 43, 44, 40, 35, 39, 37, 42]
 solution : [0, 8, 11, 15, 6]


Before reduction : 
 pending  : [7, 24, 46, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 47, 59, 31, 57, 30, 32, 49, 27, 29, 23, 28, 36, 43, 44, 40, 35, 39, 37, 42]
 solution : [0, 8, 11, 15, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 4), (21, -1), (22, 256), (23, 1), (24, 32), (25, -1), (26, -1), (27, 32), (28, 1), (29, 1), (30, 64), (31, 4), (32, 64), (33, 128), (34, 16), (35, -1), (36, 128), (37, -1), (38, 256), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 256), (47, 1), (48, 32), (49, 64), (50, -1), (51, 32), (52, 16), (53, 4), (54, 32), (55, -1), (56, -1), (57, 4), (58, 64), (59, 32), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 128), (37, 1), (38, 256), (39, 16), (40, 4), (41, -1), (42, 4), (43, 256), (44, 4), (45, -1), (46, 256), (47, 2), (48, 32), (49, 128), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [7, 24, 46, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 47, 59, 31, 57, 30, 32, 49, 27, 29, 23, 28, 36, 43, 44, 40, 35, 39, 37, 42]
 solution : [0, 8, 11, 15, 6]


Solution : [0, 8, 11, 15, 6] has cost 21.


Decide in level 16 among pending : [7, 24, 46, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 47, 59, 31, 57, 30, 32, 49, 27, 29, 23, 28, 36, 43, 44, 40, 35, 39, 37, 42]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 128), (37, 1), (38, 256), (39, 16), (40, 4), (41, -1), (42, 4), (43, 256), (44, 4), (45, -1), (46, 256), (47, 2), (48, 32), (49, 128), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

Decide 46 with phase True at level 16

After decision at level 16
 pending : [7, 24, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 47, 59, 31, 57, 30, 32, 49, 27, 29, 23, 28, 36, 43, 44, 40, 35, 39, 37, 42]
 solution : [0, 8, 11, 15, 6, 46]


New level: 17
 pending : [7, 24, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 47, 59, 31, 57, 30, 32, 49, 27, 29, 23, 28, 36, 43, 44, 40, 35, 39, 37, 42]
 solution : [0, 8, 11, 15, 6, 46]


Before reduction : 
 pending  : [7, 24, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 48, 53, 54, 20, 52, 47, 59, 31, 57, 30, 32, 49, 27, 29, 23, 28, 36, 43, 44, 40, 35, 39, 37, 42]
 solution : [0, 8, 11, 15, 6, 46]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 128), (37, 1), (38, 256), (39, 16), (40, 4), (41, -1), (42, 4), (43, 256), (44, 4), (45, -1), (46, 256), (47, 2), (48, 32), (49, 128), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 64), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 0), (21, -1), (22, 2), (23, 0), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 2), (31, 4), (32, 128), (33, 2), (34, 2), (35, 0), (36, 0), (37, 0), (38, 1), (39, 0), (40, 0), (41, -1), (42, 2), (43, 1), (44, 0), (45, -1), (46, -1), (47, 0), (48, 0), (49, 2), (50, -1), (51, 1), (52, 0), (53, 0), (54, 0), (55, -1), (56, -1), (57, 4), (58, 1), (59, 0), (60, 2), (61, -1)]

Covered at level 17 : {35, 36, 37, 39, 27, 40, 44, 47, 48, 20, 53, 54, 52, 23, 59, 28, 29}

After reduction : 
 pending  : [7, 24, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42]
 solution : [0, 8, 11, 15, 6, 46]


Before reduction : 
 pending  : [7, 24, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42]
 solution : [0, 8, 11, 15, 6, 46]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 64), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 0), (21, -1), (22, 2), (23, 0), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 2), (31, 4), (32, 128), (33, 2), (34, 2), (35, 0), (36, 0), (37, 0), (38, 1), (39, 0), (40, 0), (41, -1), (42, 2), (43, 1), (44, 0), (45, -1), (46, -1), (47, 0), (48, 0), (49, 2), (50, -1), (51, 1), (52, 0), (53, 0), (54, 0), (55, -1), (56, -1), (57, 4), (58, 1), (59, 0), (60, 2), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 64), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 4), (33, 2), (34, 2), (35, -1), (36, -1), (37, -1), (38, 1), (39, -1), (40, -1), (41, -1), (42, 2), (43, 1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 2), (50, -1), (51, 1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, 4), (58, 1), (59, -1), (60, 2), (61, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [7, 24, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42]
 solution : [0, 8, 11, 15, 6, 46]


Solution : [0, 8, 11, 15, 6, 46] has cost 31.


Before backtrack at level 17
 pending : [7, 24, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42]
 solution : [0, 8, 11, 15, 6, 46]

After backtrack at level 17
 pending : [7, 24, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 53, 54, 20, 52, 47, 59, 27, 29, 23, 28, 36, 44, 40, 35, 39, 37]
 solution : [0, 8, 11, 15, 6, 46]


Invert decision for 46 at level 16


New level: 17
 pending : [7, 24, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 53, 54, 20, 52, 47, 59, 27, 29, 23, 28, 36, 44, 40, 35, 39, 37]
 solution : [0, 8, 11, 15, 6]


Before reduction : 
 pending  : [7, 24, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 53, 54, 20, 52, 47, 59, 27, 29, 23, 28, 36, 44, 40, 35, 39, 37]
 solution : [0, 8, 11, 15, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 64), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 4), (33, 2), (34, 2), (35, -1), (36, -1), (37, -1), (38, 1), (39, -1), (40, -1), (41, -1), (42, 2), (43, 1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 2), (50, -1), (51, 1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, 4), (58, 1), (59, -1), (60, 2), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 64), (37, 1), (38, 256), (39, 16), (40, 4), (41, -1), (42, 4), (43, 256), (44, 4), (45, -1), (46, -1), (47, 2), (48, 32), (49, 128), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [7, 24, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 53, 54, 20, 52, 47, 59, 27, 29, 23, 28, 36, 44, 40, 35, 39, 37]
 solution : [0, 8, 11, 15, 6]


Solution : [0, 8, 11, 15, 6] has cost 21.


Decide in level 17 among pending : [7, 24, 22, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 53, 54, 20, 52, 47, 59, 27, 29, 23, 28, 36, 44, 40, 35, 39, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 64), (37, 1), (38, 256), (39, 16), (40, 4), (41, -1), (42, 4), (43, 256), (44, 4), (45, -1), (46, -1), (47, 2), (48, 32), (49, 128), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

Decide 22 with phase True at level 17

After decision at level 17
 pending : [7, 24, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 53, 54, 20, 52, 47, 59, 27, 29, 23, 28, 36, 44, 40, 35, 39, 37]
 solution : [0, 8, 11, 15, 6, 22]


New level: 18
 pending : [7, 24, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 53, 54, 20, 52, 47, 59, 27, 29, 23, 28, 36, 44, 40, 35, 39, 37]
 solution : [0, 8, 11, 15, 6, 22]


Before reduction : 
 pending  : [7, 24, 38, 17, 4, 58, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 53, 54, 20, 52, 47, 59, 27, 29, 23, 28, 36, 44, 40, 35, 39, 37]
 solution : [0, 8, 11, 15, 6, 22]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, 256), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 64), (37, 1), (38, 256), (39, 16), (40, 4), (41, -1), (42, 4), (43, 256), (44, 4), (45, -1), (46, -1), (47, 2), (48, 32), (49, 128), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 2), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 128), (31, 4), (32, 128), (33, 128), (34, 32), (35, 2), (36, 0), (37, 0), (38, 32), (39, 1), (40, 0), (41, -1), (42, 2), (43, 256), (44, 0), (45, -1), (46, -1), (47, 1), (48, 4), (49, 2), (50, -1), (51, 64), (52, 0), (53, 0), (54, 64), (55, -1), (56, -1), (57, 4), (58, 0), (59, 64), (60, 64), (61, -1)]

Covered at level 18 : {36, 37, 40, 44, 20, 53, 52, 23, 58, 27, 28, 29}

After reduction : 
 pending  : [7, 24, 38, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 35, 39]
 solution : [0, 8, 11, 15, 6, 22]


Before reduction : 
 pending  : [7, 24, 38, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 35, 39]
 solution : [0, 8, 11, 15, 6, 22]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 2), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 128), (31, 4), (32, 128), (33, 128), (34, 32), (35, 2), (36, 0), (37, 0), (38, 32), (39, 1), (40, 0), (41, -1), (42, 2), (43, 256), (44, 0), (45, -1), (46, -1), (47, 1), (48, 4), (49, 2), (50, -1), (51, 64), (52, 0), (53, 0), (54, 64), (55, -1), (56, -1), (57, 4), (58, 0), (59, 64), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 128), (31, 4), (32, 4), (33, 128), (34, 32), (35, 2), (36, -1), (37, -1), (38, 32), (39, 1), (40, -1), (41, -1), (42, 2), (43, 256), (44, -1), (45, -1), (46, -1), (47, 1), (48, 4), (49, 2), (50, -1), (51, 64), (52, -1), (53, -1), (54, 2), (55, -1), (56, -1), (57, 4), (58, -1), (59, 64), (60, 64), (61, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [7, 24, 38, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 35, 39]
 solution : [0, 8, 11, 15, 6, 22]


Solution : [0, 8, 11, 15, 6, 22] has cost 31.


Before backtrack at level 18
 pending : [7, 24, 38, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 35, 39]
 solution : [0, 8, 11, 15, 6, 22]

After backtrack at level 18
 pending : [7, 24, 38, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 35, 39, 58, 53, 20, 52, 27, 29, 23, 28, 36, 44, 40, 37]
 solution : [0, 8, 11, 15, 6, 22]


Invert decision for 22 at level 17


New level: 18
 pending : [7, 24, 38, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 35, 39, 58, 53, 20, 52, 27, 29, 23, 28, 36, 44, 40, 37]
 solution : [0, 8, 11, 15, 6]


Before reduction : 
 pending  : [7, 24, 38, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 35, 39, 58, 53, 20, 52, 27, 29, 23, 28, 36, 44, 40, 37]
 solution : [0, 8, 11, 15, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 128), (31, 4), (32, 4), (33, 128), (34, 32), (35, 2), (36, -1), (37, -1), (38, 32), (39, 1), (40, -1), (41, -1), (42, 2), (43, 256), (44, -1), (45, -1), (46, -1), (47, 1), (48, 4), (49, 2), (50, -1), (51, 64), (52, -1), (53, -1), (54, 2), (55, -1), (56, -1), (57, 4), (58, -1), (59, 64), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 64), (37, 1), (38, 256), (39, 16), (40, 4), (41, -1), (42, 4), (43, 256), (44, 4), (45, -1), (46, -1), (47, 2), (48, 32), (49, 128), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [7, 24, 38, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 35, 39, 58, 53, 20, 52, 27, 29, 23, 28, 36, 44, 40, 37]
 solution : [0, 8, 11, 15, 6]


Solution : [0, 8, 11, 15, 6] has cost 21.


Decide in level 18 among pending : [7, 24, 38, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 35, 39, 58, 53, 20, 52, 27, 29, 23, 28, 36, 44, 40, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 64), (37, 1), (38, 256), (39, 16), (40, 4), (41, -1), (42, 4), (43, 256), (44, 4), (45, -1), (46, -1), (47, 2), (48, 32), (49, 128), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

Decide 38 with phase True at level 18

After decision at level 18
 pending : [7, 24, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 35, 39, 58, 53, 20, 52, 27, 29, 23, 28, 36, 44, 40, 37]
 solution : [0, 8, 11, 15, 6, 38]


New level: 19
 pending : [7, 24, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 35, 39, 58, 53, 20, 52, 27, 29, 23, 28, 36, 44, 40, 37]
 solution : [0, 8, 11, 15, 6, 38]


Before reduction : 
 pending  : [7, 24, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 35, 39, 58, 53, 20, 52, 27, 29, 23, 28, 36, 44, 40, 37]
 solution : [0, 8, 11, 15, 6, 38]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 64), (37, 1), (38, 256), (39, 16), (40, 4), (41, -1), (42, 4), (43, 256), (44, 4), (45, -1), (46, -1), (47, 2), (48, 32), (49, 128), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 4), (21, -1), (22, -1), (23, 2), (24, 16), (25, -1), (26, -1), (27, 64), (28, 2), (29, 1), (30, 128), (31, 8), (32, 128), (33, 64), (34, 16), (35, 0), (36, 64), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 4), (43, 2), (44, 0), (45, -1), (46, -1), (47, 1), (48, 16), (49, 128), (50, -1), (51, 64), (52, 16), (53, 4), (54, 64), (55, -1), (56, -1), (57, 8), (58, 32), (59, 64), (60, 64), (61, -1)]

Covered at level 19 : {35, 37, 39, 40, 44}

After reduction : 
 pending  : [7, 24, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 58, 53, 20, 52, 27, 29, 23, 28, 36]
 solution : [0, 8, 11, 15, 6, 38]


Before reduction : 
 pending  : [7, 24, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 58, 53, 20, 52, 27, 29, 23, 28, 36]
 solution : [0, 8, 11, 15, 6, 38]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 4), (21, -1), (22, -1), (23, 2), (24, 16), (25, -1), (26, -1), (27, 64), (28, 2), (29, 1), (30, 128), (31, 8), (32, 128), (33, 64), (34, 16), (35, 0), (36, 64), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 4), (43, 2), (44, 0), (45, -1), (46, -1), (47, 1), (48, 16), (49, 128), (50, -1), (51, 64), (52, 16), (53, 4), (54, 64), (55, -1), (56, -1), (57, 8), (58, 32), (59, 64), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 4), (21, -1), (22, -1), (23, 2), (24, 16), (25, -1), (26, -1), (27, 64), (28, 2), (29, 1), (30, 128), (31, 8), (32, 128), (33, 64), (34, 16), (35, -1), (36, 64), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 4), (43, 2), (44, -1), (45, -1), (46, -1), (47, 1), (48, 16), (49, 128), (50, -1), (51, 64), (52, 16), (53, 4), (54, 64), (55, -1), (56, -1), (57, 8), (58, 32), (59, 64), (60, 64), (61, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [7, 24, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 58, 53, 20, 52, 27, 29, 23, 28, 36]
 solution : [0, 8, 11, 15, 6, 38]


Solution : [0, 8, 11, 15, 6, 38] has cost 31.


Before backtrack at level 19
 pending : [7, 24, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 58, 53, 20, 52, 27, 29, 23, 28, 36]
 solution : [0, 8, 11, 15, 6, 38]

After backtrack at level 19
 pending : [7, 24, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 58, 53, 20, 52, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]
 solution : [0, 8, 11, 15, 6, 38]


Invert decision for 38 at level 18


New level: 19
 pending : [7, 24, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 58, 53, 20, 52, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]
 solution : [0, 8, 11, 15, 6]


Before reduction : 
 pending  : [7, 24, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 58, 53, 20, 52, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]
 solution : [0, 8, 11, 15, 6]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 4), (21, -1), (22, -1), (23, 2), (24, 16), (25, -1), (26, -1), (27, 64), (28, 2), (29, 1), (30, 128), (31, 8), (32, 128), (33, 64), (34, 16), (35, -1), (36, 64), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 4), (43, 2), (44, -1), (45, -1), (46, -1), (47, 1), (48, 16), (49, 128), (50, -1), (51, 64), (52, 16), (53, 4), (54, 64), (55, -1), (56, -1), (57, 8), (58, 32), (59, 64), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 64), (37, 1), (38, -1), (39, 16), (40, 4), (41, -1), (42, 4), (43, 256), (44, 4), (45, -1), (46, -1), (47, 2), (48, 32), (49, 128), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [7, 24, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 58, 53, 20, 52, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]
 solution : [0, 8, 11, 15, 6]


Solution : [0, 8, 11, 15, 6] has cost 21.


Decide in level 19 among pending : [7, 24, 17, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 58, 53, 20, 52, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 64), (37, 1), (38, -1), (39, 16), (40, 4), (41, -1), (42, 4), (43, 256), (44, 4), (45, -1), (46, -1), (47, 2), (48, 32), (49, 128), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

Decide 17 with phase True at level 19

After decision at level 19
 pending : [7, 24, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 58, 53, 20, 52, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]
 solution : [0, 8, 11, 15, 6, 17]


New level: 20
 pending : [7, 24, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 58, 53, 20, 52, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]
 solution : [0, 8, 11, 15, 6, 17]


Before reduction : 
 pending  : [7, 24, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 54, 47, 59, 58, 53, 20, 52, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]
 solution : [0, 8, 11, 15, 6, 17]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 64), (37, 1), (38, -1), (39, 16), (40, 4), (41, -1), (42, 4), (43, 256), (44, 4), (45, -1), (46, -1), (47, 2), (48, 32), (49, 128), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 32), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 2), (31, 4), (32, 4), (33, 64), (34, 4), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 2), (43, 1), (44, 0), (45, -1), (46, -1), (47, 1), (48, 1), (49, 2), (50, -1), (51, 2), (52, 2), (53, 0), (54, 0), (55, -1), (56, -1), (57, 4), (58, 8), (59, 0), (60, 4), (61, -1)]

Covered at level 20 : {35, 36, 37, 39, 40, 59, 44, 20, 53, 54, 23, 27, 28, 29}

After reduction : 
 pending  : [7, 24, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 58, 52]
 solution : [0, 8, 11, 15, 6, 17]


Before reduction : 
 pending  : [7, 24, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 58, 52]
 solution : [0, 8, 11, 15, 6, 17]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 32), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 2), (31, 4), (32, 4), (33, 64), (34, 4), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 2), (43, 1), (44, 0), (45, -1), (46, -1), (47, 1), (48, 1), (49, 2), (50, -1), (51, 2), (52, 2), (53, 0), (54, 0), (55, -1), (56, -1), (57, 4), (58, 8), (59, 0), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 4), (33, 64), (34, 4), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2), (43, 1), (44, -1), (45, -1), (46, -1), (47, 1), (48, 1), (49, 2), (50, -1), (51, 2), (52, 2), (53, -1), (54, -1), (55, -1), (56, -1), (57, 4), (58, 8), (59, -1), (60, 4), (61, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [7, 24, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 58, 52]
 solution : [0, 8, 11, 15, 6, 17]


Solution : [0, 8, 11, 15, 6, 17] has cost 27.


Before backtrack at level 20
 pending : [7, 24, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 58, 52]
 solution : [0, 8, 11, 15, 6, 17]

After backtrack at level 20
 pending : [7, 24, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 58, 52, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]
 solution : [0, 8, 11, 15, 6, 17]


Invert decision for 17 at level 19


New level: 20
 pending : [7, 24, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 58, 52, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]
 solution : [0, 8, 11, 15, 6]


Before reduction : 
 pending  : [7, 24, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 58, 52, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]
 solution : [0, 8, 11, 15, 6]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 4), (33, 64), (34, 4), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2), (43, 1), (44, -1), (45, -1), (46, -1), (47, 1), (48, 1), (49, 2), (50, -1), (51, 2), (52, 2), (53, -1), (54, -1), (55, -1), (56, -1), (57, 4), (58, 8), (59, -1), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 64), (37, 1), (38, -1), (39, 16), (40, 4), (41, -1), (42, 4), (43, 256), (44, 4), (45, -1), (46, -1), (47, 2), (48, 32), (49, 128), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [7, 24, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 58, 52, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]
 solution : [0, 8, 11, 15, 6]


Solution : [0, 8, 11, 15, 6] has cost 21.


Decide in level 20 among pending : [7, 24, 4, 12, 3, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 58, 52, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 64), (37, 1), (38, -1), (39, 16), (40, 4), (41, -1), (42, 4), (43, 256), (44, 4), (45, -1), (46, -1), (47, 2), (48, 32), (49, 128), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

Decide 3 with phase True at level 20

After decision at level 20
 pending : [7, 24, 4, 12, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 58, 52, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]
 solution : [0, 8, 11, 15, 6, 3]


New level: 21
 pending : [7, 24, 4, 12, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 58, 52, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]
 solution : [0, 8, 11, 15, 6, 3]


Before reduction : 
 pending  : [7, 24, 4, 12, 10, 34, 33, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 58, 52, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]
 solution : [0, 8, 11, 15, 6, 3]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 2), (30, 128), (31, 8), (32, 128), (33, 128), (34, 32), (35, 32), (36, 64), (37, 1), (38, -1), (39, 16), (40, 4), (41, -1), (42, 4), (43, 256), (44, 4), (45, -1), (46, -1), (47, 2), (48, 32), (49, 128), (50, -1), (51, 64), (52, 32), (53, 8), (54, 64), (55, -1), (56, -1), (57, 8), (58, 64), (59, 64), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 32), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 2), (34, 0), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, 0), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, 0), (52, 1), (53, 0), (54, 0), (55, -1), (56, -1), (57, 0), (58, 64), (59, 0), (60, 0), (61, -1)]

Covered at level 21 : {4, 7, 10, 20, 23, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 42, 43, 44, 47, 48, 49, 51, 53, 54, 57, 59, 60}

After reduction : 
 pending  : [24, 12, 33, 58, 52]
 solution : [0, 8, 11, 15, 6, 3]


Before reduction : 
 pending  : [24, 12, 33, 58, 52]
 solution : [0, 8, 11, 15, 6, 3]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 32), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 2), (34, 0), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, 0), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, 0), (52, 1), (53, 0), (54, 0), (55, -1), (56, -1), (57, 0), (58, 64), (59, 0), (60, 0), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 4), (59, -1), (60, -1), (61, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [24, 12, 33, 58, 52]
 solution : [0, 8, 11, 15, 6, 3]


Solution : [0, 8, 11, 15, 6, 3] has cost 27.


Before backtrack at level 21
 pending : [24, 12, 33, 58, 52]
 solution : [0, 8, 11, 15, 6, 3]

After backtrack at level 21
 pending : [24, 12, 33, 58, 52, 7, 4, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]
 solution : [0, 8, 11, 15, 6, 3]


Invert decision for 3 at level 20


New level: 21
 pending : [24, 12, 33, 58, 52, 7, 4, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]
 solution : [0, 8, 11, 15, 6]


Before reduction : 
 pending  : [24, 12, 33, 58, 52, 7, 4, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]
 solution : [0, 8, 11, 15, 6]

Essensial at level 21 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 4), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 32), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 2), (34, 0), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, 0), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, 0), (52, 1), (53, 0), (54, 0), (55, -1), (56, -1), (57, 0), (58, 64), (59, 0), (60, 0), (61, -1)]

Covered at level 21 : {7, 10, 20, 23, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 42, 43, 44, 47, 48, 49, 51, 53, 54, 57, 59, 60}

After reduction : 
 pending  : [24, 12, 33, 58, 52]
 solution : [0, 8, 11, 15, 6, 4]


Before reduction : 
 pending  : [24, 12, 33, 58, 52]
 solution : [0, 8, 11, 15, 6, 4]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 32), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 2), (34, 0), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, 0), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, 0), (52, 1), (53, 0), (54, 0), (55, -1), (56, -1), (57, 0), (58, 64), (59, 0), (60, 0), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 4), (59, -1), (60, -1), (61, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [24, 12, 33, 58, 52]
 solution : [0, 8, 11, 15, 6, 4]


Solution : [0, 8, 11, 15, 6, 4] has cost 30.


Before backtrack at level 21
 pending : [24, 12, 33, 58, 52]
 solution : [0, 8, 11, 15, 6, 4]

After backtrack at level 21
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]
 solution : [0, 8, 11, 15, 6]


Before backtrack at level 20
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37]
 solution : [0, 8, 11, 15, 6]

After backtrack at level 20
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3]
 solution : [0, 8, 11, 15, 6]


Before backtrack at level 19
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3]
 solution : [0, 8, 11, 15, 6]

After backtrack at level 19
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17]
 solution : [0, 8, 11, 15, 6]


Before backtrack at level 18
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17]
 solution : [0, 8, 11, 15, 6]

After backtrack at level 18
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17, 38]
 solution : [0, 8, 11, 15, 6]


Before backtrack at level 17
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17, 38]
 solution : [0, 8, 11, 15, 6]

After backtrack at level 17
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17, 38, 22]
 solution : [0, 8, 11, 15, 6]


Before backtrack at level 16
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17, 38, 22]
 solution : [0, 8, 11, 15, 6]

After backtrack at level 16
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17, 38, 22, 46]
 solution : [0, 8, 11, 15, 6]


Before backtrack at level 15
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17, 38, 22, 46]
 solution : [0, 8, 11, 15, 6]

After backtrack at level 15
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17, 38, 22, 46, 41]
 solution : [0, 8, 11, 15, 6]


Before backtrack at level 14
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17, 38, 22, 46, 41]
 solution : [0, 8, 11, 15, 6]

After backtrack at level 14
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17, 38, 22, 46, 41, 55]
 solution : [0, 8, 11, 15, 6]


Before backtrack at level 13
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17, 38, 22, 46, 41, 55]
 solution : [0, 8, 11, 15, 6]

After backtrack at level 13
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17, 38, 22, 46, 41, 55, 50]
 solution : [0, 8, 11, 15, 6]


Before backtrack at level 12
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17, 38, 22, 46, 41, 55, 50]
 solution : [0, 8, 11, 15, 6]

After backtrack at level 12
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17, 38, 22, 46, 41, 55, 50, 61]
 solution : [0, 8, 11, 15, 6]


Before backtrack at level 11
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17, 38, 22, 46, 41, 55, 50, 61]
 solution : [0, 8, 11, 15, 6]

After backtrack at level 11
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17, 38, 22, 46, 41, 55, 50, 61, 2]
 solution : [0, 8, 11, 15, 6]


Invert decision for 6 at level 10


New level: 11
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17, 38, 22, 46, 41, 55, 50, 61, 2]
 solution : [0, 8, 11, 15]


Before reduction : 
 pending  : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17, 38, 22, 46, 41, 55, 50, 61, 2]
 solution : [0, 8, 11, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 4), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, 256), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, 256), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

Covered at level 11 : set()

After reduction : 
 pending  : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17, 38, 22, 46, 41, 55, 50, 61, 2]
 solution : [0, 8, 11, 15]


Solution : [0, 8, 11, 15] has cost 19.


Decide in level 11 among pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 3, 17, 38, 22, 46, 41, 55, 50, 61, 2]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, 256), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, 256), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

Decide 3 with phase True at level 11

After decision at level 11
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 38, 22, 46, 41, 55, 50, 61, 2]
 solution : [0, 8, 11, 15, 3]


New level: 12
 pending : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 38, 22, 46, 41, 55, 50, 61, 2]
 solution : [0, 8, 11, 15, 3]


Before reduction : 
 pending  : [24, 12, 33, 58, 52, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 38, 22, 46, 41, 55, 50, 61, 2]
 solution : [0, 8, 11, 15, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, 256), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, 256), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, -1), (22, 256), (23, 0), (24, 32), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 2), (34, 0), (35, 0), (36, 0), (37, 0), (38, 256), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, -1), (46, 2), (47, 0), (48, 0), (49, 0), (50, 1), (51, 0), (52, 1), (53, 0), (54, 0), (55, 0), (56, -1), (57, 0), (58, 4), (59, 0), (60, 0), (61, 2)]

Covered at level 12 : {2, 4, 7, 10, 17, 20, 23, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 53, 54, 55, 57, 59, 60}

After reduction : 
 pending  : [24, 12, 33, 58, 52, 38, 22, 46, 50, 61]
 solution : [0, 8, 11, 15, 3]


Before reduction : 
 pending  : [24, 12, 33, 58, 52, 38, 22, 46, 50, 61]
 solution : [0, 8, 11, 15, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, -1), (22, 256), (23, 0), (24, 32), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 2), (34, 0), (35, 0), (36, 0), (37, 0), (38, 256), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, -1), (46, 2), (47, 0), (48, 0), (49, 0), (50, 1), (51, 0), (52, 1), (53, 0), (54, 0), (55, 0), (56, -1), (57, 0), (58, 4), (59, 0), (60, 0), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 256), (23, -1), (24, 32), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 2), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 4), (59, -1), (60, -1), (61, 2)]

Covered at level 12 : set()

After reduction : 
 pending  : [24, 12, 33, 58, 52, 38, 22, 46, 50, 61]
 solution : [0, 8, 11, 15, 3]


Solution : [0, 8, 11, 15, 3] has cost 25.


Before backtrack at level 12
 pending : [24, 12, 33, 58, 52, 38, 22, 46, 50, 61]
 solution : [0, 8, 11, 15, 3]

After backtrack at level 12
 pending : [24, 12, 33, 58, 52, 38, 22, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15, 3]


Invert decision for 3 at level 11


New level: 12
 pending : [24, 12, 33, 58, 52, 38, 22, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15]


Before reduction : 
 pending  : [24, 12, 33, 58, 52, 38, 22, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 256), (23, -1), (24, 32), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 2), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 4), (59, -1), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, 256), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, 256), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

Covered at level 12 : set()

After reduction : 
 pending  : [24, 12, 33, 58, 52, 38, 22, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15]


Solution : [0, 8, 11, 15] has cost 19.


Decide in level 12 among pending : [24, 12, 33, 58, 52, 38, 22, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, 256), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, 256), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

Decide 38 with phase True at level 12

After decision at level 12
 pending : [24, 12, 33, 58, 52, 22, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15, 38]


New level: 13
 pending : [24, 12, 33, 58, 52, 22, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15, 38]


Before reduction : 
 pending  : [24, 12, 33, 58, 52, 22, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15, 38]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, 256), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, 256), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, 128), (23, 8), (24, 16), (25, -1), (26, -1), (27, 64), (28, 2), (29, 8), (30, 128), (31, 8), (32, 128), (33, 64), (34, 64), (35, 32), (36, 128), (37, 4), (38, -1), (39, 16), (40, 4), (41, 256), (42, 4), (43, 128), (44, 32), (45, -1), (46, 128), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 16), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 32), (59, 64), (60, 128), (61, 256)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 12, 33, 58, 52, 22, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15, 38]


Solution : [0, 8, 11, 15, 38] has cost 29.


Before backtrack at level 13
 pending : [24, 12, 33, 58, 52, 22, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15, 38]

After backtrack at level 13
 pending : [24, 12, 33, 58, 52, 22, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15, 38]


Invert decision for 38 at level 12


New level: 13
 pending : [24, 12, 33, 58, 52, 22, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15]


Before reduction : 
 pending  : [24, 12, 33, 58, 52, 22, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, 128), (23, 8), (24, 16), (25, -1), (26, -1), (27, 64), (28, 2), (29, 8), (30, 128), (31, 8), (32, 128), (33, 64), (34, 64), (35, 32), (36, 128), (37, 4), (38, -1), (39, 16), (40, 4), (41, 256), (42, 4), (43, 128), (44, 32), (45, -1), (46, 128), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 16), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 32), (59, 64), (60, 128), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, 256), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, -1), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 12, 33, 58, 52, 22, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15]


Solution : [0, 8, 11, 15] has cost 19.


Decide in level 13 among pending : [24, 12, 33, 58, 52, 22, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, 256), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, -1), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

Decide 22 with phase True at level 13

After decision at level 13
 pending : [24, 12, 33, 58, 52, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15, 22]


New level: 14
 pending : [24, 12, 33, 58, 52, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15, 22]


Before reduction : 
 pending  : [24, 12, 33, 58, 52, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 28, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15, 22]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, 256), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, -1), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 2), (25, -1), (26, -1), (27, 32), (28, 0), (29, 4), (30, 128), (31, 4), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 4), (38, -1), (39, 32), (40, 4), (41, 256), (42, 2), (43, 256), (44, 32), (45, -1), (46, 8), (47, 16), (48, 64), (49, 128), (50, 16), (51, 128), (52, 0), (53, 32), (54, 32), (55, 128), (56, -1), (57, 4), (58, 0), (59, 64), (60, 128), (61, 128)]

Covered at level 14 : {58, 52, 28}

After reduction : 
 pending  : [24, 12, 33, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15, 22]


Before reduction : 
 pending  : [24, 12, 33, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15, 22]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 2), (25, -1), (26, -1), (27, 32), (28, 0), (29, 4), (30, 128), (31, 4), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 4), (38, -1), (39, 32), (40, 4), (41, 256), (42, 2), (43, 256), (44, 32), (45, -1), (46, 8), (47, 16), (48, 64), (49, 128), (50, 16), (51, 128), (52, 0), (53, 32), (54, 32), (55, 128), (56, -1), (57, 4), (58, 0), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 2), (25, -1), (26, -1), (27, 16), (28, -1), (29, 4), (30, 128), (31, 4), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 4), (38, -1), (39, 32), (40, 4), (41, 256), (42, 2), (43, 256), (44, 32), (45, -1), (46, 8), (47, 16), (48, 64), (49, 128), (50, 16), (51, 128), (52, -1), (53, 32), (54, 32), (55, 128), (56, -1), (57, 4), (58, -1), (59, 64), (60, 128), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [24, 12, 33, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15, 22]


Solution : [0, 8, 11, 15, 22] has cost 29.


Before backtrack at level 14
 pending : [24, 12, 33, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2]
 solution : [0, 8, 11, 15, 22]

After backtrack at level 14
 pending : [24, 12, 33, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15, 22]


Invert decision for 22 at level 13


New level: 14
 pending : [24, 12, 33, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15]


Before reduction : 
 pending  : [24, 12, 33, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 2), (25, -1), (26, -1), (27, 16), (28, -1), (29, 4), (30, 128), (31, 4), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 4), (38, -1), (39, 32), (40, 4), (41, 256), (42, 2), (43, 256), (44, 32), (45, -1), (46, 8), (47, 16), (48, 64), (49, 128), (50, 16), (51, 128), (52, -1), (53, 32), (54, 32), (55, 128), (56, -1), (57, 4), (58, -1), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, -1), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

Covered at level 14 : set()

After reduction : 
 pending  : [24, 12, 33, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15]


Solution : [0, 8, 11, 15] has cost 19.


Decide in level 14 among pending : [24, 12, 33, 46, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, -1), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

Decide 46 with phase True at level 14

After decision at level 14
 pending : [24, 12, 33, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15, 46]


New level: 15
 pending : [24, 12, 33, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15, 46]


Before reduction : 
 pending  : [24, 12, 33, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15, 46]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, -1), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, 256), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 16), (25, -1), (26, -1), (27, 16), (28, 0), (29, 4), (30, 64), (31, 4), (32, 64), (33, 2), (34, 64), (35, 32), (36, 128), (37, 4), (38, -1), (39, 16), (40, 4), (41, 128), (42, 2), (43, 128), (44, 32), (45, -1), (46, -1), (47, 8), (48, 32), (49, 128), (50, 1), (51, 128), (52, 0), (53, 16), (54, 32), (55, 256), (56, -1), (57, 4), (58, 1), (59, 64), (60, 128), (61, 2)]

Covered at level 15 : {52, 28}

After reduction : 
 pending  : [24, 12, 33, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58]
 solution : [0, 8, 11, 15, 46]


Before reduction : 
 pending  : [24, 12, 33, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58]
 solution : [0, 8, 11, 15, 46]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 16), (25, -1), (26, -1), (27, 16), (28, 0), (29, 4), (30, 64), (31, 4), (32, 64), (33, 2), (34, 64), (35, 32), (36, 128), (37, 4), (38, -1), (39, 16), (40, 4), (41, 128), (42, 2), (43, 128), (44, 32), (45, -1), (46, -1), (47, 8), (48, 32), (49, 128), (50, 1), (51, 128), (52, 0), (53, 16), (54, 32), (55, 256), (56, -1), (57, 4), (58, 1), (59, 64), (60, 128), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 16), (25, -1), (26, -1), (27, 16), (28, -1), (29, 4), (30, 64), (31, 4), (32, 64), (33, 2), (34, 64), (35, 32), (36, 128), (37, 4), (38, -1), (39, 16), (40, 4), (41, 128), (42, 2), (43, 128), (44, 32), (45, -1), (46, -1), (47, 8), (48, 32), (49, 128), (50, 1), (51, 128), (52, -1), (53, 16), (54, 32), (55, 256), (56, -1), (57, 4), (58, 1), (59, 64), (60, 128), (61, 2)]

Covered at level 15 : set()

After reduction : 
 pending  : [24, 12, 33, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58]
 solution : [0, 8, 11, 15, 46]


Solution : [0, 8, 11, 15, 46] has cost 29.


Before backtrack at level 15
 pending : [24, 12, 33, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58]
 solution : [0, 8, 11, 15, 46]

After backtrack at level 15
 pending : [24, 12, 33, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15, 46]


Invert decision for 46 at level 14


New level: 15
 pending : [24, 12, 33, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15]


Before reduction : 
 pending  : [24, 12, 33, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 16), (25, -1), (26, -1), (27, 16), (28, -1), (29, 4), (30, 64), (31, 4), (32, 64), (33, 2), (34, 64), (35, 32), (36, 128), (37, 4), (38, -1), (39, 16), (40, 4), (41, 128), (42, 2), (43, 128), (44, 32), (45, -1), (46, -1), (47, 8), (48, 32), (49, 128), (50, 1), (51, 128), (52, -1), (53, 16), (54, 32), (55, 256), (56, -1), (57, 4), (58, 1), (59, 64), (60, 128), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, -1), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, -1), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

Covered at level 15 : set()

After reduction : 
 pending  : [24, 12, 33, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15]


Solution : [0, 8, 11, 15] has cost 19.


Decide in level 15 among pending : [24, 12, 33, 50, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, -1), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, -1), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

Decide 50 with phase True at level 15

After decision at level 15
 pending : [24, 12, 33, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15, 50]


New level: 16
 pending : [24, 12, 33, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15, 50]


Before reduction : 
 pending  : [24, 12, 33, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15, 50]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 8), (24, 32), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, -1), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, -1), (47, 16), (48, 64), (49, 256), (50, 256), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 32), (25, -1), (26, -1), (27, 16), (28, 0), (29, 4), (30, 128), (31, 4), (32, 128), (33, 64), (34, 64), (35, 32), (36, 32), (37, 4), (38, -1), (39, 16), (40, 4), (41, 256), (42, 1), (43, 256), (44, 32), (45, -1), (46, -1), (47, 8), (48, 32), (49, 256), (50, -1), (51, 64), (52, 0), (53, 16), (54, 32), (55, 256), (56, -1), (57, 4), (58, 2), (59, 64), (60, 128), (61, 32)]

Covered at level 16 : {52, 28}

After reduction : 
 pending  : [24, 12, 33, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58]
 solution : [0, 8, 11, 15, 50]


Before reduction : 
 pending  : [24, 12, 33, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58]
 solution : [0, 8, 11, 15, 50]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 32), (25, -1), (26, -1), (27, 16), (28, 0), (29, 4), (30, 128), (31, 4), (32, 128), (33, 64), (34, 64), (35, 32), (36, 32), (37, 4), (38, -1), (39, 16), (40, 4), (41, 256), (42, 1), (43, 256), (44, 32), (45, -1), (46, -1), (47, 8), (48, 32), (49, 256), (50, -1), (51, 64), (52, 0), (53, 16), (54, 32), (55, 256), (56, -1), (57, 4), (58, 2), (59, 64), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 16), (25, -1), (26, -1), (27, 16), (28, -1), (29, 4), (30, 128), (31, 4), (32, 128), (33, 64), (34, 64), (35, 32), (36, 32), (37, 4), (38, -1), (39, 16), (40, 4), (41, 256), (42, 1), (43, 256), (44, 32), (45, -1), (46, -1), (47, 8), (48, 32), (49, 256), (50, -1), (51, 64), (52, -1), (53, 16), (54, 32), (55, 256), (56, -1), (57, 4), (58, 2), (59, 64), (60, 128), (61, 32)]

Covered at level 16 : set()

After reduction : 
 pending  : [24, 12, 33, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58]
 solution : [0, 8, 11, 15, 50]


Solution : [0, 8, 11, 15, 50] has cost 29.


Before backtrack at level 16
 pending : [24, 12, 33, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58]
 solution : [0, 8, 11, 15, 50]

After backtrack at level 16
 pending : [24, 12, 33, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15, 50]


Invert decision for 50 at level 15


New level: 16
 pending : [24, 12, 33, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15]


Before reduction : 
 pending  : [24, 12, 33, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 4), (24, 16), (25, -1), (26, -1), (27, 16), (28, -1), (29, 4), (30, 128), (31, 4), (32, 128), (33, 64), (34, 64), (35, 32), (36, 32), (37, 4), (38, -1), (39, 16), (40, 4), (41, 256), (42, 1), (43, 256), (44, 32), (45, -1), (46, -1), (47, 8), (48, 32), (49, 256), (50, -1), (51, 64), (52, -1), (53, 16), (54, 32), (55, 256), (56, -1), (57, 4), (58, 2), (59, 64), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 8), (24, 16), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, -1), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, -1), (47, 16), (48, 64), (49, 256), (50, -1), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

Covered at level 16 : set()

After reduction : 
 pending  : [24, 12, 33, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15]


Solution : [0, 8, 11, 15] has cost 19.


Decide in level 16 among pending : [24, 12, 33, 61, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 8), (24, 16), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, -1), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, -1), (47, 16), (48, 64), (49, 256), (50, -1), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

Decide 61 with phase True at level 16

After decision at level 16
 pending : [24, 12, 33, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15, 61]


New level: 17
 pending : [24, 12, 33, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15, 61]


Before reduction : 
 pending  : [24, 12, 33, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15, 61]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 8), (24, 16), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, -1), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, -1), (47, 16), (48, 64), (49, 256), (50, -1), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 8), (24, 8), (25, -1), (26, -1), (27, 64), (28, 1), (29, 8), (30, 128), (31, 4), (32, 128), (33, 0), (34, 32), (35, 32), (36, 128), (37, 4), (38, -1), (39, 16), (40, 4), (41, 128), (42, 1), (43, 256), (44, 32), (45, -1), (46, -1), (47, 16), (48, 64), (49, 256), (50, -1), (51, 128), (52, 1), (53, 32), (54, 32), (55, 256), (56, -1), (57, 4), (58, 1), (59, 16), (60, 64), (61, -1)]

Covered at level 17 : {33}

After reduction : 
 pending  : [24, 12, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15, 61]


Before reduction : 
 pending  : [24, 12, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15, 61]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 8), (24, 8), (25, -1), (26, -1), (27, 64), (28, 1), (29, 8), (30, 128), (31, 4), (32, 128), (33, 0), (34, 32), (35, 32), (36, 128), (37, 4), (38, -1), (39, 16), (40, 4), (41, 128), (42, 1), (43, 256), (44, 32), (45, -1), (46, -1), (47, 16), (48, 64), (49, 256), (50, -1), (51, 128), (52, 1), (53, 32), (54, 32), (55, 256), (56, -1), (57, 4), (58, 1), (59, 16), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 8), (24, 8), (25, -1), (26, -1), (27, 64), (28, 1), (29, 8), (30, 128), (31, 4), (32, 128), (33, -1), (34, 32), (35, 32), (36, 128), (37, 4), (38, -1), (39, 16), (40, 4), (41, 128), (42, 1), (43, 256), (44, 32), (45, -1), (46, -1), (47, 16), (48, 64), (49, 256), (50, -1), (51, 128), (52, 1), (53, 32), (54, 32), (55, 256), (56, -1), (57, 4), (58, 1), (59, 16), (60, 64), (61, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [24, 12, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15, 61]


Solution : [0, 8, 11, 15, 61] has cost 29.


Before backtrack at level 17
 pending : [24, 12, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28]
 solution : [0, 8, 11, 15, 61]

After backtrack at level 17
 pending : [24, 12, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28, 33]
 solution : [0, 8, 11, 15, 61]


Invert decision for 61 at level 16


New level: 17
 pending : [24, 12, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28, 33]
 solution : [0, 8, 11, 15]


Before reduction : 
 pending  : [24, 12, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28, 33]
 solution : [0, 8, 11, 15]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 8), (24, 8), (25, -1), (26, -1), (27, 64), (28, 1), (29, 8), (30, 128), (31, 4), (32, 128), (33, -1), (34, 32), (35, 32), (36, 128), (37, 4), (38, -1), (39, 16), (40, 4), (41, 128), (42, 1), (43, 256), (44, 32), (45, -1), (46, -1), (47, 16), (48, 64), (49, 256), (50, -1), (51, 128), (52, 1), (53, 32), (54, 32), (55, 256), (56, -1), (57, 4), (58, 1), (59, 16), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 8), (24, 16), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, -1), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, -1), (47, 16), (48, 64), (49, 256), (50, -1), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [24, 12, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28, 33]
 solution : [0, 8, 11, 15]


Solution : [0, 8, 11, 15] has cost 19.


Decide in level 17 among pending : [24, 12, 4, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28, 33]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 8), (24, 16), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, -1), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, -1), (47, 16), (48, 64), (49, 256), (50, -1), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, -1)]

Decide 4 with phase True at level 17

After decision at level 17
 pending : [24, 12, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28, 33]
 solution : [0, 8, 11, 15, 4]


New level: 18
 pending : [24, 12, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28, 33]
 solution : [0, 8, 11, 15, 4]


Before reduction : 
 pending  : [24, 12, 7, 10, 34, 60, 51, 31, 57, 30, 32, 49, 43, 42, 48, 47, 54, 59, 53, 20, 27, 29, 23, 36, 35, 39, 44, 40, 37, 17, 41, 55, 2, 58, 52, 28, 33]
 solution : [0, 8, 11, 15, 4]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, -1), (22, -1), (23, 8), (24, 16), (25, -1), (26, -1), (27, 64), (28, 4), (29, 8), (30, 128), (31, 8), (32, 128), (33, 128), (34, 64), (35, 64), (36, 128), (37, 8), (38, -1), (39, 32), (40, 8), (41, 256), (42, 4), (43, 256), (44, 32), (45, -1), (46, -1), (47, 16), (48, 64), (49, 256), (50, -1), (51, 128), (52, 32), (53, 32), (54, 64), (55, 256), (56, -1), (57, 8), (58, 64), (59, 64), (60, 128), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 2), (34, 0), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, 0), (41, 4), (42, 0), (43, 0), (44, 1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, 4), (52, 1), (53, 1), (54, 1), (55, 4), (56, -1), (57, 0), (58, 4), (59, 64), (60, 4), (61, -1)]

Covered at level 18 : {7, 10, 20, 23, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 42, 43, 47, 48, 49, 57}

After reduction : 
 pending  : [24, 12, 60, 51, 54, 59, 53, 44, 17, 41, 55, 2, 58, 52, 33]
 solution : [0, 8, 11, 15, 4]


Before reduction : 
 pending  : [24, 12, 60, 51, 54, 59, 53, 44, 17, 41, 55, 2, 58, 52, 33]
 solution : [0, 8, 11, 15, 4]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 2), (34, 0), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, 0), (41, 4), (42, 0), (43, 0), (44, 1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, 4), (52, 1), (53, 1), (54, 1), (55, 4), (56, -1), (57, 0), (58, 4), (59, 64), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 4), (42, -1), (43, -1), (44, 1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4), (52, 1), (53, 1), (54, 1), (55, 4), (56, -1), (57, -1), (58, 4), (59, 1), (60, 4), (61, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [24, 12, 60, 51, 54, 59, 53, 44, 17, 41, 55, 2, 58, 52, 33]
 solution : [0, 8, 11, 15, 4]


Solution : [0, 8, 11, 15, 4] has cost 28.


Before backtrack at level 18
 pending : [24, 12, 60, 51, 54, 59, 53, 44, 17, 41, 55, 2, 58, 52, 33]
 solution : [0, 8, 11, 15, 4]

After backtrack at level 18
 pending : [24, 12, 60, 51, 54, 59, 53, 44, 17, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28]
 solution : [0, 8, 11, 15, 4]


Invert decision for 4 at level 17


New level: 18
 pending : [24, 12, 60, 51, 54, 59, 53, 44, 17, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28]
 solution : [0, 8, 11, 15]


Before reduction : 
 pending  : [24, 12, 60, 51, 54, 59, 53, 44, 17, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28]
 solution : [0, 8, 11, 15]

Essensial at level 18 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 4), (42, -1), (43, -1), (44, 1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4), (52, 1), (53, 1), (54, 1), (55, 4), (56, -1), (57, -1), (58, 4), (59, 1), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 2), (31, 4), (32, 8), (33, 64), (34, 8), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, 0), (41, 4), (42, 2), (43, 1), (44, 0), (45, -1), (46, -1), (47, 2), (48, 2), (49, 2), (50, -1), (51, 4), (52, 2), (53, 0), (54, 0), (55, 8), (56, -1), (57, 4), (58, 8), (59, 0), (60, 8), (61, -1)]

Covered at level 18 : {35, 36, 37, 39, 27, 40, 44, 20, 53, 54, 23, 59, 28, 29}

After reduction : 
 pending  : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47]
 solution : [0, 8, 11, 15, 17]


Before reduction : 
 pending  : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47]
 solution : [0, 8, 11, 15, 17]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 2), (31, 4), (32, 8), (33, 64), (34, 8), (35, 0), (36, 0), (37, 0), (38, -1), (39, 0), (40, 0), (41, 4), (42, 2), (43, 1), (44, 0), (45, -1), (46, -1), (47, 2), (48, 2), (49, 2), (50, -1), (51, 4), (52, 2), (53, 0), (54, 0), (55, 8), (56, -1), (57, 4), (58, 8), (59, 0), (60, 8), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 8), (33, 64), (34, 8), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 4), (42, 2), (43, 1), (44, -1), (45, -1), (46, -1), (47, 2), (48, 2), (49, 2), (50, -1), (51, 4), (52, 2), (53, -1), (54, -1), (55, 8), (56, -1), (57, 4), (58, 8), (59, -1), (60, 8), (61, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47]
 solution : [0, 8, 11, 15, 17]


Solution : [0, 8, 11, 15, 17] has cost 25.


Before backtrack at level 18
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47]
 solution : [0, 8, 11, 15, 17]

After backtrack at level 18
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28]
 solution : [0, 8, 11, 15]


Before backtrack at level 17
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28]
 solution : [0, 8, 11, 15]

After backtrack at level 17
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28, 4]
 solution : [0, 8, 11, 15]


Before backtrack at level 16
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28, 4]
 solution : [0, 8, 11, 15]

After backtrack at level 16
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28, 4, 61]
 solution : [0, 8, 11, 15]


Before backtrack at level 15
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28, 4, 61]
 solution : [0, 8, 11, 15]

After backtrack at level 15
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28, 4, 61, 50]
 solution : [0, 8, 11, 15]


Before backtrack at level 14
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28, 4, 61, 50]
 solution : [0, 8, 11, 15]

After backtrack at level 14
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28, 4, 61, 50, 46]
 solution : [0, 8, 11, 15]


Before backtrack at level 13
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28, 4, 61, 50, 46]
 solution : [0, 8, 11, 15]

After backtrack at level 13
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28, 4, 61, 50, 46, 22]
 solution : [0, 8, 11, 15]


Before backtrack at level 12
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28, 4, 61, 50, 46, 22]
 solution : [0, 8, 11, 15]

After backtrack at level 12
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28, 4, 61, 50, 46, 22, 38]
 solution : [0, 8, 11, 15]


Before backtrack at level 11
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28, 4, 61, 50, 46, 22, 38]
 solution : [0, 8, 11, 15]

After backtrack at level 11
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28, 4, 61, 50, 46, 22, 38, 3]
 solution : [0, 8, 11, 15]


Before backtrack at level 10
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28, 4, 61, 50, 46, 22, 38, 3]
 solution : [0, 8, 11, 15]

After backtrack at level 10
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28, 4, 61, 50, 46, 22, 38, 3, 6]
 solution : [0, 8, 11, 15]


Before backtrack at level 9
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28, 4, 61, 50, 46, 22, 38, 3, 6]
 solution : [0, 8, 11, 15]

After backtrack at level 9
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28, 4, 61, 50, 46, 22, 38, 3, 6, 26, 13, 25, 21, 45, 56, 18]
 solution : [0, 8, 11, 15]


Invert decision for 15 at level 8


New level: 9
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28, 4, 61, 50, 46, 22, 38, 3, 6, 26, 13, 25, 21, 45, 56, 18]
 solution : [0, 8, 11]


Before reduction : 
 pending  : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 17, 54, 59, 53, 44, 20, 27, 29, 23, 36, 35, 39, 40, 37, 28, 4, 61, 50, 46, 22, 38, 3, 6, 26, 13, 25, 21, 45, 56, 18]
 solution : [0, 8, 11]

Essensial at level 9 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 8), (33, 64), (34, 8), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 4), (42, 2), (43, 1), (44, -1), (45, -1), (46, -1), (47, 2), (48, 2), (49, 2), (50, -1), (51, 4), (52, 2), (53, -1), (54, -1), (55, 8), (56, -1), (57, 4), (58, 8), (59, -1), (60, 8), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, 0), (36, 0), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, 0), (45, 16), (46, 256), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, 0), (54, 0), (55, 16), (56, 16), (57, 64), (58, 16), (59, 0), (60, 16), (61, 64)]

Covered at level 9 : {35, 36, 44, 18, 53, 54, 59}

After reduction : 
 pending  : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 4, 61, 50, 46, 22, 38, 3, 6, 26, 13, 25, 21, 45, 56]
 solution : [0, 8, 11, 17]


Before reduction : 
 pending  : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 4, 61, 50, 46, 22, 38, 3, 6, 26, 13, 25, 21, 45, 56]
 solution : [0, 8, 11, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, 0), (36, 0), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, 0), (45, 16), (46, 256), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, 0), (54, 0), (55, 16), (56, 16), (57, 64), (58, 16), (59, 0), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, 256), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

Covered at level 9 : set()

After reduction : 
 pending  : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 4, 61, 50, 46, 22, 38, 3, 6, 26, 13, 25, 21, 45, 56]
 solution : [0, 8, 11, 17]


Solution : [0, 8, 11, 17] has cost 19.


Decide in level 9 among pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 4, 61, 50, 46, 22, 38, 3, 6, 26, 13, 25, 21, 45, 56]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, 256), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

Decide 3 with phase True at level 9

After decision at level 9
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 4, 61, 50, 46, 22, 38, 6, 26, 13, 25, 21, 45, 56]
 solution : [0, 8, 11, 17, 3]


New level: 10
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 4, 61, 50, 46, 22, 38, 6, 26, 13, 25, 21, 45, 56]
 solution : [0, 8, 11, 17, 3]


Before reduction : 
 pending  : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 4, 61, 50, 46, 22, 38, 6, 26, 13, 25, 21, 45, 56]
 solution : [0, 8, 11, 17, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, 256), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 0), (5, -1), (6, 0), (7, 64), (8, -1), (9, -1), (10, 16), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 16), (31, 32), (32, 8), (33, 32), (34, 8), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 4), (42, 64), (43, 32), (44, -1), (45, 16), (46, 128), (47, 64), (48, 64), (49, 16), (50, 16), (51, 4), (52, 16), (53, -1), (54, -1), (55, 8), (56, 16), (57, 32), (58, 16), (59, -1), (60, 8), (61, 32)]

Covered at level 10 : {4, 6}

After reduction : 
 pending  : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56]
 solution : [0, 8, 11, 17, 3]


Before reduction : 
 pending  : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56]
 solution : [0, 8, 11, 17, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 0), (5, -1), (6, 0), (7, 64), (8, -1), (9, -1), (10, 16), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 16), (31, 32), (32, 8), (33, 32), (34, 8), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 4), (42, 64), (43, 32), (44, -1), (45, 16), (46, 128), (47, 64), (48, 64), (49, 16), (50, 16), (51, 4), (52, 16), (53, -1), (54, -1), (55, 8), (56, 16), (57, 32), (58, 16), (59, -1), (60, 8), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 16), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 16), (31, 32), (32, 8), (33, 32), (34, 8), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 4), (42, 64), (43, 32), (44, -1), (45, 16), (46, 128), (47, 64), (48, 64), (49, 16), (50, 16), (51, 4), (52, 16), (53, -1), (54, -1), (55, 8), (56, 16), (57, 32), (58, 16), (59, -1), (60, 8), (61, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56]
 solution : [0, 8, 11, 17, 3]


Solution : [0, 8, 11, 17, 3] has cost 25.


Before backtrack at level 10
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56]
 solution : [0, 8, 11, 17, 3]

After backtrack at level 10
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4, 6]
 solution : [0, 8, 11, 17, 3]


Invert decision for 3 at level 9


New level: 10
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4, 6]
 solution : [0, 8, 11, 17]


Before reduction : 
 pending  : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4, 6]
 solution : [0, 8, 11, 17]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 16), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 16), (31, 32), (32, 8), (33, 32), (34, 8), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 4), (42, 64), (43, 32), (44, -1), (45, 16), (46, 128), (47, 64), (48, 64), (49, 16), (50, 16), (51, 4), (52, 16), (53, -1), (54, -1), (55, 8), (56, 16), (57, 32), (58, 16), (59, -1), (60, 8), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, 256), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4, 6]
 solution : [0, 8, 11, 17]


Solution : [0, 8, 11, 17] has cost 19.


Decide in level 10 among pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4, 6]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, 256), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

Decide 6 with phase True at level 10

After decision at level 10
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4]
 solution : [0, 8, 11, 17, 6]


New level: 11
 pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4]
 solution : [0, 8, 11, 17, 6]


Before reduction : 
 pending  : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4]
 solution : [0, 8, 11, 17, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, 256), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, 256), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4]
 solution : [0, 8, 11, 17, 6]


Solution : [0, 8, 11, 17, 6] has cost 21.


Decide in level 11 among pending : [24, 12, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, 256), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [24, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4]
 solution : [0, 8, 11, 17, 6, 12]


New level: 12
 pending : [24, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4]
 solution : [0, 8, 11, 17, 6, 12]


Before reduction : 
 pending  : [24, 60, 51, 41, 55, 2, 58, 52, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4]
 solution : [0, 8, 11, 17, 6, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, 256), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 8), (23, 4), (24, 32), (25, 64), (26, 64), (27, 4), (28, 2), (29, 4), (30, 32), (31, 64), (32, 4), (33, 8), (34, 16), (35, -1), (36, -1), (37, 8), (38, 4), (39, 8), (40, 8), (41, 2), (42, 128), (43, 64), (44, -1), (45, 8), (46, 64), (47, 128), (48, 128), (49, 32), (50, 2), (51, 2), (52, 0), (53, -1), (54, -1), (55, 4), (56, 4), (57, 64), (58, 0), (59, -1), (60, 16), (61, 8)]

Covered at level 12 : {58, 52}

After reduction : 
 pending  : [24, 60, 51, 41, 55, 2, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4]
 solution : [0, 8, 11, 17, 6, 12]


Before reduction : 
 pending  : [24, 60, 51, 41, 55, 2, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4]
 solution : [0, 8, 11, 17, 6, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 8), (23, 4), (24, 32), (25, 64), (26, 64), (27, 4), (28, 2), (29, 4), (30, 32), (31, 64), (32, 4), (33, 8), (34, 16), (35, -1), (36, -1), (37, 8), (38, 4), (39, 8), (40, 8), (41, 2), (42, 128), (43, 64), (44, -1), (45, 8), (46, 64), (47, 128), (48, 128), (49, 32), (50, 2), (51, 2), (52, 0), (53, -1), (54, -1), (55, 4), (56, 4), (57, 64), (58, 0), (59, -1), (60, 16), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 8), (23, 4), (24, 32), (25, 64), (26, 64), (27, 4), (28, 2), (29, 4), (30, 32), (31, 64), (32, 4), (33, 8), (34, 16), (35, -1), (36, -1), (37, 8), (38, 4), (39, 8), (40, 8), (41, 2), (42, 128), (43, 64), (44, -1), (45, 8), (46, 64), (47, 128), (48, 128), (49, 32), (50, 2), (51, 2), (52, -1), (53, -1), (54, -1), (55, 4), (56, 4), (57, 64), (58, -1), (59, -1), (60, 16), (61, 8)]

Covered at level 12 : set()

After reduction : 
 pending  : [24, 60, 51, 41, 55, 2, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4]
 solution : [0, 8, 11, 17, 6, 12]


Solution : [0, 8, 11, 17, 6, 12] has cost 27.


Before backtrack at level 12
 pending : [24, 60, 51, 41, 55, 2, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4]
 solution : [0, 8, 11, 17, 6, 12]

After backtrack at level 12
 pending : [24, 60, 51, 41, 55, 2, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4, 58, 52]
 solution : [0, 8, 11, 17, 6, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [24, 60, 51, 41, 55, 2, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4, 58, 52]
 solution : [0, 8, 11, 17, 6]


Before reduction : 
 pending  : [24, 60, 51, 41, 55, 2, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 20, 27, 29, 23, 39, 40, 37, 28, 61, 50, 46, 22, 38, 26, 13, 25, 21, 45, 56, 4, 58, 52]
 solution : [0, 8, 11, 17, 6]

Essensial at level 12 : {24, 13}

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 8), (23, 4), (24, 32), (25, 64), (26, 64), (27, 4), (28, 2), (29, 4), (30, 32), (31, 64), (32, 4), (33, 8), (34, 16), (35, -1), (36, -1), (37, 8), (38, 4), (39, 8), (40, 8), (41, 2), (42, 128), (43, 64), (44, -1), (45, 8), (46, 64), (47, 128), (48, 128), (49, 32), (50, 2), (51, 2), (52, -1), (53, -1), (54, -1), (55, 4), (56, 4), (57, 64), (58, -1), (59, -1), (60, 16), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 2), (23, 0), (24, -1), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 2), (31, 4), (32, 4), (33, 64), (34, 4), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, 0), (41, 2), (42, 2), (43, 1), (44, -1), (45, 0), (46, 16), (47, 1), (48, 1), (49, 2), (50, 32), (51, 2), (52, 2), (53, -1), (54, -1), (55, 4), (56, 0), (57, 4), (58, 2), (59, -1), (60, 4), (61, 64)]

Covered at level 12 : {37, 38, 39, 40, 45, 20, 21, 23, 56, 25, 26, 27, 28, 29}

After reduction : 
 pending  : [60, 51, 41, 55, 2, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52]
 solution : [0, 8, 11, 17, 6, 24, 13]


Before reduction : 
 pending  : [60, 51, 41, 55, 2, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52]
 solution : [0, 8, 11, 17, 6, 24, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 2), (23, 0), (24, -1), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 2), (31, 4), (32, 4), (33, 64), (34, 4), (35, -1), (36, -1), (37, 0), (38, 0), (39, 0), (40, 0), (41, 2), (42, 2), (43, 1), (44, -1), (45, 0), (46, 16), (47, 1), (48, 1), (49, 2), (50, 32), (51, 2), (52, 2), (53, -1), (54, -1), (55, 4), (56, 0), (57, 4), (58, 2), (59, -1), (60, 4), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 4), (33, 64), (34, 4), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2), (42, 2), (43, 1), (44, -1), (45, -1), (46, 16), (47, 1), (48, 1), (49, 2), (50, 32), (51, 2), (52, 2), (53, -1), (54, -1), (55, 4), (56, -1), (57, 4), (58, 2), (59, -1), (60, 4), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [60, 51, 41, 55, 2, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52]
 solution : [0, 8, 11, 17, 6, 24, 13]


Solution : [0, 8, 11, 17, 6, 24, 13] has cost 37.


Before backtrack at level 12
 pending : [60, 51, 41, 55, 2, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52]
 solution : [0, 8, 11, 17, 6, 24, 13]

After backtrack at level 12
 pending : [60, 51, 41, 55, 2, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56]
 solution : [0, 8, 11, 17, 6]


Before backtrack at level 11
 pending : [60, 51, 41, 55, 2, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56]
 solution : [0, 8, 11, 17, 6]

After backtrack at level 11
 pending : [60, 51, 41, 55, 2, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12]
 solution : [0, 8, 11, 17, 6]


Invert decision for 6 at level 10


New level: 11
 pending : [60, 51, 41, 55, 2, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12]
 solution : [0, 8, 11, 17]


Before reduction : 
 pending  : [60, 51, 41, 55, 2, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12]
 solution : [0, 8, 11, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 4), (33, 64), (34, 4), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2), (42, 2), (43, 1), (44, -1), (45, -1), (46, 16), (47, 1), (48, 1), (49, 2), (50, 32), (51, 2), (52, 2), (53, -1), (54, -1), (55, 4), (56, -1), (57, 4), (58, 2), (59, -1), (60, 4), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, 256), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [60, 51, 41, 55, 2, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12]
 solution : [0, 8, 11, 17]


Solution : [0, 8, 11, 17] has cost 19.


Decide in level 11 among pending : [60, 51, 41, 55, 2, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, 256), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

Decide 2 with phase True at level 11

After decision at level 11
 pending : [60, 51, 41, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12]
 solution : [0, 8, 11, 17, 2]


New level: 12
 pending : [60, 51, 41, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12]
 solution : [0, 8, 11, 17, 2]


Before reduction : 
 pending  : [60, 51, 41, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12]
 solution : [0, 8, 11, 17, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, 256), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 4), (11, -1), (12, 128), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 4), (24, 128), (25, 64), (26, 64), (27, 4), (28, 32), (29, 4), (30, 32), (31, 64), (32, 4), (33, 64), (34, 8), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 0), (42, 2), (43, 1), (44, -1), (45, 16), (46, 128), (47, 32), (48, 32), (49, 32), (50, 2), (51, 0), (52, 8), (53, -1), (54, -1), (55, 4), (56, 8), (57, 64), (58, 8), (59, -1), (60, 8), (61, 64)]

Covered at level 12 : {41, 51}

After reduction : 
 pending  : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12]
 solution : [0, 8, 11, 17, 2]


Before reduction : 
 pending  : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12]
 solution : [0, 8, 11, 17, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 4), (11, -1), (12, 128), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 4), (24, 128), (25, 64), (26, 64), (27, 4), (28, 32), (29, 4), (30, 32), (31, 64), (32, 4), (33, 64), (34, 8), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 0), (42, 2), (43, 1), (44, -1), (45, 16), (46, 128), (47, 32), (48, 32), (49, 32), (50, 2), (51, 0), (52, 8), (53, -1), (54, -1), (55, 4), (56, 8), (57, 64), (58, 8), (59, -1), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 4), (11, -1), (12, 128), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 4), (24, 128), (25, 64), (26, 64), (27, 4), (28, 32), (29, 4), (30, 32), (31, 64), (32, 4), (33, 64), (34, 8), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, -1), (42, 2), (43, 1), (44, -1), (45, 16), (46, 128), (47, 32), (48, 32), (49, 32), (50, 2), (51, -1), (52, 8), (53, -1), (54, -1), (55, 4), (56, 8), (57, 64), (58, 8), (59, -1), (60, 8), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12]
 solution : [0, 8, 11, 17, 2]


Solution : [0, 8, 11, 17, 2] has cost 25.


Before backtrack at level 12
 pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12]
 solution : [0, 8, 11, 17, 2]

After backtrack at level 12
 pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17, 2]


Invert decision for 2 at level 11


New level: 12
 pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17]


Before reduction : 
 pending  : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 4), (11, -1), (12, 128), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 4), (24, 128), (25, 64), (26, 64), (27, 4), (28, 32), (29, 4), (30, 32), (31, 64), (32, 4), (33, 64), (34, 8), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, -1), (42, 2), (43, 1), (44, -1), (45, 16), (46, 128), (47, 32), (48, 32), (49, 32), (50, 2), (51, -1), (52, 8), (53, -1), (54, -1), (55, 4), (56, 8), (57, 64), (58, 8), (59, -1), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, 256), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17]


Solution : [0, 8, 11, 17] has cost 19.


Decide in level 12 among pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 46, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, 256), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

Decide 46 with phase True at level 12

After decision at level 12
 pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17, 46]


New level: 13
 pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17, 46]


Before reduction : 
 pending  : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17, 46]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, 256), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 128), (23, 8), (24, 64), (25, 64), (26, 64), (27, 8), (28, 16), (29, 8), (30, 16), (31, 64), (32, 16), (33, 32), (34, 16), (35, -1), (36, -1), (37, 8), (38, 16), (39, 8), (40, 8), (41, 8), (42, 128), (43, 32), (44, -1), (45, 16), (46, -1), (47, 64), (48, 64), (49, 16), (50, 16), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17, 46]


Solution : [0, 8, 11, 17, 46] has cost 29.


Before backtrack at level 13
 pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17, 46]

After backtrack at level 13
 pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17, 46]


Invert decision for 46 at level 12


New level: 13
 pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17]


Before reduction : 
 pending  : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 128), (23, 8), (24, 64), (25, 64), (26, 64), (27, 8), (28, 16), (29, 8), (30, 16), (31, 64), (32, 16), (33, 32), (34, 16), (35, -1), (36, -1), (37, 8), (38, 16), (39, 8), (40, 8), (41, 8), (42, 128), (43, 32), (44, -1), (45, 16), (46, -1), (47, 64), (48, 64), (49, 16), (50, 16), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, -1), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

Covered at level 13 : set()

After reduction : 
 pending  : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17]


Solution : [0, 8, 11, 17] has cost 19.


Decide in level 13 among pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 22, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, -1), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

Decide 22 with phase True at level 13

After decision at level 13
 pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17, 22]


New level: 14
 pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17, 22]


Before reduction : 
 pending  : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17, 22]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, 256), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, -1), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, 4), (24, 64), (25, 64), (26, 64), (27, 4), (28, 4), (29, 4), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 4), (38, 4), (39, 4), (40, 4), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, -1), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 8), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 8), (59, -1), (60, 16), (61, 64)]

Covered at level 14 : set()

After reduction : 
 pending  : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17, 22]


Solution : [0, 8, 11, 17, 22] has cost 29.


Before backtrack at level 14
 pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17, 22]

After backtrack at level 14
 pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17, 22]


Invert decision for 22 at level 13


New level: 14
 pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17]


Before reduction : 
 pending  : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, 4), (24, 64), (25, 64), (26, 64), (27, 4), (28, 4), (29, 4), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 4), (38, 4), (39, 4), (40, 4), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, -1), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 8), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 8), (59, -1), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, -1), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, -1), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

Covered at level 14 : set()

After reduction : 
 pending  : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17]


Solution : [0, 8, 11, 17] has cost 19.


Decide in level 14 among pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 4, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, -1), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, -1), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

Decide 4 with phase True at level 14

After decision at level 14
 pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17, 4]


New level: 15
 pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17, 4]


Before reduction : 
 pending  : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, -1), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 32), (31, 64), (32, 16), (33, 64), (34, 16), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 8), (42, 128), (43, 64), (44, -1), (45, 16), (46, -1), (47, 128), (48, 128), (49, 32), (50, 32), (51, 8), (52, 16), (53, -1), (54, -1), (55, 16), (56, 16), (57, 64), (58, 16), (59, -1), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 16), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, -1), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 16), (31, 32), (32, 8), (33, 32), (34, 8), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 4), (42, 128), (43, 64), (44, -1), (45, 16), (46, -1), (47, 64), (48, 64), (49, 16), (50, 16), (51, 4), (52, 16), (53, -1), (54, -1), (55, 8), (56, 16), (57, 32), (58, 16), (59, -1), (60, 8), (61, 32)]

Covered at level 15 : set()

After reduction : 
 pending  : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17, 4]


Solution : [0, 8, 11, 17, 4] has cost 28.


Before backtrack at level 15
 pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17, 4]

After backtrack at level 15
 pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17, 4]


Invert decision for 4 at level 14


New level: 15
 pending : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17]


Before reduction : 
 pending  : [60, 55, 33, 7, 10, 34, 31, 57, 30, 32, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 51, 41]
 solution : [0, 8, 11, 17]

Essensial at level 15 : {10, 7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 16), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 16), (22, -1), (23, 8), (24, 128), (25, 64), (26, 64), (27, 8), (28, 32), (29, 8), (30, 16), (31, 32), (32, 8), (33, 32), (34, 8), (35, -1), (36, -1), (37, 8), (38, 32), (39, 8), (40, 8), (41, 4), (42, 128), (43, 64), (44, -1), (45, 16), (46, -1), (47, 64), (48, 64), (49, 16), (50, 16), (51, 4), (52, 16), (53, -1), (54, -1), (55, 8), (56, 16), (57, 32), (58, 16), (59, -1), (60, 8), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, 4), (24, 128), (25, 64), (26, 64), (27, 4), (28, 32), (29, 4), (30, 2), (31, 4), (32, 0), (33, 4), (34, 0), (35, -1), (36, -1), (37, 4), (38, 32), (39, 4), (40, 4), (41, 0), (42, 128), (43, 64), (44, -1), (45, 8), (46, -1), (47, 2), (48, 2), (49, 2), (50, 2), (51, 0), (52, 8), (53, -1), (54, -1), (55, 0), (56, 8), (57, 4), (58, 8), (59, -1), (60, 0), (61, 4)]

Covered at level 15 : {32, 34, 41, 51, 55, 60}

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12]
 solution : [0, 8, 11, 17, 10, 7]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12]
 solution : [0, 8, 11, 17, 10, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, 4), (24, 128), (25, 64), (26, 64), (27, 4), (28, 32), (29, 4), (30, 2), (31, 4), (32, 0), (33, 4), (34, 0), (35, -1), (36, -1), (37, 4), (38, 32), (39, 4), (40, 4), (41, 0), (42, 128), (43, 64), (44, -1), (45, 8), (46, -1), (47, 2), (48, 2), (49, 2), (50, 2), (51, 0), (52, 8), (53, -1), (54, -1), (55, 0), (56, 8), (57, 4), (58, 8), (59, -1), (60, 0), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, 4), (24, 128), (25, 64), (26, 64), (27, 4), (28, 32), (29, 4), (30, 2), (31, 4), (32, -1), (33, 4), (34, -1), (35, -1), (36, -1), (37, 4), (38, 32), (39, 4), (40, 4), (41, -1), (42, 128), (43, 64), (44, -1), (45, 8), (46, -1), (47, 2), (48, 2), (49, 2), (50, 2), (51, -1), (52, 8), (53, -1), (54, -1), (55, -1), (56, 8), (57, 4), (58, 8), (59, -1), (60, -1), (61, 4)]

Covered at level 15 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12]
 solution : [0, 8, 11, 17, 10, 7]


Solution : [0, 8, 11, 17, 10, 7] has cost 33.


Before backtrack at level 15
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12]
 solution : [0, 8, 11, 17, 10, 7]

After backtrack at level 15
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41]
 solution : [0, 8, 11, 17]


Before backtrack at level 14
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41]
 solution : [0, 8, 11, 17]

After backtrack at level 14
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4]
 solution : [0, 8, 11, 17]


Before backtrack at level 13
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4]
 solution : [0, 8, 11, 17]

After backtrack at level 13
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22]
 solution : [0, 8, 11, 17]


Before backtrack at level 12
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22]
 solution : [0, 8, 11, 17]

After backtrack at level 12
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46]
 solution : [0, 8, 11, 17]


Before backtrack at level 11
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46]
 solution : [0, 8, 11, 17]

After backtrack at level 11
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2]
 solution : [0, 8, 11, 17]


Before backtrack at level 10
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2]
 solution : [0, 8, 11, 17]

After backtrack at level 10
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6]
 solution : [0, 8, 11, 17]


Before backtrack at level 9
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6]
 solution : [0, 8, 11, 17]

After backtrack at level 9
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3]
 solution : [0, 8, 11]


Before backtrack at level 8
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3]
 solution : [0, 8, 11]

After backtrack at level 8
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15]
 solution : [0, 8, 11]


Before backtrack at level 7
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15]
 solution : [0, 8, 11]

After backtrack at level 7
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16]
 solution : [0, 8, 11]


Before backtrack at level 6
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16]
 solution : [0, 8, 11]

After backtrack at level 6
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14]
 solution : [0, 8, 11]


Before backtrack at level 5
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14]
 solution : [0, 8, 11]

After backtrack at level 5
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8, 11]


Invert decision for 11 at level 4


New level: 5
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, 256), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, 4), (24, 128), (25, 64), (26, 64), (27, 4), (28, 32), (29, 4), (30, 2), (31, 4), (32, -1), (33, 4), (34, -1), (35, -1), (36, -1), (37, 4), (38, 32), (39, 4), (40, 4), (41, -1), (42, 128), (43, 64), (44, -1), (45, 8), (46, -1), (47, 2), (48, 2), (49, 2), (50, 2), (51, -1), (52, 8), (53, -1), (54, -1), (55, -1), (56, 8), (57, 4), (58, 8), (59, -1), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 5 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8]


Solution : [0, 8] has cost 7.


Decide in level 5 among pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 13, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]

Coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 13 with phase True at level 5

After decision at level 5
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8, 13]


New level: 6
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8, 13]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 25, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 512), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 32), (22, 256), (23, 256), (24, 64), (25, 0), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 64), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 6 : {25}

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8, 13]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 512), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 32), (22, 256), (23, 256), (24, 64), (25, 0), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 64), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 512), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 64), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 6 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8, 13]


Solution : [0, 8, 13] has cost 13.


Decide in level 6 among pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 21, 45, 56, 12, 7, 10, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]

Coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 512), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 64), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 10 with phase True at level 6

After decision at level 6
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8, 13, 10]


New level: 7
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8, 13, 10]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8, 13, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, 512), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 64), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 32), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 7 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8, 13, 10]


Solution : [0, 8, 13, 10] has cost 18.


Decide in level 7 among pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 6, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 32), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 6 with phase True at level 7

After decision at level 7
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8, 13, 10, 6]


New level: 8
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8, 13, 10, 6]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8, 13, 10, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 32), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 16), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 8 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8, 13, 10, 6]


Solution : [0, 8, 13, 10, 6] has cost 20.


Decide in level 8 among pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 17, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 16), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 17 with phase True at level 8

After decision at level 8
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8, 13, 10, 6, 17]


New level: 9
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8, 13, 10, 6, 17]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 26, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 35, 18, 3, 15, 16, 14, 19]
 solution : [0, 8, 13, 10, 6, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 16), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, 0), (16, 64), (17, -1), (18, 512), (19, 512), (20, 8), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, 0), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 32), (45, 32), (46, 256), (47, 16), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 32), (55, 32), (56, 32), (57, 32), (58, 256), (59, 32), (60, 32), (61, 256)]

Covered at level 9 : {26, 15}

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 35, 18, 3, 16, 14, 19]
 solution : [0, 8, 13, 10, 6, 17]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 35, 18, 3, 16, 14, 19]
 solution : [0, 8, 13, 10, 6, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, 0), (16, 64), (17, -1), (18, 512), (19, 512), (20, 8), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, 0), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 32), (45, 32), (46, 256), (47, 16), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 32), (55, 32), (56, 32), (57, 32), (58, 256), (59, 32), (60, 32), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 64), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 32), (17, -1), (18, 512), (19, 512), (20, 8), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 32), (45, 32), (46, 256), (47, 16), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 32), (55, 32), (56, 32), (57, 32), (58, 256), (59, 32), (60, 32), (61, 256)]

Covered at level 9 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 35, 18, 3, 16, 14, 19]
 solution : [0, 8, 13, 10, 6, 17]


Solution : [0, 8, 13, 10, 6, 17] has cost 26.


Before backtrack at level 9
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 35, 18, 3, 16, 14, 19]
 solution : [0, 8, 13, 10, 6, 17]

After backtrack at level 9
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 35, 18, 3, 16, 14, 19, 26, 15]
 solution : [0, 8, 13, 10, 6, 17]


Invert decision for 17 at level 8


New level: 9
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 35, 18, 3, 16, 14, 19, 26, 15]
 solution : [0, 8, 13, 10, 6]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 35, 18, 3, 16, 14, 19, 26, 15]
 solution : [0, 8, 13, 10, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 64), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 32), (17, -1), (18, 512), (19, 512), (20, 8), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 32), (45, 32), (46, 256), (47, 16), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 32), (55, 32), (56, 32), (57, 32), (58, 256), (59, 32), (60, 32), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, -1), (18, 512), (19, 512), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 16), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 9 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 35, 18, 3, 16, 14, 19, 26, 15]
 solution : [0, 8, 13, 10, 6]


Solution : [0, 8, 13, 10, 6] has cost 20.


Decide in level 9 among pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 35, 18, 3, 16, 14, 19, 26, 15]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, -1), (18, 512), (19, 512), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 16), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 35, 3, 16, 14, 19, 26, 15]
 solution : [0, 8, 13, 10, 6, 18]


New level: 10
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 35, 3, 16, 14, 19, 26, 15]
 solution : [0, 8, 13, 10, 6, 18]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 37, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 35, 3, 16, 14, 19, 26, 15]
 solution : [0, 8, 13, 10, 6, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, -1), (18, 512), (19, 512), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 16), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, -1), (18, -1), (19, 64), (20, 256), (21, 4), (22, 256), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 64), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, 64), (35, 0), (36, 32), (37, 0), (38, 16), (39, 16), (40, 4), (41, 32), (42, 16), (43, 8), (44, 16), (45, 8), (46, 256), (47, 8), (48, 256), (49, 128), (50, 128), (51, 128), (52, 64), (53, 64), (54, 128), (55, 128), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 10 : {35, 37}

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 16, 14, 19, 26, 15]
 solution : [0, 8, 13, 10, 6, 18]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 16, 14, 19, 26, 15]
 solution : [0, 8, 13, 10, 6, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, -1), (18, -1), (19, 64), (20, 256), (21, 4), (22, 256), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 64), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, 64), (35, 0), (36, 32), (37, 0), (38, 16), (39, 16), (40, 4), (41, 32), (42, 16), (43, 8), (44, 16), (45, 8), (46, 256), (47, 8), (48, 256), (49, 128), (50, 128), (51, 128), (52, 64), (53, 64), (54, 128), (55, 128), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, -1), (18, -1), (19, 64), (20, 256), (21, 4), (22, 256), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 64), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, 64), (35, -1), (36, 32), (37, -1), (38, 16), (39, 16), (40, 4), (41, 32), (42, 16), (43, 8), (44, 16), (45, 8), (46, 256), (47, 8), (48, 256), (49, 128), (50, 128), (51, 128), (52, 64), (53, 64), (54, 128), (55, 128), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 16, 14, 19, 26, 15]
 solution : [0, 8, 13, 10, 6, 18]


Solution : [0, 8, 13, 10, 6, 18] has cost 29.


Before backtrack at level 10
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 16, 14, 19, 26, 15]
 solution : [0, 8, 13, 10, 6, 18]

After backtrack at level 10
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 16, 14, 19, 26, 15, 37, 35]
 solution : [0, 8, 13, 10, 6, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 16, 14, 19, 26, 15, 37, 35]
 solution : [0, 8, 13, 10, 6]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 16, 14, 19, 26, 15, 37, 35]
 solution : [0, 8, 13, 10, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, -1), (18, -1), (19, 64), (20, 256), (21, 4), (22, 256), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 64), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, 64), (35, -1), (36, 32), (37, -1), (38, 16), (39, 16), (40, 4), (41, 32), (42, 16), (43, 8), (44, 16), (45, 8), (46, 256), (47, 8), (48, 256), (49, 128), (50, 128), (51, 128), (52, 64), (53, 64), (54, 128), (55, 128), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, -1), (18, -1), (19, 512), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 16), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 16, 14, 19, 26, 15, 37, 35]
 solution : [0, 8, 13, 10, 6]


Solution : [0, 8, 13, 10, 6] has cost 20.


Decide in level 10 among pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 16, 14, 19, 26, 15, 37, 35]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, -1), (18, -1), (19, 512), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 16), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 16 with phase True at level 10

After decision at level 10
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 14, 19, 26, 15, 37, 35]
 solution : [0, 8, 13, 10, 6, 16]


New level: 11
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 14, 19, 26, 15, 37, 35]
 solution : [0, 8, 13, 10, 6, 16]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 24, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 14, 19, 26, 15, 37, 35]
 solution : [0, 8, 13, 10, 6, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, -1), (18, -1), (19, 512), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 16), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, -1), (14, 0), (15, 64), (16, -1), (17, -1), (18, -1), (19, 512), (20, 256), (21, 8), (22, 8), (23, 256), (24, 0), (25, -1), (26, 32), (27, 128), (28, 8), (29, 64), (30, 128), (31, 32), (32, 32), (33, 16), (34, 128), (35, 128), (36, 128), (37, 64), (38, 4), (39, 256), (40, 128), (41, 64), (42, 64), (43, 256), (44, 32), (45, 32), (46, 16), (47, 16), (48, 256), (49, 256), (50, 32), (51, 256), (52, 16), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 32), (59, 256), (60, 256), (61, 32)]

Covered at level 11 : {24, 14}

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 26, 15, 37, 35]
 solution : [0, 8, 13, 10, 6, 16]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 26, 15, 37, 35]
 solution : [0, 8, 13, 10, 6, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, -1), (14, 0), (15, 64), (16, -1), (17, -1), (18, -1), (19, 512), (20, 256), (21, 8), (22, 8), (23, 256), (24, 0), (25, -1), (26, 32), (27, 128), (28, 8), (29, 64), (30, 128), (31, 32), (32, 32), (33, 16), (34, 128), (35, 128), (36, 128), (37, 64), (38, 4), (39, 256), (40, 128), (41, 64), (42, 64), (43, 256), (44, 32), (45, 32), (46, 16), (47, 16), (48, 256), (49, 256), (50, 32), (51, 256), (52, 16), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 32), (59, 256), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, -1), (19, 512), (20, 256), (21, 8), (22, 8), (23, 256), (24, -1), (25, -1), (26, 32), (27, 128), (28, 8), (29, 64), (30, 128), (31, 32), (32, 32), (33, 16), (34, 128), (35, 128), (36, 128), (37, 64), (38, 4), (39, 256), (40, 128), (41, 64), (42, 64), (43, 256), (44, 32), (45, 32), (46, 16), (47, 16), (48, 256), (49, 256), (50, 32), (51, 256), (52, 16), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 32), (59, 256), (60, 256), (61, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 26, 15, 37, 35]
 solution : [0, 8, 13, 10, 6, 16]


Solution : [0, 8, 13, 10, 6, 16] has cost 26.


Before backtrack at level 11
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 26, 15, 37, 35]
 solution : [0, 8, 13, 10, 6, 16]

After backtrack at level 11
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 26, 15, 37, 35, 24, 14]
 solution : [0, 8, 13, 10, 6, 16]


Invert decision for 16 at level 10


New level: 11
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 26, 15, 37, 35, 24, 14]
 solution : [0, 8, 13, 10, 6]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 26, 15, 37, 35, 24, 14]
 solution : [0, 8, 13, 10, 6]

Essensial at level 11 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, -1), (19, 512), (20, 256), (21, 8), (22, 8), (23, 256), (24, -1), (25, -1), (26, 32), (27, 128), (28, 8), (29, 64), (30, 128), (31, 32), (32, 32), (33, 16), (34, 128), (35, 128), (36, 128), (37, 64), (38, 4), (39, 256), (40, 128), (41, 64), (42, 64), (43, 256), (44, 32), (45, 32), (46, 16), (47, 16), (48, 256), (49, 256), (50, 32), (51, 256), (52, 16), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 32), (59, 256), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, 512), (20, 16), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, 0), (27, 64), (28, 8), (29, 64), (30, 128), (31, 16), (32, 128), (33, 128), (34, 32), (35, 128), (36, 128), (37, 64), (38, 256), (39, 16), (40, 128), (41, 256), (42, 64), (43, 256), (44, 128), (45, 32), (46, 256), (47, 16), (48, 32), (49, 256), (50, 256), (51, 64), (52, 128), (53, 32), (54, 256), (55, 256), (56, 32), (57, 32), (58, 256), (59, 128), (60, 64), (61, 256)]

Covered at level 11 : {26}

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 37, 35, 24, 14]
 solution : [0, 8, 13, 10, 6, 15]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 37, 35, 24, 14]
 solution : [0, 8, 13, 10, 6, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, 512), (20, 16), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, 0), (27, 64), (28, 8), (29, 64), (30, 128), (31, 16), (32, 128), (33, 128), (34, 32), (35, 128), (36, 128), (37, 64), (38, 256), (39, 16), (40, 128), (41, 256), (42, 64), (43, 256), (44, 128), (45, 32), (46, 256), (47, 16), (48, 32), (49, 256), (50, 256), (51, 64), (52, 128), (53, 32), (54, 256), (55, 256), (56, 32), (57, 32), (58, 256), (59, 128), (60, 64), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, 512), (20, 16), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 64), (28, 8), (29, 64), (30, 128), (31, 16), (32, 128), (33, 128), (34, 32), (35, 128), (36, 128), (37, 64), (38, 256), (39, 16), (40, 128), (41, 256), (42, 64), (43, 256), (44, 128), (45, 32), (46, 256), (47, 16), (48, 32), (49, 256), (50, 256), (51, 64), (52, 128), (53, 32), (54, 256), (55, 256), (56, 32), (57, 32), (58, 256), (59, 128), (60, 64), (61, 256)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 37, 35, 24, 14]
 solution : [0, 8, 13, 10, 6, 15]


Solution : [0, 8, 13, 10, 6, 15] has cost 26.


Before backtrack at level 11
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 37, 35, 24, 14]
 solution : [0, 8, 13, 10, 6, 15]

After backtrack at level 11
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 37, 35, 24, 14, 15, 26]
 solution : [0, 8, 13, 10, 6]


Before backtrack at level 10
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 37, 35, 24, 14, 15, 26]
 solution : [0, 8, 13, 10, 6]

After backtrack at level 10
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 37, 35, 24, 14, 15, 26, 16]
 solution : [0, 8, 13, 10, 6]


Before backtrack at level 9
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 37, 35, 24, 14, 15, 26, 16]
 solution : [0, 8, 13, 10, 6]

After backtrack at level 9
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 37, 35, 24, 14, 15, 26, 16, 18]
 solution : [0, 8, 13, 10, 6]


Before backtrack at level 8
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 37, 35, 24, 14, 15, 26, 16, 18]
 solution : [0, 8, 13, 10, 6]

After backtrack at level 8
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 37, 35, 24, 14, 15, 26, 16, 18, 17]
 solution : [0, 8, 13, 10, 6]


Invert decision for 6 at level 7


New level: 8
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 37, 35, 24, 14, 15, 26, 16, 18, 17]
 solution : [0, 8, 13, 10]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 37, 35, 24, 14, 15, 26, 16, 18, 17]
 solution : [0, 8, 13, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, 512), (20, 16), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 64), (28, 8), (29, 64), (30, 128), (31, 16), (32, 128), (33, 128), (34, 32), (35, 128), (36, 128), (37, 64), (38, 256), (39, 16), (40, 128), (41, 256), (42, 64), (43, 256), (44, 128), (45, 32), (46, 256), (47, 16), (48, 32), (49, 256), (50, 256), (51, 64), (52, 128), (53, 32), (54, 256), (55, 256), (56, 32), (57, 32), (58, 256), (59, 128), (60, 64), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 32), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 8 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 37, 35, 24, 14, 15, 26, 16, 18, 17]
 solution : [0, 8, 13, 10]


Solution : [0, 8, 13, 10] has cost 18.


Decide in level 8 among pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 3, 19, 37, 35, 24, 14, 15, 26, 16, 18, 17]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 32), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 3 with phase True at level 8

After decision at level 8
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 19, 37, 35, 24, 14, 15, 26, 16, 18, 17]
 solution : [0, 8, 13, 10, 3]


New level: 9
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 19, 37, 35, 24, 14, 15, 26, 16, 18, 17]
 solution : [0, 8, 13, 10, 3]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 47, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 21, 45, 56, 12, 7, 60, 55, 34, 32, 51, 41, 4, 22, 46, 2, 54, 59, 53, 44, 36, 19, 37, 35, 24, 14, 15, 26, 16, 18, 17]
 solution : [0, 8, 13, 10, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 32), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 0), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 4), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 16), (36, 8), (37, 8), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, 0), (48, 64), (49, 16), (50, 64), (51, 64), (52, 32), (53, 32), (54, 256), (55, 64), (56, 128), (57, 32), (58, 256), (59, 256), (60, 64), (61, 64)]

Covered at level 9 : {4, 7, 21, 47}

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 36, 19, 37, 35, 24, 14, 15, 26, 16, 18, 17]
 solution : [0, 8, 13, 10, 3]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 36, 19, 37, 35, 24, 14, 15, 26, 16, 18, 17]
 solution : [0, 8, 13, 10, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 0), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 4), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 16), (36, 8), (37, 8), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, 0), (48, 64), (49, 16), (50, 64), (51, 64), (52, 32), (53, 32), (54, 256), (55, 64), (56, 128), (57, 32), (58, 256), (59, 256), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, -1), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 4), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 16), (36, 8), (37, 8), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, -1), (48, 64), (49, 16), (50, 64), (51, 64), (52, 32), (53, 32), (54, 256), (55, 64), (56, 128), (57, 32), (58, 256), (59, 256), (60, 64), (61, 64)]

Covered at level 9 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 36, 19, 37, 35, 24, 14, 15, 26, 16, 18, 17]
 solution : [0, 8, 13, 10, 3]


Solution : [0, 8, 13, 10, 3] has cost 24.


Before backtrack at level 9
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 36, 19, 37, 35, 24, 14, 15, 26, 16, 18, 17]
 solution : [0, 8, 13, 10, 3]

After backtrack at level 9
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 36, 19, 37, 35, 24, 14, 15, 26, 16, 18, 17, 47, 21, 7, 4]
 solution : [0, 8, 13, 10, 3]


Invert decision for 3 at level 8


New level: 9
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 36, 19, 37, 35, 24, 14, 15, 26, 16, 18, 17, 47, 21, 7, 4]
 solution : [0, 8, 13, 10]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 36, 19, 37, 35, 24, 14, 15, 26, 16, 18, 17, 47, 21, 7, 4]
 solution : [0, 8, 13, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, -1), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 4), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 16), (36, 8), (37, 8), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, -1), (48, 64), (49, 16), (50, 64), (51, 64), (52, 32), (53, 32), (54, 256), (55, 64), (56, 128), (57, 32), (58, 256), (59, 256), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 32), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 9 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 36, 19, 37, 35, 24, 14, 15, 26, 16, 18, 17, 47, 21, 7, 4]
 solution : [0, 8, 13, 10]


Solution : [0, 8, 13, 10] has cost 18.


Decide in level 9 among pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 36, 19, 37, 35, 24, 14, 15, 26, 16, 18, 17, 47, 21, 7, 4]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 32), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 36, 37, 35, 24, 14, 15, 26, 16, 18, 17, 47, 21, 7, 4]
 solution : [0, 8, 13, 10, 19]


New level: 10
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 36, 37, 35, 24, 14, 15, 26, 16, 18, 17, 47, 21, 7, 4]
 solution : [0, 8, 13, 10, 19]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 29, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 36, 37, 35, 24, 14, 15, 26, 16, 18, 17, 47, 21, 7, 4]
 solution : [0, 8, 13, 10, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 32), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 256), (19, -1), (20, 256), (21, 2), (22, 256), (23, 32), (24, 64), (25, -1), (26, 64), (27, 32), (28, 16), (29, 0), (30, 16), (31, 32), (32, 64), (33, 128), (34, 128), (35, 64), (36, 0), (37, 32), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 8), (48, 256), (49, 32), (50, 64), (51, 64), (52, 32), (53, 32), (54, 128), (55, 128), (56, 64), (57, 64), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 10 : {36, 29}

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 24, 14, 15, 26, 16, 18, 17, 47, 21, 7, 4]
 solution : [0, 8, 13, 10, 19]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 24, 14, 15, 26, 16, 18, 17, 47, 21, 7, 4]
 solution : [0, 8, 13, 10, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 256), (19, -1), (20, 256), (21, 2), (22, 256), (23, 32), (24, 64), (25, -1), (26, 64), (27, 32), (28, 16), (29, 0), (30, 16), (31, 32), (32, 64), (33, 128), (34, 128), (35, 64), (36, 0), (37, 32), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 8), (48, 256), (49, 32), (50, 64), (51, 64), (52, 32), (53, 32), (54, 128), (55, 128), (56, 64), (57, 64), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 256), (19, -1), (20, 256), (21, 2), (22, 256), (23, 32), (24, 64), (25, -1), (26, 64), (27, 32), (28, 16), (29, -1), (30, 16), (31, 32), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 32), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 8), (48, 256), (49, 32), (50, 64), (51, 64), (52, 32), (53, 32), (54, 128), (55, 128), (56, 64), (57, 64), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 24, 14, 15, 26, 16, 18, 17, 47, 21, 7, 4]
 solution : [0, 8, 13, 10, 19]


Solution : [0, 8, 13, 10, 19] has cost 27.


Before backtrack at level 10
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 24, 14, 15, 26, 16, 18, 17, 47, 21, 7, 4]
 solution : [0, 8, 13, 10, 19]

After backtrack at level 10
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 24, 14, 15, 26, 16, 18, 17, 47, 21, 7, 4, 29, 36]
 solution : [0, 8, 13, 10, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 24, 14, 15, 26, 16, 18, 17, 47, 21, 7, 4, 29, 36]
 solution : [0, 8, 13, 10]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 24, 14, 15, 26, 16, 18, 17, 47, 21, 7, 4, 29, 36]
 solution : [0, 8, 13, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 256), (19, -1), (20, 256), (21, 2), (22, 256), (23, 32), (24, 64), (25, -1), (26, 64), (27, 32), (28, 16), (29, -1), (30, 16), (31, 32), (32, 64), (33, 128), (34, 128), (35, 64), (36, -1), (37, 32), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 8), (48, 256), (49, 32), (50, 64), (51, 64), (52, 32), (53, 32), (54, 128), (55, 128), (56, 64), (57, 64), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, -1), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 32), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 24, 14, 15, 26, 16, 18, 17, 47, 21, 7, 4, 29, 36]
 solution : [0, 8, 13, 10]


Solution : [0, 8, 13, 10] has cost 18.


Decide in level 10 among pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 24, 14, 15, 26, 16, 18, 17, 47, 21, 7, 4, 29, 36]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, -1), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 32), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 16 with phase True at level 10

After decision at level 10
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 24, 14, 15, 26, 18, 17, 47, 21, 7, 4, 29, 36]
 solution : [0, 8, 13, 10, 16]


New level: 11
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 24, 14, 15, 26, 18, 17, 47, 21, 7, 4, 29, 36]
 solution : [0, 8, 13, 10, 16]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 24, 14, 15, 26, 18, 17, 47, 21, 7, 4, 29, 36]
 solution : [0, 8, 13, 10, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, -1), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 32), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, -1), (14, 0), (15, 64), (16, -1), (17, 256), (18, 512), (19, -1), (20, 256), (21, 8), (22, 8), (23, 256), (24, 0), (25, -1), (26, 32), (27, 128), (28, 8), (29, 64), (30, 128), (31, 32), (32, 64), (33, 16), (34, 128), (35, 128), (36, 128), (37, 64), (38, 4), (39, 256), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 256), (52, 16), (53, 128), (54, 128), (55, 128), (56, 64), (57, 64), (58, 32), (59, 256), (60, 256), (61, 32)]

Covered at level 11 : {24, 14}

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 15, 26, 18, 17, 47, 21, 7, 4, 29, 36]
 solution : [0, 8, 13, 10, 16]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 15, 26, 18, 17, 47, 21, 7, 4, 29, 36]
 solution : [0, 8, 13, 10, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, -1), (14, 0), (15, 64), (16, -1), (17, 256), (18, 512), (19, -1), (20, 256), (21, 8), (22, 8), (23, 256), (24, 0), (25, -1), (26, 32), (27, 128), (28, 8), (29, 64), (30, 128), (31, 32), (32, 64), (33, 16), (34, 128), (35, 128), (36, 128), (37, 64), (38, 4), (39, 256), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 256), (52, 16), (53, 128), (54, 128), (55, 128), (56, 64), (57, 64), (58, 32), (59, 256), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, -1), (14, -1), (15, 64), (16, -1), (17, 256), (18, 512), (19, -1), (20, 256), (21, 8), (22, 8), (23, 256), (24, -1), (25, -1), (26, 32), (27, 128), (28, 8), (29, 64), (30, 128), (31, 32), (32, 64), (33, 16), (34, 128), (35, 128), (36, 128), (37, 64), (38, 4), (39, 256), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 256), (52, 16), (53, 128), (54, 128), (55, 128), (56, 64), (57, 64), (58, 32), (59, 256), (60, 256), (61, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 15, 26, 18, 17, 47, 21, 7, 4, 29, 36]
 solution : [0, 8, 13, 10, 16]


Solution : [0, 8, 13, 10, 16] has cost 24.


Before backtrack at level 11
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 15, 26, 18, 17, 47, 21, 7, 4, 29, 36]
 solution : [0, 8, 13, 10, 16]

After backtrack at level 11
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 15, 26, 18, 17, 47, 21, 7, 4, 29, 36, 24, 14]
 solution : [0, 8, 13, 10, 16]


Invert decision for 16 at level 10


New level: 11
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 15, 26, 18, 17, 47, 21, 7, 4, 29, 36, 24, 14]
 solution : [0, 8, 13, 10]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 15, 26, 18, 17, 47, 21, 7, 4, 29, 36, 24, 14]
 solution : [0, 8, 13, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, -1), (14, -1), (15, 64), (16, -1), (17, 256), (18, 512), (19, -1), (20, 256), (21, 8), (22, 8), (23, 256), (24, -1), (25, -1), (26, 32), (27, 128), (28, 8), (29, 64), (30, 128), (31, 32), (32, 64), (33, 16), (34, 128), (35, 128), (36, 128), (37, 64), (38, 4), (39, 256), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 256), (52, 16), (53, 128), (54, 128), (55, 128), (56, 64), (57, 64), (58, 32), (59, 256), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 512), (18, 512), (19, -1), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 32), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 15, 26, 18, 17, 47, 21, 7, 4, 29, 36, 24, 14]
 solution : [0, 8, 13, 10]


Solution : [0, 8, 13, 10] has cost 18.


Decide in level 11 among pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 15, 26, 18, 17, 47, 21, 7, 4, 29, 36, 24, 14]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 512), (18, 512), (19, -1), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 32), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 15, 26, 17, 47, 21, 7, 4, 29, 36, 24, 14]
 solution : [0, 8, 13, 10, 18]


New level: 12
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 15, 26, 17, 47, 21, 7, 4, 29, 36, 24, 14]
 solution : [0, 8, 13, 10, 18]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 37, 35, 15, 26, 17, 47, 21, 7, 4, 29, 36, 24, 14]
 solution : [0, 8, 13, 10, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 512), (18, 512), (19, -1), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 32), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 4), (22, 256), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 64), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, 64), (35, 0), (36, 32), (37, 0), (38, 16), (39, 16), (40, 4), (41, 32), (42, 16), (43, 8), (44, 16), (45, 8), (46, 256), (47, 16), (48, 256), (49, 128), (50, 128), (51, 128), (52, 64), (53, 64), (54, 128), (55, 128), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 12 : {35, 37}

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 15, 26, 17, 47, 21, 7, 4, 29, 36, 24, 14]
 solution : [0, 8, 13, 10, 18]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 15, 26, 17, 47, 21, 7, 4, 29, 36, 24, 14]
 solution : [0, 8, 13, 10, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 4), (22, 256), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 64), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, 64), (35, 0), (36, 32), (37, 0), (38, 16), (39, 16), (40, 4), (41, 32), (42, 16), (43, 8), (44, 16), (45, 8), (46, 256), (47, 16), (48, 256), (49, 128), (50, 128), (51, 128), (52, 64), (53, 64), (54, 128), (55, 128), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 4), (22, 256), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 64), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, 64), (35, -1), (36, 32), (37, -1), (38, 16), (39, 16), (40, 4), (41, 32), (42, 16), (43, 8), (44, 16), (45, 8), (46, 256), (47, 16), (48, 256), (49, 128), (50, 128), (51, 128), (52, 64), (53, 64), (54, 128), (55, 128), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 15, 26, 17, 47, 21, 7, 4, 29, 36, 24, 14]
 solution : [0, 8, 13, 10, 18]


Solution : [0, 8, 13, 10, 18] has cost 27.


Before backtrack at level 12
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 15, 26, 17, 47, 21, 7, 4, 29, 36, 24, 14]
 solution : [0, 8, 13, 10, 18]

After backtrack at level 12
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 15, 26, 17, 47, 21, 7, 4, 29, 36, 24, 14, 37, 35]
 solution : [0, 8, 13, 10, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 15, 26, 17, 47, 21, 7, 4, 29, 36, 24, 14, 37, 35]
 solution : [0, 8, 13, 10]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 15, 26, 17, 47, 21, 7, 4, 29, 36, 24, 14, 37, 35]
 solution : [0, 8, 13, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 4), (22, 256), (23, 128), (24, 64), (25, -1), (26, 64), (27, 128), (28, 64), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, 64), (35, -1), (36, 32), (37, -1), (38, 16), (39, 16), (40, 4), (41, 32), (42, 16), (43, 8), (44, 16), (45, 8), (46, 256), (47, 16), (48, 256), (49, 128), (50, 128), (51, 128), (52, 64), (53, 64), (54, 128), (55, 128), (56, 64), (57, 64), (58, 64), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 32), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 12 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 15, 26, 17, 47, 21, 7, 4, 29, 36, 24, 14, 37, 35]
 solution : [0, 8, 13, 10]


Solution : [0, 8, 13, 10] has cost 18.


Decide in level 12 among pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 15, 26, 17, 47, 21, 7, 4, 29, 36, 24, 14, 37, 35]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 32), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 15, 26, 47, 21, 7, 4, 29, 36, 24, 14, 37, 35]
 solution : [0, 8, 13, 10, 17]


New level: 13
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 15, 26, 47, 21, 7, 4, 29, 36, 24, 14, 37, 35]
 solution : [0, 8, 13, 10, 17]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 15, 26, 47, 21, 7, 4, 29, 36, 24, 14, 37, 35]
 solution : [0, 8, 13, 10, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, 8), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 32), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, 0), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 32), (33, 128), (34, 32), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 32), (45, 32), (46, 256), (47, 32), (48, 32), (49, 256), (50, 256), (51, 64), (52, 128), (53, 16), (54, 32), (55, 64), (56, 32), (57, 32), (58, 256), (59, 32), (60, 64), (61, 256)]

Covered at level 13 : {26, 15}

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 47, 21, 7, 4, 29, 36, 24, 14, 37, 35]
 solution : [0, 8, 13, 10, 17]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 47, 21, 7, 4, 29, 36, 24, 14, 37, 35]
 solution : [0, 8, 13, 10, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, 0), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 32), (33, 128), (34, 32), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 32), (45, 32), (46, 256), (47, 32), (48, 32), (49, 256), (50, 256), (51, 64), (52, 128), (53, 16), (54, 32), (55, 64), (56, 32), (57, 32), (58, 256), (59, 32), (60, 64), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 32), (33, 128), (34, 32), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 32), (45, 32), (46, 256), (47, 32), (48, 32), (49, 256), (50, 256), (51, 64), (52, 128), (53, 16), (54, 32), (55, 64), (56, 32), (57, 32), (58, 256), (59, 32), (60, 64), (61, 256)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 47, 21, 7, 4, 29, 36, 24, 14, 37, 35]
 solution : [0, 8, 13, 10, 17]


Solution : [0, 8, 13, 10, 17] has cost 24.


Before backtrack at level 13
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 47, 21, 7, 4, 29, 36, 24, 14, 37, 35]
 solution : [0, 8, 13, 10, 17]

After backtrack at level 13
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 47, 21, 7, 4, 29, 36, 24, 14, 37, 35, 15, 26]
 solution : [0, 8, 13, 10, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 47, 21, 7, 4, 29, 36, 24, 14, 37, 35, 15, 26]
 solution : [0, 8, 13, 10]


Before reduction : 
 pending  : [33, 31, 57, 30, 49, 43, 42, 48, 61, 50, 58, 52, 20, 27, 23, 39, 40, 28, 38, 45, 56, 12, 60, 55, 34, 32, 51, 41, 22, 46, 2, 54, 59, 53, 44, 47, 21, 7, 4, 29, 36, 24, 14, 37, 35, 15, 26]
 solution : [0, 8, 13, 10]

Essensial at level 13 : {4, 15}

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 32), (33, 128), (34, 32), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 32), (45, 32), (46, 256), (47, 32), (48, 32), (49, 256), (50, 256), (51, 64), (52, 128), (53, 16), (54, 32), (55, 64), (56, 32), (57, 32), (58, 256), (59, 32), (60, 64), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 16), (23, 16), (24, 16), (25, -1), (26, 0), (27, 0), (28, 0), (29, 2), (30, 0), (31, 0), (32, 0), (33, 4), (34, 0), (35, 8), (36, 2), (37, 8), (38, 64), (39, 0), (40, 16), (41, 256), (42, 16), (43, 8), (44, 128), (45, 16), (46, 4), (47, 0), (48, 0), (49, 4), (50, 128), (51, 32), (52, 128), (53, 16), (54, 256), (55, 256), (56, 32), (57, 8), (58, 256), (59, 64), (60, 32), (61, 256)]

Covered at level 13 : {32, 34, 39, 7, 47, 48, 20, 21, 26, 27, 28, 30, 31}

After reduction : 
 pending  : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35]
 solution : [0, 8, 13, 10, 4, 15]


Before reduction : 
 pending  : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35]
 solution : [0, 8, 13, 10, 4, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 16), (23, 16), (24, 16), (25, -1), (26, 0), (27, 0), (28, 0), (29, 2), (30, 0), (31, 0), (32, 0), (33, 4), (34, 0), (35, 8), (36, 2), (37, 8), (38, 64), (39, 0), (40, 16), (41, 256), (42, 16), (43, 8), (44, 128), (45, 16), (46, 4), (47, 0), (48, 0), (49, 4), (50, 128), (51, 32), (52, 128), (53, 16), (54, 256), (55, 256), (56, 32), (57, 8), (58, 256), (59, 64), (60, 32), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 16), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, 8), (36, 2), (37, 8), (38, 64), (39, -1), (40, 16), (41, 256), (42, 16), (43, 8), (44, 128), (45, 16), (46, 4), (47, -1), (48, -1), (49, 4), (50, 128), (51, 32), (52, 128), (53, 16), (54, 256), (55, 256), (56, 32), (57, 8), (58, 256), (59, 64), (60, 32), (61, 256)]

Covered at level 13 : set()

After reduction : 
 pending  : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35]
 solution : [0, 8, 13, 10, 4, 15]


Solution : [0, 8, 13, 10, 4, 15] has cost 33.


Before backtrack at level 13
 pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35]
 solution : [0, 8, 13, 10, 4, 15]

After backtrack at level 13
 pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26]
 solution : [0, 8, 13, 10]


Before backtrack at level 12
 pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26]
 solution : [0, 8, 13, 10]

After backtrack at level 12
 pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26, 17]
 solution : [0, 8, 13, 10]


Before backtrack at level 11
 pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26, 17]
 solution : [0, 8, 13, 10]

After backtrack at level 11
 pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26, 17, 18]
 solution : [0, 8, 13, 10]


Before backtrack at level 10
 pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26, 17, 18]
 solution : [0, 8, 13, 10]

After backtrack at level 10
 pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26, 17, 18, 16]
 solution : [0, 8, 13, 10]


Before backtrack at level 9
 pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26, 17, 18, 16]
 solution : [0, 8, 13, 10]

After backtrack at level 9
 pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26, 17, 18, 16, 19]
 solution : [0, 8, 13, 10]


Before backtrack at level 8
 pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26, 17, 18, 16, 19]
 solution : [0, 8, 13, 10]

After backtrack at level 8
 pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26, 17, 18, 16, 19, 3]
 solution : [0, 8, 13, 10]


Before backtrack at level 7
 pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26, 17, 18, 16, 19, 3]
 solution : [0, 8, 13, 10]

After backtrack at level 7
 pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26, 17, 18, 16, 19, 3, 6]
 solution : [0, 8, 13, 10]


Invert decision for 10 at level 6


New level: 7
 pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26, 17, 18, 16, 19, 3, 6]
 solution : [0, 8, 13]


Before reduction : 
 pending  : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26, 17, 18, 16, 19, 3, 6]
 solution : [0, 8, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 16), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, 8), (36, 2), (37, 8), (38, 64), (39, -1), (40, 16), (41, 256), (42, 16), (43, 8), (44, 128), (45, 16), (46, 4), (47, -1), (48, -1), (49, 4), (50, 128), (51, 32), (52, 128), (53, 16), (54, 256), (55, 256), (56, 32), (57, 8), (58, 256), (59, 64), (60, 32), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 64), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 7 : set()

After reduction : 
 pending  : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26, 17, 18, 16, 19, 3, 6]
 solution : [0, 8, 13]


Solution : [0, 8, 13] has cost 13.


Decide in level 7 among pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 2, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26, 17, 18, 16, 19, 3, 6]

Coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 64), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 2 with phase True at level 7

After decision at level 7
 pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26, 17, 18, 16, 19, 3, 6]
 solution : [0, 8, 13, 2]


New level: 8
 pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26, 17, 18, 16, 19, 3, 6]
 solution : [0, 8, 13, 2]


Before reduction : 
 pending  : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 47, 21, 7, 26, 17, 18, 16, 19, 3, 6]
 solution : [0, 8, 13, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 64), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 256), (7, 4), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 0), (22, 256), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 8), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 64), (36, 64), (37, 8), (38, 256), (39, 256), (40, 64), (41, 128), (42, 64), (43, 128), (44, 64), (45, 32), (46, 256), (47, 0), (48, 256), (49, 256), (50, 128), (51, 128), (52, 64), (53, 64), (54, 64), (55, 256), (56, 32), (57, 128), (58, 64), (59, 64), (60, 256), (61, 256)]

Covered at level 8 : {21, 47}

After reduction : 
 pending  : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 7, 26, 17, 18, 16, 19, 3, 6]
 solution : [0, 8, 13, 2]


Before reduction : 
 pending  : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 7, 26, 17, 18, 16, 19, 3, 6]
 solution : [0, 8, 13, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 256), (7, 4), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 0), (22, 256), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 8), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 64), (36, 64), (37, 8), (38, 256), (39, 256), (40, 64), (41, 128), (42, 64), (43, 128), (44, 64), (45, 32), (46, 256), (47, 0), (48, 256), (49, 256), (50, 128), (51, 128), (52, 64), (53, 64), (54, 64), (55, 256), (56, 32), (57, 128), (58, 64), (59, 64), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 256), (7, 4), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, -1), (22, 256), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 8), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 64), (36, 64), (37, 8), (38, 256), (39, 256), (40, 64), (41, 128), (42, 64), (43, 128), (44, 64), (45, 32), (46, 256), (47, -1), (48, 256), (49, 256), (50, 128), (51, 128), (52, 64), (53, 64), (54, 64), (55, 256), (56, 32), (57, 128), (58, 64), (59, 64), (60, 256), (61, 256)]

Covered at level 8 : set()

After reduction : 
 pending  : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 7, 26, 17, 18, 16, 19, 3, 6]
 solution : [0, 8, 13, 2]


Solution : [0, 8, 13, 2] has cost 19.


Decide in level 8 among pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 7, 26, 17, 18, 16, 19, 3, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 256), (7, 4), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, -1), (22, 256), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 8), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 64), (36, 64), (37, 8), (38, 256), (39, 256), (40, 64), (41, 128), (42, 64), (43, 128), (44, 64), (45, 32), (46, 256), (47, -1), (48, 256), (49, 256), (50, 128), (51, 128), (52, 64), (53, 64), (54, 64), (55, 256), (56, 32), (57, 128), (58, 64), (59, 64), (60, 256), (61, 256)]

Decide 17 with phase True at level 8

After decision at level 8
 pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 7, 26, 18, 16, 19, 3, 6]
 solution : [0, 8, 13, 2, 17]


New level: 9
 pending : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 7, 26, 18, 16, 19, 3, 6]
 solution : [0, 8, 13, 2, 17]


Before reduction : 
 pending  : [33, 57, 49, 43, 42, 61, 50, 58, 52, 23, 40, 38, 45, 56, 12, 60, 55, 51, 41, 22, 46, 54, 59, 53, 44, 29, 36, 24, 14, 37, 35, 4, 15, 31, 30, 48, 20, 27, 39, 28, 34, 32, 7, 26, 18, 16, 19, 3, 6]
 solution : [0, 8, 13, 2, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 256), (7, 4), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, -1), (22, 256), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 8), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 64), (36, 64), (37, 8), (38, 256), (39, 256), (40, 64), (41, 128), (42, 64), (43, 128), (44, 64), (45, 32), (46, 256), (47, -1), (48, 256), (49, 256), (50, 128), (51, 128), (52, 64), (53, 64), (54, 64), (55, 256), (56, 32), (57, 128), (58, 64), (59, 64), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, 2), (5, -1), (6, 0), (7, 2), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, 32), (15, 0), (16, 32), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 8), (23, 0), (24, 16), (25, -1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 1), (31, 2), (32, 2), (33, 128), (34, 1), (35, 0), (36, 0), (37, 0), (38, 1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 2), (47, -1), (48, 0), (49, 1), (50, 1), (51, 0), (52, 1), (53, 0), (54, 0), (55, 2), (56, 0), (57, 2), (58, 4), (59, 0), (60, 1), (61, 256)]

Covered at level 9 : {6, 15, 18, 19, 20, 23, 26, 27, 28, 29, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 48, 51, 53, 54, 56, 59}

After reduction : 
 pending  : [33, 57, 49, 61, 50, 58, 52, 38, 12, 60, 55, 22, 46, 24, 14, 4, 31, 30, 34, 32, 7, 16, 3]
 solution : [0, 8, 13, 2, 17]


Before reduction : 
 pending  : [33, 57, 49, 61, 50, 58, 52, 38, 12, 60, 55, 22, 46, 24, 14, 4, 31, 30, 34, 32, 7, 16, 3]
 solution : [0, 8, 13, 2, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, 2), (5, -1), (6, 0), (7, 2), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, 32), (15, 0), (16, 32), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 8), (23, 0), (24, 16), (25, -1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 1), (31, 2), (32, 2), (33, 128), (34, 1), (35, 0), (36, 0), (37, 0), (38, 1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 2), (47, -1), (48, 0), (49, 1), (50, 1), (51, 0), (52, 1), (53, 0), (54, 0), (55, 2), (56, 0), (57, 2), (58, 4), (59, 0), (60, 1), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, 2), (5, -1), (6, -1), (7, 2), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, 32), (15, -1), (16, 32), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1), (31, 2), (32, 2), (33, 128), (34, 1), (35, -1), (36, -1), (37, -1), (38, 1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 2), (47, -1), (48, -1), (49, 1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, 2), (56, -1), (57, 2), (58, 4), (59, -1), (60, 1), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [33, 57, 49, 61, 50, 58, 52, 38, 12, 60, 55, 22, 46, 24, 14, 4, 31, 30, 34, 32, 7, 16, 3]
 solution : [0, 8, 13, 2, 17]


Solution : [0, 8, 13, 2, 17] has cost 25.


Before backtrack at level 9
 pending : [33, 57, 49, 61, 50, 58, 52, 38, 12, 60, 55, 22, 46, 24, 14, 4, 31, 30, 34, 32, 7, 16, 3]
 solution : [0, 8, 13, 2, 17]

After backtrack at level 9
 pending : [33, 57, 49, 61, 50, 58, 52, 38, 12, 60, 55, 22, 46, 24, 14, 4, 31, 30, 34, 32, 7, 16, 3, 43, 42, 23, 40, 45, 56, 51, 41, 54, 59, 53, 44, 29, 36, 37, 35, 15, 48, 20, 27, 39, 28, 26, 18, 19, 6]
 solution : [0, 8, 13, 2, 17]


Invert decision for 17 at level 8


New level: 9
 pending : [33, 57, 49, 61, 50, 58, 52, 38, 12, 60, 55, 22, 46, 24, 14, 4, 31, 30, 34, 32, 7, 16, 3, 43, 42, 23, 40, 45, 56, 51, 41, 54, 59, 53, 44, 29, 36, 37, 35, 15, 48, 20, 27, 39, 28, 26, 18, 19, 6]
 solution : [0, 8, 13, 2]


Before reduction : 
 pending  : [33, 57, 49, 61, 50, 58, 52, 38, 12, 60, 55, 22, 46, 24, 14, 4, 31, 30, 34, 32, 7, 16, 3, 43, 42, 23, 40, 45, 56, 51, 41, 54, 59, 53, 44, 29, 36, 37, 35, 15, 48, 20, 27, 39, 28, 26, 18, 19, 6]
 solution : [0, 8, 13, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, 2), (5, -1), (6, -1), (7, 2), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, 32), (15, -1), (16, 32), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1), (31, 2), (32, 2), (33, 128), (34, 1), (35, -1), (36, -1), (37, -1), (38, 1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 2), (47, -1), (48, -1), (49, 1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, 2), (56, -1), (57, 2), (58, 4), (59, -1), (60, 1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 128), (7, 4), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, 256), (15, 256), (16, 512), (17, -1), (18, 512), (19, 512), (20, 128), (21, -1), (22, 128), (23, 32), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 8), (30, 64), (31, 64), (32, 128), (33, 128), (34, 128), (35, 64), (36, 64), (37, 8), (38, 256), (39, 256), (40, 32), (41, 128), (42, 64), (43, 64), (44, 64), (45, 32), (46, 256), (47, -1), (48, 128), (49, 256), (50, 128), (51, 128), (52, 64), (53, 64), (54, 64), (55, 256), (56, 32), (57, 128), (58, 64), (59, 64), (60, 256), (61, 256)]

Covered at level 9 : set()

After reduction : 
 pending  : [33, 57, 49, 61, 50, 58, 52, 38, 12, 60, 55, 22, 46, 24, 14, 4, 31, 30, 34, 32, 7, 16, 3, 43, 42, 23, 40, 45, 56, 51, 41, 54, 59, 53, 44, 29, 36, 37, 35, 15, 48, 20, 27, 39, 28, 26, 18, 19, 6]
 solution : [0, 8, 13, 2]


Solution : [0, 8, 13, 2] has cost 19.


Decide in level 9 among pending : [33, 57, 49, 61, 50, 58, 52, 38, 12, 60, 55, 22, 46, 24, 14, 4, 31, 30, 34, 32, 7, 16, 3, 43, 42, 23, 40, 45, 56, 51, 41, 54, 59, 53, 44, 29, 36, 37, 35, 15, 48, 20, 27, 39, 28, 26, 18, 19, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 128), (7, 4), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, 256), (15, 256), (16, 512), (17, -1), (18, 512), (19, 512), (20, 128), (21, -1), (22, 128), (23, 32), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 8), (30, 64), (31, 64), (32, 128), (33, 128), (34, 128), (35, 64), (36, 64), (37, 8), (38, 256), (39, 256), (40, 32), (41, 128), (42, 64), (43, 64), (44, 64), (45, 32), (46, 256), (47, -1), (48, 128), (49, 256), (50, 128), (51, 128), (52, 64), (53, 64), (54, 64), (55, 256), (56, 32), (57, 128), (58, 64), (59, 64), (60, 256), (61, 256)]

Decide 16 with phase True at level 9

After decision at level 9
 pending : [33, 57, 49, 61, 50, 58, 52, 38, 12, 60, 55, 22, 46, 24, 14, 4, 31, 30, 34, 32, 7, 3, 43, 42, 23, 40, 45, 56, 51, 41, 54, 59, 53, 44, 29, 36, 37, 35, 15, 48, 20, 27, 39, 28, 26, 18, 19, 6]
 solution : [0, 8, 13, 2, 16]


New level: 10
 pending : [33, 57, 49, 61, 50, 58, 52, 38, 12, 60, 55, 22, 46, 24, 14, 4, 31, 30, 34, 32, 7, 3, 43, 42, 23, 40, 45, 56, 51, 41, 54, 59, 53, 44, 29, 36, 37, 35, 15, 48, 20, 27, 39, 28, 26, 18, 19, 6]
 solution : [0, 8, 13, 2, 16]


Before reduction : 
 pending  : [33, 57, 49, 61, 50, 58, 52, 38, 12, 60, 55, 22, 46, 24, 14, 4, 31, 30, 34, 32, 7, 3, 43, 42, 23, 40, 45, 56, 51, 41, 54, 59, 53, 44, 29, 36, 37, 35, 15, 48, 20, 27, 39, 28, 26, 18, 19, 6]
 solution : [0, 8, 13, 2, 16]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 128), (7, 4), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, 256), (15, 256), (16, 512), (17, -1), (18, 512), (19, 512), (20, 128), (21, -1), (22, 128), (23, 32), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 8), (30, 64), (31, 64), (32, 128), (33, 128), (34, 128), (35, 64), (36, 64), (37, 8), (38, 256), (39, 256), (40, 32), (41, 128), (42, 64), (43, 64), (44, 64), (45, 32), (46, 256), (47, -1), (48, 128), (49, 256), (50, 128), (51, 128), (52, 64), (53, 64), (54, 64), (55, 256), (56, 32), (57, 128), (58, 64), (59, 64), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 128), (7, 2), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, 64), (16, -1), (17, -1), (18, 512), (19, 512), (20, 16), (21, -1), (22, 0), (23, 0), (24, 0), (25, -1), (26, 32), (27, 16), (28, 0), (29, 0), (30, 16), (31, 8), (32, 32), (33, 1), (34, 128), (35, 32), (36, 4), (37, 2), (38, 0), (39, 128), (40, 2), (41, 64), (42, 16), (43, 32), (44, 2), (45, 2), (46, 0), (47, -1), (48, 64), (49, 32), (50, 0), (51, 64), (52, 0), (53, 2), (54, 0), (55, 64), (56, 0), (57, 16), (58, 0), (59, 4), (60, 256), (61, 2)]

Covered at level 10 : {56, 38, 12, 46, 14, 50, 52, 22, 23, 24, 54, 58, 28, 29}

After reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 42, 40, 45, 51, 41, 59, 53, 44, 36, 37, 35, 15, 48, 20, 27, 39, 26, 18, 19, 6]
 solution : [0, 8, 13, 2, 16]


Before reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 42, 40, 45, 51, 41, 59, 53, 44, 36, 37, 35, 15, 48, 20, 27, 39, 26, 18, 19, 6]
 solution : [0, 8, 13, 2, 16]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 128), (7, 2), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, 64), (16, -1), (17, -1), (18, 512), (19, 512), (20, 16), (21, -1), (22, 0), (23, 0), (24, 0), (25, -1), (26, 32), (27, 16), (28, 0), (29, 0), (30, 16), (31, 8), (32, 32), (33, 1), (34, 128), (35, 32), (36, 4), (37, 2), (38, 0), (39, 128), (40, 2), (41, 64), (42, 16), (43, 32), (44, 2), (45, 2), (46, 0), (47, -1), (48, 64), (49, 32), (50, 0), (51, 64), (52, 0), (53, 2), (54, 0), (55, 64), (56, 0), (57, 16), (58, 0), (59, 4), (60, 256), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 128), (7, 2), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, 512), (19, 512), (20, 16), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 32), (27, 16), (28, -1), (29, -1), (30, 16), (31, 8), (32, 32), (33, 1), (34, 128), (35, 32), (36, 4), (37, 2), (38, -1), (39, 128), (40, 2), (41, 64), (42, 16), (43, 32), (44, 2), (45, 2), (46, -1), (47, -1), (48, 64), (49, 32), (50, -1), (51, 64), (52, -1), (53, 2), (54, -1), (55, 64), (56, -1), (57, 16), (58, -1), (59, 4), (60, 256), (61, 2)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 42, 40, 45, 51, 41, 59, 53, 44, 36, 37, 35, 15, 48, 20, 27, 39, 26, 18, 19, 6]
 solution : [0, 8, 13, 2, 16]


Solution : [0, 8, 13, 2, 16] has cost 25.


Before backtrack at level 10
 pending : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 42, 40, 45, 51, 41, 59, 53, 44, 36, 37, 35, 15, 48, 20, 27, 39, 26, 18, 19, 6]
 solution : [0, 8, 13, 2, 16]

After backtrack at level 10
 pending : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 42, 40, 45, 51, 41, 59, 53, 44, 36, 37, 35, 15, 48, 20, 27, 39, 26, 18, 19, 6, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 56, 54, 29, 28]
 solution : [0, 8, 13, 2, 16]


Invert decision for 16 at level 9


New level: 10
 pending : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 42, 40, 45, 51, 41, 59, 53, 44, 36, 37, 35, 15, 48, 20, 27, 39, 26, 18, 19, 6, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 56, 54, 29, 28]
 solution : [0, 8, 13, 2]


Before reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 42, 40, 45, 51, 41, 59, 53, 44, 36, 37, 35, 15, 48, 20, 27, 39, 26, 18, 19, 6, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 56, 54, 29, 28]
 solution : [0, 8, 13, 2]

Essensial at level 10 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 128), (7, 2), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, 512), (19, 512), (20, 16), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 32), (27, 16), (28, -1), (29, -1), (30, 16), (31, 8), (32, 32), (33, 1), (34, 128), (35, 32), (36, 4), (37, 2), (38, -1), (39, 128), (40, 2), (41, 64), (42, 16), (43, 32), (44, 2), (45, 2), (46, -1), (47, -1), (48, 64), (49, 32), (50, -1), (51, 64), (52, -1), (53, 2), (54, -1), (55, 64), (56, -1), (57, 16), (58, -1), (59, 4), (60, 256), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 128), (7, 4), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, 512), (19, 512), (20, 2), (21, -1), (22, 128), (23, 2), (24, 16), (25, -1), (26, 0), (27, 64), (28, 2), (29, 2), (30, 64), (31, 4), (32, 128), (33, 128), (34, 32), (35, 16), (36, 64), (37, 0), (38, 128), (39, 16), (40, 1), (41, 64), (42, 0), (43, 16), (44, 1), (45, 0), (46, 128), (47, -1), (48, 32), (49, 128), (50, 64), (51, 64), (52, 32), (53, 2), (54, 2), (55, 256), (56, 0), (57, 4), (58, 4), (59, 0), (60, 64), (61, 256)]

Covered at level 10 : {37, 42, 45, 56, 26, 59}

After reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 6, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28]
 solution : [0, 8, 13, 2, 15]


Before reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 6, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28]
 solution : [0, 8, 13, 2, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 128), (7, 4), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, 512), (19, 512), (20, 2), (21, -1), (22, 128), (23, 2), (24, 16), (25, -1), (26, 0), (27, 64), (28, 2), (29, 2), (30, 64), (31, 4), (32, 128), (33, 128), (34, 32), (35, 16), (36, 64), (37, 0), (38, 128), (39, 16), (40, 1), (41, 64), (42, 0), (43, 16), (44, 1), (45, 0), (46, 128), (47, -1), (48, 32), (49, 128), (50, 64), (51, 64), (52, 32), (53, 2), (54, 2), (55, 256), (56, 0), (57, 4), (58, 4), (59, 0), (60, 64), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 128), (7, 4), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, 512), (19, 512), (20, 2), (21, -1), (22, 128), (23, 2), (24, 16), (25, -1), (26, -1), (27, 64), (28, 2), (29, 2), (30, 64), (31, 4), (32, 128), (33, 128), (34, 32), (35, 16), (36, 64), (37, -1), (38, 128), (39, 16), (40, 1), (41, 64), (42, -1), (43, 16), (44, 1), (45, -1), (46, 128), (47, -1), (48, 32), (49, 128), (50, 64), (51, 64), (52, 32), (53, 2), (54, 2), (55, 256), (56, -1), (57, 4), (58, 4), (59, -1), (60, 64), (61, 256)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 6, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28]
 solution : [0, 8, 13, 2, 15]


Solution : [0, 8, 13, 2, 15] has cost 25.


Before backtrack at level 10
 pending : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 6, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28]
 solution : [0, 8, 13, 2, 15]

After backtrack at level 10
 pending : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 6, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 37, 26, 56]
 solution : [0, 8, 13, 2]


Before backtrack at level 9
 pending : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 6, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 37, 26, 56]
 solution : [0, 8, 13, 2]

After backtrack at level 9
 pending : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 6, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 37, 26, 56, 16]
 solution : [0, 8, 13, 2]


Before backtrack at level 8
 pending : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 6, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 37, 26, 56, 16]
 solution : [0, 8, 13, 2]

After backtrack at level 8
 pending : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 6, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 37, 26, 56, 16, 47, 21, 17]
 solution : [0, 8, 13, 2]


Invert decision for 2 at level 7


New level: 8
 pending : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 6, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 37, 26, 56, 16, 47, 21, 17]
 solution : [0, 8, 13]


Before reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 6, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 37, 26, 56, 16, 47, 21, 17]
 solution : [0, 8, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 128), (7, 4), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, 512), (19, 512), (20, 2), (21, -1), (22, 128), (23, 2), (24, 16), (25, -1), (26, -1), (27, 64), (28, 2), (29, 2), (30, 64), (31, 4), (32, 128), (33, 128), (34, 32), (35, 16), (36, 64), (37, -1), (38, 128), (39, 16), (40, 1), (41, 64), (42, -1), (43, 16), (44, 1), (45, -1), (46, 128), (47, -1), (48, 32), (49, 128), (50, 64), (51, 64), (52, 32), (53, 2), (54, 2), (55, 256), (56, -1), (57, 4), (58, 4), (59, -1), (60, 64), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 64), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 8 : set()

After reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 6, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 37, 26, 56, 16, 47, 21, 17]
 solution : [0, 8, 13]


Solution : [0, 8, 13] has cost 13.


Decide in level 8 among pending : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 3, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 6, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 37, 26, 56, 16, 47, 21, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 64), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 3 with phase True at level 8

After decision at level 8
 pending : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 6, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 37, 26, 56, 16, 47, 21, 17]
 solution : [0, 8, 13, 3]


New level: 9
 pending : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 6, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 37, 26, 56, 16, 47, 21, 17]
 solution : [0, 8, 13, 3]


Before reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 4, 31, 30, 34, 32, 7, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 6, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 37, 26, 56, 16, 47, 21, 17]
 solution : [0, 8, 13, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 512), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 64), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 0), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 4), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 16), (36, 8), (37, 8), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, 0), (48, 64), (49, 16), (50, 64), (51, 64), (52, 32), (53, 32), (54, 256), (55, 64), (56, 128), (57, 32), (58, 256), (59, 256), (60, 64), (61, 64)]

Covered at level 9 : {4, 6, 7, 47, 21}

After reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 37, 26, 56, 16, 17]
 solution : [0, 8, 13, 3]


Before reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 37, 26, 56, 16, 17]
 solution : [0, 8, 13, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 0), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 4), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 16), (36, 8), (37, 8), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, 0), (48, 64), (49, 16), (50, 64), (51, 64), (52, 32), (53, 32), (54, 256), (55, 64), (56, 128), (57, 32), (58, 256), (59, 256), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, -1), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 4), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 16), (36, 8), (37, 8), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, -1), (48, 64), (49, 16), (50, 64), (51, 64), (52, 32), (53, 32), (54, 256), (55, 64), (56, 128), (57, 32), (58, 256), (59, 256), (60, 64), (61, 64)]

Covered at level 9 : set()

After reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 37, 26, 56, 16, 17]
 solution : [0, 8, 13, 3]


Solution : [0, 8, 13, 3] has cost 19.


Decide in level 9 among pending : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 18, 19, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 37, 26, 56, 16, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, -1), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 4), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 16), (36, 8), (37, 8), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, -1), (48, 64), (49, 16), (50, 64), (51, 64), (52, 32), (53, 32), (54, 256), (55, 64), (56, 128), (57, 32), (58, 256), (59, 256), (60, 64), (61, 64)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 19, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 37, 26, 56, 16, 17]
 solution : [0, 8, 13, 3, 18]


New level: 10
 pending : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 19, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 37, 26, 56, 16, 17]
 solution : [0, 8, 13, 3, 18]


Before reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 36, 35, 48, 20, 27, 39, 19, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 37, 26, 56, 16, 17]
 solution : [0, 8, 13, 3, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, -1), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 4), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 16), (36, 8), (37, 8), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, -1), (48, 64), (49, 16), (50, 64), (51, 64), (52, 32), (53, 32), (54, 256), (55, 64), (56, 128), (57, 32), (58, 256), (59, 256), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, -1), (22, 64), (23, 32), (24, 64), (25, -1), (26, 64), (27, 128), (28, 64), (29, 1), (30, 8), (31, 16), (32, 32), (33, 16), (34, 16), (35, 0), (36, 2), (37, 0), (38, 16), (39, 16), (40, 1), (41, 8), (42, 4), (43, 2), (44, 4), (45, 2), (46, 64), (47, -1), (48, 64), (49, 8), (50, 32), (51, 32), (52, 16), (53, 16), (54, 128), (55, 32), (56, 64), (57, 16), (58, 64), (59, 64), (60, 16), (61, 16)]

Covered at level 10 : {35, 37}

After reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 36, 48, 20, 27, 39, 19, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 26, 56, 16, 17]
 solution : [0, 8, 13, 3, 18]


Before reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 36, 48, 20, 27, 39, 19, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 26, 56, 16, 17]
 solution : [0, 8, 13, 3, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, -1), (22, 64), (23, 32), (24, 64), (25, -1), (26, 64), (27, 128), (28, 64), (29, 1), (30, 8), (31, 16), (32, 32), (33, 16), (34, 16), (35, 0), (36, 2), (37, 0), (38, 16), (39, 16), (40, 1), (41, 8), (42, 4), (43, 2), (44, 4), (45, 2), (46, 64), (47, -1), (48, 64), (49, 8), (50, 32), (51, 32), (52, 16), (53, 16), (54, 128), (55, 32), (56, 64), (57, 16), (58, 64), (59, 64), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, -1), (22, 64), (23, 32), (24, 64), (25, -1), (26, 64), (27, 128), (28, 64), (29, 1), (30, 8), (31, 16), (32, 32), (33, 16), (34, 16), (35, -1), (36, 2), (37, -1), (38, 16), (39, 16), (40, 1), (41, 8), (42, 4), (43, 2), (44, 4), (45, 2), (46, 64), (47, -1), (48, 64), (49, 8), (50, 32), (51, 32), (52, 16), (53, 16), (54, 128), (55, 32), (56, 64), (57, 16), (58, 64), (59, 64), (60, 16), (61, 16)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 36, 48, 20, 27, 39, 19, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 26, 56, 16, 17]
 solution : [0, 8, 13, 3, 18]


Solution : [0, 8, 13, 3, 18] has cost 28.


Before backtrack at level 10
 pending : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 36, 48, 20, 27, 39, 19, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 26, 56, 16, 17]
 solution : [0, 8, 13, 3, 18]

After backtrack at level 10
 pending : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 36, 48, 20, 27, 39, 19, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 26, 56, 16, 17, 35, 37]
 solution : [0, 8, 13, 3, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 36, 48, 20, 27, 39, 19, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 26, 56, 16, 17, 35, 37]
 solution : [0, 8, 13, 3]


Before reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 36, 48, 20, 27, 39, 19, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 26, 56, 16, 17, 35, 37]
 solution : [0, 8, 13, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, -1), (22, 64), (23, 32), (24, 64), (25, -1), (26, 64), (27, 128), (28, 64), (29, 1), (30, 8), (31, 16), (32, 32), (33, 16), (34, 16), (35, -1), (36, 2), (37, -1), (38, 16), (39, 16), (40, 1), (41, 8), (42, 4), (43, 2), (44, 4), (45, 2), (46, 64), (47, -1), (48, 64), (49, 8), (50, 32), (51, 32), (52, 16), (53, 16), (54, 128), (55, 32), (56, 64), (57, 16), (58, 64), (59, 64), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, -1), (19, 512), (20, 256), (21, -1), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 4), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 16), (36, 8), (37, 8), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, -1), (48, 64), (49, 16), (50, 64), (51, 64), (52, 32), (53, 32), (54, 256), (55, 64), (56, 128), (57, 32), (58, 256), (59, 256), (60, 64), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 36, 48, 20, 27, 39, 19, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 26, 56, 16, 17, 35, 37]
 solution : [0, 8, 13, 3]


Solution : [0, 8, 13, 3] has cost 19.


Decide in level 10 among pending : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 36, 48, 20, 27, 39, 19, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 26, 56, 16, 17, 35, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, -1), (19, 512), (20, 256), (21, -1), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 4), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 16), (36, 8), (37, 8), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, -1), (48, 64), (49, 16), (50, 64), (51, 64), (52, 32), (53, 32), (54, 256), (55, 64), (56, 128), (57, 32), (58, 256), (59, 256), (60, 64), (61, 64)]

Decide 19 with phase True at level 10

After decision at level 10
 pending : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 36, 48, 20, 27, 39, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 26, 56, 16, 17, 35, 37]
 solution : [0, 8, 13, 3, 19]


New level: 11
 pending : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 36, 48, 20, 27, 39, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 26, 56, 16, 17, 35, 37]
 solution : [0, 8, 13, 3, 19]


Before reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 36, 48, 20, 27, 39, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 29, 28, 15, 42, 45, 59, 26, 56, 16, 17, 35, 37]
 solution : [0, 8, 13, 3, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, -1), (19, 512), (20, 256), (21, -1), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 4), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 16), (36, 8), (37, 8), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, -1), (48, 64), (49, 16), (50, 64), (51, 64), (52, 32), (53, 32), (54, 256), (55, 64), (56, 128), (57, 32), (58, 256), (59, 256), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, -1), (22, 64), (23, 32), (24, 64), (25, -1), (26, 64), (27, 32), (28, 16), (29, 0), (30, 4), (31, 8), (32, 16), (33, 32), (34, 32), (35, 8), (36, 0), (37, 4), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, -1), (48, 64), (49, 8), (50, 16), (51, 16), (52, 8), (53, 8), (54, 128), (55, 32), (56, 64), (57, 16), (58, 256), (59, 256), (60, 64), (61, 64)]

Covered at level 11 : {36, 29}

After reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 48, 20, 27, 39, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 28, 15, 42, 45, 59, 26, 56, 16, 17, 35, 37]
 solution : [0, 8, 13, 3, 19]


Before reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 48, 20, 27, 39, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 28, 15, 42, 45, 59, 26, 56, 16, 17, 35, 37]
 solution : [0, 8, 13, 3, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, -1), (22, 64), (23, 32), (24, 64), (25, -1), (26, 64), (27, 32), (28, 16), (29, 0), (30, 4), (31, 8), (32, 16), (33, 32), (34, 32), (35, 8), (36, 0), (37, 4), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, -1), (48, 64), (49, 8), (50, 16), (51, 16), (52, 8), (53, 8), (54, 128), (55, 32), (56, 64), (57, 16), (58, 256), (59, 256), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, -1), (22, 64), (23, 32), (24, 64), (25, -1), (26, 64), (27, 32), (28, 16), (29, -1), (30, 4), (31, 8), (32, 16), (33, 32), (34, 32), (35, 8), (36, -1), (37, 4), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, -1), (48, 64), (49, 8), (50, 16), (51, 16), (52, 8), (53, 8), (54, 128), (55, 32), (56, 64), (57, 16), (58, 256), (59, 256), (60, 64), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 48, 20, 27, 39, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 28, 15, 42, 45, 59, 26, 56, 16, 17, 35, 37]
 solution : [0, 8, 13, 3, 19]


Solution : [0, 8, 13, 3, 19] has cost 28.


Before backtrack at level 11
 pending : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 48, 20, 27, 39, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 28, 15, 42, 45, 59, 26, 56, 16, 17, 35, 37]
 solution : [0, 8, 13, 3, 19]

After backtrack at level 11
 pending : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 48, 20, 27, 39, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 28, 15, 42, 45, 59, 26, 56, 16, 17, 35, 37, 36, 29]
 solution : [0, 8, 13, 3, 19]


Invert decision for 19 at level 10


New level: 11
 pending : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 48, 20, 27, 39, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 28, 15, 42, 45, 59, 26, 56, 16, 17, 35, 37, 36, 29]
 solution : [0, 8, 13, 3]


Before reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 48, 20, 27, 39, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 28, 15, 42, 45, 59, 26, 56, 16, 17, 35, 37, 36, 29]
 solution : [0, 8, 13, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, -1), (22, 64), (23, 32), (24, 64), (25, -1), (26, 64), (27, 32), (28, 16), (29, -1), (30, 4), (31, 8), (32, 16), (33, 32), (34, 32), (35, 8), (36, -1), (37, 4), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, -1), (48, 64), (49, 8), (50, 16), (51, 16), (52, 8), (53, 8), (54, 128), (55, 32), (56, 64), (57, 16), (58, 256), (59, 256), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, -1), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 4), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 16), (36, 8), (37, 8), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, -1), (48, 64), (49, 16), (50, 64), (51, 64), (52, 32), (53, 32), (54, 256), (55, 64), (56, 128), (57, 32), (58, 256), (59, 256), (60, 64), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 48, 20, 27, 39, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 28, 15, 42, 45, 59, 26, 56, 16, 17, 35, 37, 36, 29]
 solution : [0, 8, 13, 3]


Solution : [0, 8, 13, 3] has cost 19.


Decide in level 11 among pending : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 48, 20, 27, 39, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 28, 15, 42, 45, 59, 26, 56, 16, 17, 35, 37, 36, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, -1), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 4), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 16), (36, 8), (37, 8), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, -1), (48, 64), (49, 16), (50, 64), (51, 64), (52, 32), (53, 32), (54, 256), (55, 64), (56, 128), (57, 32), (58, 256), (59, 256), (60, 64), (61, 64)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 48, 20, 27, 39, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 28, 15, 42, 45, 59, 26, 56, 17, 35, 37, 36, 29]
 solution : [0, 8, 13, 3, 16]


New level: 12
 pending : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 48, 20, 27, 39, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 28, 15, 42, 45, 59, 26, 56, 17, 35, 37, 36, 29]
 solution : [0, 8, 13, 3, 16]


Before reduction : 
 pending  : [33, 57, 49, 61, 60, 55, 31, 30, 34, 32, 43, 40, 51, 41, 53, 44, 48, 20, 27, 39, 50, 58, 52, 38, 12, 22, 46, 24, 14, 23, 54, 28, 15, 42, 45, 59, 26, 56, 17, 35, 37, 36, 29]
 solution : [0, 8, 13, 3, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, -1), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 4), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 16), (36, 8), (37, 8), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, -1), (48, 64), (49, 16), (50, 64), (51, 64), (52, 32), (53, 32), (54, 256), (55, 64), (56, 128), (57, 32), (58, 256), (59, 256), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, -1), (14, 0), (15, 64), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, -1), (22, 0), (23, 1), (24, 0), (25, -1), (26, 16), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 4), (35, 0), (36, 0), (37, 0), (38, 0), (39, 1), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, 4), (49, 0), (50, 0), (51, 1), (52, 0), (53, 1), (54, 2), (55, 0), (56, 2), (57, 0), (58, 1), (59, 256), (60, 4), (61, 0)]

Covered at level 12 : {14, 22, 24, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 55, 57, 61}

After reduction : 
 pending  : [60, 34, 51, 53, 48, 20, 39, 58, 12, 23, 54, 15, 59, 26, 56, 17]
 solution : [0, 8, 13, 3, 16]


Before reduction : 
 pending  : [60, 34, 51, 53, 48, 20, 39, 58, 12, 23, 54, 15, 59, 26, 56, 17]
 solution : [0, 8, 13, 3, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, -1), (14, 0), (15, 64), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, -1), (22, 0), (23, 1), (24, 0), (25, -1), (26, 16), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 4), (35, 0), (36, 0), (37, 0), (38, 0), (39, 1), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, 4), (49, 0), (50, 0), (51, 1), (52, 0), (53, 1), (54, 2), (55, 0), (56, 2), (57, 0), (58, 1), (59, 256), (60, 4), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, -1), (14, -1), (15, 64), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 4), (35, -1), (36, -1), (37, -1), (38, -1), (39, 1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, 4), (49, -1), (50, -1), (51, 1), (52, -1), (53, 1), (54, 2), (55, -1), (56, 2), (57, -1), (58, 1), (59, 256), (60, 4), (61, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [60, 34, 51, 53, 48, 20, 39, 58, 12, 23, 54, 15, 59, 26, 56, 17]
 solution : [0, 8, 13, 3, 16]


Solution : [0, 8, 13, 3, 16] has cost 25.


Before backtrack at level 12
 pending : [60, 34, 51, 53, 48, 20, 39, 58, 12, 23, 54, 15, 59, 26, 56, 17]
 solution : [0, 8, 13, 3, 16]

After backtrack at level 12
 pending : [60, 34, 51, 53, 48, 20, 39, 58, 12, 23, 54, 15, 59, 26, 56, 17, 33, 57, 49, 61, 55, 31, 30, 32, 43, 40, 41, 44, 27, 50, 52, 38, 22, 46, 24, 14, 28, 42, 45, 35, 37, 36, 29]
 solution : [0, 8, 13, 3, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [60, 34, 51, 53, 48, 20, 39, 58, 12, 23, 54, 15, 59, 26, 56, 17, 33, 57, 49, 61, 55, 31, 30, 32, 43, 40, 41, 44, 27, 50, 52, 38, 22, 46, 24, 14, 28, 42, 45, 35, 37, 36, 29]
 solution : [0, 8, 13, 3]


Before reduction : 
 pending  : [60, 34, 51, 53, 48, 20, 39, 58, 12, 23, 54, 15, 59, 26, 56, 17, 33, 57, 49, 61, 55, 31, 30, 32, 43, 40, 41, 44, 27, 50, 52, 38, 22, 46, 24, 14, 28, 42, 45, 35, 37, 36, 29]
 solution : [0, 8, 13, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, -1), (14, -1), (15, 64), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 4), (35, -1), (36, -1), (37, -1), (38, -1), (39, 1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, 4), (49, -1), (50, -1), (51, 1), (52, -1), (53, 1), (54, 2), (55, -1), (56, 2), (57, -1), (58, 1), (59, 256), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, -1), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 4), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 16), (36, 8), (37, 8), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, -1), (48, 64), (49, 16), (50, 64), (51, 64), (52, 32), (53, 32), (54, 256), (55, 64), (56, 128), (57, 32), (58, 256), (59, 256), (60, 64), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [60, 34, 51, 53, 48, 20, 39, 58, 12, 23, 54, 15, 59, 26, 56, 17, 33, 57, 49, 61, 55, 31, 30, 32, 43, 40, 41, 44, 27, 50, 52, 38, 22, 46, 24, 14, 28, 42, 45, 35, 37, 36, 29]
 solution : [0, 8, 13, 3]


Solution : [0, 8, 13, 3] has cost 19.


Decide in level 12 among pending : [60, 34, 51, 53, 48, 20, 39, 58, 12, 23, 54, 15, 59, 26, 56, 17, 33, 57, 49, 61, 55, 31, 30, 32, 43, 40, 41, 44, 27, 50, 52, 38, 22, 46, 24, 14, 28, 42, 45, 35, 37, 36, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, -1), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 4), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 16), (36, 8), (37, 8), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, -1), (48, 64), (49, 16), (50, 64), (51, 64), (52, 32), (53, 32), (54, 256), (55, 64), (56, 128), (57, 32), (58, 256), (59, 256), (60, 64), (61, 64)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [60, 34, 51, 53, 48, 20, 39, 58, 12, 23, 54, 15, 59, 26, 56, 33, 57, 49, 61, 55, 31, 30, 32, 43, 40, 41, 44, 27, 50, 52, 38, 22, 46, 24, 14, 28, 42, 45, 35, 37, 36, 29]
 solution : [0, 8, 13, 3, 17]


New level: 13
 pending : [60, 34, 51, 53, 48, 20, 39, 58, 12, 23, 54, 15, 59, 26, 56, 33, 57, 49, 61, 55, 31, 30, 32, 43, 40, 41, 44, 27, 50, 52, 38, 22, 46, 24, 14, 28, 42, 45, 35, 37, 36, 29]
 solution : [0, 8, 13, 3, 17]


Before reduction : 
 pending  : [60, 34, 51, 53, 48, 20, 39, 58, 12, 23, 54, 15, 59, 26, 56, 33, 57, 49, 61, 55, 31, 30, 32, 43, 40, 41, 44, 27, 50, 52, 38, 22, 46, 24, 14, 28, 42, 45, 35, 37, 36, 29]
 solution : [0, 8, 13, 3, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, -1), (17, 512), (18, -1), (19, -1), (20, 256), (21, -1), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 4), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 16), (36, 8), (37, 8), (38, 256), (39, 256), (40, 16), (41, 128), (42, 64), (43, 32), (44, 64), (45, 32), (46, 64), (47, -1), (48, 64), (49, 16), (50, 64), (51, 64), (52, 32), (53, 32), (54, 256), (55, 64), (56, 128), (57, 32), (58, 256), (59, 256), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 16), (23, 2), (24, 16), (25, -1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 4), (34, 0), (35, 2), (36, 0), (37, 2), (38, 64), (39, 0), (40, 2), (41, 2), (42, 2), (43, 2), (44, 2), (45, 2), (46, 4), (47, -1), (48, 0), (49, 0), (50, 2), (51, 0), (52, 2), (53, 0), (54, 4), (55, 0), (56, 4), (57, 0), (58, 256), (59, 2), (60, 0), (61, 4)]

Covered at level 13 : {15, 20, 26, 27, 28, 29, 30, 31, 32, 34, 36, 39, 48, 49, 51, 53, 55, 57, 60}

After reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37]
 solution : [0, 8, 13, 3, 17]


Before reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37]
 solution : [0, 8, 13, 3, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 16), (23, 2), (24, 16), (25, -1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 4), (34, 0), (35, 2), (36, 0), (37, 2), (38, 64), (39, 0), (40, 2), (41, 2), (42, 2), (43, 2), (44, 2), (45, 2), (46, 4), (47, -1), (48, 0), (49, 0), (50, 2), (51, 0), (52, 2), (53, 0), (54, 4), (55, 0), (56, 4), (57, 0), (58, 256), (59, 2), (60, 0), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 2), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, 2), (36, -1), (37, 2), (38, 64), (39, -1), (40, 2), (41, 2), (42, 2), (43, 2), (44, 2), (45, 2), (46, 4), (47, -1), (48, -1), (49, -1), (50, 2), (51, -1), (52, 2), (53, -1), (54, 4), (55, -1), (56, 4), (57, -1), (58, 256), (59, 2), (60, -1), (61, 4)]

Covered at level 13 : set()

After reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37]
 solution : [0, 8, 13, 3, 17]


Solution : [0, 8, 13, 3, 17] has cost 25.


Before backtrack at level 13
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37]
 solution : [0, 8, 13, 3, 17]

After backtrack at level 13
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 15, 26, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29]
 solution : [0, 8, 13, 3, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 15, 26, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29]
 solution : [0, 8, 13, 3]


Before reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 15, 26, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29]
 solution : [0, 8, 13, 3]

Essensial at level 13 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 2), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, 2), (36, -1), (37, 2), (38, 64), (39, -1), (40, 2), (41, 2), (42, 2), (43, 2), (44, 2), (45, 2), (46, 4), (47, -1), (48, -1), (49, -1), (50, 2), (51, -1), (52, 2), (53, -1), (54, 4), (55, -1), (56, 4), (57, -1), (58, 256), (59, 2), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 16), (23, 2), (24, 16), (25, -1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 4), (34, 0), (35, 2), (36, 0), (37, 2), (38, 256), (39, 0), (40, 2), (41, 2), (42, 2), (43, 2), (44, 2), (45, 2), (46, 4), (47, -1), (48, 0), (49, 0), (50, 2), (51, 0), (52, 2), (53, 0), (54, 256), (55, 0), (56, 4), (57, 0), (58, 256), (59, 2), (60, 0), (61, 4)]

Covered at level 13 : {32, 34, 36, 39, 28, 48, 49, 51, 20, 53, 55, 57, 26, 27, 60, 29, 30, 31}

After reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37]
 solution : [0, 8, 13, 3, 15]


Before reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37]
 solution : [0, 8, 13, 3, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 16), (23, 2), (24, 16), (25, -1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 4), (34, 0), (35, 2), (36, 0), (37, 2), (38, 256), (39, 0), (40, 2), (41, 2), (42, 2), (43, 2), (44, 2), (45, 2), (46, 4), (47, -1), (48, 0), (49, 0), (50, 2), (51, 0), (52, 2), (53, 0), (54, 256), (55, 0), (56, 4), (57, 0), (58, 256), (59, 2), (60, 0), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 2), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, 2), (36, -1), (37, 2), (38, 64), (39, -1), (40, 2), (41, 2), (42, 2), (43, 2), (44, 2), (45, 2), (46, 4), (47, -1), (48, -1), (49, -1), (50, 2), (51, -1), (52, 2), (53, -1), (54, 256), (55, -1), (56, 4), (57, -1), (58, 256), (59, 2), (60, -1), (61, 4)]

Covered at level 13 : set()

After reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37]
 solution : [0, 8, 13, 3, 15]


Solution : [0, 8, 13, 3, 15] has cost 25.


Before backtrack at level 13
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37]
 solution : [0, 8, 13, 3, 15]

After backtrack at level 13
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 15, 60, 34, 51, 53, 48, 20, 39, 26, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29]
 solution : [0, 8, 13, 3]


Before backtrack at level 12
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 15, 60, 34, 51, 53, 48, 20, 39, 26, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29]
 solution : [0, 8, 13, 3]

After backtrack at level 12
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 15, 60, 34, 51, 53, 48, 20, 39, 26, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 17]
 solution : [0, 8, 13, 3]


Before backtrack at level 11
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 15, 60, 34, 51, 53, 48, 20, 39, 26, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 17]
 solution : [0, 8, 13, 3]

After backtrack at level 11
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 15, 60, 34, 51, 53, 48, 20, 39, 26, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 17, 16]
 solution : [0, 8, 13, 3]


Before backtrack at level 10
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 15, 60, 34, 51, 53, 48, 20, 39, 26, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 17, 16]
 solution : [0, 8, 13, 3]

After backtrack at level 10
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 15, 60, 34, 51, 53, 48, 20, 39, 26, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 17, 16, 19]
 solution : [0, 8, 13, 3]


Before backtrack at level 9
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 15, 60, 34, 51, 53, 48, 20, 39, 26, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 17, 16, 19]
 solution : [0, 8, 13, 3]

After backtrack at level 9
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 15, 60, 34, 51, 53, 48, 20, 39, 26, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 17, 16, 19, 4, 7, 6, 47, 21, 18]
 solution : [0, 8, 13, 3]


Invert decision for 3 at level 8


New level: 9
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 15, 60, 34, 51, 53, 48, 20, 39, 26, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 17, 16, 19, 4, 7, 6, 47, 21, 18]
 solution : [0, 8, 13]


Before reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 15, 60, 34, 51, 53, 48, 20, 39, 26, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 17, 16, 19, 4, 7, 6, 47, 21, 18]
 solution : [0, 8, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 2), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, 2), (36, -1), (37, 2), (38, 64), (39, -1), (40, 2), (41, 2), (42, 2), (43, 2), (44, 2), (45, 2), (46, 4), (47, -1), (48, -1), (49, -1), (50, 2), (51, -1), (52, 2), (53, -1), (54, 256), (55, -1), (56, 4), (57, -1), (58, 256), (59, 2), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 64), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 9 : set()

After reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 15, 60, 34, 51, 53, 48, 20, 39, 26, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 17, 16, 19, 4, 7, 6, 47, 21, 18]
 solution : [0, 8, 13]


Solution : [0, 8, 13] has cost 13.


Decide in level 9 among pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 15, 60, 34, 51, 53, 48, 20, 39, 26, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 17, 16, 19, 4, 7, 6, 47, 21, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 64), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 17 with phase True at level 9

After decision at level 9
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 15, 60, 34, 51, 53, 48, 20, 39, 26, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 16, 19, 4, 7, 6, 47, 21, 18]
 solution : [0, 8, 13, 17]


New level: 10
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 15, 60, 34, 51, 53, 48, 20, 39, 26, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 16, 19, 4, 7, 6, 47, 21, 18]
 solution : [0, 8, 13, 17]


Before reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 15, 60, 34, 51, 53, 48, 20, 39, 26, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 16, 19, 4, 7, 6, 47, 21, 18]
 solution : [0, 8, 13, 17]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 32), (22, 256), (23, 256), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 64), (30, 128), (31, 64), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 256), (39, 256), (40, 128), (41, 256), (42, 128), (43, 256), (44, 128), (45, 64), (46, 256), (47, 64), (48, 256), (49, 256), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, 0), (16, 64), (17, -1), (18, 512), (19, 512), (20, 16), (21, 32), (22, 256), (23, 256), (24, 16), (25, -1), (26, 0), (27, 8), (28, 4), (29, 64), (30, 128), (31, 16), (32, 32), (33, 128), (34, 32), (35, 128), (36, 128), (37, 64), (38, 256), (39, 8), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 64), (48, 32), (49, 256), (50, 256), (51, 64), (52, 128), (53, 32), (54, 64), (55, 64), (56, 32), (57, 32), (58, 256), (59, 64), (60, 64), (61, 256)]

Covered at level 10 : {26, 15}

After reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 16, 19, 4, 7, 6, 47, 21, 18]
 solution : [0, 8, 13, 17]


Before reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 16, 19, 4, 7, 6, 47, 21, 18]
 solution : [0, 8, 13, 17]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, 0), (16, 64), (17, -1), (18, 512), (19, 512), (20, 16), (21, 32), (22, 256), (23, 256), (24, 16), (25, -1), (26, 0), (27, 8), (28, 4), (29, 64), (30, 128), (31, 16), (32, 32), (33, 128), (34, 32), (35, 128), (36, 128), (37, 64), (38, 256), (39, 8), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 64), (48, 32), (49, 256), (50, 256), (51, 64), (52, 128), (53, 32), (54, 64), (55, 64), (56, 32), (57, 32), (58, 256), (59, 64), (60, 64), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, 512), (19, 512), (20, 16), (21, 32), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 8), (28, 4), (29, 64), (30, 128), (31, 16), (32, 32), (33, 128), (34, 32), (35, 128), (36, 128), (37, 64), (38, 256), (39, 8), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 64), (48, 32), (49, 256), (50, 256), (51, 64), (52, 128), (53, 32), (54, 64), (55, 64), (56, 32), (57, 32), (58, 256), (59, 64), (60, 64), (61, 256)]

Covered at level 10 : set()

After reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 16, 19, 4, 7, 6, 47, 21, 18]
 solution : [0, 8, 13, 17]


Solution : [0, 8, 13, 17] has cost 19.


Decide in level 10 among pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 16, 19, 4, 7, 6, 47, 21, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, 512), (19, 512), (20, 16), (21, 32), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 8), (28, 4), (29, 64), (30, 128), (31, 16), (32, 32), (33, 128), (34, 32), (35, 128), (36, 128), (37, 64), (38, 256), (39, 8), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 64), (48, 32), (49, 256), (50, 256), (51, 64), (52, 128), (53, 32), (54, 64), (55, 64), (56, 32), (57, 32), (58, 256), (59, 64), (60, 64), (61, 256)]

Decide 19 with phase True at level 10

After decision at level 10
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 16, 4, 7, 6, 47, 21, 18]
 solution : [0, 8, 13, 17, 19]


New level: 11
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 16, 4, 7, 6, 47, 21, 18]
 solution : [0, 8, 13, 17, 19]


Before reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 27, 28, 36, 29, 16, 4, 7, 6, 47, 21, 18]
 solution : [0, 8, 13, 17, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, 512), (19, 512), (20, 16), (21, 32), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 8), (28, 4), (29, 64), (30, 128), (31, 16), (32, 32), (33, 128), (34, 32), (35, 128), (36, 128), (37, 64), (38, 256), (39, 8), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 64), (48, 32), (49, 256), (50, 256), (51, 64), (52, 128), (53, 32), (54, 64), (55, 64), (56, 32), (57, 32), (58, 256), (59, 64), (60, 64), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, 256), (19, -1), (20, 4), (21, 8), (22, 256), (23, 8), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 4), (31, 8), (32, 16), (33, 128), (34, 32), (35, 64), (36, 0), (37, 32), (38, 256), (39, 2), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 16), (48, 8), (49, 8), (50, 64), (51, 16), (52, 32), (53, 8), (54, 32), (55, 32), (56, 16), (57, 16), (58, 256), (59, 64), (60, 64), (61, 256)]

Covered at level 11 : {27, 28, 29, 36}

After reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 16, 4, 7, 6, 47, 21, 18]
 solution : [0, 8, 13, 17, 19]


Before reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 16, 4, 7, 6, 47, 21, 18]
 solution : [0, 8, 13, 17, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, 256), (19, -1), (20, 4), (21, 8), (22, 256), (23, 8), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 4), (31, 8), (32, 16), (33, 128), (34, 32), (35, 64), (36, 0), (37, 32), (38, 256), (39, 2), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 16), (48, 8), (49, 8), (50, 64), (51, 16), (52, 32), (53, 8), (54, 32), (55, 32), (56, 16), (57, 16), (58, 256), (59, 64), (60, 64), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, 256), (19, -1), (20, 4), (21, 8), (22, 256), (23, 8), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 4), (31, 8), (32, 16), (33, 128), (34, 32), (35, 64), (36, -1), (37, 32), (38, 256), (39, 2), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 16), (48, 8), (49, 8), (50, 64), (51, 16), (52, 32), (53, 8), (54, 32), (55, 32), (56, 16), (57, 16), (58, 256), (59, 64), (60, 64), (61, 256)]

Covered at level 11 : set()

After reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 16, 4, 7, 6, 47, 21, 18]
 solution : [0, 8, 13, 17, 19]


Solution : [0, 8, 13, 17, 19] has cost 28.


Before backtrack at level 11
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 16, 4, 7, 6, 47, 21, 18]
 solution : [0, 8, 13, 17, 19]

After backtrack at level 11
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 16, 4, 7, 6, 47, 21, 18, 27, 28, 36, 29]
 solution : [0, 8, 13, 17, 19]


Invert decision for 19 at level 10


New level: 11
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 16, 4, 7, 6, 47, 21, 18, 27, 28, 36, 29]
 solution : [0, 8, 13, 17]


Before reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 16, 4, 7, 6, 47, 21, 18, 27, 28, 36, 29]
 solution : [0, 8, 13, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, 256), (19, -1), (20, 4), (21, 8), (22, 256), (23, 8), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 4), (31, 8), (32, 16), (33, 128), (34, 32), (35, 64), (36, -1), (37, 32), (38, 256), (39, 2), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 16), (48, 8), (49, 8), (50, 64), (51, 16), (52, 32), (53, 8), (54, 32), (55, 32), (56, 16), (57, 16), (58, 256), (59, 64), (60, 64), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, 512), (19, -1), (20, 16), (21, 32), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 8), (28, 4), (29, 64), (30, 128), (31, 16), (32, 32), (33, 128), (34, 32), (35, 128), (36, 128), (37, 64), (38, 256), (39, 8), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 64), (48, 32), (49, 256), (50, 256), (51, 64), (52, 128), (53, 32), (54, 64), (55, 64), (56, 32), (57, 32), (58, 256), (59, 64), (60, 64), (61, 256)]

Covered at level 11 : set()

After reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 16, 4, 7, 6, 47, 21, 18, 27, 28, 36, 29]
 solution : [0, 8, 13, 17]


Solution : [0, 8, 13, 17] has cost 19.


Decide in level 11 among pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 16, 4, 7, 6, 47, 21, 18, 27, 28, 36, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, 512), (19, -1), (20, 16), (21, 32), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 8), (28, 4), (29, 64), (30, 128), (31, 16), (32, 32), (33, 128), (34, 32), (35, 128), (36, 128), (37, 64), (38, 256), (39, 8), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 64), (48, 32), (49, 256), (50, 256), (51, 64), (52, 128), (53, 32), (54, 64), (55, 64), (56, 32), (57, 32), (58, 256), (59, 64), (60, 64), (61, 256)]

Decide 6 with phase True at level 11

After decision at level 11
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 18, 27, 28, 36, 29]
 solution : [0, 8, 13, 17, 6]


New level: 12
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 18, 27, 28, 36, 29]
 solution : [0, 8, 13, 17, 6]


Before reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 18, 27, 28, 36, 29]
 solution : [0, 8, 13, 17, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, 512), (19, -1), (20, 16), (21, 32), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 8), (28, 4), (29, 64), (30, 128), (31, 16), (32, 32), (33, 128), (34, 32), (35, 128), (36, 128), (37, 64), (38, 256), (39, 8), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 64), (48, 32), (49, 256), (50, 256), (51, 64), (52, 128), (53, 32), (54, 64), (55, 64), (56, 32), (57, 32), (58, 256), (59, 64), (60, 64), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, 512), (19, -1), (20, 8), (21, 16), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, 256), (59, 64), (60, 32), (61, 256)]

Covered at level 12 : set()

After reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 18, 27, 28, 36, 29]
 solution : [0, 8, 13, 17, 6]


Solution : [0, 8, 13, 17, 6] has cost 21.


Decide in level 12 among pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 18, 27, 28, 36, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, 512), (19, -1), (20, 8), (21, 16), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, 256), (59, 64), (60, 32), (61, 256)]

Decide 18 with phase True at level 12

After decision at level 12
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29]
 solution : [0, 8, 13, 17, 6, 18]


New level: 13
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29]
 solution : [0, 8, 13, 17, 6, 18]


Before reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 35, 37, 60, 34, 51, 53, 48, 20, 39, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29]
 solution : [0, 8, 13, 17, 6, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, 512), (19, -1), (20, 8), (21, 16), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, 256), (59, 64), (60, 32), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 4), (21, 8), (22, 256), (23, 128), (24, 16), (25, -1), (26, -1), (27, 1), (28, 1), (29, 16), (30, 128), (31, 16), (32, 16), (33, 64), (34, 8), (35, 0), (36, 32), (37, 0), (38, 1), (39, 0), (40, 1), (41, 4), (42, 4), (43, 2), (44, 2), (45, 2), (46, 256), (47, 16), (48, 8), (49, 128), (50, 128), (51, 16), (52, 64), (53, 8), (54, 32), (55, 16), (56, 16), (57, 16), (58, 64), (59, 16), (60, 8), (61, 64)]

Covered at level 13 : {35, 37, 39}

After reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29]
 solution : [0, 8, 13, 17, 6, 18]


Before reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29]
 solution : [0, 8, 13, 17, 6, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 4), (21, 8), (22, 256), (23, 128), (24, 16), (25, -1), (26, -1), (27, 1), (28, 1), (29, 16), (30, 128), (31, 16), (32, 16), (33, 64), (34, 8), (35, 0), (36, 32), (37, 0), (38, 1), (39, 0), (40, 1), (41, 4), (42, 4), (43, 2), (44, 2), (45, 2), (46, 256), (47, 16), (48, 8), (49, 128), (50, 128), (51, 16), (52, 64), (53, 8), (54, 32), (55, 16), (56, 16), (57, 16), (58, 64), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 4), (21, 8), (22, 256), (23, 128), (24, 16), (25, -1), (26, -1), (27, 1), (28, 1), (29, 16), (30, 128), (31, 16), (32, 16), (33, 64), (34, 8), (35, -1), (36, 32), (37, -1), (38, 1), (39, -1), (40, 1), (41, 4), (42, 4), (43, 2), (44, 2), (45, 2), (46, 256), (47, 16), (48, 8), (49, 128), (50, 128), (51, 16), (52, 64), (53, 8), (54, 32), (55, 16), (56, 16), (57, 16), (58, 64), (59, 16), (60, 8), (61, 64)]

Covered at level 13 : set()

After reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29]
 solution : [0, 8, 13, 17, 6, 18]


Solution : [0, 8, 13, 17, 6, 18] has cost 30.


Before backtrack at level 13
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29]
 solution : [0, 8, 13, 17, 6, 18]

After backtrack at level 13
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37, 39]
 solution : [0, 8, 13, 17, 6, 18]


Invert decision for 18 at level 12


New level: 13
 pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37, 39]
 solution : [0, 8, 13, 17, 6]


Before reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37, 39]
 solution : [0, 8, 13, 17, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 4), (21, 8), (22, 256), (23, 128), (24, 16), (25, -1), (26, -1), (27, 1), (28, 1), (29, 16), (30, 128), (31, 16), (32, 16), (33, 64), (34, 8), (35, -1), (36, 32), (37, -1), (38, 1), (39, -1), (40, 1), (41, 4), (42, 4), (43, 2), (44, 2), (45, 2), (46, 256), (47, 16), (48, 8), (49, 128), (50, 128), (51, 16), (52, 64), (53, 8), (54, 32), (55, 16), (56, 16), (57, 16), (58, 64), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, 256), (59, 64), (60, 32), (61, 256)]

Covered at level 13 : set()

After reduction : 
 pending  : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37, 39]
 solution : [0, 8, 13, 17, 6]


Solution : [0, 8, 13, 17, 6] has cost 21.


Decide in level 13 among pending : [58, 12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, 256), (59, 64), (60, 32), (61, 256)]

Decide 58 with phase True at level 13

After decision at level 13
 pending : [12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37, 39]
 solution : [0, 8, 13, 17, 6, 58]


New level: 14
 pending : [12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37, 39]
 solution : [0, 8, 13, 17, 6, 58]


Before reduction : 
 pending  : [12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37, 39]
 solution : [0, 8, 13, 17, 6, 58]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, 256), (59, 64), (60, 32), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 4), (15, -1), (16, 4), (17, -1), (18, -1), (19, -1), (20, 1), (21, 1), (22, 64), (23, 256), (24, 16), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 128), (31, 16), (32, 16), (33, 16), (34, 4), (35, 2), (36, 128), (37, 2), (38, 1), (39, 0), (40, 8), (41, 64), (42, 32), (43, 256), (44, 8), (45, 8), (46, 256), (47, 16), (48, 8), (49, 256), (50, 256), (51, 16), (52, 2), (53, 2), (54, 64), (55, 32), (56, 16), (57, 32), (58, -1), (59, 1), (60, 4), (61, 32)]

Covered at level 14 : {39}

After reduction : 
 pending  : [12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37]
 solution : [0, 8, 13, 17, 6, 58]


Before reduction : 
 pending  : [12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37]
 solution : [0, 8, 13, 17, 6, 58]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 4), (15, -1), (16, 4), (17, -1), (18, -1), (19, -1), (20, 1), (21, 1), (22, 64), (23, 256), (24, 16), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 128), (31, 16), (32, 16), (33, 16), (34, 4), (35, 2), (36, 128), (37, 2), (38, 1), (39, 0), (40, 8), (41, 64), (42, 32), (43, 256), (44, 8), (45, 8), (46, 256), (47, 16), (48, 8), (49, 256), (50, 256), (51, 16), (52, 2), (53, 2), (54, 64), (55, 32), (56, 16), (57, 32), (58, -1), (59, 1), (60, 4), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 4), (15, -1), (16, 4), (17, -1), (18, -1), (19, -1), (20, 1), (21, 1), (22, 64), (23, 256), (24, 16), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 128), (31, 16), (32, 16), (33, 8), (34, 4), (35, 2), (36, 128), (37, 2), (38, 1), (39, -1), (40, 4), (41, 16), (42, 16), (43, 256), (44, 8), (45, 8), (46, 256), (47, 16), (48, 8), (49, 256), (50, 256), (51, 16), (52, 2), (53, 2), (54, 64), (55, 32), (56, 16), (57, 32), (58, -1), (59, 1), (60, 4), (61, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37]
 solution : [0, 8, 13, 17, 6, 58]


Solution : [0, 8, 13, 17, 6, 58] has cost 31.


Before backtrack at level 14
 pending : [12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37]
 solution : [0, 8, 13, 17, 6, 58]

After backtrack at level 14
 pending : [12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37, 39]
 solution : [0, 8, 13, 17, 6, 58]


Invert decision for 58 at level 13


New level: 14
 pending : [12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37, 39]
 solution : [0, 8, 13, 17, 6]


Before reduction : 
 pending  : [12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37, 39]
 solution : [0, 8, 13, 17, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 4), (15, -1), (16, 4), (17, -1), (18, -1), (19, -1), (20, 1), (21, 1), (22, 64), (23, 256), (24, 16), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 128), (31, 16), (32, 16), (33, 8), (34, 4), (35, 2), (36, 128), (37, 2), (38, 1), (39, -1), (40, 4), (41, 16), (42, 16), (43, 256), (44, 8), (45, 8), (46, 256), (47, 16), (48, 8), (49, 256), (50, 256), (51, 16), (52, 2), (53, 2), (54, 64), (55, 32), (56, 16), (57, 32), (58, -1), (59, 1), (60, 4), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, 256)]

Covered at level 14 : set()

After reduction : 
 pending  : [12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37, 39]
 solution : [0, 8, 13, 17, 6]


Solution : [0, 8, 13, 17, 6] has cost 21.


Decide in level 14 among pending : [12, 23, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, 256)]

Decide 23 with phase True at level 14

After decision at level 14
 pending : [12, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37, 39]
 solution : [0, 8, 13, 17, 6, 23]


New level: 15
 pending : [12, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37, 39]
 solution : [0, 8, 13, 17, 6, 23]


Before reduction : 
 pending  : [12, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 27, 28, 36, 29, 35, 37, 39]
 solution : [0, 8, 13, 17, 6, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, 256), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 2), (21, 4), (22, 128), (23, -1), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 2), (31, 8), (32, 8), (33, 128), (34, 16), (35, 128), (36, 1), (37, 64), (38, 256), (39, 1), (40, 32), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 2), (50, 256), (51, 32), (52, 128), (53, 16), (54, 32), (55, 32), (56, 16), (57, 32), (58, -1), (59, 64), (60, 32), (61, 256)]

Covered at level 15 : {27, 28}

After reduction : 
 pending  : [12, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 39]
 solution : [0, 8, 13, 17, 6, 23]


Before reduction : 
 pending  : [12, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 39]
 solution : [0, 8, 13, 17, 6, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 2), (21, 4), (22, 128), (23, -1), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 2), (31, 8), (32, 8), (33, 128), (34, 16), (35, 128), (36, 1), (37, 64), (38, 256), (39, 1), (40, 32), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 2), (50, 256), (51, 32), (52, 128), (53, 16), (54, 32), (55, 32), (56, 16), (57, 32), (58, -1), (59, 64), (60, 32), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 2), (21, 4), (22, 128), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 8), (32, 8), (33, 128), (34, 16), (35, 128), (36, 1), (37, 64), (38, 256), (39, 1), (40, 32), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 2), (50, 256), (51, 32), (52, 128), (53, 16), (54, 32), (55, 32), (56, 16), (57, 32), (58, -1), (59, 64), (60, 32), (61, 256)]

Covered at level 15 : set()

After reduction : 
 pending  : [12, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 39]
 solution : [0, 8, 13, 17, 6, 23]


Solution : [0, 8, 13, 17, 6, 23] has cost 31.


Before backtrack at level 15
 pending : [12, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 39]
 solution : [0, 8, 13, 17, 6, 23]

After backtrack at level 15
 pending : [12, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 39, 27, 28]
 solution : [0, 8, 13, 17, 6, 23]


Invert decision for 23 at level 14


New level: 15
 pending : [12, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 39, 27, 28]
 solution : [0, 8, 13, 17, 6]


Before reduction : 
 pending  : [12, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 39, 27, 28]
 solution : [0, 8, 13, 17, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 2), (21, 4), (22, 128), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 8), (32, 8), (33, 128), (34, 16), (35, 128), (36, 1), (37, 64), (38, 256), (39, 1), (40, 32), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 2), (50, 256), (51, 32), (52, 128), (53, 16), (54, 32), (55, 32), (56, 16), (57, 32), (58, -1), (59, 64), (60, 32), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, 256)]

Covered at level 15 : set()

After reduction : 
 pending  : [12, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 39, 27, 28]
 solution : [0, 8, 13, 17, 6]


Solution : [0, 8, 13, 17, 6] has cost 21.


Decide in level 15 among pending : [12, 54, 59, 56, 33, 61, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 39, 27, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, 256)]

Decide 61 with phase True at level 15

After decision at level 15
 pending : [12, 54, 59, 56, 33, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 39, 27, 28]
 solution : [0, 8, 13, 17, 6, 61]


New level: 16
 pending : [12, 54, 59, 56, 33, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 39, 27, 28]
 solution : [0, 8, 13, 17, 6, 61]


Before reduction : 
 pending  : [12, 54, 59, 56, 33, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 60, 34, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 39, 27, 28]
 solution : [0, 8, 13, 17, 6, 61]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, 8), (15, -1), (16, 8), (17, -1), (18, -1), (19, -1), (20, 1), (21, 1), (22, 256), (23, -1), (24, 8), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 128), (31, 8), (32, 8), (33, 0), (34, 0), (35, 2), (36, 128), (37, 2), (38, 1), (39, 0), (40, 4), (41, 64), (42, 16), (43, 256), (44, 8), (45, 8), (46, 1), (47, 1), (48, 1), (49, 256), (50, 2), (51, 2), (52, 2), (53, 2), (54, 64), (55, 16), (56, 32), (57, 16), (58, -1), (59, 1), (60, 0), (61, -1)]

Covered at level 16 : {33, 34, 60, 39}

After reduction : 
 pending  : [12, 54, 59, 56, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28]
 solution : [0, 8, 13, 17, 6, 61]


Before reduction : 
 pending  : [12, 54, 59, 56, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28]
 solution : [0, 8, 13, 17, 6, 61]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, 8), (15, -1), (16, 8), (17, -1), (18, -1), (19, -1), (20, 1), (21, 1), (22, 256), (23, -1), (24, 8), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 128), (31, 8), (32, 8), (33, 0), (34, 0), (35, 2), (36, 128), (37, 2), (38, 1), (39, 0), (40, 4), (41, 64), (42, 16), (43, 256), (44, 8), (45, 8), (46, 1), (47, 1), (48, 1), (49, 256), (50, 2), (51, 2), (52, 2), (53, 2), (54, 64), (55, 16), (56, 32), (57, 16), (58, -1), (59, 1), (60, 0), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, 8), (15, -1), (16, 8), (17, -1), (18, -1), (19, -1), (20, 1), (21, 1), (22, 256), (23, -1), (24, 8), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 128), (31, 8), (32, 8), (33, -1), (34, -1), (35, 2), (36, 128), (37, 2), (38, 1), (39, -1), (40, 4), (41, 16), (42, 16), (43, 256), (44, 8), (45, 8), (46, 1), (47, 1), (48, 1), (49, 256), (50, 2), (51, 2), (52, 2), (53, 2), (54, 64), (55, 16), (56, 32), (57, 16), (58, -1), (59, 1), (60, -1), (61, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [12, 54, 59, 56, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28]
 solution : [0, 8, 13, 17, 6, 61]


Solution : [0, 8, 13, 17, 6, 61] has cost 31.


Before backtrack at level 16
 pending : [12, 54, 59, 56, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28]
 solution : [0, 8, 13, 17, 6, 61]

After backtrack at level 16
 pending : [12, 54, 59, 56, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34, 39]
 solution : [0, 8, 13, 17, 6, 61]


Invert decision for 61 at level 15


New level: 16
 pending : [12, 54, 59, 56, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34, 39]
 solution : [0, 8, 13, 17, 6]


Before reduction : 
 pending  : [12, 54, 59, 56, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34, 39]
 solution : [0, 8, 13, 17, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, 8), (15, -1), (16, 8), (17, -1), (18, -1), (19, -1), (20, 1), (21, 1), (22, 256), (23, -1), (24, 8), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 128), (31, 8), (32, 8), (33, -1), (34, -1), (35, 2), (36, 128), (37, 2), (38, 1), (39, -1), (40, 4), (41, 16), (42, 16), (43, 256), (44, 8), (45, 8), (46, 1), (47, 1), (48, 1), (49, 256), (50, 2), (51, 2), (52, 2), (53, 2), (54, 64), (55, 16), (56, 32), (57, 16), (58, -1), (59, 1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [12, 54, 59, 56, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34, 39]
 solution : [0, 8, 13, 17, 6]


Solution : [0, 8, 13, 17, 6] has cost 21.


Decide in level 16 among pending : [12, 54, 59, 56, 43, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Decide 43 with phase True at level 16

After decision at level 16
 pending : [12, 54, 59, 56, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34, 39]
 solution : [0, 8, 13, 17, 6, 43]


New level: 17
 pending : [12, 54, 59, 56, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34, 39]
 solution : [0, 8, 13, 17, 6, 43]


Before reduction : 
 pending  : [12, 54, 59, 56, 40, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34, 39]
 solution : [0, 8, 13, 17, 6, 43]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, 256), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 4), (21, 8), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 64), (31, 16), (32, 16), (33, 128), (34, 8), (35, 2), (36, 128), (37, 2), (38, 1), (39, 0), (40, 0), (41, 16), (42, 16), (43, -1), (44, 8), (45, 8), (46, 128), (47, 16), (48, 8), (49, 128), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Covered at level 17 : {40, 39}

After reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34]
 solution : [0, 8, 13, 17, 6, 43]


Before reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34]
 solution : [0, 8, 13, 17, 6, 43]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 4), (21, 8), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 64), (31, 16), (32, 16), (33, 128), (34, 8), (35, 2), (36, 128), (37, 2), (38, 1), (39, 0), (40, 0), (41, 16), (42, 16), (43, -1), (44, 8), (45, 8), (46, 128), (47, 16), (48, 8), (49, 128), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 4), (21, 8), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 64), (31, 16), (32, 16), (33, 128), (34, 8), (35, 2), (36, 128), (37, 2), (38, 1), (39, -1), (40, -1), (41, 16), (42, 16), (43, -1), (44, 8), (45, 8), (46, 128), (47, 16), (48, 8), (49, 128), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34]
 solution : [0, 8, 13, 17, 6, 43]


Solution : [0, 8, 13, 17, 6, 43] has cost 31.


Before backtrack at level 17
 pending : [12, 54, 59, 56, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34]
 solution : [0, 8, 13, 17, 6, 43]

After backtrack at level 17
 pending : [12, 54, 59, 56, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34, 40, 39]
 solution : [0, 8, 13, 17, 6, 43]


Invert decision for 43 at level 16


New level: 17
 pending : [12, 54, 59, 56, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34, 40, 39]
 solution : [0, 8, 13, 17, 6]


Before reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34, 40, 39]
 solution : [0, 8, 13, 17, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 4), (21, 8), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 1), (28, 1), (29, 64), (30, 64), (31, 16), (32, 16), (33, 128), (34, 8), (35, 2), (36, 128), (37, 2), (38, 1), (39, -1), (40, -1), (41, 16), (42, 16), (43, -1), (44, 8), (45, 8), (46, 128), (47, 16), (48, 8), (49, 128), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34, 40, 39]
 solution : [0, 8, 13, 17, 6]


Solution : [0, 8, 13, 17, 6] has cost 21.


Decide in level 17 among pending : [12, 54, 59, 56, 41, 44, 50, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34, 40, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Decide 50 with phase True at level 17

After decision at level 17
 pending : [12, 54, 59, 56, 41, 44, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34, 40, 39]
 solution : [0, 8, 13, 17, 6, 50]


New level: 18
 pending : [12, 54, 59, 56, 41, 44, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34, 40, 39]
 solution : [0, 8, 13, 17, 6, 50]


Before reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 52, 38, 22, 46, 24, 14, 42, 45, 51, 53, 48, 20, 57, 49, 55, 31, 30, 32, 16, 4, 7, 47, 21, 36, 29, 35, 37, 27, 28, 33, 60, 34, 40, 39]
 solution : [0, 8, 13, 17, 6, 50]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, 256), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 4), (31, 8), (32, 8), (33, 64), (34, 2), (35, 4), (36, 0), (37, 4), (38, 256), (39, 0), (40, 128), (41, 128), (42, 32), (43, -1), (44, 64), (45, 16), (46, 2), (47, 0), (48, 0), (49, 8), (50, -1), (51, 0), (52, 0), (53, 0), (54, 64), (55, 16), (56, 16), (57, 16), (58, -1), (59, 64), (60, 4), (61, -1)]

Covered at level 18 : {36, 39, 47, 48, 51, 20, 52, 53, 21, 27, 28, 29}

After reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 38, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40]
 solution : [0, 8, 13, 17, 6, 50]


Before reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 38, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40]
 solution : [0, 8, 13, 17, 6, 50]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 4), (31, 8), (32, 8), (33, 64), (34, 2), (35, 4), (36, 0), (37, 4), (38, 256), (39, 0), (40, 128), (41, 128), (42, 32), (43, -1), (44, 64), (45, 16), (46, 2), (47, 0), (48, 0), (49, 8), (50, -1), (51, 0), (52, 0), (53, 0), (54, 64), (55, 16), (56, 16), (57, 16), (58, -1), (59, 64), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 4), (31, 8), (32, 8), (33, 64), (34, 2), (35, 4), (36, -1), (37, 4), (38, 256), (39, -1), (40, 128), (41, 128), (42, 32), (43, -1), (44, 64), (45, 16), (46, 2), (47, -1), (48, -1), (49, 8), (50, -1), (51, -1), (52, -1), (53, -1), (54, 64), (55, 16), (56, 16), (57, 16), (58, -1), (59, 64), (60, 4), (61, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 38, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40]
 solution : [0, 8, 13, 17, 6, 50]


Solution : [0, 8, 13, 17, 6, 50] has cost 31.


Before backtrack at level 18
 pending : [12, 54, 59, 56, 41, 44, 38, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40]
 solution : [0, 8, 13, 17, 6, 50]

After backtrack at level 18
 pending : [12, 54, 59, 56, 41, 44, 38, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28, 39]
 solution : [0, 8, 13, 17, 6, 50]


Invert decision for 50 at level 17


New level: 18
 pending : [12, 54, 59, 56, 41, 44, 38, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28, 39]
 solution : [0, 8, 13, 17, 6]


Before reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 38, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28, 39]
 solution : [0, 8, 13, 17, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 4), (31, 8), (32, 8), (33, 64), (34, 2), (35, 4), (36, -1), (37, 4), (38, 256), (39, -1), (40, 128), (41, 128), (42, 32), (43, -1), (44, 64), (45, 16), (46, 2), (47, -1), (48, -1), (49, 8), (50, -1), (51, -1), (52, -1), (53, -1), (54, 64), (55, 16), (56, 16), (57, 16), (58, -1), (59, 64), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 38, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28, 39]
 solution : [0, 8, 13, 17, 6]


Solution : [0, 8, 13, 17, 6] has cost 21.


Decide in level 18 among pending : [12, 54, 59, 56, 41, 44, 38, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Decide 38 with phase True at level 18

After decision at level 18
 pending : [12, 54, 59, 56, 41, 44, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28, 39]
 solution : [0, 8, 13, 17, 6, 38]


New level: 19
 pending : [12, 54, 59, 56, 41, 44, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28, 39]
 solution : [0, 8, 13, 17, 6, 38]


Before reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28, 39]
 solution : [0, 8, 13, 17, 6, 38]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, 256), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, 16), (15, -1), (16, 32), (17, -1), (18, -1), (19, -1), (20, 4), (21, 8), (22, 128), (23, -1), (24, 8), (25, -1), (26, -1), (27, 2), (28, 2), (29, 64), (30, 128), (31, 16), (32, 16), (33, 64), (34, 8), (35, 4), (36, 128), (37, 4), (38, -1), (39, 0), (40, 8), (41, 128), (42, 32), (43, -1), (44, 64), (45, 32), (46, 128), (47, 16), (48, 8), (49, 256), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Covered at level 19 : {39}

After reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28]
 solution : [0, 8, 13, 17, 6, 38]


Before reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28]
 solution : [0, 8, 13, 17, 6, 38]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, 16), (15, -1), (16, 32), (17, -1), (18, -1), (19, -1), (20, 4), (21, 8), (22, 128), (23, -1), (24, 8), (25, -1), (26, -1), (27, 2), (28, 2), (29, 64), (30, 128), (31, 16), (32, 16), (33, 64), (34, 8), (35, 4), (36, 128), (37, 4), (38, -1), (39, 0), (40, 8), (41, 128), (42, 32), (43, -1), (44, 64), (45, 32), (46, 128), (47, 16), (48, 8), (49, 256), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, 16), (15, -1), (16, 32), (17, -1), (18, -1), (19, -1), (20, 4), (21, 8), (22, 128), (23, -1), (24, 8), (25, -1), (26, -1), (27, 2), (28, 2), (29, 64), (30, 128), (31, 16), (32, 16), (33, 64), (34, 8), (35, 4), (36, 128), (37, 4), (38, -1), (39, -1), (40, 8), (41, 32), (42, 32), (43, -1), (44, 64), (45, 32), (46, 128), (47, 16), (48, 8), (49, 256), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28]
 solution : [0, 8, 13, 17, 6, 38]


Solution : [0, 8, 13, 17, 6, 38] has cost 31.


Before backtrack at level 19
 pending : [12, 54, 59, 56, 41, 44, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28]
 solution : [0, 8, 13, 17, 6, 38]

After backtrack at level 19
 pending : [12, 54, 59, 56, 41, 44, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28, 39]
 solution : [0, 8, 13, 17, 6, 38]


Invert decision for 38 at level 18


New level: 19
 pending : [12, 54, 59, 56, 41, 44, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28, 39]
 solution : [0, 8, 13, 17, 6]


Before reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28, 39]
 solution : [0, 8, 13, 17, 6]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, 16), (15, -1), (16, 32), (17, -1), (18, -1), (19, -1), (20, 4), (21, 8), (22, 128), (23, -1), (24, 8), (25, -1), (26, -1), (27, 2), (28, 2), (29, 64), (30, 128), (31, 16), (32, 16), (33, 64), (34, 8), (35, 4), (36, 128), (37, 4), (38, -1), (39, -1), (40, 8), (41, 32), (42, 32), (43, -1), (44, 64), (45, 32), (46, 128), (47, 16), (48, 8), (49, 256), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28, 39]
 solution : [0, 8, 13, 17, 6]


Solution : [0, 8, 13, 17, 6] has cost 21.


Decide in level 19 among pending : [12, 54, 59, 56, 41, 44, 22, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Decide 22 with phase True at level 19

After decision at level 19
 pending : [12, 54, 59, 56, 41, 44, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28, 39]
 solution : [0, 8, 13, 17, 6, 22]


New level: 20
 pending : [12, 54, 59, 56, 41, 44, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28, 39]
 solution : [0, 8, 13, 17, 6, 22]


Before reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 20, 47, 21, 36, 29, 27, 28, 39]
 solution : [0, 8, 13, 17, 6, 22]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, 256), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, 2), (15, -1), (16, 2), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 2), (25, -1), (26, -1), (27, 0), (28, 0), (29, 2), (30, 128), (31, 8), (32, 8), (33, 32), (34, 8), (35, 4), (36, 2), (37, 4), (38, -1), (39, 0), (40, 8), (41, 128), (42, 32), (43, -1), (44, 64), (45, 32), (46, 2), (47, 2), (48, 1), (49, 256), (50, -1), (51, 32), (52, 8), (53, 8), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Covered at level 20 : {39, 20, 21, 27, 28}

After reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 47, 36, 29]
 solution : [0, 8, 13, 17, 6, 22]


Before reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 47, 36, 29]
 solution : [0, 8, 13, 17, 6, 22]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, 2), (15, -1), (16, 2), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 2), (25, -1), (26, -1), (27, 0), (28, 0), (29, 2), (30, 128), (31, 8), (32, 8), (33, 32), (34, 8), (35, 4), (36, 2), (37, 4), (38, -1), (39, 0), (40, 8), (41, 128), (42, 32), (43, -1), (44, 64), (45, 32), (46, 2), (47, 2), (48, 1), (49, 256), (50, -1), (51, 32), (52, 8), (53, 8), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, 2), (15, -1), (16, 2), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 128), (31, 8), (32, 8), (33, 32), (34, 8), (35, 4), (36, 2), (37, 4), (38, -1), (39, -1), (40, 8), (41, 32), (42, 32), (43, -1), (44, 64), (45, 32), (46, 2), (47, 2), (48, 1), (49, 256), (50, -1), (51, 32), (52, 8), (53, 8), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 47, 36, 29]
 solution : [0, 8, 13, 17, 6, 22]


Solution : [0, 8, 13, 17, 6, 22] has cost 31.


Before backtrack at level 20
 pending : [12, 54, 59, 56, 41, 44, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 47, 36, 29]
 solution : [0, 8, 13, 17, 6, 22]

After backtrack at level 20
 pending : [12, 54, 59, 56, 41, 44, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 47, 36, 29, 20, 21, 27, 28, 39]
 solution : [0, 8, 13, 17, 6, 22]


Invert decision for 22 at level 19


New level: 20
 pending : [12, 54, 59, 56, 41, 44, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 47, 36, 29, 20, 21, 27, 28, 39]
 solution : [0, 8, 13, 17, 6]


Before reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 47, 36, 29, 20, 21, 27, 28, 39]
 solution : [0, 8, 13, 17, 6]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, 2), (15, -1), (16, 2), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 128), (31, 8), (32, 8), (33, 32), (34, 8), (35, 4), (36, 2), (37, 4), (38, -1), (39, -1), (40, 8), (41, 32), (42, 32), (43, -1), (44, 64), (45, 32), (46, 2), (47, 2), (48, 1), (49, 256), (50, -1), (51, 32), (52, 8), (53, 8), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 47, 36, 29, 20, 21, 27, 28, 39]
 solution : [0, 8, 13, 17, 6]


Solution : [0, 8, 13, 17, 6] has cost 21.


Decide in level 20 among pending : [12, 54, 59, 56, 41, 44, 46, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 47, 36, 29, 20, 21, 27, 28, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Decide 46 with phase True at level 20

After decision at level 20
 pending : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 47, 36, 29, 20, 21, 27, 28, 39]
 solution : [0, 8, 13, 17, 6, 46]


New level: 21
 pending : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 47, 36, 29, 20, 21, 27, 28, 39]
 solution : [0, 8, 13, 17, 6, 46]


Before reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 48, 47, 36, 29, 20, 21, 27, 28, 39]
 solution : [0, 8, 13, 17, 6, 46]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, 256), (47, 32), (48, 16), (49, 256), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, 8), (15, -1), (16, 8), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 8), (25, -1), (26, -1), (27, 0), (28, 0), (29, 2), (30, 4), (31, 8), (32, 8), (33, 4), (34, 4), (35, 8), (36, 2), (37, 8), (38, -1), (39, 0), (40, 8), (41, 128), (42, 32), (43, -1), (44, 64), (45, 32), (46, -1), (47, 0), (48, 0), (49, 16), (50, -1), (51, 16), (52, 8), (53, 8), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 16), (61, -1)]

Covered at level 21 : {39, 47, 48, 20, 21, 27, 28}

After reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29]
 solution : [0, 8, 13, 17, 6, 46]


Before reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29]
 solution : [0, 8, 13, 17, 6, 46]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, 8), (15, -1), (16, 8), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 8), (25, -1), (26, -1), (27, 0), (28, 0), (29, 2), (30, 4), (31, 8), (32, 8), (33, 4), (34, 4), (35, 8), (36, 2), (37, 8), (38, -1), (39, 0), (40, 8), (41, 128), (42, 32), (43, -1), (44, 64), (45, 32), (46, -1), (47, 0), (48, 0), (49, 16), (50, -1), (51, 16), (52, 8), (53, 8), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, 8), (15, -1), (16, 8), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 4), (31, 8), (32, 8), (33, 4), (34, 4), (35, 4), (36, 2), (37, 4), (38, -1), (39, -1), (40, 8), (41, 32), (42, 32), (43, -1), (44, 64), (45, 32), (46, -1), (47, -1), (48, -1), (49, 16), (50, -1), (51, 16), (52, 8), (53, 8), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 16), (61, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29]
 solution : [0, 8, 13, 17, 6, 46]


Solution : [0, 8, 13, 17, 6, 46] has cost 31.


Before backtrack at level 21
 pending : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29]
 solution : [0, 8, 13, 17, 6, 46]

After backtrack at level 21
 pending : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 27, 28, 39]
 solution : [0, 8, 13, 17, 6, 46]


Invert decision for 46 at level 20


New level: 21
 pending : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 27, 28, 39]
 solution : [0, 8, 13, 17, 6]


Before reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 27, 28, 39]
 solution : [0, 8, 13, 17, 6]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, 8), (15, -1), (16, 8), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 4), (31, 8), (32, 8), (33, 4), (34, 4), (35, 4), (36, 2), (37, 4), (38, -1), (39, -1), (40, 8), (41, 32), (42, 32), (43, -1), (44, 64), (45, 32), (46, -1), (47, -1), (48, -1), (49, 16), (50, -1), (51, 16), (52, 8), (53, 8), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, -1), (47, 32), (48, 16), (49, 256), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 27, 28, 39]
 solution : [0, 8, 13, 17, 6]


Solution : [0, 8, 13, 17, 6] has cost 21.


Decide in level 21 among pending : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 49, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 27, 28, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, -1), (47, 32), (48, 16), (49, 256), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Decide 49 with phase True at level 21

After decision at level 21
 pending : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 27, 28, 39]
 solution : [0, 8, 13, 17, 6, 49]


New level: 22
 pending : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 27, 28, 39]
 solution : [0, 8, 13, 17, 6, 49]


Before reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 55, 31, 30, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 27, 28, 39]
 solution : [0, 8, 13, 17, 6, 49]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, -1), (47, 32), (48, 16), (49, 256), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 2), (21, 4), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 0), (31, 4), (32, 4), (33, 128), (34, 16), (35, 128), (36, 1), (37, 64), (38, -1), (39, 1), (40, 32), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, -1), (47, 8), (48, 4), (49, -1), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 16), (56, 32), (57, 16), (58, -1), (59, 64), (60, 32), (61, -1)]

Covered at level 22 : {27, 28, 30}

After reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 55, 31, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39]
 solution : [0, 8, 13, 17, 6, 49]


Before reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 55, 31, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39]
 solution : [0, 8, 13, 17, 6, 49]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 2), (21, 4), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 0), (31, 4), (32, 4), (33, 128), (34, 16), (35, 128), (36, 1), (37, 64), (38, -1), (39, 1), (40, 32), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, -1), (47, 8), (48, 4), (49, -1), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 16), (56, 32), (57, 16), (58, -1), (59, 64), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 2), (21, 4), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, -1), (31, 4), (32, 4), (33, 128), (34, 16), (35, 128), (36, 1), (37, 64), (38, -1), (39, 1), (40, 32), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, -1), (47, 8), (48, 4), (49, -1), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 16), (56, 32), (57, 16), (58, -1), (59, 64), (60, 32), (61, -1)]

Covered at level 22 : set()

After reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 55, 31, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39]
 solution : [0, 8, 13, 17, 6, 49]


Solution : [0, 8, 13, 17, 6, 49] has cost 31.


Before backtrack at level 22
 pending : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 55, 31, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39]
 solution : [0, 8, 13, 17, 6, 49]

After backtrack at level 22
 pending : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 55, 31, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28]
 solution : [0, 8, 13, 17, 6, 49]


Invert decision for 49 at level 21


New level: 22
 pending : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 55, 31, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28]
 solution : [0, 8, 13, 17, 6]


Before reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 55, 31, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28]
 solution : [0, 8, 13, 17, 6]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 2), (21, 4), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, -1), (31, 4), (32, 4), (33, 128), (34, 16), (35, 128), (36, 1), (37, 64), (38, -1), (39, 1), (40, 32), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, -1), (47, 8), (48, 4), (49, -1), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 16), (56, 32), (57, 16), (58, -1), (59, 64), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, -1), (47, 32), (48, 16), (49, -1), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Covered at level 22 : set()

After reduction : 
 pending  : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 55, 31, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28]
 solution : [0, 8, 13, 17, 6]


Solution : [0, 8, 13, 17, 6] has cost 21.


Decide in level 22 among pending : [12, 54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 55, 31, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, -1), (47, 32), (48, 16), (49, -1), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Decide 12 with phase True at level 22

After decision at level 22
 pending : [54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 55, 31, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28]
 solution : [0, 8, 13, 17, 6, 12]


New level: 23
 pending : [54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 55, 31, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28]
 solution : [0, 8, 13, 17, 6, 12]


Before reduction : 
 pending  : [54, 59, 56, 41, 44, 24, 14, 42, 45, 57, 55, 31, 32, 16, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28]
 solution : [0, 8, 13, 17, 6, 12]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, -1), (47, 32), (48, 16), (49, -1), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 16), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, 32), (42, 32), (43, -1), (44, 16), (45, 16), (46, -1), (47, 16), (48, 16), (49, -1), (50, -1), (51, 32), (52, 16), (53, 16), (54, 16), (55, 32), (56, 16), (57, 32), (58, -1), (59, 16), (60, 32), (61, -1)]

Covered at level 23 : {24, 16, 14}

After reduction : 
 pending  : [54, 59, 56, 41, 44, 42, 45, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28]
 solution : [0, 8, 13, 17, 6, 12]


Before reduction : 
 pending  : [54, 59, 56, 41, 44, 42, 45, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28]
 solution : [0, 8, 13, 17, 6, 12]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 16), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, 32), (42, 32), (43, -1), (44, 16), (45, 16), (46, -1), (47, 16), (48, 16), (49, -1), (50, -1), (51, 32), (52, 16), (53, 16), (54, 16), (55, 32), (56, 16), (57, 32), (58, -1), (59, 16), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 16), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, 32), (42, 32), (43, -1), (44, 16), (45, 16), (46, -1), (47, 16), (48, 16), (49, -1), (50, -1), (51, 32), (52, 16), (53, 16), (54, 16), (55, 32), (56, 16), (57, 32), (58, -1), (59, 16), (60, 32), (61, -1)]

Covered at level 23 : set()

After reduction : 
 pending  : [54, 59, 56, 41, 44, 42, 45, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28]
 solution : [0, 8, 13, 17, 6, 12]


Solution : [0, 8, 13, 17, 6, 12] has cost 27.


Before backtrack at level 23
 pending : [54, 59, 56, 41, 44, 42, 45, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28]
 solution : [0, 8, 13, 17, 6, 12]

After backtrack at level 23
 pending : [54, 59, 56, 41, 44, 42, 45, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16]
 solution : [0, 8, 13, 17, 6, 12]


Invert decision for 12 at level 22


New level: 23
 pending : [54, 59, 56, 41, 44, 42, 45, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16]
 solution : [0, 8, 13, 17, 6]


Before reduction : 
 pending  : [54, 59, 56, 41, 44, 42, 45, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16]
 solution : [0, 8, 13, 17, 6]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 16), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, 32), (42, 32), (43, -1), (44, 16), (45, 16), (46, -1), (47, 16), (48, 16), (49, -1), (50, -1), (51, 32), (52, 16), (53, 16), (54, 16), (55, 32), (56, 16), (57, 32), (58, -1), (59, 16), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, -1), (47, 32), (48, 16), (49, -1), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Covered at level 23 : set()

After reduction : 
 pending  : [54, 59, 56, 41, 44, 42, 45, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16]
 solution : [0, 8, 13, 17, 6]


Solution : [0, 8, 13, 17, 6] has cost 21.


Decide in level 23 among pending : [54, 59, 56, 41, 44, 42, 45, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, -1), (47, 32), (48, 16), (49, -1), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Decide 41 with phase True at level 23

After decision at level 23
 pending : [54, 59, 56, 44, 42, 45, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16]
 solution : [0, 8, 13, 17, 6, 41]


New level: 24
 pending : [54, 59, 56, 44, 42, 45, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16]
 solution : [0, 8, 13, 17, 6, 41]


Before reduction : 
 pending  : [54, 59, 56, 44, 42, 45, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16]
 solution : [0, 8, 13, 17, 6, 41]

Essensial at level 24 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, 128), (42, 64), (43, -1), (44, 64), (45, 32), (46, -1), (47, 32), (48, 16), (49, -1), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 2), (28, 2), (29, 64), (30, 128), (31, 8), (32, 8), (33, 128), (34, 16), (35, 8), (36, 128), (37, 8), (38, -1), (39, 4), (40, 8), (41, -1), (42, 0), (43, -1), (44, 0), (45, 0), (46, -1), (47, 32), (48, 16), (49, -1), (50, -1), (51, 16), (52, 128), (53, 8), (54, 32), (55, 8), (56, 16), (57, 8), (58, -1), (59, 32), (60, 16), (61, -1)]

Covered at level 24 : {42, 44, 45}

After reduction : 
 pending  : [54, 59, 56, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16]
 solution : [0, 8, 13, 17, 6, 41]


Before reduction : 
 pending  : [54, 59, 56, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16]
 solution : [0, 8, 13, 17, 6, 41]

Essensial at level 24 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 2), (28, 2), (29, 64), (30, 128), (31, 8), (32, 8), (33, 128), (34, 16), (35, 8), (36, 128), (37, 8), (38, -1), (39, 4), (40, 8), (41, -1), (42, 0), (43, -1), (44, 0), (45, 0), (46, -1), (47, 32), (48, 16), (49, -1), (50, -1), (51, 16), (52, 128), (53, 8), (54, 32), (55, 8), (56, 16), (57, 8), (58, -1), (59, 32), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 2), (28, 2), (29, 64), (30, 128), (31, 8), (32, 8), (33, 128), (34, 16), (35, 8), (36, 128), (37, 8), (38, -1), (39, 4), (40, 8), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, 32), (48, 16), (49, -1), (50, -1), (51, 16), (52, 128), (53, 8), (54, 32), (55, 8), (56, 16), (57, 8), (58, -1), (59, 32), (60, 16), (61, -1)]

Covered at level 24 : set()

After reduction : 
 pending  : [54, 59, 56, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16]
 solution : [0, 8, 13, 17, 6, 41]


Solution : [0, 8, 13, 17, 6, 41] has cost 31.


Before backtrack at level 24
 pending : [54, 59, 56, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16]
 solution : [0, 8, 13, 17, 6, 41]

After backtrack at level 24
 pending : [54, 59, 56, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16, 44, 42, 45]
 solution : [0, 8, 13, 17, 6, 41]


Invert decision for 41 at level 23


New level: 24
 pending : [54, 59, 56, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16, 44, 42, 45]
 solution : [0, 8, 13, 17, 6]


Before reduction : 
 pending  : [54, 59, 56, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16, 44, 42, 45]
 solution : [0, 8, 13, 17, 6]

Essensial at level 24 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 2), (28, 2), (29, 64), (30, 128), (31, 8), (32, 8), (33, 128), (34, 16), (35, 8), (36, 128), (37, 8), (38, -1), (39, 4), (40, 8), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, 32), (48, 16), (49, -1), (50, -1), (51, 16), (52, 128), (53, 8), (54, 32), (55, 8), (56, 16), (57, 8), (58, -1), (59, 32), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, -1), (42, 64), (43, -1), (44, 64), (45, 32), (46, -1), (47, 32), (48, 16), (49, -1), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Covered at level 24 : set()

After reduction : 
 pending  : [54, 59, 56, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16, 44, 42, 45]
 solution : [0, 8, 13, 17, 6]


Solution : [0, 8, 13, 17, 6] has cost 21.


Decide in level 24 among pending : [54, 59, 56, 57, 55, 31, 32, 4, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16, 44, 42, 45]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, -1), (42, 64), (43, -1), (44, 64), (45, 32), (46, -1), (47, 32), (48, 16), (49, -1), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

Decide 4 with phase True at level 24

After decision at level 24
 pending : [54, 59, 56, 57, 55, 31, 32, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16, 44, 42, 45]
 solution : [0, 8, 13, 17, 6, 4]


New level: 25
 pending : [54, 59, 56, 57, 55, 31, 32, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16, 44, 42, 45]
 solution : [0, 8, 13, 17, 6, 4]


Before reduction : 
 pending  : [54, 59, 56, 57, 55, 31, 32, 7, 35, 37, 33, 60, 34, 40, 52, 51, 53, 36, 29, 48, 47, 20, 21, 39, 30, 27, 28, 24, 14, 16, 44, 42, 45]
 solution : [0, 8, 13, 17, 6, 4]

Essensial at level 25 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 16), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 128), (34, 16), (35, 128), (36, 128), (37, 64), (38, -1), (39, 4), (40, 128), (41, -1), (42, 64), (43, -1), (44, 64), (45, 32), (46, -1), (47, 32), (48, 16), (49, -1), (50, -1), (51, 32), (52, 128), (53, 16), (54, 64), (55, 32), (56, 32), (57, 32), (58, -1), (59, 64), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 2), (30, 0), (31, 0), (32, 0), (33, 4), (34, 0), (35, 8), (36, 2), (37, 8), (38, -1), (39, 0), (40, 16), (41, -1), (42, 16), (43, -1), (44, 32), (45, 16), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 4), (52, 128), (53, 4), (54, 64), (55, 8), (56, 32), (57, 8), (58, -1), (59, 32), (60, 4), (61, -1)]

Covered at level 25 : {32, 34, 7, 39, 47, 48, 20, 21, 27, 28, 30, 31}

After reduction : 
 pending  : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45]
 solution : [0, 8, 13, 17, 6, 4]


Before reduction : 
 pending  : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45]
 solution : [0, 8, 13, 17, 6, 4]

Essensial at level 25 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 2), (30, 0), (31, 0), (32, 0), (33, 4), (34, 0), (35, 8), (36, 2), (37, 8), (38, -1), (39, 0), (40, 16), (41, -1), (42, 16), (43, -1), (44, 32), (45, 16), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 4), (52, 128), (53, 4), (54, 64), (55, 8), (56, 32), (57, 8), (58, -1), (59, 32), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, 8), (36, 2), (37, 8), (38, -1), (39, -1), (40, 16), (41, -1), (42, 16), (43, -1), (44, 32), (45, 16), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4), (52, 128), (53, 4), (54, 64), (55, 8), (56, 32), (57, 8), (58, -1), (59, 16), (60, 4), (61, -1)]

Covered at level 25 : set()

After reduction : 
 pending  : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45]
 solution : [0, 8, 13, 17, 6, 4]


Solution : [0, 8, 13, 17, 6, 4] has cost 30.


Before backtrack at level 25
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45]
 solution : [0, 8, 13, 17, 6, 4]

After backtrack at level 25
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 31, 32, 7, 34, 48, 47, 20, 21, 39, 30, 27, 28]
 solution : [0, 8, 13, 17, 6, 4]


Invert decision for 4 at level 24


New level: 25
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 31, 32, 7, 34, 48, 47, 20, 21, 39, 30, 27, 28]
 solution : [0, 8, 13, 17, 6]


Before reduction : 
 pending  : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 31, 32, 7, 34, 48, 47, 20, 21, 39, 30, 27, 28]
 solution : [0, 8, 13, 17, 6]

Essensial at level 25 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, 8), (36, 2), (37, 8), (38, -1), (39, -1), (40, 16), (41, -1), (42, 16), (43, -1), (44, 32), (45, 16), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4), (52, 128), (53, 4), (54, 64), (55, 8), (56, 32), (57, 8), (58, -1), (59, 16), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 2), (30, 0), (31, 0), (32, 0), (33, 4), (34, 0), (35, 16), (36, 2), (37, 16), (38, -1), (39, 0), (40, 8), (41, -1), (42, 16), (43, -1), (44, 32), (45, 16), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 4), (52, 128), (53, 4), (54, 64), (55, 8), (56, 32), (57, 8), (58, -1), (59, 16), (60, 4), (61, -1)]

Covered at level 25 : {32, 34, 39, 47, 48, 20, 21, 27, 28, 30, 31}

After reduction : 
 pending  : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45]
 solution : [0, 8, 13, 17, 6, 7]


Before reduction : 
 pending  : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45]
 solution : [0, 8, 13, 17, 6, 7]

Essensial at level 25 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 2), (30, 0), (31, 0), (32, 0), (33, 4), (34, 0), (35, 16), (36, 2), (37, 16), (38, -1), (39, 0), (40, 8), (41, -1), (42, 16), (43, -1), (44, 32), (45, 16), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 4), (52, 128), (53, 4), (54, 64), (55, 8), (56, 32), (57, 8), (58, -1), (59, 16), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, 16), (36, 2), (37, 16), (38, -1), (39, -1), (40, 8), (41, -1), (42, 16), (43, -1), (44, 32), (45, 16), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4), (52, 128), (53, 4), (54, 32), (55, 8), (56, 32), (57, 8), (58, -1), (59, 16), (60, 4), (61, -1)]

Covered at level 25 : set()

After reduction : 
 pending  : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45]
 solution : [0, 8, 13, 17, 6, 7]


Solution : [0, 8, 13, 17, 6, 7] has cost 30.


Before backtrack at level 25
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45]
 solution : [0, 8, 13, 17, 6, 7]

After backtrack at level 25
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28]
 solution : [0, 8, 13, 17, 6]


Before backtrack at level 24
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28]
 solution : [0, 8, 13, 17, 6]

After backtrack at level 24
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4]
 solution : [0, 8, 13, 17, 6]


Before backtrack at level 23
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4]
 solution : [0, 8, 13, 17, 6]

After backtrack at level 23
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41]
 solution : [0, 8, 13, 17, 6]


Before backtrack at level 22
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41]
 solution : [0, 8, 13, 17, 6]

After backtrack at level 22
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12]
 solution : [0, 8, 13, 17, 6]


Before backtrack at level 21
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12]
 solution : [0, 8, 13, 17, 6]

After backtrack at level 21
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49]
 solution : [0, 8, 13, 17, 6]


Before backtrack at level 20
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49]
 solution : [0, 8, 13, 17, 6]

After backtrack at level 20
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49, 46]
 solution : [0, 8, 13, 17, 6]


Before backtrack at level 19
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49, 46]
 solution : [0, 8, 13, 17, 6]

After backtrack at level 19
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49, 46, 22]
 solution : [0, 8, 13, 17, 6]


Before backtrack at level 18
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49, 46, 22]
 solution : [0, 8, 13, 17, 6]

After backtrack at level 18
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49, 46, 22, 38]
 solution : [0, 8, 13, 17, 6]


Before backtrack at level 17
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49, 46, 22, 38]
 solution : [0, 8, 13, 17, 6]

After backtrack at level 17
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49, 46, 22, 38, 50]
 solution : [0, 8, 13, 17, 6]


Before backtrack at level 16
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49, 46, 22, 38, 50]
 solution : [0, 8, 13, 17, 6]

After backtrack at level 16
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49, 46, 22, 38, 50, 43]
 solution : [0, 8, 13, 17, 6]


Before backtrack at level 15
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49, 46, 22, 38, 50, 43]
 solution : [0, 8, 13, 17, 6]

After backtrack at level 15
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49, 46, 22, 38, 50, 43, 61]
 solution : [0, 8, 13, 17, 6]


Before backtrack at level 14
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49, 46, 22, 38, 50, 43, 61]
 solution : [0, 8, 13, 17, 6]

After backtrack at level 14
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49, 46, 22, 38, 50, 43, 61, 23]
 solution : [0, 8, 13, 17, 6]


Before backtrack at level 13
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49, 46, 22, 38, 50, 43, 61, 23]
 solution : [0, 8, 13, 17, 6]

After backtrack at level 13
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49, 46, 22, 38, 50, 43, 61, 23, 58]
 solution : [0, 8, 13, 17, 6]


Before backtrack at level 12
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49, 46, 22, 38, 50, 43, 61, 23, 58]
 solution : [0, 8, 13, 17, 6]

After backtrack at level 12
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49, 46, 22, 38, 50, 43, 61, 23, 58, 18]
 solution : [0, 8, 13, 17, 6]


Invert decision for 6 at level 11


New level: 12
 pending : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49, 46, 22, 38, 50, 43, 61, 23, 58, 18]
 solution : [0, 8, 13, 17]


Before reduction : 
 pending  : [54, 59, 56, 57, 55, 35, 37, 33, 60, 40, 52, 51, 53, 36, 29, 24, 14, 16, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 4, 41, 12, 49, 46, 22, 38, 50, 43, 61, 23, 58, 18]
 solution : [0, 8, 13, 17]

Essensial at level 12 : {18, 4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, 16), (36, 2), (37, 16), (38, -1), (39, -1), (40, 8), (41, -1), (42, 16), (43, -1), (44, 32), (45, 16), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4), (52, 128), (53, 4), (54, 32), (55, 8), (56, 32), (57, 8), (58, -1), (59, 16), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 16), (23, 1), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 2), (34, 0), (35, 0), (36, 0), (37, 0), (38, 1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 2), (47, 0), (48, 0), (49, 0), (50, 1), (51, 0), (52, 64), (53, 0), (54, 2), (55, 0), (56, 2), (57, 0), (58, 64), (59, 1), (60, 0), (61, 2)]

Covered at level 12 : {7, 20, 21, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 55, 57, 60}

After reduction : 
 pending  : [54, 59, 56, 33, 52, 24, 14, 16, 12, 46, 22, 38, 50, 61, 23, 58]
 solution : [0, 8, 13, 17, 18, 4]


Before reduction : 
 pending  : [54, 59, 56, 33, 52, 24, 14, 16, 12, 46, 22, 38, 50, 61, 23, 58]
 solution : [0, 8, 13, 17, 18, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 16), (23, 1), (24, 16), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 2), (34, 0), (35, 0), (36, 0), (37, 0), (38, 1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 2), (47, 0), (48, 0), (49, 0), (50, 1), (51, 0), (52, 64), (53, 0), (54, 2), (55, 0), (56, 2), (57, 0), (58, 64), (59, 1), (60, 0), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 2), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, 2), (55, -1), (56, 2), (57, -1), (58, 64), (59, 1), (60, -1), (61, 2)]

Covered at level 12 : set()

After reduction : 
 pending  : [54, 59, 56, 33, 52, 24, 14, 16, 12, 46, 22, 38, 50, 61, 23, 58]
 solution : [0, 8, 13, 17, 18, 4]


Solution : [0, 8, 13, 17, 18, 4] has cost 37.


Before backtrack at level 12
 pending : [54, 59, 56, 33, 52, 24, 14, 16, 12, 46, 22, 38, 50, 61, 23, 58]
 solution : [0, 8, 13, 17, 18, 4]

After backtrack at level 12
 pending : [54, 59, 56, 33, 52, 24, 14, 16, 12, 46, 22, 38, 50, 61, 23, 58, 4, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 41, 49, 43]
 solution : [0, 8, 13, 17]


Before backtrack at level 11
 pending : [54, 59, 56, 33, 52, 24, 14, 16, 12, 46, 22, 38, 50, 61, 23, 58, 4, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 41, 49, 43]
 solution : [0, 8, 13, 17]

After backtrack at level 11
 pending : [54, 59, 56, 33, 52, 24, 14, 16, 12, 46, 22, 38, 50, 61, 23, 58, 4, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 41, 49, 43, 6]
 solution : [0, 8, 13, 17]


Before backtrack at level 10
 pending : [54, 59, 56, 33, 52, 24, 14, 16, 12, 46, 22, 38, 50, 61, 23, 58, 4, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 41, 49, 43, 6]
 solution : [0, 8, 13, 17]

After backtrack at level 10
 pending : [54, 59, 56, 33, 52, 24, 14, 16, 12, 46, 22, 38, 50, 61, 23, 58, 4, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 41, 49, 43, 6, 15, 26, 19]
 solution : [0, 8, 13, 17]


Invert decision for 17 at level 9


New level: 10
 pending : [54, 59, 56, 33, 52, 24, 14, 16, 12, 46, 22, 38, 50, 61, 23, 58, 4, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 41, 49, 43, 6, 15, 26, 19]
 solution : [0, 8, 13]


Before reduction : 
 pending  : [54, 59, 56, 33, 52, 24, 14, 16, 12, 46, 22, 38, 50, 61, 23, 58, 4, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 7, 31, 32, 34, 48, 47, 20, 21, 39, 30, 27, 28, 41, 49, 43, 6, 15, 26, 19]
 solution : [0, 8, 13]

Essensial at level 10 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 1), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, 2), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, 2), (55, -1), (56, 2), (57, -1), (58, 64), (59, 1), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, -1), (18, 512), (19, 512), (20, 64), (21, 0), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 16), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 32), (36, 32), (37, 16), (38, 256), (39, 256), (40, 32), (41, 256), (42, 128), (43, 64), (44, 128), (45, 64), (46, 64), (47, 0), (48, 64), (49, 64), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 10 : {21, 47, 7}

After reduction : 
 pending  : [54, 59, 56, 33, 52, 24, 14, 16, 12, 46, 22, 38, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 31, 32, 34, 48, 20, 39, 30, 27, 28, 41, 49, 43, 6, 15, 26, 19]
 solution : [0, 8, 13, 4]


Before reduction : 
 pending  : [54, 59, 56, 33, 52, 24, 14, 16, 12, 46, 22, 38, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 31, 32, 34, 48, 20, 39, 30, 27, 28, 41, 49, 43, 6, 15, 26, 19]
 solution : [0, 8, 13, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, -1), (18, 512), (19, 512), (20, 64), (21, 0), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 16), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 32), (36, 32), (37, 16), (38, 256), (39, 256), (40, 32), (41, 256), (42, 128), (43, 64), (44, 128), (45, 64), (46, 64), (47, 0), (48, 64), (49, 64), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, -1), (18, 512), (19, 512), (20, 64), (21, -1), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 16), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 32), (36, 32), (37, 16), (38, 256), (39, 256), (40, 32), (41, 256), (42, 128), (43, 64), (44, 128), (45, 64), (46, 64), (47, -1), (48, 64), (49, 64), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 10 : set()

After reduction : 
 pending  : [54, 59, 56, 33, 52, 24, 14, 16, 12, 46, 22, 38, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 31, 32, 34, 48, 20, 39, 30, 27, 28, 41, 49, 43, 6, 15, 26, 19]
 solution : [0, 8, 13, 4]


Solution : [0, 8, 13, 4] has cost 22.


Decide in level 10 among pending : [54, 59, 56, 33, 52, 24, 14, 16, 12, 46, 22, 38, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 31, 32, 34, 48, 20, 39, 30, 27, 28, 41, 49, 43, 6, 15, 26, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, -1), (18, 512), (19, 512), (20, 64), (21, -1), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 16), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 32), (36, 32), (37, 16), (38, 256), (39, 256), (40, 32), (41, 256), (42, 128), (43, 64), (44, 128), (45, 64), (46, 64), (47, -1), (48, 64), (49, 64), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 16 with phase True at level 10

After decision at level 10
 pending : [54, 59, 56, 33, 52, 24, 14, 12, 46, 22, 38, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 31, 32, 34, 48, 20, 39, 30, 27, 28, 41, 49, 43, 6, 15, 26, 19]
 solution : [0, 8, 13, 4, 16]


New level: 11
 pending : [54, 59, 56, 33, 52, 24, 14, 12, 46, 22, 38, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 31, 32, 34, 48, 20, 39, 30, 27, 28, 41, 49, 43, 6, 15, 26, 19]
 solution : [0, 8, 13, 4, 16]


Before reduction : 
 pending  : [54, 59, 56, 33, 52, 24, 14, 12, 46, 22, 38, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 31, 32, 34, 48, 20, 39, 30, 27, 28, 41, 49, 43, 6, 15, 26, 19]
 solution : [0, 8, 13, 4, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 256), (16, 512), (17, -1), (18, 512), (19, 512), (20, 64), (21, -1), (22, 64), (23, 64), (24, 64), (25, -1), (26, 64), (27, 256), (28, 128), (29, 16), (30, 8), (31, 16), (32, 32), (33, 32), (34, 32), (35, 32), (36, 32), (37, 16), (38, 256), (39, 256), (40, 32), (41, 256), (42, 128), (43, 64), (44, 128), (45, 64), (46, 64), (47, -1), (48, 64), (49, 64), (50, 256), (51, 256), (52, 128), (53, 128), (54, 256), (55, 256), (56, 128), (57, 128), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, -1), (14, 0), (15, 64), (16, -1), (17, -1), (18, 512), (19, 512), (20, 32), (21, -1), (22, 0), (23, 32), (24, 0), (25, -1), (26, 32), (27, 8), (28, 0), (29, 2), (30, 0), (31, 0), (32, 0), (33, 0), (34, 8), (35, 16), (36, 4), (37, 8), (38, 0), (39, 128), (40, 8), (41, 64), (42, 32), (43, 16), (44, 32), (45, 16), (46, 0), (47, -1), (48, 16), (49, 16), (50, 8), (51, 256), (52, 4), (53, 128), (54, 128), (55, 64), (56, 64), (57, 32), (58, 16), (59, 256), (60, 256), (61, 8)]

Covered at level 11 : {32, 33, 38, 14, 46, 22, 24, 28, 30, 31}

After reduction : 
 pending  : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 34, 48, 20, 39, 27, 41, 49, 43, 6, 15, 26, 19]
 solution : [0, 8, 13, 4, 16]


Before reduction : 
 pending  : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 34, 48, 20, 39, 27, 41, 49, 43, 6, 15, 26, 19]
 solution : [0, 8, 13, 4, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, -1), (14, 0), (15, 64), (16, -1), (17, -1), (18, 512), (19, 512), (20, 32), (21, -1), (22, 0), (23, 32), (24, 0), (25, -1), (26, 32), (27, 8), (28, 0), (29, 2), (30, 0), (31, 0), (32, 0), (33, 0), (34, 8), (35, 16), (36, 4), (37, 8), (38, 0), (39, 128), (40, 8), (41, 64), (42, 32), (43, 16), (44, 32), (45, 16), (46, 0), (47, -1), (48, 16), (49, 16), (50, 8), (51, 256), (52, 4), (53, 128), (54, 128), (55, 64), (56, 64), (57, 32), (58, 16), (59, 256), (60, 256), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, 512), (19, 512), (20, 32), (21, -1), (22, -1), (23, 32), (24, -1), (25, -1), (26, 32), (27, 8), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1), (34, 8), (35, 16), (36, 4), (37, 8), (38, -1), (39, 128), (40, 8), (41, 64), (42, 32), (43, 16), (44, 32), (45, 16), (46, -1), (47, -1), (48, 16), (49, 16), (50, 8), (51, 256), (52, 4), (53, 128), (54, 128), (55, 64), (56, 64), (57, 32), (58, 16), (59, 256), (60, 256), (61, 8)]

Covered at level 11 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 34, 48, 20, 39, 27, 41, 49, 43, 6, 15, 26, 19]
 solution : [0, 8, 13, 4, 16]


Solution : [0, 8, 13, 4, 16] has cost 28.


Before backtrack at level 11
 pending : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 34, 48, 20, 39, 27, 41, 49, 43, 6, 15, 26, 19]
 solution : [0, 8, 13, 4, 16]

After backtrack at level 11
 pending : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 34, 48, 20, 39, 27, 41, 49, 43, 6, 15, 26, 19, 33, 24, 14, 46, 22, 38, 31, 32, 30, 28]
 solution : [0, 8, 13, 4, 16]


Invert decision for 16 at level 10


New level: 11
 pending : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 34, 48, 20, 39, 27, 41, 49, 43, 6, 15, 26, 19, 33, 24, 14, 46, 22, 38, 31, 32, 30, 28]
 solution : [0, 8, 13, 4]


Before reduction : 
 pending  : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 34, 48, 20, 39, 27, 41, 49, 43, 6, 15, 26, 19, 33, 24, 14, 46, 22, 38, 31, 32, 30, 28]
 solution : [0, 8, 13, 4]

Essensial at level 11 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, 512), (19, 512), (20, 32), (21, -1), (22, -1), (23, 32), (24, -1), (25, -1), (26, 32), (27, 8), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1), (34, 8), (35, 16), (36, 4), (37, 8), (38, -1), (39, 128), (40, 8), (41, 64), (42, 32), (43, 16), (44, 32), (45, 16), (46, -1), (47, -1), (48, 16), (49, 16), (50, 8), (51, 256), (52, 4), (53, 128), (54, 128), (55, 64), (56, 64), (57, 32), (58, 16), (59, 256), (60, 256), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, 512), (19, 512), (20, 0), (21, -1), (22, 16), (23, 16), (24, 16), (25, -1), (26, 0), (27, 0), (28, 0), (29, 2), (30, 0), (31, 0), (32, 0), (33, 4), (34, 0), (35, 8), (36, 2), (37, 8), (38, 64), (39, 0), (40, 16), (41, 256), (42, 16), (43, 8), (44, 128), (45, 16), (46, 4), (47, -1), (48, 0), (49, 4), (50, 128), (51, 32), (52, 128), (53, 16), (54, 256), (55, 256), (56, 32), (57, 8), (58, 256), (59, 64), (60, 32), (61, 256)]

Covered at level 11 : {32, 34, 39, 48, 20, 26, 27, 28, 30, 31}

After reduction : 
 pending  : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38]
 solution : [0, 8, 13, 4, 15]


Before reduction : 
 pending  : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38]
 solution : [0, 8, 13, 4, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, 512), (19, 512), (20, 0), (21, -1), (22, 16), (23, 16), (24, 16), (25, -1), (26, 0), (27, 0), (28, 0), (29, 2), (30, 0), (31, 0), (32, 0), (33, 4), (34, 0), (35, 8), (36, 2), (37, 8), (38, 64), (39, 0), (40, 16), (41, 256), (42, 16), (43, 8), (44, 128), (45, 16), (46, 4), (47, -1), (48, 0), (49, 4), (50, 128), (51, 32), (52, 128), (53, 16), (54, 256), (55, 256), (56, 32), (57, 8), (58, 256), (59, 64), (60, 32), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, 512), (19, 512), (20, -1), (21, -1), (22, 16), (23, 16), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, 8), (36, 2), (37, 8), (38, 64), (39, -1), (40, 16), (41, 256), (42, 16), (43, 8), (44, 128), (45, 16), (46, 4), (47, -1), (48, -1), (49, 4), (50, 128), (51, 32), (52, 128), (53, 16), (54, 256), (55, 256), (56, 32), (57, 8), (58, 256), (59, 64), (60, 32), (61, 256)]

Covered at level 11 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38]
 solution : [0, 8, 13, 4, 15]


Solution : [0, 8, 13, 4, 15] has cost 28.


Before backtrack at level 11
 pending : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38]
 solution : [0, 8, 13, 4, 15]

After backtrack at level 11
 pending : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28]
 solution : [0, 8, 13, 4]


Before backtrack at level 10
 pending : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28]
 solution : [0, 8, 13, 4]

After backtrack at level 10
 pending : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16]
 solution : [0, 8, 13]


Before backtrack at level 9
 pending : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16]
 solution : [0, 8, 13]

After backtrack at level 9
 pending : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17]
 solution : [0, 8, 13]


Before backtrack at level 8
 pending : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17]
 solution : [0, 8, 13]

After backtrack at level 8
 pending : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3]
 solution : [0, 8, 13]


Before backtrack at level 7
 pending : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3]
 solution : [0, 8, 13]

After backtrack at level 7
 pending : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2]
 solution : [0, 8, 13]


Before backtrack at level 6
 pending : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2]
 solution : [0, 8, 13]

After backtrack at level 6
 pending : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 13]


Invert decision for 13 at level 5


New level: 6
 pending : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8]


Before reduction : 
 pending  : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, 512), (19, 512), (20, -1), (21, -1), (22, 16), (23, 16), (24, 16), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, 8), (36, 2), (37, 8), (38, 64), (39, -1), (40, 16), (41, 256), (42, 16), (43, 8), (44, 128), (45, 16), (46, 4), (47, -1), (48, -1), (49, 4), (50, 128), (51, 32), (52, 128), (53, 16), (54, 256), (55, 256), (56, 32), (57, 8), (58, 256), (59, 64), (60, 32), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, 512), (13, -1), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Covered at level 6 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8]


Solution : [0, 8] has cost 7.


Decide in level 6 among pending : [54, 59, 56, 52, 12, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]

Coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, 512), (13, -1), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

Decide 12 with phase True at level 6

After decision at level 6
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12]


New level: 7
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, 512), (13, -1), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 256), (23, 256), (24, 128), (25, 128), (26, 128), (27, 256), (28, 256), (29, 256), (30, 128), (31, 128), (32, 128), (33, 128), (34, 128), (35, 128), (36, 128), (37, 256), (38, 256), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 256), (55, 256), (56, 256), (57, 256), (58, 256), (59, 256), (60, 256), (61, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 128), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 128), (55, 256), (56, 128), (57, 256), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12]


Solution : [0, 8, 12] has cost 13.


Decide in level 7 among pending : [54, 59, 56, 52, 50, 61, 23, 58, 18, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 128), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 128), (55, 256), (56, 128), (57, 256), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 18 with phase True at level 7

After decision at level 7
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18]


New level: 8
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 35, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 128), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 128), (55, 256), (56, 128), (57, 256), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 128), (27, 128), (28, 64), (29, 128), (30, 128), (31, 128), (32, 128), (33, 32), (34, 64), (35, 0), (36, 32), (37, 32), (38, 16), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 128), (47, 256), (48, 256), (49, 128), (50, 64), (51, 128), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 16), (59, 32), (60, 64), (61, 32)]

Covered at level 8 : {35}

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 128), (27, 128), (28, 64), (29, 128), (30, 128), (31, 128), (32, 128), (33, 32), (34, 64), (35, 0), (36, 32), (37, 32), (38, 16), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 128), (47, 256), (48, 256), (49, 128), (50, 64), (51, 128), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 16), (59, 32), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 128), (27, 128), (28, 64), (29, 128), (30, 128), (31, 128), (32, 128), (33, 32), (34, 64), (35, -1), (36, 32), (37, 32), (38, 16), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 128), (47, 256), (48, 256), (49, 128), (50, 64), (51, 128), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 16), (59, 32), (60, 64), (61, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18]


Solution : [0, 8, 12, 18] has cost 22.


Decide in level 8 among pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 6, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 128), (27, 128), (28, 64), (29, 128), (30, 128), (31, 128), (32, 128), (33, 32), (34, 64), (35, -1), (36, 32), (37, 32), (38, 16), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 128), (47, 256), (48, 256), (49, 128), (50, 64), (51, 128), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 16), (59, 32), (60, 64), (61, 32)]

Decide 6 with phase True at level 8

After decision at level 8
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18, 6]


New level: 9
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18, 6]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 128), (27, 128), (28, 64), (29, 128), (30, 128), (31, 128), (32, 128), (33, 32), (34, 64), (35, -1), (36, 32), (37, 32), (38, 16), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 128), (47, 256), (48, 256), (49, 128), (50, 64), (51, 128), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 16), (59, 32), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 128), (27, 128), (28, 64), (29, 128), (30, 128), (31, 128), (32, 128), (33, 32), (34, 64), (35, -1), (36, 32), (37, 32), (38, 16), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 128), (47, 256), (48, 256), (49, 128), (50, 64), (51, 128), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 16), (59, 32), (60, 64), (61, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18, 6]


Solution : [0, 8, 12, 18, 6] has cost 24.


Before backtrack at level 9
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18, 6]

After backtrack at level 9
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18, 6]


Invert decision for 6 at level 8


New level: 9
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 128), (27, 128), (28, 64), (29, 128), (30, 128), (31, 128), (32, 128), (33, 32), (34, 64), (35, -1), (36, 32), (37, 32), (38, 16), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 128), (47, 256), (48, 256), (49, 128), (50, 64), (51, 128), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 16), (59, 32), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 128), (27, 128), (28, 64), (29, 128), (30, 128), (31, 128), (32, 128), (33, 32), (34, 64), (35, -1), (36, 32), (37, 32), (38, 16), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 128), (47, 256), (48, 256), (49, 128), (50, 64), (51, 128), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 16), (59, 32), (60, 64), (61, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18]


Solution : [0, 8, 12, 18] has cost 22.


Decide in level 9 among pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 24, 14, 46, 22, 38, 15, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 128), (27, 128), (28, 64), (29, 128), (30, 128), (31, 128), (32, 128), (33, 32), (34, 64), (35, -1), (36, 32), (37, 32), (38, 16), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 128), (47, 256), (48, 256), (49, 128), (50, 64), (51, 128), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 16), (59, 32), (60, 64), (61, 32)]

Decide 15 with phase True at level 9

After decision at level 9
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 24, 14, 46, 22, 38, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18, 15]


New level: 10
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 24, 14, 46, 22, 38, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18, 15]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 24, 14, 46, 22, 38, 34, 48, 20, 39, 27, 26, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 128), (27, 128), (28, 64), (29, 128), (30, 128), (31, 128), (32, 128), (33, 32), (34, 64), (35, -1), (36, 32), (37, 32), (38, 16), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 128), (47, 256), (48, 256), (49, 128), (50, 64), (51, 128), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 16), (59, 32), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 8), (17, 256), (18, -1), (19, 64), (20, 32), (21, 256), (22, 16), (23, 64), (24, 0), (25, 32), (26, 0), (27, 16), (28, 2), (29, 128), (30, 128), (31, 32), (32, 128), (33, 16), (34, 32), (35, -1), (36, 32), (37, 8), (38, 0), (39, 0), (40, 8), (41, 32), (42, 8), (43, 4), (44, 64), (45, 16), (46, 16), (47, 256), (48, 32), (49, 128), (50, 32), (51, 64), (52, 32), (53, 64), (54, 64), (55, 128), (56, 16), (57, 32), (58, 8), (59, 16), (60, 32), (61, 16)]

Covered at level 10 : {38, 39, 14, 24, 26}

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18, 15]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 8), (17, 256), (18, -1), (19, 64), (20, 32), (21, 256), (22, 16), (23, 64), (24, 0), (25, 32), (26, 0), (27, 16), (28, 2), (29, 128), (30, 128), (31, 32), (32, 128), (33, 16), (34, 32), (35, -1), (36, 32), (37, 8), (38, 0), (39, 0), (40, 8), (41, 32), (42, 8), (43, 4), (44, 64), (45, 16), (46, 16), (47, 256), (48, 32), (49, 128), (50, 32), (51, 64), (52, 32), (53, 64), (54, 64), (55, 128), (56, 16), (57, 32), (58, 8), (59, 16), (60, 32), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 256), (18, -1), (19, 64), (20, 32), (21, 256), (22, 16), (23, 64), (24, -1), (25, 32), (26, -1), (27, 16), (28, 2), (29, 128), (30, 128), (31, 32), (32, 128), (33, 16), (34, 32), (35, -1), (36, 32), (37, 8), (38, -1), (39, -1), (40, 8), (41, 32), (42, 8), (43, 4), (44, 64), (45, 16), (46, 16), (47, 256), (48, 32), (49, 128), (50, 32), (51, 64), (52, 32), (53, 64), (54, 64), (55, 128), (56, 16), (57, 32), (58, 8), (59, 16), (60, 32), (61, 16)]

Covered at level 10 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18, 15]


Solution : [0, 8, 12, 18, 15] has cost 28.


Before backtrack at level 10
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10]
 solution : [0, 8, 12, 18, 15]

After backtrack at level 10
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10, 24, 14, 38, 39, 26]
 solution : [0, 8, 12, 18, 15]


Invert decision for 15 at level 9


New level: 10
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10, 24, 14, 38, 39, 26]
 solution : [0, 8, 12, 18]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10, 24, 14, 38, 39, 26]
 solution : [0, 8, 12, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 256), (18, -1), (19, 64), (20, 32), (21, 256), (22, 16), (23, 64), (24, -1), (25, 32), (26, -1), (27, 16), (28, 2), (29, 128), (30, 128), (31, 32), (32, 128), (33, 16), (34, 32), (35, -1), (36, 32), (37, 8), (38, -1), (39, -1), (40, 8), (41, 32), (42, 8), (43, 4), (44, 64), (45, 16), (46, 16), (47, 256), (48, 32), (49, 128), (50, 32), (51, 64), (52, 32), (53, 64), (54, 64), (55, 128), (56, 16), (57, 32), (58, 8), (59, 16), (60, 32), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 128), (27, 128), (28, 64), (29, 128), (30, 128), (31, 128), (32, 128), (33, 32), (34, 64), (35, -1), (36, 32), (37, 32), (38, 16), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 128), (47, 256), (48, 256), (49, 128), (50, 64), (51, 128), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 16), (59, 32), (60, 64), (61, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10, 24, 14, 38, 39, 26]
 solution : [0, 8, 12, 18]


Solution : [0, 8, 12, 18] has cost 22.


Decide in level 10 among pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 16, 17, 3, 2, 25, 10, 24, 14, 38, 39, 26]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 128), (27, 128), (28, 64), (29, 128), (30, 128), (31, 128), (32, 128), (33, 32), (34, 64), (35, -1), (36, 32), (37, 32), (38, 16), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 128), (47, 256), (48, 256), (49, 128), (50, 64), (51, 128), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 16), (59, 32), (60, 64), (61, 32)]

Decide 17 with phase True at level 10

After decision at level 10
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 16, 3, 2, 25, 10, 24, 14, 38, 39, 26]
 solution : [0, 8, 12, 18, 17]


New level: 11
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 16, 3, 2, 25, 10, 24, 14, 38, 39, 26]
 solution : [0, 8, 12, 18, 17]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 16, 3, 2, 25, 10, 24, 14, 38, 39, 26]
 solution : [0, 8, 12, 18, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 512), (18, -1), (19, 64), (20, 256), (21, 256), (22, 128), (23, 64), (24, 64), (25, 128), (26, 128), (27, 128), (28, 64), (29, 128), (30, 128), (31, 128), (32, 128), (33, 32), (34, 64), (35, -1), (36, 32), (37, 32), (38, 16), (39, 32), (40, 32), (41, 32), (42, 32), (43, 16), (44, 64), (45, 64), (46, 128), (47, 256), (48, 256), (49, 128), (50, 64), (51, 128), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 16), (59, 32), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 0), (17, -1), (18, -1), (19, 64), (20, 128), (21, 256), (22, 64), (23, 64), (24, 32), (25, 128), (26, 64), (27, 16), (28, 8), (29, 128), (30, 128), (31, 128), (32, 32), (33, 16), (34, 32), (35, -1), (36, 32), (37, 32), (38, 4), (39, 8), (40, 32), (41, 8), (42, 32), (43, 16), (44, 16), (45, 64), (46, 64), (47, 256), (48, 128), (49, 128), (50, 16), (51, 32), (52, 16), (53, 32), (54, 16), (55, 32), (56, 64), (57, 128), (58, 8), (59, 16), (60, 32), (61, 16)]

Covered at level 11 : {16}

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 24, 14, 38, 39, 26]
 solution : [0, 8, 12, 18, 17]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 24, 14, 38, 39, 26]
 solution : [0, 8, 12, 18, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 0), (17, -1), (18, -1), (19, 64), (20, 128), (21, 256), (22, 64), (23, 64), (24, 32), (25, 128), (26, 64), (27, 16), (28, 8), (29, 128), (30, 128), (31, 128), (32, 32), (33, 16), (34, 32), (35, -1), (36, 32), (37, 32), (38, 4), (39, 8), (40, 32), (41, 8), (42, 32), (43, 16), (44, 16), (45, 64), (46, 64), (47, 256), (48, 128), (49, 128), (50, 16), (51, 32), (52, 16), (53, 32), (54, 16), (55, 32), (56, 64), (57, 128), (58, 8), (59, 16), (60, 32), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, 64), (20, 128), (21, 256), (22, 64), (23, 64), (24, 32), (25, 128), (26, 64), (27, 16), (28, 8), (29, 128), (30, 128), (31, 128), (32, 32), (33, 16), (34, 32), (35, -1), (36, 32), (37, 32), (38, 4), (39, 8), (40, 32), (41, 8), (42, 32), (43, 16), (44, 16), (45, 64), (46, 64), (47, 256), (48, 128), (49, 128), (50, 16), (51, 32), (52, 16), (53, 32), (54, 16), (55, 32), (56, 64), (57, 128), (58, 8), (59, 16), (60, 32), (61, 16)]

Covered at level 11 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 24, 14, 38, 39, 26]
 solution : [0, 8, 12, 18, 17]


Solution : [0, 8, 12, 18, 17] has cost 28.


Before backtrack at level 11
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 24, 14, 38, 39, 26]
 solution : [0, 8, 12, 18, 17]

After backtrack at level 11
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 24, 14, 38, 39, 26, 16]
 solution : [0, 8, 12, 18, 17]


Invert decision for 17 at level 10


New level: 11
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 24, 14, 38, 39, 26, 16]
 solution : [0, 8, 12, 18]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 24, 14, 38, 39, 26, 16]
 solution : [0, 8, 12, 18]

Essensial at level 11 : {16, 26}

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, 64), (20, 128), (21, 256), (22, 64), (23, 64), (24, 32), (25, 128), (26, 64), (27, 16), (28, 8), (29, 128), (30, 128), (31, 128), (32, 32), (33, 16), (34, 32), (35, -1), (36, 32), (37, 32), (38, 4), (39, 8), (40, 32), (41, 8), (42, 32), (43, 16), (44, 16), (45, 64), (46, 64), (47, 256), (48, 128), (49, 128), (50, 16), (51, 32), (52, 16), (53, 32), (54, 16), (55, 32), (56, 64), (57, 128), (58, 8), (59, 16), (60, 32), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, -1), (19, 64), (20, 64), (21, 256), (22, 8), (23, 64), (24, 0), (25, 32), (26, -1), (27, 16), (28, 2), (29, 128), (30, 128), (31, 128), (32, 64), (33, 16), (34, 64), (35, -1), (36, 32), (37, 8), (38, 0), (39, 0), (40, 8), (41, 16), (42, 8), (43, 4), (44, 32), (45, 16), (46, 8), (47, 256), (48, 64), (49, 128), (50, 16), (51, 128), (52, 16), (53, 128), (54, 32), (55, 64), (56, 64), (57, 128), (58, 8), (59, 32), (60, 64), (61, 16)]

Covered at level 11 : {24, 38, 14, 39}

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10]
 solution : [0, 8, 12, 18, 16, 26]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10]
 solution : [0, 8, 12, 18, 16, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, -1), (19, 64), (20, 64), (21, 256), (22, 8), (23, 64), (24, 0), (25, 32), (26, -1), (27, 16), (28, 2), (29, 128), (30, 128), (31, 128), (32, 64), (33, 16), (34, 64), (35, -1), (36, 32), (37, 8), (38, 0), (39, 0), (40, 8), (41, 16), (42, 8), (43, 4), (44, 32), (45, 16), (46, 8), (47, 256), (48, 64), (49, 128), (50, 16), (51, 128), (52, 16), (53, 128), (54, 32), (55, 64), (56, 64), (57, 128), (58, 8), (59, 32), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 64), (20, 64), (21, 256), (22, 8), (23, 64), (24, -1), (25, 32), (26, -1), (27, 16), (28, 2), (29, 128), (30, 128), (31, 128), (32, 64), (33, 8), (34, 64), (35, -1), (36, 32), (37, 8), (38, -1), (39, -1), (40, 8), (41, 16), (42, 8), (43, 4), (44, 32), (45, 16), (46, 8), (47, 256), (48, 64), (49, 128), (50, 16), (51, 128), (52, 16), (53, 128), (54, 32), (55, 64), (56, 64), (57, 128), (58, 8), (59, 32), (60, 64), (61, 16)]

Covered at level 11 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10]
 solution : [0, 8, 12, 18, 16, 26]


Solution : [0, 8, 12, 18, 16, 26] has cost 38.


Before backtrack at level 11
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10]
 solution : [0, 8, 12, 18, 16, 26]

After backtrack at level 11
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 26, 16, 24, 14, 38, 39]
 solution : [0, 8, 12, 18]


Before backtrack at level 10
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 26, 16, 24, 14, 38, 39]
 solution : [0, 8, 12, 18]

After backtrack at level 10
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 26, 16, 24, 14, 38, 39, 17]
 solution : [0, 8, 12, 18]


Before backtrack at level 9
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 26, 16, 24, 14, 38, 39, 17]
 solution : [0, 8, 12, 18]

After backtrack at level 9
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15]
 solution : [0, 8, 12, 18]


Before backtrack at level 8
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15]
 solution : [0, 8, 12, 18]

After backtrack at level 8
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 6]
 solution : [0, 8, 12, 18]


Invert decision for 18 at level 7


New level: 8
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 6]
 solution : [0, 8, 12]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 6]
 solution : [0, 8, 12]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 64), (20, 64), (21, 256), (22, 8), (23, 64), (24, -1), (25, 32), (26, -1), (27, 16), (28, 2), (29, 128), (30, 128), (31, 128), (32, 64), (33, 8), (34, 64), (35, -1), (36, 32), (37, 8), (38, -1), (39, -1), (40, 8), (41, 16), (42, 8), (43, 4), (44, 32), (45, 16), (46, 8), (47, 256), (48, 64), (49, 128), (50, 16), (51, 128), (52, 16), (53, 128), (54, 32), (55, 64), (56, 64), (57, 128), (58, 8), (59, 32), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 128), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 128), (55, 256), (56, 128), (57, 256), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 6]
 solution : [0, 8, 12]


Solution : [0, 8, 12] has cost 13.


Decide in level 8 among pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 19, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 6]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 128), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 128), (55, 256), (56, 128), (57, 256), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 19 with phase True at level 8

After decision at level 8
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 6]
 solution : [0, 8, 12, 19]


New level: 9
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 6]
 solution : [0, 8, 12, 19]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 36, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 6]
 solution : [0, 8, 12, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 128), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 128), (55, 256), (56, 128), (57, 256), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 32), (31, 64), (32, 64), (33, 64), (34, 128), (35, 64), (36, 0), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 9 : {36}

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 6]
 solution : [0, 8, 12, 19]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 6]
 solution : [0, 8, 12, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 32), (31, 64), (32, 64), (33, 64), (34, 128), (35, 64), (36, 0), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 32), (31, 64), (32, 64), (33, 64), (34, 128), (35, 64), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 6]
 solution : [0, 8, 12, 19]


Solution : [0, 8, 12, 19] has cost 22.


Decide in level 9 among pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 3, 2, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 6]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 32), (31, 64), (32, 64), (33, 64), (34, 128), (35, 64), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 3 with phase True at level 9

After decision at level 9
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 2, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 6]
 solution : [0, 8, 12, 19, 3]


New level: 10
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 2, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 6]
 solution : [0, 8, 12, 19, 3]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 4, 7, 47, 21, 2, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 6]
 solution : [0, 8, 12, 19, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 32), (31, 64), (32, 64), (33, 64), (34, 128), (35, 64), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, 0), (7, 32), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 8), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 8), (31, 16), (32, 16), (33, 32), (34, 64), (35, 8), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 64), (42, 64), (43, 32), (44, 256), (45, 256), (46, 64), (47, 64), (48, 128), (49, 16), (50, 8), (51, 16), (52, 64), (53, 128), (54, 16), (55, 32), (56, 16), (57, 32), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 10 : {2, 4, 6}

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35]
 solution : [0, 8, 12, 19, 3]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35]
 solution : [0, 8, 12, 19, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, 0), (7, 32), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 8), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 8), (31, 16), (32, 16), (33, 32), (34, 64), (35, 8), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 64), (42, 64), (43, 32), (44, 256), (45, 256), (46, 64), (47, 64), (48, 128), (49, 16), (50, 8), (51, 16), (52, 64), (53, 128), (54, 16), (55, 32), (56, 16), (57, 32), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 8), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 8), (31, 16), (32, 16), (33, 32), (34, 64), (35, 8), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 64), (42, 64), (43, 32), (44, 256), (45, 256), (46, 64), (47, 64), (48, 128), (49, 16), (50, 8), (51, 16), (52, 64), (53, 128), (54, 16), (55, 32), (56, 16), (57, 32), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35]
 solution : [0, 8, 12, 19, 3]


Solution : [0, 8, 12, 19, 3] has cost 28.


Before backtrack at level 10
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35]
 solution : [0, 8, 12, 19, 3]

After backtrack at level 10
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19, 3]


Invert decision for 3 at level 9


New level: 10
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 8), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 8), (31, 16), (32, 16), (33, 32), (34, 64), (35, 8), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 64), (42, 64), (43, 32), (44, 256), (45, 256), (46, 64), (47, 64), (48, 128), (49, 16), (50, 8), (51, 16), (52, 64), (53, 128), (54, 16), (55, 32), (56, 16), (57, 32), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 32), (31, 64), (32, 64), (33, 64), (34, 128), (35, 64), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19]


Solution : [0, 8, 12, 19] has cost 22.


Decide in level 10 among pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 10, 26, 16, 24, 14, 38, 39, 17, 15, 35, 4, 2, 6]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 32), (31, 64), (32, 64), (33, 64), (34, 128), (35, 64), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 10 with phase True at level 10

After decision at level 10
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 16, 24, 14, 38, 39, 17, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19, 10]


New level: 11
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 16, 24, 14, 38, 39, 17, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19, 10]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 16, 24, 14, 38, 39, 17, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 32), (31, 64), (32, 64), (33, 64), (34, 128), (35, 64), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 32), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 32), (31, 64), (32, 64), (33, 64), (34, 128), (35, 64), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 128), (48, 256), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 16, 24, 14, 38, 39, 17, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19, 10]


Solution : [0, 8, 12, 19, 10] has cost 27.


Before backtrack at level 11
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 16, 24, 14, 38, 39, 17, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19, 10]

After backtrack at level 11
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 16, 24, 14, 38, 39, 17, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19, 10]


Invert decision for 10 at level 10


New level: 11
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 16, 24, 14, 38, 39, 17, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 16, 24, 14, 38, 39, 17, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 32), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 32), (31, 64), (32, 64), (33, 64), (34, 128), (35, 64), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 128), (48, 256), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 32), (31, 64), (32, 64), (33, 64), (34, 128), (35, 64), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 16, 24, 14, 38, 39, 17, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19]


Solution : [0, 8, 12, 19] has cost 22.


Decide in level 11 among pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 16, 24, 14, 38, 39, 17, 15, 35, 4, 2, 6]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 32), (31, 64), (32, 64), (33, 64), (34, 128), (35, 64), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 16, 24, 14, 38, 39, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19, 17]


New level: 12
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 16, 24, 14, 38, 39, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19, 17]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 16, 24, 14, 38, 39, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 32), (31, 64), (32, 64), (33, 64), (34, 128), (35, 64), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, 64), (16, 0), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 32), (24, 32), (25, 128), (26, 64), (27, 8), (28, 4), (29, 64), (30, 32), (31, 64), (32, 16), (33, 32), (34, 64), (35, 64), (36, -1), (37, 256), (38, 32), (39, 64), (40, 256), (41, 64), (42, 256), (43, 256), (44, 64), (45, 256), (46, 64), (47, 256), (48, 128), (49, 64), (50, 8), (51, 16), (52, 16), (53, 32), (54, 16), (55, 32), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 12 : {16}

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19, 17]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, 64), (16, 0), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 32), (24, 32), (25, 128), (26, 64), (27, 8), (28, 4), (29, 64), (30, 32), (31, 64), (32, 16), (33, 32), (34, 64), (35, 64), (36, -1), (37, 256), (38, 32), (39, 64), (40, 256), (41, 64), (42, 256), (43, 256), (44, 64), (45, 256), (46, 64), (47, 256), (48, 128), (49, 64), (50, 8), (51, 16), (52, 16), (53, 32), (54, 16), (55, 32), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 32), (24, 32), (25, 128), (26, 64), (27, 8), (28, 4), (29, 64), (30, 32), (31, 64), (32, 16), (33, 32), (34, 64), (35, 64), (36, -1), (37, 256), (38, 32), (39, 64), (40, 256), (41, 64), (42, 256), (43, 256), (44, 64), (45, 256), (46, 64), (47, 256), (48, 128), (49, 64), (50, 8), (51, 16), (52, 16), (53, 32), (54, 16), (55, 32), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19, 17]


Solution : [0, 8, 12, 19, 17] has cost 28.


Before backtrack at level 12
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 4, 2, 6]
 solution : [0, 8, 12, 19, 17]

After backtrack at level 12
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 4, 2, 6, 16]
 solution : [0, 8, 12, 19, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 4, 2, 6, 16]
 solution : [0, 8, 12, 19]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 4, 2, 6, 16]
 solution : [0, 8, 12, 19]

Essensial at level 12 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 32), (24, 32), (25, 128), (26, 64), (27, 8), (28, 4), (29, 64), (30, 32), (31, 64), (32, 16), (33, 32), (34, 64), (35, 64), (36, -1), (37, 256), (38, 32), (39, 64), (40, 256), (41, 64), (42, 256), (43, 256), (44, 64), (45, 256), (46, 64), (47, 256), (48, 128), (49, 64), (50, 8), (51, 16), (52, 16), (53, 32), (54, 16), (55, 32), (56, 64), (57, 128), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 0), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 8), (31, 16), (32, 16), (33, 32), (34, 64), (35, 32), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 128), (44, 256), (45, 256), (46, 64), (47, 64), (48, 128), (49, 64), (50, 8), (51, 16), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 12 : {6}

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 2, 16]
 solution : [0, 8, 12, 19, 4]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 2, 16]
 solution : [0, 8, 12, 19, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 0), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 8), (31, 16), (32, 16), (33, 32), (34, 64), (35, 32), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 128), (44, 256), (45, 256), (46, 64), (47, 64), (48, 128), (49, 64), (50, 8), (51, 16), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 8), (31, 16), (32, 16), (33, 32), (34, 64), (35, 32), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 128), (44, 256), (45, 256), (46, 64), (47, 64), (48, 128), (49, 64), (50, 8), (51, 16), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 2, 16]
 solution : [0, 8, 12, 19, 4]


Solution : [0, 8, 12, 19, 4] has cost 31.


Before backtrack at level 12
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 2, 16]
 solution : [0, 8, 12, 19, 4]

After backtrack at level 12
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 2, 16, 4, 6]
 solution : [0, 8, 12, 19]


Before backtrack at level 11
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 2, 16, 4, 6]
 solution : [0, 8, 12, 19]

After backtrack at level 11
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 2, 16, 4, 6, 17]
 solution : [0, 8, 12, 19]


Before backtrack at level 10
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 2, 16, 4, 6, 17]
 solution : [0, 8, 12, 19]

After backtrack at level 10
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 2, 16, 4, 6, 17, 10]
 solution : [0, 8, 12, 19]


Before backtrack at level 9
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 2, 16, 4, 6, 17, 10]
 solution : [0, 8, 12, 19]

After backtrack at level 9
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 2, 16, 4, 6, 17, 10, 36, 3]
 solution : [0, 8, 12, 19]


Invert decision for 19 at level 8


New level: 9
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 2, 16, 4, 6, 17, 10, 36, 3]
 solution : [0, 8, 12]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 2, 16, 4, 6, 17, 10, 36, 3]
 solution : [0, 8, 12]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 128), (27, 64), (28, 32), (29, 64), (30, 8), (31, 16), (32, 16), (33, 32), (34, 64), (35, 32), (36, -1), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 128), (44, 256), (45, 256), (46, 64), (47, 64), (48, 128), (49, 64), (50, 8), (51, 16), (52, 64), (53, 128), (54, 64), (55, 128), (56, 64), (57, 128), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 128), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 128), (55, 256), (56, 128), (57, 256), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 2, 16, 4, 6, 17, 10, 36, 3]
 solution : [0, 8, 12]


Solution : [0, 8, 12] has cost 13.


Decide in level 9 among pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 15, 35, 2, 16, 4, 6, 17, 10, 36, 3]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 128), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 128), (55, 256), (56, 128), (57, 256), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 15 with phase True at level 9

After decision at level 9
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 35, 2, 16, 4, 6, 17, 10, 36, 3]
 solution : [0, 8, 12, 15]


New level: 10
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 35, 2, 16, 4, 6, 17, 10, 36, 3]
 solution : [0, 8, 12, 15]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 26, 24, 14, 38, 39, 35, 2, 16, 4, 6, 17, 10, 36, 3]
 solution : [0, 8, 12, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 128), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 128), (55, 256), (56, 128), (57, 256), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, 0), (25, 32), (26, 0), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 128), (54, 128), (55, 256), (56, 32), (57, 64), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 10 : {24, 26, 14}

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 6, 17, 10, 36, 3]
 solution : [0, 8, 12, 15]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 6, 17, 10, 36, 3]
 solution : [0, 8, 12, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, 0), (25, 32), (26, 0), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 128), (54, 128), (55, 256), (56, 32), (57, 64), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 128), (54, 128), (55, 256), (56, 32), (57, 64), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 6, 17, 10, 36, 3]
 solution : [0, 8, 12, 15]


Solution : [0, 8, 12, 15] has cost 19.


Decide in level 10 among pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 6, 17, 10, 36, 3]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 128), (54, 128), (55, 256), (56, 32), (57, 64), (58, 32), (59, 64), (60, 128), (61, 64)]

Decide 6 with phase True at level 10

After decision at level 10
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 10, 36, 3]
 solution : [0, 8, 12, 15, 6]


New level: 11
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 10, 36, 3]
 solution : [0, 8, 12, 15, 6]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 10, 36, 3]
 solution : [0, 8, 12, 15, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 128), (54, 128), (55, 256), (56, 32), (57, 64), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, 256), (38, 16), (39, 16), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, 256), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 10, 36, 3]
 solution : [0, 8, 12, 15, 6]


Solution : [0, 8, 12, 15, 6] has cost 21.


Decide in level 11 among pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 10, 36, 3]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, 256), (38, 16), (39, 16), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, 256), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Decide 10 with phase True at level 11

After decision at level 11
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 36, 3]
 solution : [0, 8, 12, 15, 6, 10]


New level: 12
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 36, 3]
 solution : [0, 8, 12, 15, 6, 10]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 36, 3]
 solution : [0, 8, 12, 15, 6, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, 256), (38, 16), (39, 16), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, 256), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 32), (21, 16), (22, 32), (23, 128), (24, -1), (25, 4), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 16), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, 256), (38, 16), (39, 16), (40, 256), (41, 256), (42, 32), (43, 256), (44, 256), (45, 32), (46, 32), (47, 16), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, 256), (56, 16), (57, 32), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 36, 3]
 solution : [0, 8, 12, 15, 6, 10]


Solution : [0, 8, 12, 15, 6, 10] has cost 26.


Before backtrack at level 12
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 36, 3]
 solution : [0, 8, 12, 15, 6, 10]

After backtrack at level 12
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 36, 3]
 solution : [0, 8, 12, 15, 6, 10]


Invert decision for 10 at level 11


New level: 12
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 36, 3]
 solution : [0, 8, 12, 15, 6]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 36, 3]
 solution : [0, 8, 12, 15, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 32), (21, 16), (22, 32), (23, 128), (24, -1), (25, 4), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 16), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, 256), (38, 16), (39, 16), (40, 256), (41, 256), (42, 32), (43, 256), (44, 256), (45, 32), (46, 32), (47, 16), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, 256), (56, 16), (57, 32), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, 256), (38, 16), (39, 16), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, 256), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 36, 3]
 solution : [0, 8, 12, 15, 6]


Solution : [0, 8, 12, 15, 6] has cost 21.


Decide in level 12 among pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 55, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 36, 3]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, 256), (38, 16), (39, 16), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, 256), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Decide 55 with phase True at level 12

After decision at level 12
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 36, 3]
 solution : [0, 8, 12, 15, 6, 55]


New level: 13
 pending : [54, 59, 56, 52, 50, 61, 23, 58, 57, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 36, 3]
 solution : [0, 8, 12, 15, 6, 55]


Before reduction : 
 pending  : [54, 59, 56, 52, 50, 61, 23, 58, 57, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 27, 31, 32, 30, 28, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 36, 3]
 solution : [0, 8, 12, 15, 6, 55]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, 256), (38, 16), (39, 16), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, 256), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 256), (18, -1), (19, -1), (20, 32), (21, 256), (22, 16), (23, 4), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, 64), (30, 64), (31, 4), (32, 0), (33, 8), (34, 8), (35, 128), (36, 0), (37, 256), (38, 4), (39, 4), (40, 256), (41, 2), (42, 64), (43, 256), (44, 256), (45, 64), (46, 8), (47, 256), (48, 8), (49, 8), (50, 8), (51, 8), (52, 32), (53, 64), (54, 0), (55, -1), (56, 4), (57, 8), (58, 4), (59, 4), (60, 8), (61, 8)]

Covered at level 13 : {32, 36, 54, 27, 28}

After reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3]
 solution : [0, 8, 12, 15, 6, 55]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3]
 solution : [0, 8, 12, 15, 6, 55]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 256), (18, -1), (19, -1), (20, 32), (21, 256), (22, 16), (23, 4), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, 64), (30, 64), (31, 4), (32, 0), (33, 8), (34, 8), (35, 128), (36, 0), (37, 256), (38, 4), (39, 4), (40, 256), (41, 2), (42, 64), (43, 256), (44, 256), (45, 64), (46, 8), (47, 256), (48, 8), (49, 8), (50, 8), (51, 8), (52, 32), (53, 64), (54, 0), (55, -1), (56, 4), (57, 8), (58, 4), (59, 4), (60, 8), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 256), (18, -1), (19, -1), (20, 32), (21, 256), (22, 16), (23, 4), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, 16), (30, 4), (31, 4), (32, -1), (33, 8), (34, 8), (35, 64), (36, -1), (37, 256), (38, 4), (39, 4), (40, 256), (41, 2), (42, 64), (43, 256), (44, 256), (45, 64), (46, 8), (47, 256), (48, 8), (49, 8), (50, 8), (51, 8), (52, 32), (53, 64), (54, -1), (55, -1), (56, 4), (57, 8), (58, 4), (59, 4), (60, 8), (61, 8)]

Covered at level 13 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3]
 solution : [0, 8, 12, 15, 6, 55]


Solution : [0, 8, 12, 15, 6, 55] has cost 31.


Before backtrack at level 13
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3]
 solution : [0, 8, 12, 15, 6, 55]

After backtrack at level 13
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 55]


Invert decision for 55 at level 12


New level: 13
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 256), (18, -1), (19, -1), (20, 32), (21, 256), (22, 16), (23, 4), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, 16), (30, 4), (31, 4), (32, -1), (33, 8), (34, 8), (35, 64), (36, -1), (37, 256), (38, 4), (39, 4), (40, 256), (41, 2), (42, 64), (43, 256), (44, 256), (45, 64), (46, 8), (47, 256), (48, 8), (49, 8), (50, 8), (51, 8), (52, 32), (53, 64), (54, -1), (55, -1), (56, 4), (57, 8), (58, 4), (59, 4), (60, 8), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, 256), (38, 16), (39, 16), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 13 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6]


Solution : [0, 8, 12, 15, 6] has cost 21.


Decide in level 13 among pending : [59, 56, 52, 50, 61, 23, 58, 57, 37, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, 256), (38, 16), (39, 16), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Decide 37 with phase True at level 13

After decision at level 13
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 37]


New level: 14
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 37]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 37]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, 256), (38, 16), (39, 16), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 32), (23, 128), (24, -1), (25, 16), (26, -1), (27, 64), (28, 8), (29, 128), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 8), (36, 128), (37, -1), (38, 8), (39, 8), (40, 32), (41, 256), (42, 32), (43, 128), (44, 64), (45, 8), (46, 32), (47, 128), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 14 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 37]


Solution : [0, 8, 12, 15, 6, 37] has cost 31.


Before backtrack at level 14
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 37]

After backtrack at level 14
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 37]


Invert decision for 37 at level 13


New level: 14
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 32), (23, 128), (24, -1), (25, 16), (26, -1), (27, 64), (28, 8), (29, 128), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 8), (36, 128), (37, -1), (38, 8), (39, 8), (40, 32), (41, 256), (42, 32), (43, 128), (44, 64), (45, 8), (46, 32), (47, 128), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 14 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6]


Solution : [0, 8, 12, 15, 6] has cost 21.


Decide in level 14 among pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 40, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Decide 40 with phase True at level 14

After decision at level 14
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 40]


New level: 15
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 40]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 40]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 32), (21, 128), (22, 16), (23, 64), (24, -1), (25, 32), (26, -1), (27, 64), (28, 4), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 64), (36, 128), (37, -1), (38, 1), (39, 1), (40, -1), (41, 256), (42, 64), (43, 128), (44, 32), (45, 16), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 15 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 40]


Solution : [0, 8, 12, 15, 6, 40] has cost 31.


Before backtrack at level 15
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 40]

After backtrack at level 15
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 40]


Invert decision for 40 at level 14


New level: 15
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 32), (21, 128), (22, 16), (23, 64), (24, -1), (25, 32), (26, -1), (27, 64), (28, 4), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 64), (36, 128), (37, -1), (38, 1), (39, 1), (40, -1), (41, 256), (42, 64), (43, 128), (44, 32), (45, 16), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 15 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6]


Solution : [0, 8, 12, 15, 6] has cost 21.


Decide in level 15 among pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 29, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Decide 29 with phase True at level 15

After decision at level 15
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 29]


New level: 16
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 29]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 29]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 256), (18, -1), (19, -1), (20, 8), (21, 128), (22, 8), (23, 64), (24, -1), (25, 16), (26, -1), (27, 2), (28, 2), (29, -1), (30, 64), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 2), (37, -1), (38, 16), (39, 16), (40, -1), (41, 256), (42, 32), (43, 256), (44, 256), (45, 64), (46, 32), (47, 64), (48, 32), (49, 128), (50, 64), (51, 64), (52, 16), (53, 16), (54, 128), (55, -1), (56, 16), (57, 32), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 16 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 29]


Solution : [0, 8, 12, 15, 6, 29] has cost 31.


Before backtrack at level 16
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 29]

After backtrack at level 16
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 29]


Invert decision for 29 at level 15


New level: 16
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 256), (18, -1), (19, -1), (20, 8), (21, 128), (22, 8), (23, 64), (24, -1), (25, 16), (26, -1), (27, 2), (28, 2), (29, -1), (30, 64), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 2), (37, -1), (38, 16), (39, 16), (40, -1), (41, 256), (42, 32), (43, 256), (44, 256), (45, 64), (46, 32), (47, 64), (48, 32), (49, 128), (50, 64), (51, 64), (52, 16), (53, 16), (54, 128), (55, -1), (56, 16), (57, 32), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 16 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6]


Solution : [0, 8, 12, 15, 6] has cost 21.


Decide in level 16 among pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 44, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Decide 44 with phase True at level 16

After decision at level 16
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 44]


New level: 17
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 44]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 44]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, 128), (42, 64), (43, 256), (44, -1), (45, 8), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 32), (53, 64), (54, 64), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 17 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 44]


Solution : [0, 8, 12, 15, 6, 44] has cost 31.


Before backtrack at level 17
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 44]

After backtrack at level 17
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 44]


Invert decision for 44 at level 16


New level: 17
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, 128), (42, 64), (43, 256), (44, -1), (45, 8), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 32), (53, 64), (54, 64), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, 256), (42, 64), (43, 256), (44, -1), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 17 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6]


Solution : [0, 8, 12, 15, 6] has cost 21.


Decide in level 17 among pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 41, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, 256), (42, 64), (43, 256), (44, -1), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Decide 41 with phase True at level 17

After decision at level 17
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 41]


New level: 18
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 41]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 41]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, 256), (42, 64), (43, 256), (44, -1), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 32), (28, 4), (29, -1), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 64), (36, 128), (37, -1), (38, 4), (39, 4), (40, -1), (41, -1), (42, 8), (43, 128), (44, -1), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 32), (51, 32), (52, 64), (53, 128), (54, 64), (55, -1), (56, 32), (57, 64), (58, 16), (59, 16), (60, 32), (61, 32)]

Covered at level 18 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 41]


Solution : [0, 8, 12, 15, 6, 41] has cost 31.


Before backtrack at level 18
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 41]

After backtrack at level 18
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 41]


Invert decision for 41 at level 17


New level: 18
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 32), (28, 4), (29, -1), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 64), (36, 128), (37, -1), (38, 4), (39, 4), (40, -1), (41, -1), (42, 8), (43, 128), (44, -1), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 32), (51, 32), (52, 64), (53, 128), (54, 64), (55, -1), (56, 32), (57, 64), (58, 16), (59, 16), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, -1), (42, 64), (43, 256), (44, -1), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 18 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6]


Solution : [0, 8, 12, 15, 6] has cost 21.


Decide in level 18 among pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 49, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, -1), (42, 64), (43, 256), (44, -1), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Decide 49 with phase True at level 18

After decision at level 18
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 49]


New level: 19
 pending : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 49]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 23, 58, 57, 60, 51, 53, 42, 45, 43, 33, 46, 22, 34, 48, 20, 31, 30, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 27, 32, 28, 36]
 solution : [0, 8, 12, 15, 6, 49]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, -1), (42, 64), (43, 256), (44, -1), (45, 64), (46, 32), (47, 256), (48, 32), (49, 256), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 0), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 4), (32, 4), (33, 32), (34, 32), (35, 128), (36, 1), (37, -1), (38, 4), (39, 4), (40, -1), (41, -1), (42, 64), (43, 32), (44, -1), (45, 64), (46, 8), (47, 64), (48, 8), (49, -1), (50, 64), (51, 64), (52, 64), (53, 128), (54, 8), (55, -1), (56, 8), (57, 16), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 19 : {27, 28, 30, 23}

After reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 43, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 32, 36]
 solution : [0, 8, 12, 15, 6, 49]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 43, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 32, 36]
 solution : [0, 8, 12, 15, 6, 49]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 0), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 4), (32, 4), (33, 32), (34, 32), (35, 128), (36, 1), (37, -1), (38, 4), (39, 4), (40, -1), (41, -1), (42, 64), (43, 32), (44, -1), (45, 64), (46, 8), (47, 64), (48, 8), (49, -1), (50, 64), (51, 64), (52, 64), (53, 128), (54, 8), (55, -1), (56, 8), (57, 16), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, 4), (33, 32), (34, 32), (35, 128), (36, 1), (37, -1), (38, 4), (39, 4), (40, -1), (41, -1), (42, 64), (43, 32), (44, -1), (45, 64), (46, 8), (47, 64), (48, 8), (49, -1), (50, 64), (51, 64), (52, 64), (53, 128), (54, 8), (55, -1), (56, 8), (57, 16), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 19 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 43, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 32, 36]
 solution : [0, 8, 12, 15, 6, 49]


Solution : [0, 8, 12, 15, 6, 49] has cost 31.


Before backtrack at level 19
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 43, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 32, 36]
 solution : [0, 8, 12, 15, 6, 49]

After backtrack at level 19
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 43, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28]
 solution : [0, 8, 12, 15, 6, 49]


Invert decision for 49 at level 18


New level: 19
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 43, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28]
 solution : [0, 8, 12, 15, 6]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 43, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28]
 solution : [0, 8, 12, 15, 6]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 16), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, 4), (33, 32), (34, 32), (35, 128), (36, 1), (37, -1), (38, 4), (39, 4), (40, -1), (41, -1), (42, 64), (43, 32), (44, -1), (45, 64), (46, 8), (47, 64), (48, 8), (49, -1), (50, 64), (51, 64), (52, 64), (53, 128), (54, 8), (55, -1), (56, 8), (57, 16), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, -1), (42, 64), (43, 256), (44, -1), (45, 64), (46, 32), (47, 256), (48, 32), (49, -1), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 19 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 43, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28]
 solution : [0, 8, 12, 15, 6]


Solution : [0, 8, 12, 15, 6] has cost 21.


Decide in level 19 among pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 43, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, -1), (42, 64), (43, 256), (44, -1), (45, 64), (46, 32), (47, 256), (48, 32), (49, -1), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Decide 43 with phase True at level 19

After decision at level 19
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28]
 solution : [0, 8, 12, 15, 6, 43]


New level: 20
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28]
 solution : [0, 8, 12, 15, 6, 43]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 38, 39, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28]
 solution : [0, 8, 12, 15, 6, 43]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, -1), (42, 64), (43, 256), (44, -1), (45, 64), (46, 32), (47, 256), (48, 32), (49, -1), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 64), (24, -1), (25, 32), (26, -1), (27, 64), (28, 2), (29, -1), (30, 64), (31, 32), (32, 128), (33, 16), (34, 16), (35, 2), (36, 128), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, 16), (43, -1), (44, -1), (45, 64), (46, 16), (47, 128), (48, 16), (49, -1), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 20 : {38, 39}

After reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28]
 solution : [0, 8, 12, 15, 6, 43]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28]
 solution : [0, 8, 12, 15, 6, 43]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 64), (24, -1), (25, 32), (26, -1), (27, 64), (28, 2), (29, -1), (30, 64), (31, 32), (32, 128), (33, 16), (34, 16), (35, 2), (36, 128), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, 16), (43, -1), (44, -1), (45, 64), (46, 16), (47, 128), (48, 16), (49, -1), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 64), (24, -1), (25, 32), (26, -1), (27, 64), (28, 2), (29, -1), (30, 64), (31, 32), (32, 128), (33, 16), (34, 16), (35, 2), (36, 128), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 16), (43, -1), (44, -1), (45, 64), (46, 16), (47, 128), (48, 16), (49, -1), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 20 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28]
 solution : [0, 8, 12, 15, 6, 43]


Solution : [0, 8, 12, 15, 6, 43] has cost 31.


Before backtrack at level 20
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28]
 solution : [0, 8, 12, 15, 6, 43]

After backtrack at level 20
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28, 38, 39]
 solution : [0, 8, 12, 15, 6, 43]


Invert decision for 43 at level 19


New level: 20
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28, 38, 39]
 solution : [0, 8, 12, 15, 6]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28, 38, 39]
 solution : [0, 8, 12, 15, 6]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 64), (24, -1), (25, 32), (26, -1), (27, 64), (28, 2), (29, -1), (30, 64), (31, 32), (32, 128), (33, 16), (34, 16), (35, 2), (36, 128), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 16), (43, -1), (44, -1), (45, 64), (46, 16), (47, 128), (48, 16), (49, -1), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, -1), (42, 64), (43, -1), (44, -1), (45, 64), (46, 32), (47, 256), (48, 32), (49, -1), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 20 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28, 38, 39]
 solution : [0, 8, 12, 15, 6]


Solution : [0, 8, 12, 15, 6] has cost 21.


Decide in level 20 among pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 22, 34, 48, 20, 31, 7, 47, 21, 25, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28, 38, 39]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, -1), (42, 64), (43, -1), (44, -1), (45, 64), (46, 32), (47, 256), (48, 32), (49, -1), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

Decide 7 with phase True at level 20

After decision at level 20
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 22, 34, 48, 20, 31, 47, 21, 25, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28, 38, 39]
 solution : [0, 8, 12, 15, 6, 7]


New level: 21
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 22, 34, 48, 20, 31, 47, 21, 25, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28, 38, 39]
 solution : [0, 8, 12, 15, 6, 7]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 22, 34, 48, 20, 31, 47, 21, 25, 35, 2, 16, 4, 17, 3, 54, 32, 36, 23, 30, 27, 28, 38, 39]
 solution : [0, 8, 12, 15, 6, 7]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 32), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, -1), (42, 64), (43, -1), (44, -1), (45, 64), (46, 32), (47, 256), (48, 32), (49, -1), (50, 64), (51, 64), (52, 64), (53, 128), (54, 128), (55, -1), (56, 32), (57, 64), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 256), (18, -1), (19, -1), (20, 0), (21, 8), (22, 0), (23, 8), (24, -1), (25, 16), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 2), (34, 2), (35, 64), (36, 2), (37, -1), (38, 1), (39, 1), (40, -1), (41, -1), (42, 16), (43, -1), (44, -1), (45, 64), (46, 2), (47, 128), (48, 2), (49, -1), (50, 64), (51, 64), (52, 16), (53, 32), (54, 128), (55, -1), (56, 16), (57, 16), (58, 4), (59, 4), (60, 64), (61, 64)]

Covered at level 21 : {32, 20, 22, 27, 28, 30, 31}

After reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 25, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39]
 solution : [0, 8, 12, 15, 6, 7]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 25, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39]
 solution : [0, 8, 12, 15, 6, 7]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 256), (18, -1), (19, -1), (20, 0), (21, 8), (22, 0), (23, 8), (24, -1), (25, 16), (26, -1), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 2), (34, 2), (35, 64), (36, 2), (37, -1), (38, 1), (39, 1), (40, -1), (41, -1), (42, 16), (43, -1), (44, -1), (45, 64), (46, 2), (47, 128), (48, 2), (49, -1), (50, 64), (51, 64), (52, 16), (53, 32), (54, 128), (55, -1), (56, 16), (57, 16), (58, 4), (59, 4), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 256), (18, -1), (19, -1), (20, -1), (21, 8), (22, -1), (23, 8), (24, -1), (25, 16), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, 2), (35, 64), (36, 2), (37, -1), (38, 1), (39, 1), (40, -1), (41, -1), (42, 16), (43, -1), (44, -1), (45, 64), (46, 2), (47, 1), (48, 2), (49, -1), (50, 64), (51, 64), (52, 16), (53, 32), (54, 128), (55, -1), (56, 16), (57, 16), (58, 4), (59, 4), (60, 64), (61, 64)]

Covered at level 21 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 25, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39]
 solution : [0, 8, 12, 15, 6, 7]


Solution : [0, 8, 12, 15, 6, 7] has cost 30.


Before backtrack at level 21
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 25, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39]
 solution : [0, 8, 12, 15, 6, 7]

After backtrack at level 21
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 25, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28]
 solution : [0, 8, 12, 15, 6, 7]


Invert decision for 7 at level 20


New level: 21
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 25, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28]
 solution : [0, 8, 12, 15, 6]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 25, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28]
 solution : [0, 8, 12, 15, 6]

Essensial at level 21 : {25}

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 256), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 256), (18, -1), (19, -1), (20, -1), (21, 8), (22, -1), (23, 8), (24, -1), (25, 16), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, 2), (35, 64), (36, 2), (37, -1), (38, 1), (39, 1), (40, -1), (41, -1), (42, 16), (43, -1), (44, -1), (45, 64), (46, 2), (47, 1), (48, 2), (49, -1), (50, 64), (51, 64), (52, 16), (53, 32), (54, 128), (55, -1), (56, 16), (57, 16), (58, 4), (59, 4), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 16), (21, 8), (22, 16), (23, 128), (24, -1), (25, -1), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 16), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, -1), (42, 32), (43, -1), (44, -1), (45, 16), (46, 32), (47, 16), (48, 32), (49, -1), (50, 64), (51, 64), (52, 32), (53, 32), (54, 128), (55, -1), (56, 16), (57, 32), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 21 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28]
 solution : [0, 8, 12, 15, 6, 25]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28]
 solution : [0, 8, 12, 15, 6, 25]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 16), (21, 8), (22, 16), (23, 128), (24, -1), (25, -1), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 16), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, -1), (42, 32), (43, -1), (44, -1), (45, 16), (46, 32), (47, 16), (48, 32), (49, -1), (50, 64), (51, 64), (52, 32), (53, 32), (54, 128), (55, -1), (56, 16), (57, 32), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 16), (21, 8), (22, 16), (23, 128), (24, -1), (25, -1), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 16), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, -1), (42, 32), (43, -1), (44, -1), (45, 16), (46, 32), (47, 16), (48, 32), (49, -1), (50, 64), (51, 64), (52, 32), (53, 32), (54, 128), (55, -1), (56, 16), (57, 32), (58, 32), (59, 32), (60, 64), (61, 64)]

Covered at level 21 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28]
 solution : [0, 8, 12, 15, 6, 25]


Solution : [0, 8, 12, 15, 6, 25] has cost 31.


Before backtrack at level 21
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28]
 solution : [0, 8, 12, 15, 6, 25]

After backtrack at level 21
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25]
 solution : [0, 8, 12, 15, 6]


Before backtrack at level 20
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25]
 solution : [0, 8, 12, 15, 6]

After backtrack at level 20
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7]
 solution : [0, 8, 12, 15, 6]


Before backtrack at level 19
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7]
 solution : [0, 8, 12, 15, 6]

After backtrack at level 19
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43]
 solution : [0, 8, 12, 15, 6]


Before backtrack at level 18
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43]
 solution : [0, 8, 12, 15, 6]

After backtrack at level 18
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49]
 solution : [0, 8, 12, 15, 6]


Before backtrack at level 17
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49]
 solution : [0, 8, 12, 15, 6]

After backtrack at level 17
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41]
 solution : [0, 8, 12, 15, 6]


Before backtrack at level 16
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41]
 solution : [0, 8, 12, 15, 6]

After backtrack at level 16
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41, 44]
 solution : [0, 8, 12, 15, 6]


Before backtrack at level 15
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41, 44]
 solution : [0, 8, 12, 15, 6]

After backtrack at level 15
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41, 44, 29]
 solution : [0, 8, 12, 15, 6]


Before backtrack at level 14
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41, 44, 29]
 solution : [0, 8, 12, 15, 6]

After backtrack at level 14
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41, 44, 29, 40]
 solution : [0, 8, 12, 15, 6]


Before backtrack at level 13
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41, 44, 29, 40]
 solution : [0, 8, 12, 15, 6]

After backtrack at level 13
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41, 44, 29, 40, 37]
 solution : [0, 8, 12, 15, 6]


Before backtrack at level 12
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41, 44, 29, 40, 37]
 solution : [0, 8, 12, 15, 6]

After backtrack at level 12
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41, 44, 29, 40, 37, 55]
 solution : [0, 8, 12, 15, 6]


Before backtrack at level 11
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41, 44, 29, 40, 37, 55]
 solution : [0, 8, 12, 15, 6]

After backtrack at level 11
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41, 44, 29, 40, 37, 55, 10]
 solution : [0, 8, 12, 15, 6]


Invert decision for 6 at level 10


New level: 11
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41, 44, 29, 40, 37, 55, 10]
 solution : [0, 8, 12, 15]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41, 44, 29, 40, 37, 55, 10]
 solution : [0, 8, 12, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 16), (21, 8), (22, 16), (23, 128), (24, -1), (25, -1), (26, -1), (27, 64), (28, 8), (29, -1), (30, 128), (31, 16), (32, 128), (33, 32), (34, 32), (35, 128), (36, 128), (37, -1), (38, 16), (39, 16), (40, -1), (41, -1), (42, 32), (43, -1), (44, -1), (45, 16), (46, 32), (47, 16), (48, 32), (49, -1), (50, 64), (51, 64), (52, 32), (53, 32), (54, 128), (55, -1), (56, 16), (57, 32), (58, 32), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 128), (54, 128), (55, 256), (56, 32), (57, 64), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41, 44, 29, 40, 37, 55, 10]
 solution : [0, 8, 12, 15]


Solution : [0, 8, 12, 15] has cost 19.


Decide in level 11 among pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 3, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41, 44, 29, 40, 37, 55, 10]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 128), (54, 128), (55, 256), (56, 32), (57, 64), (58, 32), (59, 64), (60, 128), (61, 64)]

Decide 3 with phase True at level 11

After decision at level 11
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41, 44, 29, 40, 37, 55, 10]
 solution : [0, 8, 12, 15, 3]


New level: 12
 pending : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41, 44, 29, 40, 37, 55, 10]
 solution : [0, 8, 12, 15, 3]


Before reduction : 
 pending  : [59, 56, 52, 50, 61, 58, 57, 60, 51, 53, 42, 45, 33, 46, 34, 48, 47, 21, 35, 2, 16, 4, 17, 54, 36, 23, 38, 39, 22, 20, 31, 32, 30, 27, 28, 25, 7, 43, 49, 41, 44, 29, 40, 37, 55, 10]
 solution : [0, 8, 12, 15, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 128), (54, 128), (55, 256), (56, 32), (57, 64), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, 1), (21, 256), (22, 1), (23, 0), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, 2), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 4), (38, 0), (39, 0), (40, 4), (41, 0), (42, 0), (43, 0), (44, 2), (45, 4), (46, 0), (47, 1), (48, 0), (49, 0), (50, 0), (51, 0), (52, 2), (53, 2), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 12 : {2, 4, 16, 17, 23, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 10]
 solution : [0, 8, 12, 15, 3]


Before reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 10]
 solution : [0, 8, 12, 15, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, 1), (21, 256), (22, 1), (23, 0), (24, -1), (25, 32), (26, -1), (27, 0), (28, 0), (29, 2), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 4), (38, 0), (39, 0), (40, 4), (41, 0), (42, 0), (43, 0), (44, 2), (45, 4), (46, 0), (47, 1), (48, 0), (49, 0), (50, 0), (51, 0), (52, 2), (53, 2), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, 256), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, -1), (40, 4), (41, -1), (42, -1), (43, -1), (44, 2), (45, 4), (46, -1), (47, 1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 10]
 solution : [0, 8, 12, 15, 3]


Solution : [0, 8, 12, 15, 3] has cost 25.


Before backtrack at level 12
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 10]
 solution : [0, 8, 12, 15, 3]

After backtrack at level 12
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 10, 59, 56, 50, 61, 58, 57, 60, 51, 42, 33, 46, 34, 48, 35, 2, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55]
 solution : [0, 8, 12, 15, 3]


Invert decision for 3 at level 11


New level: 12
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 10, 59, 56, 50, 61, 58, 57, 60, 51, 42, 33, 46, 34, 48, 35, 2, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55]
 solution : [0, 8, 12, 15]


Before reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 10, 59, 56, 50, 61, 58, 57, 60, 51, 42, 33, 46, 34, 48, 35, 2, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55]
 solution : [0, 8, 12, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, 256), (22, 1), (23, -1), (24, -1), (25, 32), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4), (38, -1), (39, -1), (40, 4), (41, -1), (42, -1), (43, -1), (44, 2), (45, 4), (46, -1), (47, 1), (48, -1), (49, -1), (50, -1), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 128), (54, 128), (55, 256), (56, 32), (57, 64), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 10, 59, 56, 50, 61, 58, 57, 60, 51, 42, 33, 46, 34, 48, 35, 2, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55]
 solution : [0, 8, 12, 15]


Solution : [0, 8, 12, 15] has cost 19.


Decide in level 12 among pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 10, 59, 56, 50, 61, 58, 57, 60, 51, 42, 33, 46, 34, 48, 35, 2, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 128), (54, 128), (55, 256), (56, 32), (57, 64), (58, 32), (59, 64), (60, 128), (61, 64)]

Decide 10 with phase True at level 12

After decision at level 12
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 59, 56, 50, 61, 58, 57, 60, 51, 42, 33, 46, 34, 48, 35, 2, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55]
 solution : [0, 8, 12, 15, 10]


New level: 13
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 59, 56, 50, 61, 58, 57, 60, 51, 42, 33, 46, 34, 48, 35, 2, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55]
 solution : [0, 8, 12, 15, 10]


Before reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 59, 56, 50, 61, 58, 57, 60, 51, 42, 33, 46, 34, 48, 35, 2, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55]
 solution : [0, 8, 12, 15, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 32), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 64), (43, 256), (44, 256), (45, 64), (46, 32), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 128), (54, 128), (55, 256), (56, 32), (57, 64), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 16), (22, 32), (23, 128), (24, -1), (25, 4), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 16), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 32), (43, 256), (44, 256), (45, 32), (46, 32), (47, 32), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 128), (54, 128), (55, 256), (56, 16), (57, 32), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 13 : set()

After reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 59, 56, 50, 61, 58, 57, 60, 51, 42, 33, 46, 34, 48, 35, 2, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55]
 solution : [0, 8, 12, 15, 10]


Solution : [0, 8, 12, 15, 10] has cost 24.


Before backtrack at level 13
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 59, 56, 50, 61, 58, 57, 60, 51, 42, 33, 46, 34, 48, 35, 2, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55]
 solution : [0, 8, 12, 15, 10]

After backtrack at level 13
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 59, 56, 50, 61, 58, 57, 60, 51, 42, 33, 46, 34, 48, 35, 2, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55]
 solution : [0, 8, 12, 15, 10]


Invert decision for 10 at level 12


New level: 13
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 59, 56, 50, 61, 58, 57, 60, 51, 42, 33, 46, 34, 48, 35, 2, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55]
 solution : [0, 8, 12, 15]


Before reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 59, 56, 50, 61, 58, 57, 60, 51, 42, 33, 46, 34, 48, 35, 2, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55]
 solution : [0, 8, 12, 15]

Essensial at level 13 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 64), (21, 16), (22, 32), (23, 128), (24, -1), (25, 4), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 16), (32, 128), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 16), (39, 32), (40, 256), (41, 256), (42, 32), (43, 256), (44, 256), (45, 32), (46, 32), (47, 32), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 128), (54, 128), (55, 256), (56, 16), (57, 32), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 32), (21, 256), (22, 16), (23, 2), (24, -1), (25, 32), (26, -1), (27, 64), (28, 2), (29, 256), (30, 128), (31, 8), (32, 128), (33, 16), (34, 32), (35, 16), (36, 64), (37, 256), (38, 8), (39, 16), (40, 256), (41, 64), (42, 0), (43, 16), (44, 256), (45, 4), (46, 16), (47, 8), (48, 32), (49, 256), (50, 16), (51, 64), (52, 32), (53, 64), (54, 2), (55, 256), (56, 0), (57, 8), (58, 0), (59, 0), (60, 64), (61, 16)]

Covered at level 13 : {56, 58, 59, 42}

After reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55]
 solution : [0, 8, 12, 15, 2]


Before reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55]
 solution : [0, 8, 12, 15, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 32), (21, 256), (22, 16), (23, 2), (24, -1), (25, 32), (26, -1), (27, 64), (28, 2), (29, 256), (30, 128), (31, 8), (32, 128), (33, 16), (34, 32), (35, 16), (36, 64), (37, 256), (38, 8), (39, 16), (40, 256), (41, 64), (42, 0), (43, 16), (44, 256), (45, 4), (46, 16), (47, 8), (48, 32), (49, 256), (50, 16), (51, 64), (52, 32), (53, 64), (54, 2), (55, 256), (56, 0), (57, 8), (58, 0), (59, 0), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 32), (21, 256), (22, 16), (23, 2), (24, -1), (25, 32), (26, -1), (27, 64), (28, 2), (29, 256), (30, 128), (31, 8), (32, 128), (33, 16), (34, 32), (35, 16), (36, 64), (37, 256), (38, 8), (39, 16), (40, 256), (41, 64), (42, -1), (43, 16), (44, 256), (45, 4), (46, 16), (47, 8), (48, 32), (49, 256), (50, 16), (51, 64), (52, 32), (53, 64), (54, 2), (55, 256), (56, -1), (57, 8), (58, -1), (59, -1), (60, 64), (61, 16)]

Covered at level 13 : set()

After reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55]
 solution : [0, 8, 12, 15, 2]


Solution : [0, 8, 12, 15, 2] has cost 25.


Before backtrack at level 13
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55]
 solution : [0, 8, 12, 15, 2]

After backtrack at level 13
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42]
 solution : [0, 8, 12, 15]


Before backtrack at level 12
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42]
 solution : [0, 8, 12, 15]

After backtrack at level 12
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 10]
 solution : [0, 8, 12, 15]


Before backtrack at level 11
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 10]
 solution : [0, 8, 12, 15]

After backtrack at level 11
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 10, 3]
 solution : [0, 8, 12, 15]


Before backtrack at level 10
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 10, 3]
 solution : [0, 8, 12, 15]

After backtrack at level 10
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 10, 3, 26, 24, 14, 6]
 solution : [0, 8, 12, 15]


Invert decision for 15 at level 9


New level: 10
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 10, 3, 26, 24, 14, 6]
 solution : [0, 8, 12]


Before reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 10, 3, 26, 24, 14, 6]
 solution : [0, 8, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 32), (21, 256), (22, 16), (23, 2), (24, -1), (25, 32), (26, -1), (27, 64), (28, 2), (29, 256), (30, 128), (31, 8), (32, 128), (33, 16), (34, 32), (35, 16), (36, 64), (37, 256), (38, 8), (39, 16), (40, 256), (41, 64), (42, -1), (43, 16), (44, 256), (45, 4), (46, 16), (47, 8), (48, 32), (49, 256), (50, 16), (51, 64), (52, 32), (53, 64), (54, 2), (55, 256), (56, -1), (57, 8), (58, -1), (59, -1), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 128), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 128), (55, 256), (56, 128), (57, 256), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 10, 3, 26, 24, 14, 6]
 solution : [0, 8, 12]


Solution : [0, 8, 12] has cost 13.


Decide in level 10 among pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 16, 4, 17, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 10, 3, 26, 24, 14, 6]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 128), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 128), (55, 256), (56, 128), (57, 256), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 17 with phase True at level 10

After decision at level 10
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 16, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 10, 3, 26, 24, 14, 6]
 solution : [0, 8, 12, 17]


New level: 11
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 16, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 10, 3, 26, 24, 14, 6]
 solution : [0, 8, 12, 17]


Before reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 16, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 10, 3, 26, 24, 14, 6]
 solution : [0, 8, 12, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 128), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 128), (39, 256), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 128), (55, 256), (56, 128), (57, 256), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 32), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 64), (42, 256), (43, 256), (44, 64), (45, 256), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 64), (52, 32), (53, 64), (54, 32), (55, 64), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 11 : {16}

After reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 10, 3, 26, 24, 14, 6]
 solution : [0, 8, 12, 17]


Before reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 10, 3, 26, 24, 14, 6]
 solution : [0, 8, 12, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 32), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 64), (42, 256), (43, 256), (44, 64), (45, 256), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 64), (52, 32), (53, 64), (54, 32), (55, 64), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 32), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 64), (42, 256), (43, 256), (44, 64), (45, 256), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 64), (52, 32), (53, 64), (54, 32), (55, 64), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 10, 3, 26, 24, 14, 6]
 solution : [0, 8, 12, 17]


Solution : [0, 8, 12, 17] has cost 19.


Decide in level 11 among pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 10, 3, 26, 24, 14, 6]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 32), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 64), (42, 256), (43, 256), (44, 64), (45, 256), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 64), (52, 32), (53, 64), (54, 32), (55, 64), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

Decide 10 with phase True at level 11

After decision at level 11
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 3, 26, 24, 14, 6]
 solution : [0, 8, 12, 17, 10]


New level: 12
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 3, 26, 24, 14, 6]
 solution : [0, 8, 12, 17, 10]


Before reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 3, 26, 24, 14, 6]
 solution : [0, 8, 12, 17, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 32), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 64), (42, 256), (43, 256), (44, 64), (45, 256), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 64), (52, 32), (53, 64), (54, 32), (55, 64), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 64), (21, 64), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 16), (28, 16), (29, 256), (30, 128), (31, 128), (32, 32), (33, 32), (34, 64), (35, 128), (36, 64), (37, 256), (38, 32), (39, 32), (40, 256), (41, 64), (42, 256), (43, 256), (44, 32), (45, 256), (46, 64), (47, 128), (48, 128), (49, 256), (50, 32), (51, 64), (52, 32), (53, 32), (54, 16), (55, 64), (56, 128), (57, 256), (58, 32), (59, 32), (60, 128), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 3, 26, 24, 14, 6]
 solution : [0, 8, 12, 17, 10]


Solution : [0, 8, 12, 17, 10] has cost 24.


Before backtrack at level 12
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 3, 26, 24, 14, 6]
 solution : [0, 8, 12, 17, 10]

After backtrack at level 12
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 3, 26, 24, 14, 6]
 solution : [0, 8, 12, 17, 10]


Invert decision for 10 at level 11


New level: 12
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 3, 26, 24, 14, 6]
 solution : [0, 8, 12, 17]


Before reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 3, 26, 24, 14, 6]
 solution : [0, 8, 12, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 256), (5, -1), (6, 512), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 64), (21, 64), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 16), (28, 16), (29, 256), (30, 128), (31, 128), (32, 32), (33, 32), (34, 64), (35, 128), (36, 64), (37, 256), (38, 32), (39, 32), (40, 256), (41, 64), (42, 256), (43, 256), (44, 32), (45, 256), (46, 64), (47, 128), (48, 128), (49, 256), (50, 32), (51, 64), (52, 32), (53, 32), (54, 16), (55, 64), (56, 128), (57, 256), (58, 32), (59, 32), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 32), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 64), (42, 256), (43, 256), (44, 64), (45, 256), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 64), (52, 32), (53, 64), (54, 32), (55, 64), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 3, 26, 24, 14, 6]
 solution : [0, 8, 12, 17]


Solution : [0, 8, 12, 17] has cost 19.


Decide in level 12 among pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 3, 26, 24, 14, 6]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 32), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 64), (42, 256), (43, 256), (44, 64), (45, 256), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 64), (52, 32), (53, 64), (54, 32), (55, 64), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

Decide 3 with phase True at level 12

After decision at level 12
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 26, 24, 14, 6]
 solution : [0, 8, 12, 17, 3]


New level: 13
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 26, 24, 14, 6]
 solution : [0, 8, 12, 17, 3]


Before reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 50, 61, 57, 60, 51, 33, 46, 34, 48, 35, 4, 54, 36, 23, 38, 39, 31, 32, 30, 27, 28, 43, 49, 41, 55, 2, 59, 56, 58, 42, 26, 24, 14, 6]
 solution : [0, 8, 12, 17, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 32), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 64), (42, 256), (43, 256), (44, 64), (45, 256), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 64), (52, 32), (53, 64), (54, 32), (55, 64), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, 0), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 4), (24, 32), (25, 128), (26, 64), (27, 4), (28, 4), (29, 256), (30, 2), (31, 2), (32, 0), (33, 4), (34, 8), (35, 1), (36, 0), (37, 256), (38, 32), (39, 64), (40, 256), (41, 0), (42, 4), (43, 4), (44, 4), (45, 256), (46, 16), (47, 64), (48, 32), (49, 4), (50, 0), (51, 0), (52, 4), (53, 4), (54, 0), (55, 0), (56, 4), (57, 4), (58, 4), (59, 8), (60, 16), (61, 8)]

Covered at level 13 : {32, 2, 4, 36, 6, 41, 50, 51, 54, 55}

After reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14]
 solution : [0, 8, 12, 17, 3]


Before reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14]
 solution : [0, 8, 12, 17, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, 0), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 4), (24, 32), (25, 128), (26, 64), (27, 4), (28, 4), (29, 256), (30, 2), (31, 2), (32, 0), (33, 4), (34, 8), (35, 1), (36, 0), (37, 256), (38, 32), (39, 64), (40, 256), (41, 0), (42, 4), (43, 4), (44, 4), (45, 256), (46, 16), (47, 64), (48, 32), (49, 4), (50, 0), (51, 0), (52, 4), (53, 4), (54, 0), (55, 0), (56, 4), (57, 4), (58, 4), (59, 8), (60, 16), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 4), (24, 32), (25, 128), (26, 64), (27, 4), (28, 4), (29, 256), (30, 2), (31, 2), (32, -1), (33, 4), (34, 8), (35, 1), (36, -1), (37, 256), (38, 32), (39, 64), (40, 256), (41, -1), (42, 4), (43, 4), (44, 4), (45, 256), (46, 16), (47, 64), (48, 32), (49, 4), (50, -1), (51, -1), (52, 4), (53, 4), (54, -1), (55, -1), (56, 4), (57, 4), (58, 4), (59, 8), (60, 16), (61, 8)]

Covered at level 13 : set()

After reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14]
 solution : [0, 8, 12, 17, 3]


Solution : [0, 8, 12, 17, 3] has cost 25.


Before backtrack at level 13
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14]
 solution : [0, 8, 12, 17, 3]

After backtrack at level 13
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 6]
 solution : [0, 8, 12, 17, 3]


Invert decision for 3 at level 12


New level: 13
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 6]
 solution : [0, 8, 12, 17]


Before reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 6]
 solution : [0, 8, 12, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 4), (24, 32), (25, 128), (26, 64), (27, 4), (28, 4), (29, 256), (30, 2), (31, 2), (32, -1), (33, 4), (34, 8), (35, 1), (36, -1), (37, 256), (38, 32), (39, 64), (40, 256), (41, -1), (42, 4), (43, 4), (44, 4), (45, 256), (46, 16), (47, 64), (48, 32), (49, 4), (50, -1), (51, -1), (52, 4), (53, 4), (54, -1), (55, -1), (56, 4), (57, 4), (58, 4), (59, 8), (60, 16), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 32), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 64), (42, 256), (43, 256), (44, 64), (45, 256), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 64), (52, 32), (53, 64), (54, 32), (55, 64), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 13 : set()

After reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 6]
 solution : [0, 8, 12, 17]


Solution : [0, 8, 12, 17] has cost 19.


Decide in level 13 among pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 6]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 32), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 64), (42, 256), (43, 256), (44, 64), (45, 256), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 64), (52, 32), (53, 64), (54, 32), (55, 64), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

Decide 6 with phase True at level 13

After decision at level 13
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6]


New level: 14
 pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6]


Before reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 32), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 64), (42, 256), (43, 256), (44, 64), (45, 256), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 64), (52, 32), (53, 64), (54, 32), (55, 64), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 16), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 32), (42, 256), (43, 256), (44, 64), (45, 256), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 32), (52, 32), (53, 64), (54, 16), (55, 32), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 14 : set()

After reduction : 
 pending  : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6]


Solution : [0, 8, 12, 17, 6] has cost 21.


Decide in level 14 among pending : [52, 53, 45, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 16), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 32), (42, 256), (43, 256), (44, 64), (45, 256), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 32), (52, 32), (53, 64), (54, 16), (55, 32), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

Decide 45 with phase True at level 14

After decision at level 14
 pending : [52, 53, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6, 45]


New level: 15
 pending : [52, 53, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6, 45]


Before reduction : 
 pending  : [52, 53, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6, 45]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 16), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 32), (42, 256), (43, 256), (44, 64), (45, 256), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 32), (52, 32), (53, 64), (54, 16), (55, 32), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 8), (29, 256), (30, 128), (31, 128), (32, 16), (33, 32), (34, 64), (35, 128), (36, 128), (37, 128), (38, 4), (39, 4), (40, 64), (41, 2), (42, 32), (43, 256), (44, 4), (45, -1), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 32), (52, 16), (53, 64), (54, 4), (55, 16), (56, 64), (57, 256), (58, 16), (59, 64), (60, 128), (61, 32)]

Covered at level 15 : set()

After reduction : 
 pending  : [52, 53, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6, 45]


Solution : [0, 8, 12, 17, 6, 45] has cost 31.


Before backtrack at level 15
 pending : [52, 53, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6, 45]

After backtrack at level 15
 pending : [52, 53, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6, 45]


Invert decision for 45 at level 14


New level: 15
 pending : [52, 53, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6]


Before reduction : 
 pending  : [52, 53, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 8), (29, 256), (30, 128), (31, 128), (32, 16), (33, 32), (34, 64), (35, 128), (36, 128), (37, 128), (38, 4), (39, 4), (40, 64), (41, 2), (42, 32), (43, 256), (44, 4), (45, -1), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 32), (52, 16), (53, 64), (54, 4), (55, 16), (56, 64), (57, 256), (58, 16), (59, 64), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 16), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 32), (42, 256), (43, 256), (44, 64), (45, -1), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 32), (52, 32), (53, 64), (54, 16), (55, 32), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 15 : set()

After reduction : 
 pending  : [52, 53, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6]


Solution : [0, 8, 12, 17, 6] has cost 21.


Decide in level 15 among pending : [52, 53, 47, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 16), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 32), (42, 256), (43, 256), (44, 64), (45, -1), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 32), (52, 32), (53, 64), (54, 16), (55, 32), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

Decide 47 with phase True at level 15

After decision at level 15
 pending : [52, 53, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6, 47]


New level: 16
 pending : [52, 53, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6, 47]


Before reduction : 
 pending  : [52, 53, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 46, 34, 48, 35, 23, 38, 39, 31, 30, 27, 28, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6, 47]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 16), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 32), (42, 256), (43, 256), (44, 64), (45, -1), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 32), (52, 32), (53, 64), (54, 16), (55, 32), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 64), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 32), (22, 8), (23, 8), (24, 16), (25, 64), (26, 32), (27, 0), (28, 0), (29, 16), (30, 8), (31, 32), (32, 16), (33, 8), (34, 8), (35, 4), (36, 128), (37, 128), (38, 1), (39, 2), (40, 256), (41, 32), (42, 64), (43, 16), (44, 64), (45, -1), (46, 0), (47, -1), (48, 0), (49, 16), (50, 16), (51, 16), (52, 32), (53, 64), (54, 16), (55, 32), (56, 16), (57, 32), (58, 8), (59, 8), (60, 16), (61, 16)]

Covered at level 16 : {48, 27, 28, 46}

After reduction : 
 pending  : [52, 53, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 38, 39, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6, 47]


Before reduction : 
 pending  : [52, 53, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 38, 39, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6, 47]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 64), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 32), (22, 8), (23, 8), (24, 16), (25, 64), (26, 32), (27, 0), (28, 0), (29, 16), (30, 8), (31, 32), (32, 16), (33, 8), (34, 8), (35, 4), (36, 128), (37, 128), (38, 1), (39, 2), (40, 256), (41, 32), (42, 64), (43, 16), (44, 64), (45, -1), (46, 0), (47, -1), (48, 0), (49, 16), (50, 16), (51, 16), (52, 32), (53, 64), (54, 16), (55, 32), (56, 16), (57, 32), (58, 8), (59, 8), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 64), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 32), (22, 8), (23, 8), (24, 16), (25, 64), (26, 32), (27, -1), (28, -1), (29, 16), (30, 8), (31, 32), (32, 16), (33, 4), (34, 4), (35, 4), (36, 128), (37, 128), (38, 1), (39, 2), (40, 256), (41, 32), (42, 64), (43, 16), (44, 64), (45, -1), (46, -1), (47, -1), (48, -1), (49, 16), (50, 16), (51, 16), (52, 32), (53, 64), (54, 16), (55, 32), (56, 16), (57, 32), (58, 8), (59, 8), (60, 16), (61, 16)]

Covered at level 16 : set()

After reduction : 
 pending  : [52, 53, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 38, 39, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6, 47]


Solution : [0, 8, 12, 17, 6, 47] has cost 31.


Before backtrack at level 16
 pending : [52, 53, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 38, 39, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2]
 solution : [0, 8, 12, 17, 6, 47]

After backtrack at level 16
 pending : [52, 53, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 38, 39, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48, 27, 28]
 solution : [0, 8, 12, 17, 6, 47]


Invert decision for 47 at level 15


New level: 16
 pending : [52, 53, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 38, 39, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48, 27, 28]
 solution : [0, 8, 12, 17, 6]


Before reduction : 
 pending  : [52, 53, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 38, 39, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48, 27, 28]
 solution : [0, 8, 12, 17, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 64), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 32), (22, 8), (23, 8), (24, 16), (25, 64), (26, 32), (27, -1), (28, -1), (29, 16), (30, 8), (31, 32), (32, 16), (33, 4), (34, 4), (35, 4), (36, 128), (37, 128), (38, 1), (39, 2), (40, 256), (41, 32), (42, 64), (43, 16), (44, 64), (45, -1), (46, -1), (47, -1), (48, -1), (49, 16), (50, 16), (51, 16), (52, 32), (53, 64), (54, 16), (55, 32), (56, 16), (57, 32), (58, 8), (59, 8), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 16), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 32), (42, 256), (43, 256), (44, 64), (45, -1), (46, 64), (47, -1), (48, 128), (49, 256), (50, 32), (51, 32), (52, 32), (53, 64), (54, 16), (55, 32), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 16 : set()

After reduction : 
 pending  : [52, 53, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 38, 39, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48, 27, 28]
 solution : [0, 8, 12, 17, 6]


Solution : [0, 8, 12, 17, 6] has cost 21.


Decide in level 16 among pending : [52, 53, 21, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 38, 39, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48, 27, 28]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 16), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 32), (42, 256), (43, 256), (44, 64), (45, -1), (46, 64), (47, -1), (48, 128), (49, 256), (50, 32), (51, 32), (52, 32), (53, 64), (54, 16), (55, 32), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

Decide 21 with phase True at level 16

After decision at level 16
 pending : [52, 53, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 38, 39, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48, 27, 28]
 solution : [0, 8, 12, 17, 6, 21]


New level: 17
 pending : [52, 53, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 38, 39, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48, 27, 28]
 solution : [0, 8, 12, 17, 6, 21]


Before reduction : 
 pending  : [52, 53, 22, 20, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 38, 39, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48, 27, 28]
 solution : [0, 8, 12, 17, 6, 21]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 16), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 32), (42, 256), (43, 256), (44, 64), (45, -1), (46, 64), (47, -1), (48, 128), (49, 256), (50, 32), (51, 32), (52, 32), (53, 64), (54, 16), (55, 32), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, 8), (24, 4), (25, 64), (26, 8), (27, 0), (28, 0), (29, 16), (30, 128), (31, 128), (32, 8), (33, 32), (34, 64), (35, 4), (36, 2), (37, 32), (38, 0), (39, 0), (40, 32), (41, 32), (42, 256), (43, 256), (44, 64), (45, -1), (46, 4), (47, -1), (48, 8), (49, 32), (50, 32), (51, 32), (52, 16), (53, 32), (54, 16), (55, 32), (56, 16), (57, 64), (58, 8), (59, 8), (60, 128), (61, 64)]

Covered at level 17 : {38, 39, 20, 22, 27, 28}

After reduction : 
 pending  : [52, 53, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48]
 solution : [0, 8, 12, 17, 6, 21]


Before reduction : 
 pending  : [52, 53, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48]
 solution : [0, 8, 12, 17, 6, 21]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 0), (23, 8), (24, 4), (25, 64), (26, 8), (27, 0), (28, 0), (29, 16), (30, 128), (31, 128), (32, 8), (33, 32), (34, 64), (35, 4), (36, 2), (37, 32), (38, 0), (39, 0), (40, 32), (41, 32), (42, 256), (43, 256), (44, 64), (45, -1), (46, 4), (47, -1), (48, 8), (49, 32), (50, 32), (51, 32), (52, 16), (53, 32), (54, 16), (55, 32), (56, 16), (57, 64), (58, 8), (59, 8), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 8), (24, 4), (25, 64), (26, 8), (27, -1), (28, -1), (29, 16), (30, 128), (31, 128), (32, 8), (33, 16), (34, 32), (35, 4), (36, 2), (37, 32), (38, -1), (39, -1), (40, 32), (41, 32), (42, 256), (43, 256), (44, 64), (45, -1), (46, 4), (47, -1), (48, 8), (49, 32), (50, 32), (51, 32), (52, 16), (53, 32), (54, 16), (55, 32), (56, 16), (57, 64), (58, 8), (59, 8), (60, 128), (61, 64)]

Covered at level 17 : set()

After reduction : 
 pending  : [52, 53, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48]
 solution : [0, 8, 12, 17, 6, 21]


Solution : [0, 8, 12, 17, 6, 21] has cost 31.


Before backtrack at level 17
 pending : [52, 53, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48]
 solution : [0, 8, 12, 17, 6, 21]

After backtrack at level 17
 pending : [52, 53, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28]
 solution : [0, 8, 12, 17, 6, 21]


Invert decision for 21 at level 16


New level: 17
 pending : [52, 53, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28]
 solution : [0, 8, 12, 17, 6]


Before reduction : 
 pending  : [52, 53, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28]
 solution : [0, 8, 12, 17, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 8), (24, 4), (25, 64), (26, 8), (27, -1), (28, -1), (29, 16), (30, 128), (31, 128), (32, 8), (33, 16), (34, 32), (35, 4), (36, 2), (37, 32), (38, -1), (39, -1), (40, 32), (41, 32), (42, 256), (43, 256), (44, 64), (45, -1), (46, 4), (47, -1), (48, 8), (49, 32), (50, 32), (51, 32), (52, 16), (53, 32), (54, 16), (55, 32), (56, 16), (57, 64), (58, 8), (59, 8), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, -1), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 16), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 32), (42, 256), (43, 256), (44, 64), (45, -1), (46, 64), (47, -1), (48, 128), (49, 256), (50, 32), (51, 32), (52, 32), (53, 64), (54, 16), (55, 32), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

Covered at level 17 : set()

After reduction : 
 pending  : [52, 53, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28]
 solution : [0, 8, 12, 17, 6]


Solution : [0, 8, 12, 17, 6] has cost 21.


Decide in level 17 among pending : [52, 53, 25, 7, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, -1), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 16), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 32), (42, 256), (43, 256), (44, 64), (45, -1), (46, 64), (47, -1), (48, 128), (49, 256), (50, 32), (51, 32), (52, 32), (53, 64), (54, 16), (55, 32), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

Decide 7 with phase True at level 17

After decision at level 17
 pending : [52, 53, 25, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28]
 solution : [0, 8, 12, 17, 6, 7]


New level: 18
 pending : [52, 53, 25, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28]
 solution : [0, 8, 12, 17, 6, 7]


Before reduction : 
 pending  : [52, 53, 25, 44, 29, 40, 37, 61, 57, 60, 33, 34, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 32, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28]
 solution : [0, 8, 12, 17, 6, 7]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, -1), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, 16), (33, 32), (34, 64), (35, 128), (36, 128), (37, 256), (38, 32), (39, 64), (40, 256), (41, 32), (42, 256), (43, 256), (44, 64), (45, -1), (46, 64), (47, -1), (48, 128), (49, 256), (50, 32), (51, 32), (52, 32), (53, 64), (54, 16), (55, 32), (56, 128), (57, 256), (58, 32), (59, 64), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, -1), (22, 16), (23, 64), (24, 32), (25, 128), (26, 64), (27, 8), (28, 4), (29, 256), (30, 4), (31, 4), (32, 0), (33, 0), (34, 0), (35, 4), (36, 2), (37, 256), (38, 8), (39, 16), (40, 128), (41, 8), (42, 256), (43, 256), (44, 64), (45, -1), (46, 4), (47, -1), (48, 8), (49, 256), (50, 4), (51, 4), (52, 16), (53, 32), (54, 8), (55, 8), (56, 128), (57, 256), (58, 16), (59, 32), (60, 32), (61, 16)]

Covered at level 18 : {32, 33, 34}

After reduction : 
 pending  : [52, 53, 25, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28]
 solution : [0, 8, 12, 17, 6, 7]


Before reduction : 
 pending  : [52, 53, 25, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28]
 solution : [0, 8, 12, 17, 6, 7]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, -1), (22, 16), (23, 64), (24, 32), (25, 128), (26, 64), (27, 8), (28, 4), (29, 256), (30, 4), (31, 4), (32, 0), (33, 0), (34, 0), (35, 4), (36, 2), (37, 256), (38, 8), (39, 16), (40, 128), (41, 8), (42, 256), (43, 256), (44, 64), (45, -1), (46, 4), (47, -1), (48, 8), (49, 256), (50, 4), (51, 4), (52, 16), (53, 32), (54, 8), (55, 8), (56, 128), (57, 256), (58, 16), (59, 32), (60, 32), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, -1), (22, 16), (23, 64), (24, 32), (25, 128), (26, 64), (27, 8), (28, 4), (29, 256), (30, 4), (31, 4), (32, -1), (33, -1), (34, -1), (35, 4), (36, 2), (37, 256), (38, 8), (39, 16), (40, 128), (41, 8), (42, 256), (43, 256), (44, 64), (45, -1), (46, 4), (47, -1), (48, 8), (49, 256), (50, 4), (51, 4), (52, 16), (53, 32), (54, 8), (55, 8), (56, 128), (57, 256), (58, 16), (59, 32), (60, 32), (61, 16)]

Covered at level 18 : set()

After reduction : 
 pending  : [52, 53, 25, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28]
 solution : [0, 8, 12, 17, 6, 7]


Solution : [0, 8, 12, 17, 6, 7] has cost 30.


Before backtrack at level 18
 pending : [52, 53, 25, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28]
 solution : [0, 8, 12, 17, 6, 7]

After backtrack at level 18
 pending : [52, 53, 25, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32]
 solution : [0, 8, 12, 17, 6, 7]


Invert decision for 7 at level 17


New level: 18
 pending : [52, 53, 25, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32]
 solution : [0, 8, 12, 17, 6]


Before reduction : 
 pending  : [52, 53, 25, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 26, 24, 14, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32]
 solution : [0, 8, 12, 17, 6]

Essensial at level 18 : {25}

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, -1), (22, 16), (23, 64), (24, 32), (25, 128), (26, 64), (27, 8), (28, 4), (29, 256), (30, 4), (31, 4), (32, -1), (33, -1), (34, -1), (35, 4), (36, 2), (37, 256), (38, 8), (39, 16), (40, 128), (41, 8), (42, 256), (43, 256), (44, 64), (45, -1), (46, 4), (47, -1), (48, 8), (49, 256), (50, 4), (51, 4), (52, 16), (53, 32), (54, 8), (55, 8), (56, 128), (57, 256), (58, 16), (59, 32), (60, 32), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 8), (23, 128), (24, 0), (25, -1), (26, 0), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 16), (34, 16), (35, 128), (36, 128), (37, 64), (38, 4), (39, 4), (40, 128), (41, 32), (42, 32), (43, 256), (44, 16), (45, -1), (46, 16), (47, -1), (48, 16), (49, 256), (50, 32), (51, 32), (52, 16), (53, 16), (54, 16), (55, 32), (56, 16), (57, 32), (58, 16), (59, 16), (60, 32), (61, 32)]

Covered at level 18 : {24, 26, 14}

After reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32]
 solution : [0, 8, 12, 17, 6, 25]


Before reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32]
 solution : [0, 8, 12, 17, 6, 25]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 8), (23, 128), (24, 0), (25, -1), (26, 0), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 16), (34, 16), (35, 128), (36, 128), (37, 64), (38, 4), (39, 4), (40, 128), (41, 32), (42, 32), (43, 256), (44, 16), (45, -1), (46, 16), (47, -1), (48, 16), (49, 256), (50, 32), (51, 32), (52, 16), (53, 16), (54, 16), (55, 32), (56, 16), (57, 32), (58, 16), (59, 16), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 8), (23, 128), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 16), (34, 16), (35, 128), (36, 128), (37, 64), (38, 4), (39, 4), (40, 128), (41, 32), (42, 32), (43, 256), (44, 16), (45, -1), (46, 16), (47, -1), (48, 16), (49, 256), (50, 32), (51, 32), (52, 16), (53, 16), (54, 16), (55, 32), (56, 16), (57, 32), (58, 16), (59, 16), (60, 32), (61, 32)]

Covered at level 18 : set()

After reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32]
 solution : [0, 8, 12, 17, 6, 25]


Solution : [0, 8, 12, 17, 6, 25] has cost 31.


Before backtrack at level 18
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32]
 solution : [0, 8, 12, 17, 6, 25]

After backtrack at level 18
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14]
 solution : [0, 8, 12, 17, 6]


Before backtrack at level 17
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14]
 solution : [0, 8, 12, 17, 6]

After backtrack at level 17
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7]
 solution : [0, 8, 12, 17, 6]


Before backtrack at level 16
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7]
 solution : [0, 8, 12, 17, 6]

After backtrack at level 16
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21]
 solution : [0, 8, 12, 17, 6]


Before backtrack at level 15
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21]
 solution : [0, 8, 12, 17, 6]

After backtrack at level 15
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21, 47]
 solution : [0, 8, 12, 17, 6]


Before backtrack at level 14
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21, 47]
 solution : [0, 8, 12, 17, 6]

After backtrack at level 14
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21, 47, 45]
 solution : [0, 8, 12, 17, 6]


Invert decision for 6 at level 13


New level: 14
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21, 47, 45]
 solution : [0, 8, 12, 17]


Before reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 50, 51, 4, 54, 36, 41, 55, 2, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21, 47, 45]
 solution : [0, 8, 12, 17]

Essensial at level 14 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 8), (23, 128), (24, -1), (25, -1), (26, -1), (27, 4), (28, 4), (29, 64), (30, 128), (31, 16), (32, 16), (33, 16), (34, 16), (35, 128), (36, 128), (37, 64), (38, 4), (39, 4), (40, 128), (41, 32), (42, 32), (43, 256), (44, 16), (45, -1), (46, 16), (47, -1), (48, 16), (49, 256), (50, 32), (51, 32), (52, 16), (53, 16), (54, 16), (55, 32), (56, 16), (57, 32), (58, 16), (59, 16), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 4), (24, 32), (25, 128), (26, 64), (27, 4), (28, 4), (29, 256), (30, 128), (31, 128), (32, 2), (33, 16), (34, 32), (35, 2), (36, 0), (37, 256), (38, 32), (39, 64), (40, 256), (41, 0), (42, 8), (43, 8), (44, 4), (45, 256), (46, 16), (47, 64), (48, 32), (49, 128), (50, 0), (51, 0), (52, 4), (53, 8), (54, 0), (55, 2), (56, 4), (57, 256), (58, 4), (59, 8), (60, 64), (61, 32)]

Covered at level 14 : {36, 41, 50, 51, 54}

After reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21, 47, 45]
 solution : [0, 8, 12, 17, 2]


Before reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21, 47, 45]
 solution : [0, 8, 12, 17, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 4), (24, 32), (25, 128), (26, 64), (27, 4), (28, 4), (29, 256), (30, 128), (31, 128), (32, 2), (33, 16), (34, 32), (35, 2), (36, 0), (37, 256), (38, 32), (39, 64), (40, 256), (41, 0), (42, 8), (43, 8), (44, 4), (45, 256), (46, 16), (47, 64), (48, 32), (49, 128), (50, 0), (51, 0), (52, 4), (53, 8), (54, 0), (55, 2), (56, 4), (57, 256), (58, 4), (59, 8), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 4), (24, 32), (25, 128), (26, 64), (27, 4), (28, 4), (29, 256), (30, 32), (31, 64), (32, 2), (33, 16), (34, 32), (35, 2), (36, -1), (37, 256), (38, 32), (39, 64), (40, 256), (41, -1), (42, 8), (43, 8), (44, 4), (45, 256), (46, 16), (47, 64), (48, 32), (49, 128), (50, -1), (51, -1), (52, 4), (53, 8), (54, -1), (55, 2), (56, 4), (57, 256), (58, 4), (59, 8), (60, 64), (61, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21, 47, 45]
 solution : [0, 8, 12, 17, 2]


Solution : [0, 8, 12, 17, 2] has cost 25.


Before backtrack at level 14
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21, 47, 45]
 solution : [0, 8, 12, 17, 2]

After backtrack at level 14
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41]
 solution : [0, 8, 12, 17]


Before backtrack at level 13
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41]
 solution : [0, 8, 12, 17]

After backtrack at level 13
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6]
 solution : [0, 8, 12, 17]


Before backtrack at level 12
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6]
 solution : [0, 8, 12, 17]

After backtrack at level 12
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3]
 solution : [0, 8, 12, 17]


Before backtrack at level 11
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3]
 solution : [0, 8, 12, 17]

After backtrack at level 11
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 16, 10]
 solution : [0, 8, 12, 17]


Invert decision for 17 at level 10


New level: 11
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 16, 10]
 solution : [0, 8, 12]


Before reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 26, 24, 14, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 16, 10]
 solution : [0, 8, 12]

Essensial at level 11 : {16, 26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 64), (23, 4), (24, 32), (25, 128), (26, 64), (27, 4), (28, 4), (29, 256), (30, 32), (31, 64), (32, 2), (33, 16), (34, 32), (35, 2), (36, -1), (37, 256), (38, 32), (39, 64), (40, 256), (41, -1), (42, 8), (43, 8), (44, 4), (45, 256), (46, 16), (47, 64), (48, 32), (49, 128), (50, -1), (51, -1), (52, 4), (53, 8), (54, -1), (55, 2), (56, 4), (57, 256), (58, 4), (59, 8), (60, 64), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 16), (23, 128), (24, 0), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 128), (32, 64), (33, 16), (34, 128), (35, 128), (36, 128), (37, 256), (38, 4), (39, 128), (40, 256), (41, 128), (42, 256), (43, 256), (44, 128), (45, 256), (46, 16), (47, 256), (48, 128), (49, 256), (50, 32), (51, 256), (52, 32), (53, 256), (54, 64), (55, 128), (56, 128), (57, 256), (58, 16), (59, 128), (60, 256), (61, 64)]

Covered at level 11 : {24, 14}

After reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 10]
 solution : [0, 8, 12, 16, 26]


Before reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 10]
 solution : [0, 8, 12, 16, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 16), (23, 128), (24, 0), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 128), (32, 64), (33, 16), (34, 128), (35, 128), (36, 128), (37, 256), (38, 4), (39, 128), (40, 256), (41, 128), (42, 256), (43, 256), (44, 128), (45, 256), (46, 16), (47, 256), (48, 128), (49, 256), (50, 32), (51, 256), (52, 32), (53, 256), (54, 64), (55, 128), (56, 128), (57, 256), (58, 16), (59, 128), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 128), (32, 64), (33, 16), (34, 128), (35, 128), (36, 128), (37, 256), (38, 4), (39, 128), (40, 256), (41, 128), (42, 256), (43, 256), (44, 128), (45, 256), (46, 16), (47, 256), (48, 128), (49, 256), (50, 32), (51, 256), (52, 32), (53, 256), (54, 64), (55, 128), (56, 128), (57, 256), (58, 16), (59, 128), (60, 256), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 10]
 solution : [0, 8, 12, 16, 26]


Solution : [0, 8, 12, 16, 26] has cost 29.


Before backtrack at level 11
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 10]
 solution : [0, 8, 12, 16, 26]

After backtrack at level 11
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 24, 14]
 solution : [0, 8, 12]


Before backtrack at level 10
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 24, 14]
 solution : [0, 8, 12]

After backtrack at level 10
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 24, 14, 17]
 solution : [0, 8, 12]


Before backtrack at level 9
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 24, 14, 17]
 solution : [0, 8, 12]

After backtrack at level 9
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 24, 14, 17, 15]
 solution : [0, 8, 12]


Before backtrack at level 8
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 24, 14, 17, 15]
 solution : [0, 8, 12]

After backtrack at level 8
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 24, 14, 17, 15, 19]
 solution : [0, 8, 12]


Before backtrack at level 7
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 24, 14, 17, 15, 19]
 solution : [0, 8, 12]

After backtrack at level 7
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 24, 14, 17, 15, 19, 18]
 solution : [0, 8, 12]


Invert decision for 12 at level 6


New level: 7
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 24, 14, 17, 15, 19, 18]
 solution : [0, 8]


Before reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 24, 14, 17, 15, 19, 18]
 solution : [0, 8]

Essensial at level 7 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 16), (23, 128), (24, -1), (25, 32), (26, -1), (27, 64), (28, 8), (29, 256), (30, 128), (31, 128), (32, 64), (33, 16), (34, 128), (35, 128), (36, 128), (37, 256), (38, 4), (39, 128), (40, 256), (41, 128), (42, 256), (43, 256), (44, 128), (45, 256), (46, 16), (47, 256), (48, 128), (49, 256), (50, 32), (51, 256), (52, 32), (53, 256), (54, 64), (55, 128), (56, 128), (57, 256), (58, 16), (59, 128), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 256), (24, 0), (25, 64), (26, 64), (27, 256), (28, 32), (29, 256), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 32), (39, 256), (40, 256), (41, 256), (42, 128), (43, 256), (44, 256), (45, 128), (46, 64), (47, 256), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 256), (55, 256), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

Covered at level 7 : {24}

After reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 17, 15, 19, 18]
 solution : [0, 8, 14]


Before reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 17, 15, 19, 18]
 solution : [0, 8, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 256), (24, 0), (25, 64), (26, 64), (27, 256), (28, 32), (29, 256), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 32), (39, 256), (40, 256), (41, 256), (42, 128), (43, 256), (44, 256), (45, 128), (46, 64), (47, 256), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 256), (55, 256), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 256), (24, -1), (25, 64), (26, 64), (27, 256), (28, 32), (29, 256), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 32), (39, 256), (40, 256), (41, 256), (42, 128), (43, 256), (44, 256), (45, 128), (46, 64), (47, 256), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 256), (55, 256), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 17, 15, 19, 18]
 solution : [0, 8, 14]


Solution : [0, 8, 14] has cost 13.


Decide in level 7 among pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 2, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 17, 15, 19, 18]

Coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 256), (24, -1), (25, 64), (26, 64), (27, 256), (28, 32), (29, 256), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 32), (39, 256), (40, 256), (41, 256), (42, 128), (43, 256), (44, 256), (45, 128), (46, 64), (47, 256), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 256), (55, 256), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

Decide 2 with phase True at level 7

After decision at level 7
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 17, 15, 19, 18]
 solution : [0, 8, 14, 2]


New level: 8
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 17, 15, 19, 18]
 solution : [0, 8, 14, 2]


Before reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 56, 58, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 17, 15, 19, 18]
 solution : [0, 8, 14, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, 512), (4, 256), (5, -1), (6, 512), (7, 256), (8, -1), (9, -1), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 256), (24, -1), (25, 64), (26, 64), (27, 256), (28, 32), (29, 256), (30, 128), (31, 64), (32, 128), (33, 64), (34, 128), (35, 128), (36, 128), (37, 256), (38, 32), (39, 256), (40, 256), (41, 256), (42, 128), (43, 256), (44, 256), (45, 128), (46, 64), (47, 256), (48, 256), (49, 256), (50, 128), (51, 256), (52, 128), (53, 256), (54, 256), (55, 256), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, 256), (54, 8), (55, 256), (56, 0), (57, 64), (58, 0), (59, 16), (60, 256), (61, 32)]

Covered at level 8 : {56, 58}

After reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 17, 15, 19, 18]
 solution : [0, 8, 14, 2]


Before reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 17, 15, 19, 18]
 solution : [0, 8, 14, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, 256), (54, 8), (55, 256), (56, 0), (57, 64), (58, 0), (59, 16), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, 256), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 17, 15, 19, 18]
 solution : [0, 8, 14, 2]


Solution : [0, 8, 14, 2] has cost 19.


Decide in level 8 among pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 17, 15, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, 256), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

Decide 17 with phase True at level 8

After decision at level 8
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 15, 19, 18]
 solution : [0, 8, 14, 2, 17]


New level: 9
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 15, 19, 18]
 solution : [0, 8, 14, 2, 17]


Before reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 23, 31, 30, 43, 49, 59, 42, 4, 55, 46, 48, 22, 20, 38, 39, 27, 28, 33, 34, 32, 25, 7, 21, 47, 45, 50, 51, 54, 36, 41, 6, 3, 10, 26, 16, 15, 19, 18]
 solution : [0, 8, 14, 2, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, 256), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 8), (5, -1), (6, 0), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32), (16, 0), (17, -1), (18, 1), (19, 0), (20, 128), (21, 256), (22, 1), (23, 0), (24, -1), (25, 64), (26, 16), (27, 0), (28, 0), (29, 256), (30, 128), (31, 8), (32, 2), (33, 1), (34, 32), (35, 1), (36, 0), (37, 256), (38, 0), (39, 64), (40, 256), (41, 0), (42, 1), (43, 1), (44, 2), (45, 64), (46, 0), (47, 32), (48, 16), (49, 8), (50, 0), (51, 0), (52, 2), (53, 16), (54, 0), (55, 2), (56, -1), (57, 16), (58, -1), (59, 2), (60, 64), (61, 1)]

Covered at level 9 : {36, 38, 6, 41, 46, 16, 50, 51, 19, 54, 23, 27, 28}

After reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 18]
 solution : [0, 8, 14, 2, 17]


Before reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 18]
 solution : [0, 8, 14, 2, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 8), (5, -1), (6, 0), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32), (16, 0), (17, -1), (18, 1), (19, 0), (20, 128), (21, 256), (22, 1), (23, 0), (24, -1), (25, 64), (26, 16), (27, 0), (28, 0), (29, 256), (30, 128), (31, 8), (32, 2), (33, 1), (34, 32), (35, 1), (36, 0), (37, 256), (38, 0), (39, 64), (40, 256), (41, 0), (42, 1), (43, 1), (44, 2), (45, 64), (46, 0), (47, 32), (48, 16), (49, 8), (50, 0), (51, 0), (52, 2), (53, 16), (54, 0), (55, 2), (56, -1), (57, 16), (58, -1), (59, 2), (60, 64), (61, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 8), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32), (16, -1), (17, -1), (18, 1), (19, -1), (20, 128), (21, 256), (22, 1), (23, -1), (24, -1), (25, 64), (26, 16), (27, -1), (28, -1), (29, 8), (30, 2), (31, 4), (32, 2), (33, 1), (34, 32), (35, 1), (36, -1), (37, 256), (38, -1), (39, 32), (40, 256), (41, -1), (42, 1), (43, 1), (44, 2), (45, 64), (46, -1), (47, 32), (48, 4), (49, 8), (50, -1), (51, -1), (52, 2), (53, 16), (54, -1), (55, 2), (56, -1), (57, 16), (58, -1), (59, 2), (60, 64), (61, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 18]
 solution : [0, 8, 14, 2, 17]


Solution : [0, 8, 14, 2, 17] has cost 25.


Before backtrack at level 9
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 18]
 solution : [0, 8, 14, 2, 17]

After backtrack at level 9
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 18, 23, 46, 38, 27, 28, 50, 51, 54, 36, 41, 6, 16, 19]
 solution : [0, 8, 14, 2, 17]


Invert decision for 17 at level 8


New level: 9
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 18, 23, 46, 38, 27, 28, 50, 51, 54, 36, 41, 6, 16, 19]
 solution : [0, 8, 14, 2]


Before reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 18, 23, 46, 38, 27, 28, 50, 51, 54, 36, 41, 6, 16, 19]
 solution : [0, 8, 14, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 8), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32), (16, -1), (17, -1), (18, 1), (19, -1), (20, 128), (21, 256), (22, 1), (23, -1), (24, -1), (25, 64), (26, 16), (27, -1), (28, -1), (29, 8), (30, 2), (31, 4), (32, 2), (33, 1), (34, 32), (35, 1), (36, -1), (37, 256), (38, -1), (39, 32), (40, 256), (41, -1), (42, 1), (43, 1), (44, 2), (45, 64), (46, -1), (47, 32), (48, 4), (49, 8), (50, -1), (51, -1), (52, 2), (53, 16), (54, -1), (55, 2), (56, -1), (57, 16), (58, -1), (59, 2), (60, 64), (61, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, 256), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 18, 23, 46, 38, 27, 28, 50, 51, 54, 36, 41, 6, 16, 19]
 solution : [0, 8, 14, 2]


Solution : [0, 8, 14, 2] has cost 19.


Decide in level 9 among pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 18, 23, 46, 38, 27, 28, 50, 51, 54, 36, 41, 6, 16, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, 256), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 23, 46, 38, 27, 28, 50, 51, 54, 36, 41, 6, 16, 19]
 solution : [0, 8, 14, 2, 18]


New level: 10
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 23, 46, 38, 27, 28, 50, 51, 54, 36, 41, 6, 16, 19]
 solution : [0, 8, 14, 2, 18]


Before reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 35, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 23, 46, 38, 27, 28, 50, 51, 54, 36, 41, 6, 16, 19]
 solution : [0, 8, 14, 2, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, 256), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, 64), (20, 256), (21, 256), (22, 8), (23, 1), (24, -1), (25, 64), (26, 64), (27, 128), (28, 2), (29, 128), (30, 128), (31, 32), (32, 128), (33, 8), (34, 64), (35, 0), (36, 16), (37, 16), (38, 0), (39, 16), (40, 4), (41, 16), (42, 4), (43, 2), (44, 64), (45, 8), (46, 8), (47, 32), (48, 256), (49, 128), (50, 16), (51, 64), (52, 16), (53, 128), (54, 8), (55, 128), (56, -1), (57, 32), (58, -1), (59, 8), (60, 64), (61, 8)]

Covered at level 10 : {35, 38}

After reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 23, 46, 27, 28, 50, 51, 54, 36, 41, 6, 16, 19]
 solution : [0, 8, 14, 2, 18]


Before reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 23, 46, 27, 28, 50, 51, 54, 36, 41, 6, 16, 19]
 solution : [0, 8, 14, 2, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, 64), (20, 256), (21, 256), (22, 8), (23, 1), (24, -1), (25, 64), (26, 64), (27, 128), (28, 2), (29, 128), (30, 128), (31, 32), (32, 128), (33, 8), (34, 64), (35, 0), (36, 16), (37, 16), (38, 0), (39, 16), (40, 4), (41, 16), (42, 4), (43, 2), (44, 64), (45, 8), (46, 8), (47, 32), (48, 256), (49, 128), (50, 16), (51, 64), (52, 16), (53, 128), (54, 8), (55, 128), (56, -1), (57, 32), (58, -1), (59, 8), (60, 64), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, 64), (20, 256), (21, 256), (22, 8), (23, 1), (24, -1), (25, 64), (26, 64), (27, 128), (28, 2), (29, 128), (30, 128), (31, 32), (32, 128), (33, 8), (34, 64), (35, -1), (36, 16), (37, 16), (38, -1), (39, 16), (40, 4), (41, 16), (42, 4), (43, 2), (44, 64), (45, 8), (46, 8), (47, 32), (48, 256), (49, 128), (50, 16), (51, 64), (52, 16), (53, 128), (54, 8), (55, 128), (56, -1), (57, 32), (58, -1), (59, 8), (60, 64), (61, 8)]

Covered at level 10 : set()

After reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 23, 46, 27, 28, 50, 51, 54, 36, 41, 6, 16, 19]
 solution : [0, 8, 14, 2, 18]


Solution : [0, 8, 14, 2, 18] has cost 28.


Before backtrack at level 10
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 23, 46, 27, 28, 50, 51, 54, 36, 41, 6, 16, 19]
 solution : [0, 8, 14, 2, 18]

After backtrack at level 10
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 23, 46, 27, 28, 50, 51, 54, 36, 41, 6, 16, 19, 35, 38]
 solution : [0, 8, 14, 2, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 23, 46, 27, 28, 50, 51, 54, 36, 41, 6, 16, 19, 35, 38]
 solution : [0, 8, 14, 2]


Before reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 23, 46, 27, 28, 50, 51, 54, 36, 41, 6, 16, 19, 35, 38]
 solution : [0, 8, 14, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, 64), (20, 256), (21, 256), (22, 8), (23, 1), (24, -1), (25, 64), (26, 64), (27, 128), (28, 2), (29, 128), (30, 128), (31, 32), (32, 128), (33, 8), (34, 64), (35, -1), (36, 16), (37, 16), (38, -1), (39, 16), (40, 4), (41, 16), (42, 4), (43, 2), (44, 64), (45, 8), (46, 8), (47, 32), (48, 256), (49, 128), (50, 16), (51, 64), (52, 16), (53, 128), (54, 8), (55, 128), (56, -1), (57, 32), (58, -1), (59, 8), (60, 64), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, 256), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 23, 46, 27, 28, 50, 51, 54, 36, 41, 6, 16, 19, 35, 38]
 solution : [0, 8, 14, 2]


Solution : [0, 8, 14, 2] has cost 19.


Decide in level 10 among pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 23, 46, 27, 28, 50, 51, 54, 36, 41, 6, 16, 19, 35, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, 256), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

Decide 19 with phase True at level 10

After decision at level 10
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 23, 46, 27, 28, 50, 51, 54, 36, 41, 6, 16, 35, 38]
 solution : [0, 8, 14, 2, 19]


New level: 11
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 23, 46, 27, 28, 50, 51, 54, 36, 41, 6, 16, 35, 38]
 solution : [0, 8, 14, 2, 19]


Before reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 23, 46, 27, 28, 50, 51, 54, 36, 41, 6, 16, 35, 38]
 solution : [0, 8, 14, 2, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, 256), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 2), (23, 0), (24, -1), (25, 64), (26, 64), (27, 16), (28, 0), (29, 16), (30, 8), (31, 16), (32, 64), (33, 16), (34, 128), (35, 32), (36, 0), (37, 256), (38, 1), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 2), (47, 32), (48, 256), (49, 16), (50, 4), (51, 32), (52, 4), (53, 128), (54, 2), (55, 128), (56, -1), (57, 32), (58, -1), (59, 16), (60, 256), (61, 32)]

Covered at level 11 : {28, 36, 23}

After reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38]
 solution : [0, 8, 14, 2, 19]


Before reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38]
 solution : [0, 8, 14, 2, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 2), (23, 0), (24, -1), (25, 64), (26, 64), (27, 16), (28, 0), (29, 16), (30, 8), (31, 16), (32, 64), (33, 16), (34, 128), (35, 32), (36, 0), (37, 256), (38, 1), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 2), (47, 32), (48, 256), (49, 16), (50, 4), (51, 32), (52, 4), (53, 128), (54, 2), (55, 128), (56, -1), (57, 32), (58, -1), (59, 16), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 2), (23, -1), (24, -1), (25, 64), (26, 64), (27, 16), (28, -1), (29, 16), (30, 8), (31, 16), (32, 64), (33, 16), (34, 128), (35, 32), (36, -1), (37, 256), (38, 1), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 2), (47, 32), (48, 256), (49, 16), (50, 4), (51, 32), (52, 4), (53, 128), (54, 2), (55, 128), (56, -1), (57, 32), (58, -1), (59, 16), (60, 256), (61, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38]
 solution : [0, 8, 14, 2, 19]


Solution : [0, 8, 14, 2, 19] has cost 28.


Before backtrack at level 11
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38]
 solution : [0, 8, 14, 2, 19]

After backtrack at level 11
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 23, 28, 36]
 solution : [0, 8, 14, 2, 19]


Invert decision for 19 at level 10


New level: 11
 pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 23, 28, 36]
 solution : [0, 8, 14, 2]


Before reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 23, 28, 36]
 solution : [0, 8, 14, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 2), (23, -1), (24, -1), (25, 64), (26, 64), (27, 16), (28, -1), (29, 16), (30, 8), (31, 16), (32, 64), (33, 16), (34, 128), (35, 32), (36, -1), (37, 256), (38, 1), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 2), (47, 32), (48, 256), (49, 16), (50, 4), (51, 32), (52, 4), (53, 128), (54, 2), (55, 128), (56, -1), (57, 32), (58, -1), (59, 16), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, 256), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 23, 28, 36]
 solution : [0, 8, 14, 2]


Solution : [0, 8, 14, 2] has cost 19.


Decide in level 11 among pending : [52, 53, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 23, 28, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, 256), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

Decide 53 with phase True at level 11

After decision at level 11
 pending : [52, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 23, 28, 36]
 solution : [0, 8, 14, 2, 53]


New level: 12
 pending : [52, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 23, 28, 36]
 solution : [0, 8, 14, 2, 53]


Before reduction : 
 pending  : [52, 44, 29, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 22, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 23, 28, 36]
 solution : [0, 8, 14, 2, 53]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, 256), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 16), (21, 128), (22, 0), (23, 0), (24, -1), (25, 32), (26, 64), (27, 128), (28, 4), (29, 0), (30, 128), (31, 16), (32, 128), (33, 16), (34, 128), (35, 32), (36, 16), (37, 128), (38, 4), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 128), (45, 64), (46, 8), (47, 32), (48, 256), (49, 256), (50, 16), (51, 64), (52, 0), (53, -1), (54, 1), (55, 256), (56, -1), (57, 32), (58, -1), (59, 8), (60, 256), (61, 32)]

Covered at level 12 : {52, 29, 22, 23}

After reduction : 
 pending  : [44, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36]
 solution : [0, 8, 14, 2, 53]


Before reduction : 
 pending  : [44, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36]
 solution : [0, 8, 14, 2, 53]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 16), (21, 128), (22, 0), (23, 0), (24, -1), (25, 32), (26, 64), (27, 128), (28, 4), (29, 0), (30, 128), (31, 16), (32, 128), (33, 16), (34, 128), (35, 32), (36, 16), (37, 128), (38, 4), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 128), (45, 64), (46, 8), (47, 32), (48, 256), (49, 256), (50, 16), (51, 64), (52, 0), (53, -1), (54, 1), (55, 256), (56, -1), (57, 32), (58, -1), (59, 8), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 16), (21, 128), (22, -1), (23, -1), (24, -1), (25, 32), (26, 64), (27, 128), (28, 4), (29, -1), (30, 128), (31, 16), (32, 128), (33, 16), (34, 128), (35, 32), (36, 16), (37, 128), (38, 4), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 128), (45, 64), (46, 8), (47, 32), (48, 256), (49, 256), (50, 16), (51, 64), (52, -1), (53, -1), (54, 1), (55, 256), (56, -1), (57, 32), (58, -1), (59, 8), (60, 256), (61, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [44, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36]
 solution : [0, 8, 14, 2, 53]


Solution : [0, 8, 14, 2, 53] has cost 29.


Before backtrack at level 12
 pending : [44, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36]
 solution : [0, 8, 14, 2, 53]

After backtrack at level 12
 pending : [44, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 53]


Invert decision for 53 at level 11


New level: 12
 pending : [44, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2]


Before reduction : 
 pending  : [44, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 16), (21, 128), (22, -1), (23, -1), (24, -1), (25, 32), (26, 64), (27, 128), (28, 4), (29, -1), (30, 128), (31, 16), (32, 128), (33, 16), (34, 128), (35, 32), (36, 16), (37, 128), (38, 4), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 128), (45, 64), (46, 8), (47, 32), (48, 256), (49, 256), (50, 16), (51, 64), (52, -1), (53, -1), (54, 1), (55, 256), (56, -1), (57, 32), (58, -1), (59, 8), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [44, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2]


Solution : [0, 8, 14, 2] has cost 19.


Decide in level 12 among pending : [44, 40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

Decide 44 with phase True at level 12

After decision at level 12
 pending : [40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 44]


New level: 13
 pending : [40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 44]


Before reduction : 
 pending  : [40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 44]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, 256), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 1), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, 64), (43, 128), (44, -1), (45, 16), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 16), (53, -1), (54, 4), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 44]


Solution : [0, 8, 14, 2, 44] has cost 29.


Before backtrack at level 13
 pending : [40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 44]

After backtrack at level 13
 pending : [40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 44]


Invert decision for 44 at level 12


New level: 13
 pending : [40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2]


Before reduction : 
 pending  : [40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 1), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 128), (38, 4), (39, 256), (40, 128), (41, 64), (42, 64), (43, 128), (44, -1), (45, 16), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 16), (53, -1), (54, 4), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2]


Solution : [0, 8, 14, 2] has cost 19.


Decide in level 13 among pending : [40, 37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

Decide 40 with phase True at level 13

After decision at level 13
 pending : [37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 40]


New level: 14
 pending : [37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 40]


Before reduction : 
 pending  : [37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 40]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, 256), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 128), (21, 128), (22, 8), (23, 1), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 32), (36, 64), (37, 64), (38, 4), (39, 128), (40, -1), (41, 128), (42, 64), (43, 64), (44, -1), (45, 16), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 40]


Solution : [0, 8, 14, 2, 40] has cost 29.


Before backtrack at level 14
 pending : [37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 40]

After backtrack at level 14
 pending : [37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 40]


Invert decision for 40 at level 13


New level: 14
 pending : [37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2]


Before reduction : 
 pending  : [37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 128), (21, 128), (22, 8), (23, 1), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 32), (36, 64), (37, 64), (38, 4), (39, 128), (40, -1), (41, 128), (42, 64), (43, 64), (44, -1), (45, 16), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2]


Solution : [0, 8, 14, 2] has cost 19.


Decide in level 14 among pending : [37, 61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

Decide 37 with phase True at level 14

After decision at level 14
 pending : [61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 37]


New level: 15
 pending : [61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 37]


Before reduction : 
 pending  : [61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 45, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 37]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, 256), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 16), (23, 2), (24, -1), (25, 32), (26, 64), (27, 256), (28, 8), (29, 128), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 32), (36, 64), (37, -1), (38, 8), (39, 128), (40, -1), (41, 128), (42, 64), (43, 64), (44, -1), (45, 0), (46, 16), (47, 16), (48, 256), (49, 256), (50, 32), (51, 128), (52, 16), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 8), (60, 256), (61, 32)]

Covered at level 15 : {45}

After reduction : 
 pending  : [61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 37]


Before reduction : 
 pending  : [61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 37]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 16), (23, 2), (24, -1), (25, 32), (26, 64), (27, 256), (28, 8), (29, 128), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 32), (36, 64), (37, -1), (38, 8), (39, 128), (40, -1), (41, 128), (42, 64), (43, 64), (44, -1), (45, 0), (46, 16), (47, 16), (48, 256), (49, 256), (50, 32), (51, 128), (52, 16), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 8), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 16), (23, 2), (24, -1), (25, 32), (26, 64), (27, 256), (28, 8), (29, 128), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 32), (36, 64), (37, -1), (38, 8), (39, 128), (40, -1), (41, 128), (42, 64), (43, 64), (44, -1), (45, -1), (46, 16), (47, 16), (48, 256), (49, 256), (50, 32), (51, 128), (52, 16), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 8), (60, 256), (61, 32)]

Covered at level 15 : set()

After reduction : 
 pending  : [61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 37]


Solution : [0, 8, 14, 2, 37] has cost 29.


Before backtrack at level 15
 pending : [61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23]
 solution : [0, 8, 14, 2, 37]

After backtrack at level 15
 pending : [61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23, 45]
 solution : [0, 8, 14, 2, 37]


Invert decision for 37 at level 14


New level: 15
 pending : [61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23, 45]
 solution : [0, 8, 14, 2]


Before reduction : 
 pending  : [61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23, 45]
 solution : [0, 8, 14, 2]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 16), (23, 2), (24, -1), (25, 32), (26, 64), (27, 256), (28, 8), (29, 128), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 32), (36, 64), (37, -1), (38, 8), (39, 128), (40, -1), (41, 128), (42, 64), (43, 64), (44, -1), (45, -1), (46, 16), (47, 16), (48, 256), (49, 256), (50, 32), (51, 128), (52, 16), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 8), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

Covered at level 15 : set()

After reduction : 
 pending  : [61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23, 45]
 solution : [0, 8, 14, 2]


Solution : [0, 8, 14, 2] has cost 19.


Decide in level 15 among pending : [61, 57, 60, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23, 45]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

Decide 60 with phase True at level 15

After decision at level 15
 pending : [61, 57, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23, 45]
 solution : [0, 8, 14, 2, 60]


New level: 16
 pending : [61, 57, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23, 45]
 solution : [0, 8, 14, 2, 60]


Before reduction : 
 pending  : [61, 57, 31, 30, 43, 49, 59, 42, 4, 55, 48, 20, 39, 33, 34, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 35, 38, 28, 36, 52, 29, 22, 23, 45]
 solution : [0, 8, 14, 2, 60]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 8), (23, 1), (24, -1), (25, 64), (26, 64), (27, 256), (28, 2), (29, 256), (30, 128), (31, 32), (32, 64), (33, 0), (34, 0), (35, 0), (36, 32), (37, -1), (38, 0), (39, 64), (40, -1), (41, 16), (42, 8), (43, 32), (44, -1), (45, 8), (46, 2), (47, 32), (48, 64), (49, 256), (50, 2), (51, 8), (52, 16), (53, -1), (54, 1), (55, 128), (56, -1), (57, 32), (58, -1), (59, 0), (60, -1), (61, 0)]

Covered at level 16 : {33, 34, 35, 38, 59, 61}

After reduction : 
 pending  : [57, 31, 30, 43, 49, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 28, 36, 52, 29, 22, 23, 45]
 solution : [0, 8, 14, 2, 60]


Before reduction : 
 pending  : [57, 31, 30, 43, 49, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 28, 36, 52, 29, 22, 23, 45]
 solution : [0, 8, 14, 2, 60]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 8), (23, 1), (24, -1), (25, 64), (26, 64), (27, 256), (28, 2), (29, 256), (30, 128), (31, 32), (32, 64), (33, 0), (34, 0), (35, 0), (36, 32), (37, -1), (38, 0), (39, 64), (40, -1), (41, 16), (42, 8), (43, 32), (44, -1), (45, 8), (46, 2), (47, 32), (48, 64), (49, 256), (50, 2), (51, 8), (52, 16), (53, -1), (54, 1), (55, 128), (56, -1), (57, 32), (58, -1), (59, 0), (60, -1), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 8), (23, 1), (24, -1), (25, 64), (26, 64), (27, 256), (28, 2), (29, 256), (30, 128), (31, 32), (32, 64), (33, -1), (34, -1), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, -1), (41, 16), (42, 8), (43, 32), (44, -1), (45, 8), (46, 2), (47, 32), (48, 64), (49, 256), (50, 2), (51, 8), (52, 16), (53, -1), (54, 1), (55, 128), (56, -1), (57, 32), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [57, 31, 30, 43, 49, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 28, 36, 52, 29, 22, 23, 45]
 solution : [0, 8, 14, 2, 60]


Solution : [0, 8, 14, 2, 60] has cost 29.


Before backtrack at level 16
 pending : [57, 31, 30, 43, 49, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 28, 36, 52, 29, 22, 23, 45]
 solution : [0, 8, 14, 2, 60]

After backtrack at level 16
 pending : [57, 31, 30, 43, 49, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 28, 36, 52, 29, 22, 23, 45, 61, 59, 33, 34, 35, 38]
 solution : [0, 8, 14, 2, 60]


Invert decision for 60 at level 15


New level: 16
 pending : [57, 31, 30, 43, 49, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 28, 36, 52, 29, 22, 23, 45, 61, 59, 33, 34, 35, 38]
 solution : [0, 8, 14, 2]


Before reduction : 
 pending  : [57, 31, 30, 43, 49, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 28, 36, 52, 29, 22, 23, 45, 61, 59, 33, 34, 35, 38]
 solution : [0, 8, 14, 2]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 8), (23, 1), (24, -1), (25, 64), (26, 64), (27, 256), (28, 2), (29, 256), (30, 128), (31, 32), (32, 64), (33, -1), (34, -1), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, -1), (41, 16), (42, 8), (43, 32), (44, -1), (45, 8), (46, 2), (47, 32), (48, 64), (49, 256), (50, 2), (51, 8), (52, 16), (53, -1), (54, 1), (55, 128), (56, -1), (57, 32), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

Covered at level 16 : set()

After reduction : 
 pending  : [57, 31, 30, 43, 49, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 28, 36, 52, 29, 22, 23, 45, 61, 59, 33, 34, 35, 38]
 solution : [0, 8, 14, 2]


Solution : [0, 8, 14, 2] has cost 19.


Decide in level 16 among pending : [57, 31, 30, 43, 49, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 28, 36, 52, 29, 22, 23, 45, 61, 59, 33, 34, 35, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

Decide 49 with phase True at level 16

After decision at level 16
 pending : [57, 31, 30, 43, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 28, 36, 52, 29, 22, 23, 45, 61, 59, 33, 34, 35, 38]
 solution : [0, 8, 14, 2, 49]


New level: 17
 pending : [57, 31, 30, 43, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 28, 36, 52, 29, 22, 23, 45, 61, 59, 33, 34, 35, 38]
 solution : [0, 8, 14, 2, 49]


Before reduction : 
 pending  : [57, 31, 30, 43, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 28, 36, 52, 29, 22, 23, 45, 61, 59, 33, 34, 35, 38]
 solution : [0, 8, 14, 2, 49]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 256), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, 256), (49, 256), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 2), (23, 0), (24, -1), (25, 64), (26, 64), (27, 32), (28, 0), (29, 32), (30, 0), (31, 4), (32, 64), (33, 16), (34, 128), (35, 64), (36, 2), (37, -1), (38, 1), (39, 256), (40, -1), (41, 128), (42, 64), (43, 8), (44, -1), (45, 64), (46, 2), (47, 4), (48, 64), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 4), (55, 128), (56, -1), (57, 16), (58, -1), (59, 16), (60, -1), (61, 32)]

Covered at level 17 : {28, 30, 23}

After reduction : 
 pending  : [57, 31, 43, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 36, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38]
 solution : [0, 8, 14, 2, 49]


Before reduction : 
 pending  : [57, 31, 43, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 36, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38]
 solution : [0, 8, 14, 2, 49]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 2), (23, 0), (24, -1), (25, 64), (26, 64), (27, 32), (28, 0), (29, 32), (30, 0), (31, 4), (32, 64), (33, 16), (34, 128), (35, 64), (36, 2), (37, -1), (38, 1), (39, 256), (40, -1), (41, 128), (42, 64), (43, 8), (44, -1), (45, 64), (46, 2), (47, 4), (48, 64), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 4), (55, 128), (56, -1), (57, 16), (58, -1), (59, 16), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 2), (23, -1), (24, -1), (25, 64), (26, 64), (27, 32), (28, -1), (29, 32), (30, -1), (31, 4), (32, 64), (33, 16), (34, 128), (35, 64), (36, 2), (37, -1), (38, 1), (39, 256), (40, -1), (41, 128), (42, 64), (43, 8), (44, -1), (45, 64), (46, 2), (47, 4), (48, 64), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 4), (55, 128), (56, -1), (57, 16), (58, -1), (59, 16), (60, -1), (61, 32)]

Covered at level 17 : set()

After reduction : 
 pending  : [57, 31, 43, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 36, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38]
 solution : [0, 8, 14, 2, 49]


Solution : [0, 8, 14, 2, 49] has cost 29.


Before backtrack at level 17
 pending : [57, 31, 43, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 36, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38]
 solution : [0, 8, 14, 2, 49]

After backtrack at level 17
 pending : [57, 31, 43, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 36, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30, 28, 23]
 solution : [0, 8, 14, 2, 49]


Invert decision for 49 at level 16


New level: 17
 pending : [57, 31, 43, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 36, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30, 28, 23]
 solution : [0, 8, 14, 2]


Before reduction : 
 pending  : [57, 31, 43, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 36, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30, 28, 23]
 solution : [0, 8, 14, 2]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 2), (23, -1), (24, -1), (25, 64), (26, 64), (27, 32), (28, -1), (29, 32), (30, -1), (31, 4), (32, 64), (33, 16), (34, 128), (35, 64), (36, 2), (37, -1), (38, 1), (39, 256), (40, -1), (41, 128), (42, 64), (43, 8), (44, -1), (45, 64), (46, 2), (47, 4), (48, 64), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 4), (55, 128), (56, -1), (57, 16), (58, -1), (59, 16), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, 256), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

Covered at level 17 : set()

After reduction : 
 pending  : [57, 31, 43, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 36, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30, 28, 23]
 solution : [0, 8, 14, 2]


Solution : [0, 8, 14, 2] has cost 19.


Decide in level 17 among pending : [57, 31, 43, 42, 4, 55, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 36, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30, 28, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, 256), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

Decide 55 with phase True at level 17

After decision at level 17
 pending : [57, 31, 43, 42, 4, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 36, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30, 28, 23]
 solution : [0, 8, 14, 2, 55]


New level: 18
 pending : [57, 31, 43, 42, 4, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 36, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30, 28, 23]
 solution : [0, 8, 14, 2, 55]


Before reduction : 
 pending  : [57, 31, 43, 42, 4, 48, 20, 39, 32, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 54, 41, 6, 16, 36, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30, 28, 23]
 solution : [0, 8, 14, 2, 55]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, 256), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, 256), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 0), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 64), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 2), (23, 0), (24, -1), (25, 64), (26, 64), (27, 16), (28, 0), (29, 16), (30, 4), (31, 4), (32, 0), (33, 2), (34, 64), (35, 32), (36, 0), (37, -1), (38, 1), (39, 256), (40, -1), (41, 1), (42, 64), (43, 128), (44, -1), (45, 64), (46, 2), (47, 32), (48, 256), (49, -1), (50, 2), (51, 16), (52, 4), (53, -1), (54, 0), (55, -1), (56, -1), (57, 8), (58, -1), (59, 8), (60, -1), (61, 2)]

Covered at level 18 : {32, 36, 6, 54, 23, 28}

After reduction : 
 pending  : [57, 31, 43, 42, 4, 48, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30]
 solution : [0, 8, 14, 2, 55]


Before reduction : 
 pending  : [57, 31, 43, 42, 4, 48, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30]
 solution : [0, 8, 14, 2, 55]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 0), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 64), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 2), (23, 0), (24, -1), (25, 64), (26, 64), (27, 16), (28, 0), (29, 16), (30, 4), (31, 4), (32, 0), (33, 2), (34, 64), (35, 32), (36, 0), (37, -1), (38, 1), (39, 256), (40, -1), (41, 1), (42, 64), (43, 128), (44, -1), (45, 64), (46, 2), (47, 32), (48, 256), (49, -1), (50, 2), (51, 16), (52, 4), (53, -1), (54, 0), (55, -1), (56, -1), (57, 8), (58, -1), (59, 8), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 64), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 2), (23, -1), (24, -1), (25, 64), (26, 64), (27, 16), (28, -1), (29, 16), (30, 4), (31, 4), (32, -1), (33, 2), (34, 64), (35, 32), (36, -1), (37, -1), (38, 1), (39, 256), (40, -1), (41, 1), (42, 64), (43, 128), (44, -1), (45, 64), (46, 2), (47, 32), (48, 256), (49, -1), (50, 2), (51, 16), (52, 4), (53, -1), (54, -1), (55, -1), (56, -1), (57, 8), (58, -1), (59, 8), (60, -1), (61, 2)]

Covered at level 18 : set()

After reduction : 
 pending  : [57, 31, 43, 42, 4, 48, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30]
 solution : [0, 8, 14, 2, 55]


Solution : [0, 8, 14, 2, 55] has cost 29.


Before backtrack at level 18
 pending : [57, 31, 43, 42, 4, 48, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30]
 solution : [0, 8, 14, 2, 55]

After backtrack at level 18
 pending : [57, 31, 43, 42, 4, 48, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30, 32, 54, 6, 36, 28, 23]
 solution : [0, 8, 14, 2, 55]


Invert decision for 55 at level 17


New level: 18
 pending : [57, 31, 43, 42, 4, 48, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30, 32, 54, 6, 36, 28, 23]
 solution : [0, 8, 14, 2]


Before reduction : 
 pending  : [57, 31, 43, 42, 4, 48, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30, 32, 54, 6, 36, 28, 23]
 solution : [0, 8, 14, 2]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 64), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 2), (23, -1), (24, -1), (25, 64), (26, 64), (27, 16), (28, -1), (29, 16), (30, 4), (31, 4), (32, -1), (33, 2), (34, 64), (35, 32), (36, -1), (37, -1), (38, 1), (39, 256), (40, -1), (41, 1), (42, 64), (43, 128), (44, -1), (45, 64), (46, 2), (47, 32), (48, 256), (49, -1), (50, 2), (51, 16), (52, 4), (53, -1), (54, -1), (55, -1), (56, -1), (57, 8), (58, -1), (59, 8), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, 256), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

Covered at level 18 : set()

After reduction : 
 pending  : [57, 31, 43, 42, 4, 48, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30, 32, 54, 6, 36, 28, 23]
 solution : [0, 8, 14, 2]


Solution : [0, 8, 14, 2] has cost 19.


Decide in level 18 among pending : [57, 31, 43, 42, 4, 48, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30, 32, 54, 6, 36, 28, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, 256), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

Decide 48 with phase True at level 18

After decision at level 18
 pending : [57, 31, 43, 42, 4, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30, 32, 54, 6, 36, 28, 23]
 solution : [0, 8, 14, 2, 48]


New level: 19
 pending : [57, 31, 43, 42, 4, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30, 32, 54, 6, 36, 28, 23]
 solution : [0, 8, 14, 2, 48]


Before reduction : 
 pending  : [57, 31, 43, 42, 4, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 46, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 38, 30, 32, 54, 6, 36, 28, 23]
 solution : [0, 8, 14, 2, 48]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, 256), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 2), (23, 0), (24, -1), (25, 64), (26, 16), (27, 32), (28, 0), (29, 64), (30, 2), (31, 16), (32, 128), (33, 4), (34, 64), (35, 4), (36, 4), (37, -1), (38, 0), (39, 64), (40, -1), (41, 64), (42, 16), (43, 0), (44, -1), (45, 64), (46, 0), (47, 8), (48, -1), (49, -1), (50, 16), (51, 64), (52, 32), (53, -1), (54, 4), (55, -1), (56, -1), (57, 64), (58, -1), (59, 4), (60, -1), (61, 16)]

Covered at level 19 : {38, 43, 46, 23, 28}

After reduction : 
 pending  : [57, 31, 42, 4, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36]
 solution : [0, 8, 14, 2, 48]


Before reduction : 
 pending  : [57, 31, 42, 4, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36]
 solution : [0, 8, 14, 2, 48]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 2), (23, 0), (24, -1), (25, 64), (26, 16), (27, 32), (28, 0), (29, 64), (30, 2), (31, 16), (32, 128), (33, 4), (34, 64), (35, 4), (36, 4), (37, -1), (38, 0), (39, 64), (40, -1), (41, 64), (42, 16), (43, 0), (44, -1), (45, 64), (46, 0), (47, 8), (48, -1), (49, -1), (50, 16), (51, 64), (52, 32), (53, -1), (54, 4), (55, -1), (56, -1), (57, 64), (58, -1), (59, 4), (60, -1), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 2), (23, -1), (24, -1), (25, 64), (26, 16), (27, 32), (28, -1), (29, 64), (30, 2), (31, 16), (32, 128), (33, 4), (34, 64), (35, 4), (36, 4), (37, -1), (38, -1), (39, 64), (40, -1), (41, 64), (42, 16), (43, -1), (44, -1), (45, 64), (46, -1), (47, 8), (48, -1), (49, -1), (50, 16), (51, 64), (52, 32), (53, -1), (54, 4), (55, -1), (56, -1), (57, 64), (58, -1), (59, 4), (60, -1), (61, 16)]

Covered at level 19 : set()

After reduction : 
 pending  : [57, 31, 42, 4, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36]
 solution : [0, 8, 14, 2, 48]


Solution : [0, 8, 14, 2, 48] has cost 29.


Before backtrack at level 19
 pending : [57, 31, 42, 4, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36]
 solution : [0, 8, 14, 2, 48]

After backtrack at level 19
 pending : [57, 31, 42, 4, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28, 23]
 solution : [0, 8, 14, 2, 48]


Invert decision for 48 at level 18


New level: 19
 pending : [57, 31, 42, 4, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28, 23]
 solution : [0, 8, 14, 2]


Before reduction : 
 pending  : [57, 31, 42, 4, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28, 23]
 solution : [0, 8, 14, 2]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 128), (21, 256), (22, 2), (23, -1), (24, -1), (25, 64), (26, 16), (27, 32), (28, -1), (29, 64), (30, 2), (31, 16), (32, 128), (33, 4), (34, 64), (35, 4), (36, 4), (37, -1), (38, -1), (39, 64), (40, -1), (41, 64), (42, 16), (43, -1), (44, -1), (45, 64), (46, -1), (47, 8), (48, -1), (49, -1), (50, 16), (51, 64), (52, 32), (53, -1), (54, 4), (55, -1), (56, -1), (57, 64), (58, -1), (59, 4), (60, -1), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

Covered at level 19 : set()

After reduction : 
 pending  : [57, 31, 42, 4, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28, 23]
 solution : [0, 8, 14, 2]


Solution : [0, 8, 14, 2] has cost 19.


Decide in level 19 among pending : [57, 31, 42, 4, 20, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

Decide 20 with phase True at level 19

After decision at level 19
 pending : [57, 31, 42, 4, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28, 23]
 solution : [0, 8, 14, 2, 20]


New level: 20
 pending : [57, 31, 42, 4, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28, 23]
 solution : [0, 8, 14, 2, 20]


Before reduction : 
 pending  : [57, 31, 42, 4, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 22, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28, 23]
 solution : [0, 8, 14, 2, 20]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16), (22, 0), (23, 0), (24, -1), (25, 64), (26, 32), (27, 128), (28, 4), (29, 32), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 32), (36, 32), (37, -1), (38, 4), (39, 128), (40, -1), (41, 128), (42, 64), (43, 64), (44, -1), (45, 64), (46, 8), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 16), (53, -1), (54, 4), (55, -1), (56, -1), (57, 64), (58, -1), (59, 4), (60, -1), (61, 32)]

Covered at level 20 : {22, 23}

After reduction : 
 pending  : [57, 31, 42, 4, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28]
 solution : [0, 8, 14, 2, 20]


Before reduction : 
 pending  : [57, 31, 42, 4, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28]
 solution : [0, 8, 14, 2, 20]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16), (22, 0), (23, 0), (24, -1), (25, 64), (26, 32), (27, 128), (28, 4), (29, 32), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 32), (36, 32), (37, -1), (38, 4), (39, 128), (40, -1), (41, 128), (42, 64), (43, 64), (44, -1), (45, 64), (46, 8), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 16), (53, -1), (54, 4), (55, -1), (56, -1), (57, 64), (58, -1), (59, 4), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16), (22, -1), (23, -1), (24, -1), (25, 64), (26, 32), (27, 128), (28, 4), (29, 32), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 32), (36, 32), (37, -1), (38, 4), (39, 128), (40, -1), (41, 128), (42, 64), (43, 64), (44, -1), (45, 64), (46, 8), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 16), (53, -1), (54, 4), (55, -1), (56, -1), (57, 64), (58, -1), (59, 4), (60, -1), (61, 32)]

Covered at level 20 : set()

After reduction : 
 pending  : [57, 31, 42, 4, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28]
 solution : [0, 8, 14, 2, 20]


Solution : [0, 8, 14, 2, 20] has cost 29.


Before backtrack at level 20
 pending : [57, 31, 42, 4, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28]
 solution : [0, 8, 14, 2, 20]

After backtrack at level 20
 pending : [57, 31, 42, 4, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28, 22, 23]
 solution : [0, 8, 14, 2, 20]


Invert decision for 20 at level 19


New level: 20
 pending : [57, 31, 42, 4, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28, 22, 23]
 solution : [0, 8, 14, 2]


Before reduction : 
 pending  : [57, 31, 42, 4, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28, 22, 23]
 solution : [0, 8, 14, 2]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16), (22, -1), (23, -1), (24, -1), (25, 64), (26, 32), (27, 128), (28, 4), (29, 32), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 32), (36, 32), (37, -1), (38, 4), (39, 128), (40, -1), (41, 128), (42, 64), (43, 64), (44, -1), (45, 64), (46, 8), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 16), (53, -1), (54, 4), (55, -1), (56, -1), (57, 64), (58, -1), (59, 4), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

Covered at level 20 : set()

After reduction : 
 pending  : [57, 31, 42, 4, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28, 22, 23]
 solution : [0, 8, 14, 2]


Solution : [0, 8, 14, 2] has cost 19.


Decide in level 20 among pending : [57, 31, 42, 4, 39, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28, 22, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

Decide 39 with phase True at level 20

After decision at level 20
 pending : [57, 31, 42, 4, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28, 22, 23]
 solution : [0, 8, 14, 2, 39]


New level: 21
 pending : [57, 31, 42, 4, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28, 22, 23]
 solution : [0, 8, 14, 2, 39]


Before reduction : 
 pending  : [57, 31, 42, 4, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 35, 30, 32, 54, 6, 36, 43, 46, 38, 28, 22, 23]
 solution : [0, 8, 14, 2, 39]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, 256), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 8), (23, 1), (24, -1), (25, 64), (26, 32), (27, 64), (28, 2), (29, 64), (30, 64), (31, 32), (32, 128), (33, 8), (34, 64), (35, 0), (36, 16), (37, -1), (38, 0), (39, -1), (40, -1), (41, 32), (42, 4), (43, 0), (44, -1), (45, 4), (46, 8), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 8), (60, -1), (61, 32)]

Covered at level 21 : {43, 35, 38}

After reduction : 
 pending  : [57, 31, 42, 4, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23]
 solution : [0, 8, 14, 2, 39]


Before reduction : 
 pending  : [57, 31, 42, 4, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23]
 solution : [0, 8, 14, 2, 39]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 8), (23, 1), (24, -1), (25, 64), (26, 32), (27, 64), (28, 2), (29, 64), (30, 64), (31, 32), (32, 128), (33, 8), (34, 64), (35, 0), (36, 16), (37, -1), (38, 0), (39, -1), (40, -1), (41, 32), (42, 4), (43, 0), (44, -1), (45, 4), (46, 8), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 8), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 8), (23, 1), (24, -1), (25, 64), (26, 32), (27, 64), (28, 2), (29, 64), (30, 64), (31, 32), (32, 128), (33, 8), (34, 64), (35, -1), (36, 16), (37, -1), (38, -1), (39, -1), (40, -1), (41, 32), (42, 4), (43, -1), (44, -1), (45, 4), (46, 8), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 16), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 8), (60, -1), (61, 32)]

Covered at level 21 : set()

After reduction : 
 pending  : [57, 31, 42, 4, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23]
 solution : [0, 8, 14, 2, 39]


Solution : [0, 8, 14, 2, 39] has cost 29.


Before backtrack at level 21
 pending : [57, 31, 42, 4, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23]
 solution : [0, 8, 14, 2, 39]

After backtrack at level 21
 pending : [57, 31, 42, 4, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38]
 solution : [0, 8, 14, 2, 39]


Invert decision for 39 at level 20


New level: 21
 pending : [57, 31, 42, 4, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38]
 solution : [0, 8, 14, 2]


Before reduction : 
 pending  : [57, 31, 42, 4, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38]
 solution : [0, 8, 14, 2]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 8), (23, 1), (24, -1), (25, 64), (26, 32), (27, 64), (28, 2), (29, 64), (30, 64), (31, 32), (32, 128), (33, 8), (34, 64), (35, -1), (36, 16), (37, -1), (38, -1), (39, -1), (40, -1), (41, 32), (42, 4), (43, -1), (44, -1), (45, 4), (46, 8), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 16), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 8), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, -1), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

Covered at level 21 : set()

After reduction : 
 pending  : [57, 31, 42, 4, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38]
 solution : [0, 8, 14, 2]


Solution : [0, 8, 14, 2] has cost 19.


Decide in level 21 among pending : [57, 31, 42, 4, 25, 7, 21, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, -1), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

Decide 21 with phase True at level 21

After decision at level 21
 pending : [57, 31, 42, 4, 25, 7, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38]
 solution : [0, 8, 14, 2, 21]


New level: 22
 pending : [57, 31, 42, 4, 25, 7, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38]
 solution : [0, 8, 14, 2, 21]


Before reduction : 
 pending  : [57, 31, 42, 4, 25, 7, 47, 3, 10, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38]
 solution : [0, 8, 14, 2, 21]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, -1), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, 2), (24, -1), (25, 32), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, -1), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 32), (46, 16), (47, 16), (48, -1), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

Covered at level 22 : {10}

After reduction : 
 pending  : [57, 31, 42, 4, 25, 7, 47, 3, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38]
 solution : [0, 8, 14, 2, 21]


Before reduction : 
 pending  : [57, 31, 42, 4, 25, 7, 47, 3, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38]
 solution : [0, 8, 14, 2, 21]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, 2), (24, -1), (25, 32), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, -1), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 32), (46, 16), (47, 16), (48, -1), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, 2), (24, -1), (25, 32), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, -1), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 32), (46, 16), (47, 16), (48, -1), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

Covered at level 22 : set()

After reduction : 
 pending  : [57, 31, 42, 4, 25, 7, 47, 3, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38]
 solution : [0, 8, 14, 2, 21]


Solution : [0, 8, 14, 2, 21] has cost 29.


Before backtrack at level 22
 pending : [57, 31, 42, 4, 25, 7, 47, 3, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38]
 solution : [0, 8, 14, 2, 21]

After backtrack at level 22
 pending : [57, 31, 42, 4, 25, 7, 47, 3, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38, 10]
 solution : [0, 8, 14, 2, 21]


Invert decision for 21 at level 21


New level: 22
 pending : [57, 31, 42, 4, 25, 7, 47, 3, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38, 10]
 solution : [0, 8, 14, 2]


Before reduction : 
 pending  : [57, 31, 42, 4, 25, 7, 47, 3, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38, 10]
 solution : [0, 8, 14, 2]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, 2), (24, -1), (25, 32), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, -1), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 32), (46, 16), (47, 16), (48, -1), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, -1), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

Covered at level 22 : set()

After reduction : 
 pending  : [57, 31, 42, 4, 25, 7, 47, 3, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38, 10]
 solution : [0, 8, 14, 2]


Solution : [0, 8, 14, 2] has cost 19.


Decide in level 22 among pending : [57, 31, 42, 4, 25, 7, 47, 3, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, -1), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

Decide 3 with phase True at level 22

After decision at level 22
 pending : [57, 31, 42, 4, 25, 7, 47, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38, 10]
 solution : [0, 8, 14, 2, 3]


New level: 23
 pending : [57, 31, 42, 4, 25, 7, 47, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38, 10]
 solution : [0, 8, 14, 2, 3]


Before reduction : 
 pending  : [57, 31, 42, 4, 25, 7, 47, 26, 15, 27, 50, 51, 41, 16, 52, 29, 45, 61, 59, 33, 34, 30, 32, 54, 6, 36, 46, 28, 22, 23, 35, 43, 38, 10]
 solution : [0, 8, 14, 2, 3]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 2), (24, -1), (25, 64), (26, 64), (27, 256), (28, 8), (29, 64), (30, 128), (31, 32), (32, 128), (33, 16), (34, 128), (35, 64), (36, 64), (37, -1), (38, 8), (39, -1), (40, -1), (41, 128), (42, 64), (43, 128), (44, -1), (45, 64), (46, 16), (47, 32), (48, -1), (49, -1), (50, 32), (51, 128), (52, 32), (53, -1), (54, 8), (55, -1), (56, -1), (57, 64), (58, -1), (59, 16), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, 64), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, 0), (24, -1), (25, 64), (26, 64), (27, 4), (28, 0), (29, 4), (30, 0), (31, 0), (32, 4), (33, 0), (34, 16), (35, 0), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 2), (42, 0), (43, 0), (44, -1), (45, 8), (46, 0), (47, 4), (48, -1), (49, -1), (50, 0), (51, 4), (52, 4), (53, -1), (54, 2), (55, -1), (56, -1), (57, 0), (58, -1), (59, 8), (60, -1), (61, 0)]

Covered at level 23 : {33, 35, 4, 36, 6, 38, 42, 43, 46, 50, 23, 57, 28, 61, 30, 31}

After reduction : 
 pending  : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10]
 solution : [0, 8, 14, 2, 3]


Before reduction : 
 pending  : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10]
 solution : [0, 8, 14, 2, 3]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, 64), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, 0), (24, -1), (25, 64), (26, 64), (27, 4), (28, 0), (29, 4), (30, 0), (31, 0), (32, 4), (33, 0), (34, 16), (35, 0), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 2), (42, 0), (43, 0), (44, -1), (45, 8), (46, 0), (47, 4), (48, -1), (49, -1), (50, 0), (51, 4), (52, 4), (53, -1), (54, 2), (55, -1), (56, -1), (57, 0), (58, -1), (59, 8), (60, -1), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, -1), (24, -1), (25, 64), (26, 64), (27, 4), (28, -1), (29, 4), (30, -1), (31, -1), (32, 4), (33, -1), (34, 16), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2), (42, -1), (43, -1), (44, -1), (45, 8), (46, -1), (47, 4), (48, -1), (49, -1), (50, -1), (51, 4), (52, 4), (53, -1), (54, 2), (55, -1), (56, -1), (57, -1), (58, -1), (59, 8), (60, -1), (61, -1)]

Covered at level 23 : set()

After reduction : 
 pending  : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10]
 solution : [0, 8, 14, 2, 3]


Solution : [0, 8, 14, 2, 3] has cost 25.


Before backtrack at level 23
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10]
 solution : [0, 8, 14, 2, 3]

After backtrack at level 23
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 31, 42, 4, 50, 61, 33, 30, 6, 36, 46, 28, 23, 35, 43, 38]
 solution : [0, 8, 14, 2, 3]


Invert decision for 3 at level 22


New level: 23
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 31, 42, 4, 50, 61, 33, 30, 6, 36, 46, 28, 23, 35, 43, 38]
 solution : [0, 8, 14, 2]


Before reduction : 
 pending  : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 31, 42, 4, 50, 61, 33, 30, 6, 36, 46, 28, 23, 35, 43, 38]
 solution : [0, 8, 14, 2]

Essensial at level 23 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, -1), (24, -1), (25, 64), (26, 64), (27, 4), (28, -1), (29, 4), (30, -1), (31, -1), (32, 4), (33, -1), (34, 16), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2), (42, -1), (43, -1), (44, -1), (45, 8), (46, -1), (47, 4), (48, -1), (49, -1), (50, -1), (51, 4), (52, 4), (53, -1), (54, 2), (55, -1), (56, -1), (57, -1), (58, -1), (59, 8), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 64), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, 0), (24, -1), (25, 64), (26, 64), (27, 256), (28, 0), (29, 64), (30, 0), (31, 0), (32, 8), (33, 0), (34, 32), (35, 16), (36, 4), (37, -1), (38, 0), (39, -1), (40, -1), (41, 128), (42, 32), (43, 16), (44, -1), (45, 64), (46, 0), (47, 16), (48, -1), (49, -1), (50, 8), (51, 128), (52, 32), (53, -1), (54, 4), (55, -1), (56, -1), (57, 32), (58, -1), (59, 16), (60, -1), (61, 8)]

Covered at level 23 : {33, 38, 46, 23, 28, 30, 31}

After reduction : 
 pending  : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43]
 solution : [0, 8, 14, 2, 4]


Before reduction : 
 pending  : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43]
 solution : [0, 8, 14, 2, 4]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 64), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, 0), (24, -1), (25, 64), (26, 64), (27, 256), (28, 0), (29, 64), (30, 0), (31, 0), (32, 8), (33, 0), (34, 32), (35, 16), (36, 4), (37, -1), (38, 0), (39, -1), (40, -1), (41, 128), (42, 32), (43, 16), (44, -1), (45, 64), (46, 0), (47, 16), (48, -1), (49, -1), (50, 8), (51, 128), (52, 32), (53, -1), (54, 4), (55, -1), (56, -1), (57, 32), (58, -1), (59, 16), (60, -1), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 64), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, -1), (24, -1), (25, 64), (26, 64), (27, 256), (28, -1), (29, 64), (30, -1), (31, -1), (32, 8), (33, -1), (34, 32), (35, 16), (36, 4), (37, -1), (38, -1), (39, -1), (40, -1), (41, 128), (42, 32), (43, 16), (44, -1), (45, 64), (46, -1), (47, 16), (48, -1), (49, -1), (50, 8), (51, 128), (52, 32), (53, -1), (54, 4), (55, -1), (56, -1), (57, 32), (58, -1), (59, 16), (60, -1), (61, 8)]

Covered at level 23 : set()

After reduction : 
 pending  : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43]
 solution : [0, 8, 14, 2, 4]


Solution : [0, 8, 14, 2, 4] has cost 28.


Before backtrack at level 23
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43]
 solution : [0, 8, 14, 2, 4]

After backtrack at level 23
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38]
 solution : [0, 8, 14, 2]


Before backtrack at level 22
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38]
 solution : [0, 8, 14, 2]

After backtrack at level 22
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3]
 solution : [0, 8, 14, 2]


Before backtrack at level 21
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3]
 solution : [0, 8, 14, 2]

After backtrack at level 21
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21]
 solution : [0, 8, 14, 2]


Before backtrack at level 20
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21]
 solution : [0, 8, 14, 2]

After backtrack at level 20
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39]
 solution : [0, 8, 14, 2]


Before backtrack at level 19
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39]
 solution : [0, 8, 14, 2]

After backtrack at level 19
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20]
 solution : [0, 8, 14, 2]


Before backtrack at level 18
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20]
 solution : [0, 8, 14, 2]

After backtrack at level 18
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48]
 solution : [0, 8, 14, 2]


Before backtrack at level 17
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48]
 solution : [0, 8, 14, 2]

After backtrack at level 17
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55]
 solution : [0, 8, 14, 2]


Before backtrack at level 16
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55]
 solution : [0, 8, 14, 2]

After backtrack at level 16
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49]
 solution : [0, 8, 14, 2]


Before backtrack at level 15
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49]
 solution : [0, 8, 14, 2]

After backtrack at level 15
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60]
 solution : [0, 8, 14, 2]


Before backtrack at level 14
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60]
 solution : [0, 8, 14, 2]

After backtrack at level 14
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37]
 solution : [0, 8, 14, 2]


Before backtrack at level 13
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37]
 solution : [0, 8, 14, 2]

After backtrack at level 13
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40]
 solution : [0, 8, 14, 2]


Before backtrack at level 12
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40]
 solution : [0, 8, 14, 2]

After backtrack at level 12
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44]
 solution : [0, 8, 14, 2]


Before backtrack at level 11
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44]
 solution : [0, 8, 14, 2]

After backtrack at level 11
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53]
 solution : [0, 8, 14, 2]


Before backtrack at level 10
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53]
 solution : [0, 8, 14, 2]

After backtrack at level 10
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19]
 solution : [0, 8, 14, 2]


Before backtrack at level 9
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19]
 solution : [0, 8, 14, 2]

After backtrack at level 9
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18]
 solution : [0, 8, 14, 2]


Before backtrack at level 8
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18]
 solution : [0, 8, 14, 2]

After backtrack at level 8
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]
 solution : [0, 8, 14, 2]


Invert decision for 2 at level 7


New level: 8
 pending : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]
 solution : [0, 8, 14]


Before reduction : 
 pending  : [25, 7, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 22, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]
 solution : [0, 8, 14]

Essensial at level 8 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 64), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, -1), (24, -1), (25, 64), (26, 64), (27, 256), (28, -1), (29, 64), (30, -1), (31, -1), (32, 8), (33, -1), (34, 32), (35, 16), (36, 4), (37, -1), (38, -1), (39, -1), (40, -1), (41, 128), (42, 32), (43, 16), (44, -1), (45, 64), (46, -1), (47, 16), (48, -1), (49, -1), (50, 8), (51, 128), (52, 32), (53, -1), (54, 4), (55, -1), (56, -1), (57, 32), (58, -1), (59, 16), (60, -1), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 512), (4, 128), (5, -1), (6, 512), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 64), (21, 32), (22, 0), (23, 64), (24, -1), (25, 32), (26, 64), (27, 256), (28, 16), (29, 256), (30, 64), (31, 32), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 256), (38, 16), (39, 256), (40, 64), (41, 256), (42, 128), (43, 256), (44, 256), (45, 128), (46, 32), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 256), (54, 256), (55, 256), (56, 128), (57, 128), (58, 64), (59, 256), (60, 256), (61, 128)]

Covered at level 8 : {22}

After reduction : 
 pending  : [25, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]
 solution : [0, 8, 14, 7]


Before reduction : 
 pending  : [25, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]
 solution : [0, 8, 14, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 512), (4, 128), (5, -1), (6, 512), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 64), (21, 32), (22, 0), (23, 64), (24, -1), (25, 32), (26, 64), (27, 256), (28, 16), (29, 256), (30, 64), (31, 32), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 256), (38, 16), (39, 256), (40, 64), (41, 256), (42, 128), (43, 256), (44, 256), (45, 128), (46, 32), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 256), (54, 256), (55, 256), (56, 128), (57, 128), (58, 64), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 512), (4, 128), (5, -1), (6, 512), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 64), (21, 32), (22, -1), (23, 64), (24, -1), (25, 32), (26, 64), (27, 256), (28, 16), (29, 256), (30, 64), (31, 32), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 256), (38, 16), (39, 256), (40, 64), (41, 256), (42, 128), (43, 256), (44, 256), (45, 128), (46, 32), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 256), (54, 256), (55, 256), (56, 128), (57, 128), (58, 64), (59, 256), (60, 256), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [25, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]
 solution : [0, 8, 14, 7]


Solution : [0, 8, 14, 7] has cost 22.


Decide in level 8 among pending : [25, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 57, 42, 50, 61, 6, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 512), (4, 128), (5, -1), (6, 512), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 64), (21, 32), (22, -1), (23, 64), (24, -1), (25, 32), (26, 64), (27, 256), (28, 16), (29, 256), (30, 64), (31, 32), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 256), (38, 16), (39, 256), (40, 64), (41, 256), (42, 128), (43, 256), (44, 256), (45, 128), (46, 32), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 256), (54, 256), (55, 256), (56, 128), (57, 128), (58, 64), (59, 256), (60, 256), (61, 128)]

Decide 6 with phase True at level 8

After decision at level 8
 pending : [25, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]
 solution : [0, 8, 14, 7, 6]


New level: 9
 pending : [25, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]
 solution : [0, 8, 14, 7, 6]


Before reduction : 
 pending  : [25, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]
 solution : [0, 8, 14, 7, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 512), (4, 128), (5, -1), (6, 512), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 64), (21, 32), (22, -1), (23, 64), (24, -1), (25, 32), (26, 64), (27, 256), (28, 16), (29, 256), (30, 64), (31, 32), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 256), (38, 16), (39, 256), (40, 64), (41, 256), (42, 128), (43, 256), (44, 256), (45, 128), (46, 32), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 256), (54, 256), (55, 256), (56, 128), (57, 128), (58, 64), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 64), (21, 32), (22, -1), (23, 64), (24, -1), (25, 32), (26, 64), (27, 256), (28, 16), (29, 256), (30, 64), (31, 32), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 256), (38, 16), (39, 256), (40, 64), (41, 256), (42, 128), (43, 256), (44, 256), (45, 128), (46, 32), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 256), (54, 256), (55, 256), (56, 128), (57, 128), (58, 64), (59, 256), (60, 256), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [25, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]
 solution : [0, 8, 14, 7, 6]


Solution : [0, 8, 14, 7, 6] has cost 24.


Before backtrack at level 9
 pending : [25, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]
 solution : [0, 8, 14, 7, 6]

After backtrack at level 9
 pending : [25, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]
 solution : [0, 8, 14, 7, 6]


Invert decision for 6 at level 8


New level: 9
 pending : [25, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]
 solution : [0, 8, 14, 7]


Before reduction : 
 pending  : [25, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]
 solution : [0, 8, 14, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 64), (21, 32), (22, -1), (23, 64), (24, -1), (25, 32), (26, 64), (27, 256), (28, 16), (29, 256), (30, 64), (31, 32), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 256), (38, 16), (39, 256), (40, 64), (41, 256), (42, 128), (43, 256), (44, 256), (45, 128), (46, 32), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 256), (54, 256), (55, 256), (56, 128), (57, 128), (58, 64), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 512), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 64), (21, 32), (22, -1), (23, 64), (24, -1), (25, 32), (26, 64), (27, 256), (28, 16), (29, 256), (30, 64), (31, 32), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 256), (38, 16), (39, 256), (40, 64), (41, 256), (42, 128), (43, 256), (44, 256), (45, 128), (46, 32), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 256), (54, 256), (55, 256), (56, 128), (57, 128), (58, 64), (59, 256), (60, 256), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [25, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]
 solution : [0, 8, 14, 7]


Solution : [0, 8, 14, 7] has cost 22.


Decide in level 9 among pending : [25, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 3, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 512), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 64), (21, 32), (22, -1), (23, 64), (24, -1), (25, 32), (26, 64), (27, 256), (28, 16), (29, 256), (30, 64), (31, 32), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 256), (38, 16), (39, 256), (40, 64), (41, 256), (42, 128), (43, 256), (44, 256), (45, 128), (46, 32), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 256), (54, 256), (55, 256), (56, 128), (57, 128), (58, 64), (59, 256), (60, 256), (61, 128)]

Decide 3 with phase True at level 9

After decision at level 9
 pending : [25, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]
 solution : [0, 8, 14, 7, 3]


New level: 10
 pending : [25, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]
 solution : [0, 8, 14, 7, 3]


Before reduction : 
 pending  : [25, 47, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 23, 38, 21, 39, 20, 48, 55, 49, 60, 37, 40, 44, 53, 19, 18, 56, 58, 17]
 solution : [0, 8, 14, 7, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 512), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 64), (21, 32), (22, -1), (23, 64), (24, -1), (25, 32), (26, 64), (27, 256), (28, 16), (29, 256), (30, 64), (31, 32), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 256), (38, 16), (39, 256), (40, 64), (41, 256), (42, 128), (43, 256), (44, 256), (45, 128), (46, 32), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 256), (54, 256), (55, 256), (56, 128), (57, 128), (58, 64), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 0), (19, 0), (20, 64), (21, 4), (22, -1), (23, 8), (24, -1), (25, 8), (26, 64), (27, 8), (28, 0), (29, 4), (30, 0), (31, 0), (32, 4), (33, 0), (34, 8), (35, 0), (36, 0), (37, 8), (38, 0), (39, 8), (40, 8), (41, 2), (42, 0), (43, 0), (44, 128), (45, 16), (46, 0), (47, 0), (48, 4), (49, 0), (50, 0), (51, 4), (52, 8), (53, 256), (54, 256), (55, 4), (56, 16), (57, 0), (58, 8), (59, 128), (60, 8), (61, 0)]

Covered at level 10 : {33, 35, 36, 4, 38, 42, 43, 46, 47, 49, 50, 19, 18, 57, 28, 61, 30, 31}

After reduction : 
 pending  : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 17]
 solution : [0, 8, 14, 7, 3]


Before reduction : 
 pending  : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 17]
 solution : [0, 8, 14, 7, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 0), (19, 0), (20, 64), (21, 4), (22, -1), (23, 8), (24, -1), (25, 8), (26, 64), (27, 8), (28, 0), (29, 4), (30, 0), (31, 0), (32, 4), (33, 0), (34, 8), (35, 0), (36, 0), (37, 8), (38, 0), (39, 8), (40, 8), (41, 2), (42, 0), (43, 0), (44, 128), (45, 16), (46, 0), (47, 0), (48, 4), (49, 0), (50, 0), (51, 4), (52, 8), (53, 256), (54, 256), (55, 4), (56, 16), (57, 0), (58, 8), (59, 128), (60, 8), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 64), (21, 4), (22, -1), (23, 8), (24, -1), (25, 8), (26, 64), (27, 8), (28, -1), (29, 4), (30, -1), (31, -1), (32, 4), (33, -1), (34, 8), (35, -1), (36, -1), (37, 8), (38, -1), (39, 8), (40, 8), (41, 2), (42, -1), (43, -1), (44, 128), (45, 16), (46, -1), (47, -1), (48, 4), (49, -1), (50, -1), (51, 4), (52, 8), (53, 256), (54, 256), (55, 4), (56, 16), (57, -1), (58, 8), (59, 128), (60, 8), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 17]
 solution : [0, 8, 14, 7, 3]


Solution : [0, 8, 14, 7, 3] has cost 28.


Before backtrack at level 10
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 17]
 solution : [0, 8, 14, 7, 3]

After backtrack at level 10
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 17, 47, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 38, 49, 19, 18]
 solution : [0, 8, 14, 7, 3]


Invert decision for 3 at level 9


New level: 10
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 17, 47, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 38, 49, 19, 18]
 solution : [0, 8, 14, 7]


Before reduction : 
 pending  : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 17, 47, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 38, 49, 19, 18]
 solution : [0, 8, 14, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, -1), (19, -1), (20, 64), (21, 4), (22, -1), (23, 8), (24, -1), (25, 8), (26, 64), (27, 8), (28, -1), (29, 4), (30, -1), (31, -1), (32, 4), (33, -1), (34, 8), (35, -1), (36, -1), (37, 8), (38, -1), (39, 8), (40, 8), (41, 2), (42, -1), (43, -1), (44, 128), (45, 16), (46, -1), (47, -1), (48, 4), (49, -1), (50, -1), (51, 4), (52, 8), (53, 256), (54, 256), (55, 4), (56, 16), (57, -1), (58, 8), (59, 128), (60, 8), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 64), (21, 32), (22, -1), (23, 64), (24, -1), (25, 32), (26, 64), (27, 256), (28, 16), (29, 256), (30, 64), (31, 32), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 256), (38, 16), (39, 256), (40, 64), (41, 256), (42, 128), (43, 256), (44, 256), (45, 128), (46, 32), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 256), (54, 256), (55, 256), (56, 128), (57, 128), (58, 64), (59, 256), (60, 256), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 17, 47, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 38, 49, 19, 18]
 solution : [0, 8, 14, 7]


Solution : [0, 8, 14, 7] has cost 22.


Decide in level 10 among pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 17, 47, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 38, 49, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 64), (21, 32), (22, -1), (23, 64), (24, -1), (25, 32), (26, 64), (27, 256), (28, 16), (29, 256), (30, 64), (31, 32), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 256), (38, 16), (39, 256), (40, 64), (41, 256), (42, 128), (43, 256), (44, 256), (45, 128), (46, 32), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 256), (54, 256), (55, 256), (56, 128), (57, 128), (58, 64), (59, 256), (60, 256), (61, 128)]

Decide 17 with phase True at level 10

After decision at level 10
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 38, 49, 19, 18]
 solution : [0, 8, 14, 7, 17]


New level: 11
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 38, 49, 19, 18]
 solution : [0, 8, 14, 7, 17]


Before reduction : 
 pending  : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 34, 32, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 38, 49, 19, 18]
 solution : [0, 8, 14, 7, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 64), (21, 32), (22, -1), (23, 64), (24, -1), (25, 32), (26, 64), (27, 256), (28, 16), (29, 256), (30, 64), (31, 32), (32, 64), (33, 32), (34, 64), (35, 64), (36, 64), (37, 256), (38, 16), (39, 256), (40, 64), (41, 256), (42, 128), (43, 256), (44, 256), (45, 128), (46, 32), (47, 128), (48, 256), (49, 256), (50, 128), (51, 256), (52, 64), (53, 256), (54, 256), (55, 256), (56, 128), (57, 128), (58, 64), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32), (16, 16), (17, -1), (18, 512), (19, 512), (20, 16), (21, 32), (22, -1), (23, 64), (24, -1), (25, 32), (26, 8), (27, 8), (28, 2), (29, 256), (30, 2), (31, 4), (32, 0), (33, 2), (34, 0), (35, 16), (36, 16), (37, 256), (38, 1), (39, 16), (40, 64), (41, 32), (42, 128), (43, 256), (44, 128), (45, 128), (46, 2), (47, 128), (48, 4), (49, 256), (50, 128), (51, 32), (52, 64), (53, 128), (54, 128), (55, 32), (56, 128), (57, 128), (58, 64), (59, 128), (60, 32), (61, 128)]

Covered at level 11 : {32, 34}

After reduction : 
 pending  : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 38, 49, 19, 18]
 solution : [0, 8, 14, 7, 17]


Before reduction : 
 pending  : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 38, 49, 19, 18]
 solution : [0, 8, 14, 7, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32), (16, 16), (17, -1), (18, 512), (19, 512), (20, 16), (21, 32), (22, -1), (23, 64), (24, -1), (25, 32), (26, 8), (27, 8), (28, 2), (29, 256), (30, 2), (31, 4), (32, 0), (33, 2), (34, 0), (35, 16), (36, 16), (37, 256), (38, 1), (39, 16), (40, 64), (41, 32), (42, 128), (43, 256), (44, 128), (45, 128), (46, 2), (47, 128), (48, 4), (49, 256), (50, 128), (51, 32), (52, 64), (53, 128), (54, 128), (55, 32), (56, 128), (57, 128), (58, 64), (59, 128), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32), (16, 16), (17, -1), (18, 512), (19, 512), (20, 16), (21, 32), (22, -1), (23, 64), (24, -1), (25, 32), (26, 8), (27, 8), (28, 2), (29, 256), (30, 2), (31, 4), (32, -1), (33, 2), (34, -1), (35, 16), (36, 16), (37, 256), (38, 1), (39, 16), (40, 64), (41, 32), (42, 128), (43, 256), (44, 128), (45, 128), (46, 2), (47, 128), (48, 4), (49, 256), (50, 128), (51, 32), (52, 64), (53, 128), (54, 128), (55, 32), (56, 128), (57, 128), (58, 64), (59, 128), (60, 32), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 38, 49, 19, 18]
 solution : [0, 8, 14, 7, 17]


Solution : [0, 8, 14, 7, 17] has cost 28.


Before backtrack at level 11
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 38, 49, 19, 18]
 solution : [0, 8, 14, 7, 17]

After backtrack at level 11
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 38, 49, 19, 18, 34, 32]
 solution : [0, 8, 14, 7, 17]


Invert decision for 17 at level 10


New level: 11
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 38, 49, 19, 18, 34, 32]
 solution : [0, 8, 14, 7]


Before reduction : 
 pending  : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 4, 31, 33, 30, 46, 28, 38, 49, 19, 18, 34, 32]
 solution : [0, 8, 14, 7]

Essensial at level 11 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32), (16, 16), (17, -1), (18, 512), (19, 512), (20, 16), (21, 32), (22, -1), (23, 64), (24, -1), (25, 32), (26, 8), (27, 8), (28, 2), (29, 256), (30, 2), (31, 4), (32, -1), (33, 2), (34, -1), (35, 16), (36, 16), (37, 256), (38, 1), (39, 16), (40, 64), (41, 32), (42, 128), (43, 256), (44, 128), (45, 128), (46, 2), (47, 128), (48, 4), (49, 256), (50, 128), (51, 32), (52, 64), (53, 128), (54, 128), (55, 32), (56, 128), (57, 128), (58, 64), (59, 128), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, -1), (18, 512), (19, 512), (20, 64), (21, 32), (22, -1), (23, 64), (24, -1), (25, 32), (26, 64), (27, 256), (28, 0), (29, 256), (30, 0), (31, 0), (32, 8), (33, 0), (34, 16), (35, 16), (36, 8), (37, 256), (38, 0), (39, 256), (40, 64), (41, 256), (42, 64), (43, 32), (44, 256), (45, 128), (46, 0), (47, 8), (48, 32), (49, 32), (50, 32), (51, 256), (52, 64), (53, 256), (54, 256), (55, 256), (56, 128), (57, 64), (58, 64), (59, 256), (60, 256), (61, 32)]

Covered at level 11 : {33, 38, 46, 28, 30, 31}

After reduction : 
 pending  : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32]
 solution : [0, 8, 14, 7, 4]


Before reduction : 
 pending  : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32]
 solution : [0, 8, 14, 7, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, -1), (18, 512), (19, 512), (20, 64), (21, 32), (22, -1), (23, 64), (24, -1), (25, 32), (26, 64), (27, 256), (28, 0), (29, 256), (30, 0), (31, 0), (32, 8), (33, 0), (34, 16), (35, 16), (36, 8), (37, 256), (38, 0), (39, 256), (40, 64), (41, 256), (42, 64), (43, 32), (44, 256), (45, 128), (46, 0), (47, 8), (48, 32), (49, 32), (50, 32), (51, 256), (52, 64), (53, 256), (54, 256), (55, 256), (56, 128), (57, 64), (58, 64), (59, 256), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, -1), (18, 512), (19, 512), (20, 64), (21, 32), (22, -1), (23, 64), (24, -1), (25, 32), (26, 64), (27, 256), (28, -1), (29, 256), (30, -1), (31, -1), (32, 8), (33, -1), (34, 16), (35, 16), (36, 8), (37, 256), (38, -1), (39, 256), (40, 64), (41, 256), (42, 64), (43, 32), (44, 256), (45, 128), (46, -1), (47, 8), (48, 32), (49, 32), (50, 32), (51, 256), (52, 64), (53, 256), (54, 256), (55, 256), (56, 128), (57, 64), (58, 64), (59, 256), (60, 256), (61, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32]
 solution : [0, 8, 14, 7, 4]


Solution : [0, 8, 14, 7, 4] has cost 31.


Before backtrack at level 11
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32]
 solution : [0, 8, 14, 7, 4]

After backtrack at level 11
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38]
 solution : [0, 8, 14, 7]


Before backtrack at level 10
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38]
 solution : [0, 8, 14, 7]

After backtrack at level 10
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38, 17]
 solution : [0, 8, 14, 7]


Before backtrack at level 9
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38, 17]
 solution : [0, 8, 14, 7]

After backtrack at level 9
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38, 17, 3]
 solution : [0, 8, 14, 7]


Before backtrack at level 8
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38, 17, 3]
 solution : [0, 8, 14, 7]

After backtrack at level 8
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38, 17, 3, 7, 22, 6]
 solution : [0, 8, 14]


Before backtrack at level 7
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38, 17, 3, 7, 22, 6]
 solution : [0, 8, 14]

After backtrack at level 7
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38, 17, 3, 7, 22, 6, 14, 24, 2]
 solution : [0, 8]


Before backtrack at level 6
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38, 17, 3, 7, 22, 6, 14, 24, 2]
 solution : [0, 8]

After backtrack at level 6
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38, 17, 3, 7, 22, 6, 14, 24, 2, 12]
 solution : [0, 8]


Before backtrack at level 5
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38, 17, 3, 7, 22, 6, 14, 24, 2, 12]
 solution : [0, 8]

After backtrack at level 5
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38, 17, 3, 7, 22, 6, 14, 24, 2, 12, 13]
 solution : [0, 8]


Before backtrack at level 4
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38, 17, 3, 7, 22, 6, 14, 24, 2, 12, 13]
 solution : [0, 8]

After backtrack at level 4
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38, 17, 3, 7, 22, 6, 14, 24, 2, 12, 13, 11]
 solution : [0, 8]


Before backtrack at level 3
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38, 17, 3, 7, 22, 6, 14, 24, 2, 12, 13, 11]
 solution : [0, 8]

After backtrack at level 3
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38, 17, 3, 7, 22, 6, 14, 24, 2, 12, 13, 11, 9]
 solution : [0, 8]


Before backtrack at level 2
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38, 17, 3, 7, 22, 6, 14, 24, 2, 12, 13, 11, 9]
 solution : [0, 8]

After backtrack at level 2
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38, 17, 3, 7, 22, 6, 14, 24, 2, 12, 13, 11, 9, 5]
 solution : [0, 8]


Before backtrack at level 1
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38, 17, 3, 7, 22, 6, 14, 24, 2, 12, 13, 11, 9, 5]
 solution : [0, 8]

After backtrack at level 1
 pending : [25, 26, 15, 27, 51, 41, 16, 52, 29, 45, 59, 54, 10, 23, 21, 39, 20, 48, 55, 60, 37, 40, 44, 53, 56, 58, 47, 57, 42, 50, 61, 36, 35, 43, 49, 19, 18, 34, 32, 4, 31, 33, 30, 46, 28, 38, 17, 3, 7, 22, 6, 14, 24, 2, 12, 13, 11, 9, 5, 1]
 solution : [0, 8]


========================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym/ivy/firewall: node=3]

========================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: total qcost: 22

[MIN NOTE]: maximum branch and bound depth: 29

Definitions (length=0)

Equality Relations (length=0)

Solution 0 : [0, 8, 1, 11, 14] (length = 5)

invariant [invar_0] forall NODE0. ~sent(NODE0,NODE0) # qcost: 2

invariant [invar_8] forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1)) # qcost: 5

invariant [invar_1] forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0) # qcost: 3

invariant [invar_11] forall NODE0,NODE1. internal(NODE1) | internal(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1 # qcost: 6

invariant [invar_14] forall NODE0,NODE1. allowed_in(NODE1) | allowed_in(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1 # qcost: 6




[QRM NOTE]: Time elapsed since start: 8.058 seconds

[QRM NOTE]: Time elapsed since last: 7.460 seconds

[QRM NOTE]: Peak memory: 2122059 bytes


============================================================================

	[IVY_CHECK]: Ivy Check on [ivybench/sym/ivy/firewall: node=3]

============================================================================

ivy_check complete=fo ivybench/sym/ivy/firewall.node_3.0.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_8
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_11
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_14

    The following action implementations are present:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 15: implementation of send_from_internal
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 23: implementation of send_to_internal

    The following initializers are present:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 10: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_8 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_11 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_14 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:send_from_internal
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_8 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_11 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_14 ... PASS
        (internal) ext:send_to_internal
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_8 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_11 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_14 ... PASS

    The following program assertions are treated as assumptions:
        in action send_from_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 16: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 17: assumption
        in action send_to_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 24: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 25: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 26: assumption

OK
[IVY_CHECK RESULT]: PASS

[(R & P) & T & ~(R' & P')]: unsatisfiable

[Strengthening Assertion]: ((forall NODE0. ~sent(NODE0,NODE0)) & (forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1))) & (forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0)) & (forall NODE0,NODE1. internal(NODE1) | internal(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1) & (forall NODE0,NODE1. allowed_in(NODE1) | allowed_in(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1))

[QRM NOTE]: Time elapsed since start: 14.195 seconds

[QRM NOTE]: Time elapsed since last: 6.138 seconds

[QRM NOTE]: Peak memory: 1160203 bytes


***************************************************************************************

	[Reachability Convergence Check]: ivybench/sym/ivy/firewall: node=3

***************************************************************************************

python3 qrm.py ivybench/sym/ivy/firewall.node_3.0.ivy -s node=4 -f 2 -g -w -r -m -v 5 -w -l ivybench/sym/ivy/firewall.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/firewall: node=4]

================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 24

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: symmetric group order: 24

[FW NOTE]: number of branching actions: 32

ivy_to_cpp target=qrm firewall.node_4.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o firewall.node_4.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 firewall.node_4.finite.cpp firewall.node_4.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared firewall.node_4.finite.o firewall.node_4.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 9.878 seconds

[QRM NOTE]: Time elapsed since last: 9.878 seconds

[QRM NOTE]: Peak memory: 1185145 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 8

[FW NOTE]: number of total reachable states:        1352

[FW NOTE]: number of dfs representative states:     80

[FW NOTE]: number of dfs non-representative states: 1272


=======================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/firewall: node=4]

=======================================================================================

sort: node=['node0', 'node1', 'node2', 'node3']
predicate: allowed_in('node',)
predicate: internal('node',)
predicate: sent('node', 'node')
interpreted atoms: {}
state atoms: ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)', 'allowed_in(node3)', 'internal(node0)', 'internal(node1)', 'internal(node2)', 'internal(node3)', 'sent(node0,node0)', 'sent(node0,node1)', 'sent(node0,node2)', 'sent(node0,node3)', 'sent(node1,node0)', 'sent(node1,node1)', 'sent(node1,node2)', 'sent(node1,node3)', 'sent(node2,node0)', 'sent(node2,node1)', 'sent(node2,node2)', 'sent(node2,node3)', 'sent(node3,node0)', 'sent(node3,node1)', 'sent(node3,node2)', 'sent(node3,node3)']
representative states : 0, 983040, 458752, 65536, 196608, 1966096, 1966352, 1970448, 1970450, 1970454, 1970462, 1966354, 1966358, 1966366, 1966362, 1966360, 1966098, 1966102, 1966110, 1966100, 1966108, 1179664, 3408640, 7892992, 7893000, 7893128, 7895176, 3408644, 3408708, 1179666, 1441808, 3932928, 3937024, 3945216, 3945220, 3945228, 3945292, 3945420, 3945284, 3945288, 3937028, 3937036, 3937100, 3937228, 3937164, 3937092, 3937220, 3937156, 3937032, 3937096, 3937224, 3937160, 3937088, 3937216, 3937152, 3932932, 3932940, 3933004, 3933132, 3933068, 3932996, 3933000, 3932936, 3933064, 1442064, 1442066, 1442070, 3936768, 3936776, 3936780, 3936908, 3936972, 3936844, 3936836, 3936840, 3936772, 3936900, 1441810, 1441814, 1441812


=== State Orbit 0 =====================
size : 1
repr state: 000000000000000000000000
lex min decimal: 0
states:
000000000000000000000000




=== State Orbit 1 =====================
size : 1
repr state: 000011110000000000000000
lex min decimal: 983040
states:
000011110000000000000000




=== State Orbit 2 =====================
size : 4
repr state: 000010110000000000000000
lex min decimal: 458752
states:
000010110000000000000000
000011010000000000000000
000001110000000000000000
000011100000000000000000




=== State Orbit 3 =====================
size : 4
repr state: 000010000000000000000000
lex min decimal: 65536
states:
000001000000000000000000
000010000000000000000000
000000010000000000000000
000000100000000000000000




=== State Orbit 4 =====================
size : 6
repr state: 000011000000000000000000
lex min decimal: 196608
states:
000011000000000000000000
000000110000000000000000
000001010000000000000000
000010100000000000000000
000010010000000000000000
000001100000000000000000




=== State Orbit 5 =====================
size : 12
repr state: 010010110100000000000000
lex min decimal: 1966096
states:
010010110100000000000000
010010110000000001000000
100001110000000010000000
100001110000000000001000
001011010000001000000000
000111100000000100000000
010010110000000000000100
000111100000000000010000
001011010010000000000000
001011010000000000000010
100001110000100000000000
000111100001000000000000




=== State Orbit 6 =====================
size : 12
repr state: 010010110100000001000000
lex min decimal: 1966352
states:
000111100001000100000000
010010110000000001000100
010010110100000000000100
001011010010000000000010
100001110000100010000000
000111100000000100010000
000111100001000000010000
001011010010001000000000
100001110000000010001000
010010110100000001000000
100001110000100000001000
001011010000001000000010




=== State Orbit 7 =====================
size : 4
repr state: 010010110100000001000100
lex min decimal: 1970448
states:
001011010010001000000010
100001110000100010001000
000111100001000100010000
010010110100000001000100




=== State Orbit 8 =====================
size : 12
repr state: 010010110100100001000100
lex min decimal: 1970450
states:
000111100001000100011000
010010110100100001000100
100001110010100010001000
000111100001000100010100
100001110100100010001000
100001110001100010001000
001011010010001000010010
001011010010001001000010
010010110100001001000100
010010110100000101000100
000111100001000100010010
001011010010001010000010




=== State Orbit 9 =====================
size : 12
repr state: 010010110100101001000100
lex min decimal: 1970454
states:
100001110101100010001000
010010110100101001000100
000111100001000100011100
100001110011100010001000
010010110100100101000100
100001110110100010001000
001011010010001011000010
010010110100001101000100
001011010010001001010010
000111100001000100010110
000111100001000100011010
001011010010001010010010




=== State Orbit 10 =====================
size : 4
repr state: 010010110100101101000100
lex min decimal: 1970462
states:
100001110111100010001000
001011010010001011010010
010010110100101101000100
000111100001000100011110




=== State Orbit 11 =====================
size : 24
repr state: 010010110100100001000000
lex min decimal: 1966354
states:
000111100001000000011000
001011010010000000010010
100001110010000010001000
001011010010000010000010
100001110100100010000000
001011010010001001000000
100001110001000010001000
010010110000001001000100
000111100000000100010100
000111100001000100001000
100001110100100000001000
010010110100000100000100
100001110001100000001000
010010110100100000000100
000111100000000100010010
001011010000001000010010
100001110010100010000000
001011010000001001000010
010010110000000101000100
010010110100100001000000
010010110100001001000000
001011010010001010000000
000111100001000100000100
000111100001000000010010




=== State Orbit 12 =====================
size : 12
repr state: 010010110100101001000000
lex min decimal: 1966358
states:
100001110101100000001000
100001110011000010001000
010010110000001101000100
010010110100101001000000
001011010010000010010010
000111100001000100001100
010010110100100100000100
000111100001000000011010
001011010010001011000000
001011010000001001010010
000111100000000100010110
100001110110100010000000




=== State Orbit 13 =====================
size : 12
repr state: 010010110100101101000000
lex min decimal: 1966366
states:
000111100000000100011110
000111100001000100001110
001011010000001011010010
010010110100101100000100
010010110100101101000000
100001110111100010000000
100001110111000010001000
000111100001000000011110
100001110111100000001000
001011010010001011010000
001011010010000011010010
010010110000101101000100




=== State Orbit 14 =====================
size : 24
repr state: 010010110100100101000000
lex min decimal: 1966362
states:
000111100001000100001010
010010110100001101000000
001011010000001010010010
000111100000000100011100
001011010010000011000010
100001110101000010001000
100001110110000010001000
000111100001000000010110
000111100001000100000110
001011010010001010010000
010010110000101001000100
100001110101100010000000
010010110100101000000100
100001110110100000001000
001011010010000001010010
010010110100001100000100
100001110011100000001000
000111100001000000011100
010010110000100101000100
001011010000001011000010
100001110011100010000000
000111100000000100011010
010010110100100101000000
001011010010001001010000




=== State Orbit 15 =====================
size : 12
repr state: 010010110100000101000000
lex min decimal: 1966360
states:
000111100001000000010100
100001110010100000001000
010010110000100001000100
001011010000001010000010
010010110100000101000000
010010110100001000000100
001011010010000001000010
000111100001000100000010
000111100000000100011000
001011010010001000010000
100001110001100010000000
100001110100000010001000




=== State Orbit 16 =====================
size : 12
repr state: 010010110100100000000000
lex min decimal: 1966098
states:
000111100000000000010010
010010110000000100000100
100001110001000000001000
100001110010000010000000
001011010010000010000000
001011010000000000010010
010010110100100000000000
000111100000000100000100
100001110100100000000000
000111100001000000001000
010010110000001001000000
001011010000001001000000




=== State Orbit 17 =====================
size : 24
repr state: 010010110100101000000000
lex min decimal: 1966102
states:
000111100001000000001010
100001110101100000000000
010010110000001100000100
001011010010000011000000
000111100000000100000110
010010110000001101000000
000111100000000000010110
001011010010000010010000
010010110100100100000000
100001110110000010000000
001011010000000010010010
000111100001000000001100
010010110000100100000100
001011010000001011000000
010010110000101001000000
100001110110100000000000
100001110101000000001000
000111100000000100001100
001011010000000001010010
100001110011000000001000
001011010000001001010000
000111100000000000011010
100001110011000010000000
010010110100101000000000




=== State Orbit 18 =====================
size : 12
repr state: 010010110100101100000000
lex min decimal: 1966110
states:
000111100000000000011110
000111100001000000001110
010010110100101100000000
100001110111100000000000
100001110111000000001000
001011010000001011010000
001011010010000011010000
001011010000000011010010
010010110000101100000100
000111100000000100001110
100001110111000010000000
010010110000101101000000




=== State Orbit 19 =====================
size : 24
repr state: 010010110100001000000000
lex min decimal: 1966100
states:
010010110000000101000000
001011010000001000010000
100001110010000000001000
000111100000000000011000
000111100000000000010100
000111100001000000000100
100001110100000000001000
100001110001000010000000
000111100001000000000010
010010110000001000000100
000111100000000100000010
001011010000000001000010
010010110100000100000000
000111100000000100001000
100001110010100000000000
001011010000000010000010
100001110100000010000000
100001110001100000000000
010010110100001000000000
010010110000100001000000
010010110000100000000100
001011010010000000010000
001011010010000001000000
001011010000001010000000




=== State Orbit 20 =====================
size : 12
repr state: 010010110100001100000000
lex min decimal: 1966108
states:
000111100000000100001010
000111100000000000011100
010010110000101000000100
100001110101000010000000
001011010010000001010000
000111100001000000000110
010010110100001100000000
001011010000000011000010
001011010000001010010000
010010110000100101000000
100001110110000000001000
100001110011100000000000




=== State Orbit 21 =====================
size : 12
repr state: 010010000100000000000000
lex min decimal: 1179664
states:
001000010000000000000010
000100100000000000010000
100000010000000000001000
001010000010000000000000
100001000000100000000000
100000100000000010000000
000110000001000000000000
010010000100000000000000
001001000000001000000000
010000010000000000000100
010000100000000001000000
000101000000000100000000




=== State Orbit 22 =====================
size : 12
repr state: 011010000110000000000000
lex min decimal: 3408640
states:
101000010000000000001010
110000100000000011000000
001110000011000000000000
011010000110000000000000
101001000000101000000000
010110000101000000000000
100101000000100100000000
110000010000000000001100
011000010000000000000110
100100100000000010010000
001101000000001100000000
010100100000000001010000




=== State Orbit 23 =====================
size : 4
repr state: 011110000111000000000000
lex min decimal: 7892992
states:
110100100000000011010000
011110000111000000000000
101101000000101100000000
111000010000000000001110




=== State Orbit 24 =====================
size : 12
repr state: 011110000111100000000000
lex min decimal: 7893000
states:
101101000000101101000000
011110000111000000001000
110100100000000011010010
111000010000000100001110
110100100010000011010000
101101000100101100000000
101101000000101100000100
011110000111000010000000
111000010000000000011110
111000010001000000001110
011110000111100000000000
110100100000001011010000




=== State Orbit 25 =====================
size : 12
repr state: 011110000111100010000000
lex min decimal: 7893128
states:
110100100010000011010010
111000010001000100001110
111000010001000000011110
111000010000000100011110
011110000111100000001000
011110000111100010000000
101101000100101101000000
101101000000101101000100
110100100010001011010000
011110000111000010001000
110100100000001011010010
101101000100101100000100




=== State Orbit 26 =====================
size : 4
repr state: 011110000111100010001000
lex min decimal: 7895176
states:
011110000111100010001000
111000010001000100011110
110100100010001011010010
101101000100101101000100




=== State Orbit 27 =====================
size : 24
repr state: 011010000110100000000000
lex min decimal: 3408644
states:
101000010001000000001010
100101000100100100000000
001101000000001101000000
011000010000000000010110
100101000000100100000100
010110000101100000000000
011010000110100000000000
010100100000000001010010
001101000000001100000100
110000010001000000001100
010100100000001001010000
001110000011000010000000
110000010000000100001100
110000100010000011000000
011000010000000100000110
011010000110000010000000
101001000000101001000000
100100100000000010010010
101000010000000000011010
101001000100101000000000
110000100000001011000000
010110000101000000001000
100100100010000010010000
001110000011000000001000




=== State Orbit 28 =====================
size : 12
repr state: 011010000110100010000000
lex min decimal: 3408708
states:
100100100010000010010010
110000100010001011000000
001110000011000010001000
010100100000001001010010
101001000100101001000000
010110000101100000001000
011010000110100010000000
001101000000001101000100
101000010001000000011010
110000010001000100001100
100101000100100100000100
011000010000000100010110




=== State Orbit 29 =====================
size : 12
repr state: 010010000100100000000000
lex min decimal: 1179666
states:
010010000100100000000000
100000010001000000001000
001010000010000010000000
000101000000000100000100
000100100000000000010010
001000010000000000010010
010000100000001001000000
000110000001000000001000
100001000100100000000000
001001000000001001000000
100000100010000010000000
010000010000000100000100




=== State Orbit 30 =====================
size : 24
repr state: 001011000010000000000000
lex min decimal: 1441808
states:
010000110000000000000100
000110100001000000000000
100000110000000000001000
100001100000100000000000
001010010010000000000000
010010100100000000000000
000101100000000000010000
001011000000001000000000
010010010000000000000100
001001010000000000000010
000111000001000000000000
001010010000000000000010
100000110000000010000000
010010010100000000000000
100001010000000000001000
000101100000000100000000
000110100000000000010000
100001100000000010000000
100001010000100000000000
000111000000000100000000
001011000010000000000000
010000110000000001000000
010010100000000001000000
001001010000001000000000




=== State Orbit 31 =====================
size : 12
repr state: 001111000011000000000000
lex min decimal: 3932928
states:
101001010000101000000000
110000110000000000001100
010110100101000000000000
100101100000000010010000
101001010000000000001010
011010010000000000000110
001111000011000000000000
110000110000000011000000
011010010110000000000000
001111000000001100000000
100101100000100100000000
010110100000000001010000




=== State Orbit 32 =====================
size : 24
repr state: 001111000011001000000000
lex min decimal: 3937024
states:
100101100000100100010000
110000110000000010001100
110000110000000011001000
010110100100000001010000
101001010000001000001010
101001010000101000001000
010110100001000001010000
011010010100000000000110
011010010110000000000010
001111000011000100000000
001111000001001100000000
010110100101000001000000
100101100000100110000000
100101100000000110010000
110000110000000011000100
110000110000000001001100
101001010000100000001010
001111000010001100000000
011010010110000000000100
011010010010000000000110
001111000011001000000000
100101100000100010010000
010110100101000000010000
101001010000101000000010




=== State Orbit 33 =====================
size : 6
repr state: 001111000011001100000000
lex min decimal: 3945216
states:
011010010110000000000110
001111000011001100000000
010110100101000001010000
101001010000101000001010
110000110000000011001100
100101100000100110010000




=== State Orbit 34 =====================
size : 24
repr state: 001111000011001110000000
lex min decimal: 3945220
states:
110000110000001011001100
001111000011001100001000
101001010000101000011010
101001010100101000001010
100101100100100110010000
011010010110000100000110
100101100000100110010010
011010010110100000000110
011010010110000000010110
100101100010100110010000
010110100101000001010010
001111000011001100000100
100101100000100110010100
110000110010000011001100
101001010001101000001010
110000110000000111001100
101001010000101001001010
001111000011001110000000
001111000011001101000000
011010010110000010000110
110000110001000011001100
010110100101100001010000
010110100101001001010000
010110100101000001011000




=== State Orbit 35 =====================
size : 12
repr state: 001111000011001111000000
lex min decimal: 3945228
states:
010110100101000001011010
001111000011001111000000
101001010101101000001010
110000110000001111001100
101001010000101001011010
100101100000100110010110
011010010110100100000110
011010010110000010010110
110000110011000011001100
001111000011001100001100
010110100101101001010000
100101100110100110010000




=== State Orbit 36 =====================
size : 24
repr state: 001111000011001111001000
lex min decimal: 3945292
states:
001111000011001101001100
110000110011001011001100
101001010001101001011010
011010010110100100010110
001111000011001110001100
101001010100101001011010
110000110010001111001100
110000110011000111001100
010110100101101001011000
101001010101101000011010
011010010110000110010110
110000110001001111001100
010110100101100001011010
100101100100100110010110
100101100010100110010110
010110100101101001010010
010110100101001001011010
100101100110100110010100
001111000011001111000100
100101100110100110010010
011010010110100110000110
001111000011001111001000
011010010110100010010110
101001010101101001001010




=== State Orbit 37 =====================
size : 6
repr state: 001111000011001111001100
lex min decimal: 3945420
states:
001111000011001111001100
011010010110100110010110
100101100110100110010110
010110100101101001011010
110000110011001111001100
101001010101101001011010




=== State Orbit 38 =====================
size : 12
repr state: 001111000011001110001000
lex min decimal: 3945284
states:
110000110010001011001100
010110100101100001011000
101001010100101001001010
101001010001101000011010
001111000011001110001000
010110100101001001010010
100101100010100110010010
011010010110000100010110
110000110001000111001100
100101100100100110010100
011010010110100010000110
001111000011001101000100




=== State Orbit 39 =====================
size : 12
repr state: 001111000011001110000100
lex min decimal: 3945288
states:
010110100101001001011000
110000110010000111001100
110000110001001011001100
010110100101100001010010
001111000011001110000100
101001010001101001001010
100101100100100110010010
100101100010100110010100
101001010100101000011010
011010010110000110000110
011010010110100000010110
001111000011001101001000




=== State Orbit 40 =====================
size : 24
repr state: 001111000011001010000000
lex min decimal: 3937028
states:
101001010100101000001000
010110100101000000011000
101001010000101001000010
001111000011000100001000
011010010010000000010110
011010010110100000000100
001111000011001010000000
101001010000001000011010
011010010100000100000110
100101100000000110010010
110000110010000011001000
010110100101100001000000
110000110000000101001100
100101100010100010010000
110000110001000010001100
100101100000100100010100
011010010110000010000010
001111000010001101000000
010110100100001001010000
110000110000001011000100
001111000001001100000100
100101100100100110000000
101001010001100000001010
010110100001000001010010




=== State Orbit 41 =====================
size : 24
repr state: 001111000011001011000000
lex min decimal: 3937036
states:
010110100100101001010000
010110100101000000011010
110000110011000010001100
100101100000100100010110
010110100001000001011010
110000110000001111000100
001111000001001100001100
010110100101101001000000
101001010101101000001000
110000110000001101001100
101001010000001001011010
100101100000000110010110
110000110011000011001000
011010010110100100000100
011010010010000010010110
100101100110100010010000
001111000011001011000000
101001010101100000001010
001111000010001111000000
101001010000101001010010
100101100110100110000000
001111000011000100001100
011010010100100100000110
011010010110000010010010




=== State Orbit 42 =====================
size : 24
repr state: 001111000011001011001000
lex min decimal: 3937100
states:
100101100110100110000100
100101100110100010010010
101001010101101001001000
011010010010000110010110
010110100101101001001000
011010010100100100010110
101001010101100000011010
010110100100101001010010
001111000010001111000100
001111000011000110001100
110000110011001011001000
101001010100101001010010
110000110001001101001100
001111000011001011001000
011010010110100010010010
010110100001001001011010
001111000001001101001100
010110100101100000011010
110000110011000110001100
100101100010000110010110
011010010110100110000100
110000110010001111000100
101001010001001001011010
100101100100100100010110




=== State Orbit 43 =====================
size : 24
repr state: 001111000011001011001100
lex min decimal: 3937228
states:
011010010100100110010110
101001010101100001011010
110000110011001101001100
101001010101101001011000
110000110011001110001100
001111000011000111001100
110000110011001111000100
110000110011001111001000
100101100110100110000110
100101100110100100010110
010110100101101001001010
101001010101101001010010
001111000010001111001100
011010010110100110010100
010110100001101001011010
001111000001001111001100
011010010010100110010110
100101100110100010010110
010110100101101000011010
001111000011001011001100
100101100110000110010110
101001010101001001011010
011010010110100110010010
010110100100101001011010




=== State Orbit 44 =====================
size : 24
repr state: 001111000011001011000100
lex min decimal: 3937164
states:
100101100110100110000010
101001010101101000011000
110000110010001101001100
010110100101001000011010
101001010101100001001010
011010010010100010010110
100101100110100010010100
001111000001001110001100
011010010100100110000110
001111000011000101001100
010110100001100001011010
100101100100000110010110
101001010100001001011010
101001010001101001010010
110000110011001010001100
110000110011000111001000
010110100101101001000010
010110100100101001011000
100101100010100100010110
110000110001001111000100
011010010110000110010010
001111000011001011000100
011010010110100100010100
001111000010001111001000




=== State Orbit 45 =====================
size : 24
repr state: 001111000011001010001000
lex min decimal: 3937092
states:
100101100010000110010010
011010010100000100010110
010110100100001001010010
110000110010001011001000
010110100101100001001000
101001010100101001000010
101001010001001000011010
100101100100100100010100
110000110001000101001100
101001010100101001001000
011010010110100010000010
010110100001001001010010
100101100010100010010010
001111000011001010001000
101001010001100000011010
011010010110100010000100
110000110010001011000100
100101100100100110000100
001111000011000110001000
010110100101100000011000
110000110001000110001100
011010010010000100010110
001111000010001101000100
001111000001001101000100




=== State Orbit 46 =====================
size : 24
repr state: 001111000011001010001100
lex min decimal: 3937220
states:
101001010101001000011010
011010010110100110000010
110000110011001011000100
100101100110100100010100
100101100110000110010010
110000110011000101001100
010110100101100001001010
010110100101101000011000
001111000001001111000100
100101100010100010010110
110000110001001110001100
001111000011000111001000
101001010001100001011010
101001010101101001000010
110000110010001111001000
010110100001101001010010
101001010100101001011000
001111000010001101001100
001111000011001010001100
011010010010100100010110
011010010100000110010110
010110100100001001011010
011010010110100010010100
100101100100100110000110




=== State Orbit 47 =====================
size : 24
repr state: 001111000011001010000100
lex min decimal: 3937156
states:
011010010110000110000010
110000110001001010001100
010110100101001000011000
001111000011001010000100
100101100100000110010010
110000110010000101001100
001111000001001110000100
011010010110100000010100
110000110010000111001000
010110100100001001011000
110000110001001011000100
001111000011000101001000
100101100100100110000010
101001010100001000011010
011010010010100000010110
101001010001100001001010
100101100010100100010100
100101100010100010010100
011010010100000110000110
010110100101100001000010
001111000010001101001000
101001010001101001000010
101001010100101000011000
010110100001100001010010




=== State Orbit 48 =====================
size : 24
repr state: 001111000011001001000000
lex min decimal: 3937032
states:
011010010110000100000100
001111000011001001000000
110000110000001001001100
100101100000100100010010
001111000001001100001000
101001010100100000001010
001111000011000100000100
101001010000101000010010
100101100000000110010100
011010010100100000000110
101001010001101000001000
100101100010100110000000
011010010010000010000110
110000110000000111000100
110000110010000010001100
010110100100100001010000
010110100001000001011000
110000110001000011001000
011010010110000000010010
010110100101000000010010
010110100101001001000000
001111000010001110000000
101001010000001001001010
100101100100100010010000




=== State Orbit 49 =====================
size : 24
repr state: 001111000011001001001000
lex min decimal: 3937096
states:
100101100010000110010100
010110100100100001010010
100101100100100100010010
010110100101001001001000
001111000001001101001000
011010010010000110000110
110000110010000110001100
110000110001001011001000
101001010001101001001000
001111000011001001001000
101001010100100000011010
001111000011000110000100
011010010110000110000100
010110100101100000010010
011010010100100000010110
011010010110100000010010
001111000010001110000100
010110100001001001011000
101001010001001001001010
100101100100100010010010
110000110010000111000100
110000110001001001001100
100101100010100110000100
101001010100101000010010




=== State Orbit 50 =====================
size : 24
repr state: 001111000011001001001100
lex min decimal: 3937224
states:
101001010001101001011000
001111000011000111000100
110000110011001001001100
010110100101101000010010
001111000011001001001100
001111000010001110001100
100101100110100100010010
100101100010100110000110
100101100100100010010110
101001010100100001011010
110000110001001111001000
100101100110000110010100
110000110011000111000100
011010010010100110000110
011010010100100010010110
011010010110000110010100
010110100101001001001010
101001010101101000010010
101001010101001001001010
010110100100100001011010
010110100001101001011000
011010010110100100010010
110000110010001110001100
001111000001001111001000




=== State Orbit 51 =====================
size : 24
repr state: 001111000011001001000100
lex min decimal: 3937160
states:
001111000011001001000100
001111000011000101000100
110000110001000111000100
100101100010100100010010
010110100101001001000010
100101100100000110010100
010110100001100001011000
101001010001101000011000
101001010001101000010010
110000110010001001001100
011010010100100010000110
110000110001000111001000
100101100100100010010100
011010010110000100010100
101001010100001001001010
101001010100100001001010
110000110010001010001100
001111000001001110001000
010110100100100001011000
011010010110000100010010
001111000010001110001000
011010010010100010000110
100101100010100110000010
010110100101001000010010




=== State Orbit 52 =====================
size : 24
repr state: 001111000011001000001000
lex min decimal: 3937088
states:
110000110000001011001000
011010010100000000010110
011010010110000010000100
011010010010000100000110
001111000011001000001000
010110100101100000010000
010110100101000001001000
010110100001001001010000
110000110010000011000100
101001010001001000001010
110000110000000110001100
110000110001000001001100
101001010100101000000010
001111000010001100000100
010110100100000001010010
100101100000100110000100
101001010000100000011010
101001010000101001001000
001111000001001101000000
100101100100100100010000
001111000011000110000000
100101100010000110010000
011010010110100000000010
100101100000100010010010




=== State Orbit 53 =====================
size : 24
repr state: 001111000011001000001100
lex min decimal: 3937216
states:
011010010100000010010110
001111000001001111000000
110000110000001110001100
011010010010100100000110
110000110011000011000100
100101100000100110000110
011010010110100100000010
100101100110000110010000
100101100110100100010000
010110100101000001001010
101001010000100001011010
011010010110000010010100
110000110011000001001100
101001010101101000000010
001111000010001100001100
010110100100000001011010
101001010000101001011000
010110100101101000010000
010110100001101001010000
001111000011001000001100
101001010101001000001010
110000110000001111001000
001111000011000111000000
100101100000100010010110




=== State Orbit 54 =====================
size : 24
repr state: 001111000011001000000100
lex min decimal: 3937152
states:
010110100101001000010000
001111000011001000000100
100101100100000110010000
010110100101000001000010
100101100000100110000010
010110100100000001011000
101001010000100001001010
001111000001001110000000
010110100001100001010000
001111000011000101000000
011010010010100000000110
001111000010001100001000
100101100000100010010100
011010010100000010000110
101001010001101000000010
101001010100001000001010
110000110000000111001000
110000110010000001001100
101001010000101000011000
011010010110000000010100
110000110001000011000100
110000110000001010001100
011010010110000100000010
100101100010100100010000




=== State Orbit 55 =====================
size : 24
repr state: 001111000011000010000000
lex min decimal: 3932932
states:
010110100000001001010000
011010010000000000010110
100101100010000010010000
001111000000001100000100
011010010110000010000000
010110100000000001010010
110000110010000011000000
011010010110100000000000
001111000000001101000000
110000110000001011000000
011010010000000100000110
001111000011000000001000
100101100000100100000100
010110100101100000000000
101001010100101000000000
101001010000000000011010
100101100100100100000000
110000110001000000001100
101001010000101001000000
010110100101000000001000
101001010001000000001010
001111000011000010000000
100101100000000010010010
110000110000000100001100




=== State Orbit 56 =====================
size : 24
repr state: 001111000011000011000000
lex min decimal: 3932940
states:
110000110000001111000000
101001010101101000000000
001111000000001100001100
001111000011000011000000
010110100000101001010000
110000110011000011000000
001111000000001111000000
011010010000000010010110
100101100000100100000110
010110100101000000001010
100101100000000010010110
011010010110100100000000
110000110000001100001100
101001010101000000001010
010110100101101000000000
011010010000100100000110
110000110011000000001100
100101100110100100000000
010110100000000001011010
101001010000101001010000
001111000011000000001100
011010010110000010010000
100101100110000010010000
101001010000000001011010




=== State Orbit 57 =====================
size : 24
repr state: 001111000011000011001000
lex min decimal: 3933004
states:
011010010000000110010110
010110100101101000001000
001111000011000011001000
001111000000001111000100
110000110011000100001100
100101100110000010010010
010110100000001001011010
101001010001000001011010
101001010101000000011010
011010010000100100010110
110000110011001011000000
101001010100101001010000
001111000011000010001100
101001010101101001000000
011010010110100010010000
110000110001001100001100
110000110010001111000000
100101100010000010010110
100101100110100100000100
010110100000101001010010
100101100100100100000110
011010010110100110000000
001111000000001101001100
010110100101100000001010




=== State Orbit 58 =====================
size : 12
repr state: 001111000011000011001100
lex min decimal: 3933132
states:
001111000000001111001100
101001010101000001011010
001111000011000011001100
101001010101101001010000
011010010110100110010000
010110100101101000001010
010110100000101001011010
100101100110000010010110
110000110011001111000000
110000110011001100001100
011010010000100110010110
100101100110100100000110




=== State Orbit 59 =====================
size : 24
repr state: 001111000011000011000100
lex min decimal: 3933068
states:
001111000011000011000100
010110100000101001011000
101001010101000001001010
110000110011000111000000
001111000011000001001100
011010010110100100010000
001111000000001111001000
110000110001001111000000
100101100110000010010100
110000110011001000001100
100101100010100100000110
011010010000100110000110
010110100101101000000010
100101100100000010010110
110000110010001100001100
100101100110100100000010
011010010000100010010110
101001010100000001011010
101001010001101001010000
001111000000001110001100
010110100000100001011010
101001010101101000010000
011010010110000110010000
010110100101001000001010




=== State Orbit 60 =====================
size : 12
repr state: 001111000011000010001000
lex min decimal: 3932996
states:
001111000011000010001000
010110100101100000001000
100101100010000010010010
100101100100100100000100
101001010100101001000000
010110100000001001010010
101001010001000000011010
011010010110100010000000
011010010000000100010110
001111000000001101000100
110000110010001011000000
110000110001000100001100




=== State Orbit 61 =====================
size : 24
repr state: 001111000011000010000100
lex min decimal: 3933000
states:
101001010100000000011010
010110100101100000000010
100101100010000010010100
010110100101001000001000
001111000000001110000100
011010010110100000010000
011010010000100000010110
101001010001101001000000
011010010110000110000000
101001010100101000010000
011010010000000110000110
100101100100000010010010
110000110010000111000000
101001010001000001001010
100101100100100100000010
100101100010100100000100
001111000011000001001000
110000110010000100001100
001111000011000010000100
110000110001001011000000
001111000000001101001000
010110100000001001011000
010110100000100001010010
110000110001001000001100




=== State Orbit 62 =====================
size : 24
repr state: 001111000011000001000000
lex min decimal: 3932936
states:
001111000000001100001000
101001010000000001001010
110000110000000111000000
011010010000000010000110
110000110000001000001100
010110100000100001010000
010110100101000000000010
110000110010000000001100
011010010110000000010000
011010010000100000000110
001111000000001110000000
100101100000000010010100
010110100101001000000000
100101100100000010010000
110000110001000011000000
100101100010100100000000
001111000011000000000100
100101100000100100000010
101001010001101000000000
011010010110000100000000
101001010000101000010000
001111000011000001000000
101001010100000000001010
010110100000000001011000




=== State Orbit 63 =====================
size : 12
repr state: 001111000011000001000100
lex min decimal: 3933064
states:
010110100000100001011000
100101100010100100000010
001111000011000001000100
110000110001000111000000
011010010000100010000110
011010010110000100010000
010110100101001000000010
101001010001101000010000
100101100100000010010100
101001010100000001001010
110000110010001000001100
001111000000001110001000




=== State Orbit 64 =====================
size : 12
repr state: 001011000010001000000000
lex min decimal: 1442064
states:
010010100100000001000000
000111000001000100000000
010010010100000000000100
100001010000100000001000
000101100000000100010000
000110100001000000010000
001011000010001000000000
001010010010000000000010
100001100000100010000000
001001010000001000000010
010000110000000001000100
100000110000000010001000




=== State Orbit 65 =====================
size : 24
repr state: 001011000010001010000000
lex min decimal: 1442066
states:
000110100001000000010010
001011000010001001000000
001010010010000010000010
001001010000001001000010
100001010001100000001000
001011000010001010000000
010010100100001001000000
100000110010000010001000
100000110001000010001000
010010010100100000000100
000110100001000000011000
000111000001000100001000
010000110000001001000100
000101100000000100010100
000101100000000100010010
010010010100000100000100
010000110000000101000100
001001010000001000010010
100001100010100010000000
010010100100100001000000
000111000001000100000100
100001100100100010000000
001010010010000000010010
100001010100100000001000




=== State Orbit 66 =====================
size : 12
repr state: 001011000010001011000000
lex min decimal: 1442070
states:
100001100110100010000000
010010010100100100000100
100000110011000010001000
010000110000001101000100
000110100001000000011010
000101100000000100010110
010010100100101001000000
001010010010000010010010
100001010101100000001000
000111000001000100001100
001011000010001011000000
001001010000001001010010




=== State Orbit 67 =====================
size : 12
repr state: 001111000010000100000000
lex min decimal: 3936768
states:
010110100100000000010000
011010010100000000000010
011010010010000000000100
101001010000100000000010
110000110000000010000100
010110100001000001000000
110000110000000001001000
001111000010000100000000
100101100000100000010000
001111000001001000000000
100101100000000110000000
101001010000001000001000




=== State Orbit 68 =====================
size : 24
repr state: 001111000010000110000000
lex min decimal: 3936776
states:
101001010000001001001000
100101100010000110000000
110000110010000010000100
001111000001001001000000
101001010100100000000010
100101100000100000010010
011010010010000100000100
100101100000000110000100
001111000010000110000000
001111000010000100000100
010110100100100000010000
010110100001001001000000
010110100001000001001000
110000110000001001001000
011010010100100000000010
011010010010000010000100
011010010100000000010010
101001010001001000001000
101001010000100000010010
100101100100100000010000
110000110000000110000100
010110100100000000010010
001111000001001000001000
110000110001000001001000




=== State Orbit 69 =====================
size : 24
repr state: 001111000010000111000000
lex min decimal: 3936780
states:
110000110000001101001000
100101100000100000010110
110000110011000001001000
001111000010000100001100
011010010010100100000100
100101100000000110000110
110000110011000010000100
001111000001001000001100
001111000010000111000000
100101100110100000010000
010110100001101001000000
101001010101001000001000
010110100100000000011010
011010010100000010010010
101001010101100000000010
100101100110000110000000
011010010010000010010100
010110100001000001001010
110000110000001110000100
010110100100101000010000
101001010000001001011000
101001010000100001010010
001111000001001011000000
011010010100100100000010




=== State Orbit 70 =====================
size : 24
repr state: 001111000010000111001000
lex min decimal: 3936908
states:
001111000010000111001000
011010010010100100010100
001111000010000101001100
100101100110100000010100
010110100100101000011000
110000110011000101001000
110000110011001010000100
110000110010001101001000
101001010101100001000010
101001010001100001010010
101001010101001000011000
001111000001001010001100
010110100001101001000010
010110100100001000011010
101001010100001001011000
011010010100000110010010
011010010100100110000010
011010010010100010010100
001111000001001011000100
100101100110000110000010
100101100010100000010110
010110100001100001001010
110000110001001110000100
100101100100000110000110




=== State Orbit 71 =====================
size : 12
repr state: 001111000010000111001100
lex min decimal: 3936972
states:
110000110011001110000100
101001010101001001011000
010110100100101000011010
001111000001001011001100
100101100110000110000110
101001010101100001010010
001111000010000111001100
100101100110100000010110
011010010010100110010100
011010010100100110010010
110000110011001101001000
010110100001101001001010




=== State Orbit 72 =====================
size : 24
repr state: 001111000010000111000100
lex min decimal: 3936844
states:
010110100001001001001010
001111000001001001001100
110000110001001101001000
001111000010000111000100
101001010101001001001000
100101100010000110000110
101001010100100001010010
100101100100100000010110
110000110010001110000100
011010010100100010010010
101001010001001001011000
010110100100100000011010
011010010100100100010010
001111000010000110001100
100101100110000110000100
011010010010000110010100
100101100110100000010010
001111000001001011001000
010110100001101001001000
101001010101100000010010
011010010010100110000100
110000110011001001001000
010110100100101000010010
110000110011000110000100




=== State Orbit 73 =====================
size : 24
repr state: 001111000010000110001000
lex min decimal: 3936836
states:
101001010100100001000010
011010010100000100010010
100101100100000110000100
100101100100100000010100
100101100010000110000010
100101100010100000010010
011010010010000100010100
101001010001001000011000
001111000010000110001000
001111000001001001000100
110000110001000101001000
101001010100001001001000
001111000010000101000100
010110100001001001000010
010110100100001000010010
110000110001000110000100
011010010010100010000100
011010010100100010000010
110000110010001010000100
010110100100100000011000
101001010001100000010010
110000110010001001001000
001111000001001010001000
010110100001100001001000




=== State Orbit 74 =====================
size : 12
repr state: 001111000010000110000100
lex min decimal: 3936840
states:
011010010010000110000100
110000110001001001001000
010110100100100000010010
010110100001001001001000
100101100010000110000100
100101100100100000010010
101001010001001001001000
110000110010000110000100
011010010100100000010010
001111000001001001001000
101001010100100000010010
001111000010000110000100




=== State Orbit 75 =====================
size : 24
repr state: 001111000010000101000000
lex min decimal: 3936772
states:
011010010010100000000100
100101100010100000010000
011010010100000010000010
001111000010000100001000
011010010010000000010100
010110100001000001000010
001111000001001000000100
011010010100000100000010
110000110010000001001000
110000110000001010000100
101001010000001000011000
101001010000100001000010
101001010100001000001000
101001010001100000000010
100101100000100000010100
010110100100000000011000
010110100001100001000000
100101100000000110000010
100101100100000110000000
110000110000000101001000
010110100100001000010000
001111000010000101000000
001111000001001010000000
110000110001000010000100




=== State Orbit 76 =====================
size : 12
repr state: 001111000010000101001000
lex min decimal: 3936900
states:
011010010010100000010100
001111000001001010000100
101001010001100001000010
010110100001100001000010
110000110010000101001000
100101100100000110000010
101001010100001000011000
110000110001001010000100
001111000010000101001000
011010010100000110000010
100101100010100000010100
010110100100001000011000




=== State Orbit 77 =====================
size : 24
repr state: 001011000010000010000000
lex min decimal: 1441810
states:
010010100000001001000000
100000110010000010000000
010000110000000100000100
000111000000000100000100
010010010000000100000100
100001010001000000001000
010000110000001001000000
001011000010000010000000
001001010000000000010010
010010010100100000000000
000110100001000000001000
001011000000001001000000
001010010000000000010010
000101100000000100000100
100001100010000010000000
010010100100100000000000
000110100000000000010010
100001100100100000000000
001010010010000010000000
001001010000001001000000
100000110001000000001000
000101100000000000010010
100001010100100000000000
000111000001000000001000




=== State Orbit 78 =====================
size : 24
repr state: 001011000010000011000000
lex min decimal: 1441814
states:
010010010100100100000000
010010100100101000000000
001010010010000010010000
010000110000001101000000
100001100110000010000000
001001010000000001010010
001001010000001001010000
010010100000101001000000
100000110011000000001000
010000110000001100000100
100000110011000010000000
001010010000000010010010
001011000000001011000000
100001010101100000000000
000110100000000000011010
000110100001000000001010
000101100000000000010110
100001100110100000000000
000111000000000100001100
000111000001000000001100
001011000010000011000000
100001010101000000001000
000101100000000100000110
010010010000100100000100




=== State Orbit 79 =====================
size : 24
repr state: 001011000010000001000000
lex min decimal: 1441812
states:
010010100000100001000000
100001100010100000000000
000101100000000100000010
100001100100000010000000
100000110010000000001000
001011000000001010000000
001010010000000010000010
010000110000000101000000
000110100000000000011000
100001010100000000001000
010010010100000100000000
001010010010000000010000
100001010001100000000000
000111000000000100001000
100000110001000010000000
001011000010000001000000
000111000001000000000100
010010010000100000000100
010000110000001000000100
000110100001000000000010
000101100000000000010100
001001010000000001000010
001001010000001000010000
010010100100001000000000



[QRM NOTE]: Time elapsed since start: 10.852 seconds

[QRM NOTE]: Time elapsed since last: 0.974 seconds

[QRM NOTE]: Peak memory: 1625673 bytes


============================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym/ivy/firewall: node=4]

============================================================================================================

[REACH_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 11.436 seconds

[QRM NOTE]: Time elapsed since last: 0.584 seconds

[QRM NOTE]: Peak memory: 598834 bytes

ivy_check complete=fo ivybench/sym/ivy/firewall.node_3.0.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_8
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_11
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_14

    The following action implementations are present:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 15: implementation of send_from_internal
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 23: implementation of send_to_internal

    The following initializers are present:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 10: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_8 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_11 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_14 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:send_from_internal
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_8 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_11 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_14 ... PASS
        (internal) ext:send_to_internal
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_8 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_11 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_14 ... PASS

    The following program assertions are treated as assumptions:
        in action send_from_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 16: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 17: assumption
        in action send_to_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 24: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 25: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 26: assumption

OK
[IVY_CHECK RESULT]: PASS


********************************************************

	[QRM]: ivybench/sym/ivy/firewall.ivy

********************************************************

[RMIN NUM]: 1

[RMIN RESULT]: ['ivybench/sym/ivy/firewall.node_3.0.ivy']

[CUTOFF]: node=3

[QRM RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 93.152 seconds

[QRM NOTE]: Time elapsed since last: 93.152 seconds

