
*******************************************************

	[QRM]: ivybench/sym/ivy/TCommit.ivy

*******************************************************


***********************************************************************************

	[Synthesize Rmin]: ivybench/sym/ivy/TCommit: resource_manager=1

***********************************************************************************

python3 qrm.py ivybench/sym/ivy/TCommit.ivy -s resource_manager=1 -f 1 -g -w -r -t -k -v 5 -w -l ivybench/sym/ivy/TCommit.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


===========================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/TCommit: resource_manager=1]

===========================================================================================


==============================================

	Set up for forward reachability

==============================================

ivy_to_cpp target=qrm TCommit.resource_manager_1.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o TCommit.resource_manager_1.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 TCommit.resource_manager_1.finite.cpp TCommit.resource_manager_1.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared TCommit.resource_manager_1.finite.o TCommit.resource_manager_1.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[FW NOTE]: number of state atoms: 4

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: number of branching actions: 3

[FW NOTE]: symmetric group order: 1

[QRM NOTE]: Time elapsed since start: 6.072 seconds

[QRM NOTE]: Time elapsed since last: 6.072 seconds

[QRM NOTE]: Peak memory: 1172170 bytes


=====================================

	Symmetric Quotient DFS

=====================================

[FW NOTE]: dfs max depth: 2

[FW NOTE]: number of total reachable states:        4

[FW NOTE]: number of dfs representative states:     4

[FW NOTE]: number of dfs non-representative states: 0


==================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/TCommit: resource_manager=1]

==================================================================================================

sort: resource_manager=['resource_manager0']
predicate: working('resource_manager',)
predicate: prepared('resource_manager',)
predicate: committed('resource_manager',)
predicate: aborted('resource_manager',)
interpreted atoms: {}
state atoms: ['aborted(resource_manager0)', 'committed(resource_manager0)', 'prepared(resource_manager0)', 'working(resource_manager0)']
representative states : 1, 2, 4, 8


=== State Orbit 0 =====================
size : 1
repr state: 0001
lex min decimal: 1
states:
0001




=== State Orbit 1 =====================
size : 1
repr state: 0010
lex min decimal: 2
states:
0010




=== State Orbit 2 =====================
size : 1
repr state: 0100
lex min decimal: 4
states:
0100




=== State Orbit 3 =====================
size : 1
repr state: 1000
lex min decimal: 8
states:
1000



[QRM NOTE]: Time elapsed since start: 6.151 seconds

[QRM NOTE]: Time elapsed since last: 0.079 seconds

[QRM NOTE]: Peak memory: 1198336 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 6.155 seconds

[QRM NOTE]: Time elapsed since last: 0.004 seconds

[QRM NOTE]: Peak memory: 148875 bytes


==================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym/ivy/TCommit: resource_manager=1]

==================================================================================================


=============================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym/ivy/TCommit: resource_manager=1]

=============================================================================================


=== Prime Orbit 0 =====================
size : 1
num_suborbits: 1
0 (*) : --11
0     : ['prepared(resource_manager0)', 'working(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 1
num_suborbits: 1
1 (*) : -1-1
1     : ['committed(resource_manager0)', 'working(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 1
num_suborbits: 1
2 (*) : 1--1
2     : ['aborted(resource_manager0)', 'working(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 1
num_suborbits: 1
3 (*) : 1-1-
3     : ['aborted(resource_manager0)', 'prepared(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 1
num_suborbits: 1
4 (*) : -11-
4     : ['committed(resource_manager0)', 'prepared(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 1
num_suborbits: 1
5 (*) : 11--
5     : ['aborted(resource_manager0)', 'committed(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 1
num_suborbits: 1
6 (*) : 0000
6     : ['~aborted(resource_manager0)', '~committed(resource_manager0)', '~prepared(resource_manager0)', '~working(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 7

[PRIME NOTE]: number of orbits before merging: 7

[PRIME NOTE]: number of primes: 7

[QRM NOTE]: Time elapsed since start: 6.166 seconds

[QRM NOTE]: Time elapsed since last: 0.011 seconds

[QRM NOTE]: Peak memory: 1213747 bytes


=======================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym/ivy/TCommit: resource_manager=1]

=======================================================================================

definition primes: set()


New level: 0
 pending : [0, 1, 2, 3, 4, 5, 6]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 3, 4, 5, 6]
 solution : []

Essensial at level 0 : {0, 1, 2, 3, 4, 5, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : []
 solution : [0, 1, 2, 3, 4, 5, 6]


Before reduction : 
 pending  : []
 solution : [0, 1, 2, 3, 4, 5, 6]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : []
 solution : [0, 1, 2, 3, 4, 5, 6]

[QRM NOTE]: Time elapsed since start: 6.167 seconds

[QRM NOTE]: Time elapsed since last: 0.001 seconds

[QRM NOTE]: Peak memory: 165766 bytes


===========================================================================================

	[QI]: Quantifier Inference on [ivybench/sym/ivy/TCommit: resource_manager=1]

===========================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 1
num_suborbits: 1
0 (*) : --11
0     : ['prepared(resource_manager0)', 'working(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['prepared(resource_manager0)', 'working(resource_manager0)']

sign_func_name2args: {'0$prepared': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))),)], '0$working': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))),)]}

const2sigs: {Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))): [resource_manager$0$prepared$0$0, resource_manager$0$working$0$0]}

sig2const: {'resource_manager$0$prepared$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))), 'resource_manager$0$working$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0',)): [resource_manager$0$prepared$0$0; resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0',)): resource_manager$0$prepared$0$0; resource_manager$0$working$0$0}

part_sig: ('resource_manager$0$prepared$0$0; resource_manager$0$working$0$0',)


---------- SigGenerator ----------

terms:  ['prepared(resource_manager0)', 'working(resource_manager0)']

func_name2symbol:  {'prepared': Const('prepared', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0',)), BooleanSort())), 'working': Const('working', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0',)), BooleanSort()))}

func_name2args_sort:  {'prepared': (EnumeratedSort('resource_manager', ('resource_manager0',)),), 'working': (EnumeratedSort('resource_manager', ('resource_manager0',)),)}

sign_func_name2count:  {'0$prepared': 1, '0$working': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0',)): [resource_manager$0$prepared$0$0; resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0',)): resource_manager$0$prepared$0$0; resource_manager$0$working$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$0$prepared$0; resource_manager$0$working$0': [resource_manager$0$prepared$0$0; resource_manager$0$working$0$0]}

	identical_single_classes: {'resource_manager$0$prepared$0; resource_manager$0$working$0': resource_manager$0$prepared$0$0; resource_manager$0$working$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$prepared': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))]], '0$working': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['prepared(RESOURCE_MANAGER0)', 'working(RESOURCE_MANAGER0)']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER0. ~prepared(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0)


---------- Quantifier Inference: orbit 0 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 1 =====================
size : 1
num_suborbits: 1
1 (*) : -1-1
1     : ['committed(resource_manager0)', 'working(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['committed(resource_manager0)', 'working(resource_manager0)']

sign_func_name2args: {'0$committed': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))),)], '0$working': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))),)]}

const2sigs: {Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))): [resource_manager$0$committed$0$0, resource_manager$0$working$0$0]}

sig2const: {'resource_manager$0$committed$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))), 'resource_manager$0$working$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0',)): [resource_manager$0$committed$0$0; resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0',)): resource_manager$0$committed$0$0; resource_manager$0$working$0$0}

part_sig: ('resource_manager$0$committed$0$0; resource_manager$0$working$0$0',)


---------- SigGenerator ----------

terms:  ['committed(resource_manager0)', 'working(resource_manager0)']

func_name2symbol:  {'committed': Const('committed', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0',)), BooleanSort())), 'working': Const('working', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0',)), BooleanSort()))}

func_name2args_sort:  {'committed': (EnumeratedSort('resource_manager', ('resource_manager0',)),), 'working': (EnumeratedSort('resource_manager', ('resource_manager0',)),)}

sign_func_name2count:  {'0$committed': 1, '0$working': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0',)): [resource_manager$0$committed$0$0; resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0',)): resource_manager$0$committed$0$0; resource_manager$0$working$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$0$committed$0; resource_manager$0$working$0': [resource_manager$0$committed$0$0; resource_manager$0$working$0$0]}

	identical_single_classes: {'resource_manager$0$committed$0; resource_manager$0$working$0': resource_manager$0$committed$0$0; resource_manager$0$working$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$committed': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))]], '0$working': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['committed(RESOURCE_MANAGER0)', 'working(RESOURCE_MANAGER0)']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER0. ~committed(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0)


---------- Quantifier Inference: orbit 1 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 2 =====================
size : 1
num_suborbits: 1
2 (*) : 1--1
2     : ['aborted(resource_manager0)', 'working(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['aborted(resource_manager0)', 'working(resource_manager0)']

sign_func_name2args: {'0$aborted': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))),)], '0$working': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))),)]}

const2sigs: {Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))): [resource_manager$0$aborted$0$0, resource_manager$0$working$0$0]}

sig2const: {'resource_manager$0$aborted$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))), 'resource_manager$0$working$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0',)): [resource_manager$0$aborted$0$0; resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0',)): resource_manager$0$aborted$0$0; resource_manager$0$working$0$0}

part_sig: ('resource_manager$0$aborted$0$0; resource_manager$0$working$0$0',)


---------- SigGenerator ----------

terms:  ['aborted(resource_manager0)', 'working(resource_manager0)']

func_name2symbol:  {'aborted': Const('aborted', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0',)), BooleanSort())), 'working': Const('working', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0',)), BooleanSort()))}

func_name2args_sort:  {'aborted': (EnumeratedSort('resource_manager', ('resource_manager0',)),), 'working': (EnumeratedSort('resource_manager', ('resource_manager0',)),)}

sign_func_name2count:  {'0$aborted': 1, '0$working': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0',)): [resource_manager$0$aborted$0$0; resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0',)): resource_manager$0$aborted$0$0; resource_manager$0$working$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$0$aborted$0; resource_manager$0$working$0': [resource_manager$0$aborted$0$0; resource_manager$0$working$0$0]}

	identical_single_classes: {'resource_manager$0$aborted$0; resource_manager$0$working$0': resource_manager$0$aborted$0$0; resource_manager$0$working$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$aborted': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))]], '0$working': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['aborted(RESOURCE_MANAGER0)', 'working(RESOURCE_MANAGER0)']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0)


---------- Quantifier Inference: orbit 2 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 3 =====================
size : 1
num_suborbits: 1
3 (*) : 1-1-
3     : ['aborted(resource_manager0)', 'prepared(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['aborted(resource_manager0)', 'prepared(resource_manager0)']

sign_func_name2args: {'0$aborted': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))),)], '0$prepared': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))),)]}

const2sigs: {Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))): [resource_manager$0$aborted$0$0, resource_manager$0$prepared$0$0]}

sig2const: {'resource_manager$0$aborted$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))), 'resource_manager$0$prepared$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0',)): [resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0',)): resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0}

part_sig: ('resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0',)


---------- SigGenerator ----------

terms:  ['aborted(resource_manager0)', 'prepared(resource_manager0)']

func_name2symbol:  {'aborted': Const('aborted', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0',)), BooleanSort())), 'prepared': Const('prepared', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0',)), BooleanSort()))}

func_name2args_sort:  {'aborted': (EnumeratedSort('resource_manager', ('resource_manager0',)),), 'prepared': (EnumeratedSort('resource_manager', ('resource_manager0',)),)}

sign_func_name2count:  {'0$aborted': 1, '0$prepared': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0',)): [resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0',)): resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$0$aborted$0; resource_manager$0$prepared$0': [resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0]}

	identical_single_classes: {'resource_manager$0$aborted$0; resource_manager$0$prepared$0': resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$aborted': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))]], '0$prepared': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['aborted(RESOURCE_MANAGER0)', 'prepared(RESOURCE_MANAGER0)']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~prepared(RESOURCE_MANAGER0)


---------- Quantifier Inference: orbit 3 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 4 =====================
size : 1
num_suborbits: 1
4 (*) : -11-
4     : ['committed(resource_manager0)', 'prepared(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['committed(resource_manager0)', 'prepared(resource_manager0)']

sign_func_name2args: {'0$committed': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))),)], '0$prepared': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))),)]}

const2sigs: {Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))): [resource_manager$0$committed$0$0, resource_manager$0$prepared$0$0]}

sig2const: {'resource_manager$0$committed$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))), 'resource_manager$0$prepared$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0',)): [resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0',)): resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0}

part_sig: ('resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0',)


---------- SigGenerator ----------

terms:  ['committed(resource_manager0)', 'prepared(resource_manager0)']

func_name2symbol:  {'committed': Const('committed', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0',)), BooleanSort())), 'prepared': Const('prepared', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0',)), BooleanSort()))}

func_name2args_sort:  {'committed': (EnumeratedSort('resource_manager', ('resource_manager0',)),), 'prepared': (EnumeratedSort('resource_manager', ('resource_manager0',)),)}

sign_func_name2count:  {'0$committed': 1, '0$prepared': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0',)): [resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0',)): resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$0$committed$0; resource_manager$0$prepared$0': [resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0]}

	identical_single_classes: {'resource_manager$0$committed$0; resource_manager$0$prepared$0': resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$committed': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))]], '0$prepared': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['committed(RESOURCE_MANAGER0)', 'prepared(RESOURCE_MANAGER0)']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER0. ~committed(RESOURCE_MANAGER0) | ~prepared(RESOURCE_MANAGER0)


---------- Quantifier Inference: orbit 4 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 5 =====================
size : 1
num_suborbits: 1
5 (*) : 11--
5     : ['aborted(resource_manager0)', 'committed(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['aborted(resource_manager0)', 'committed(resource_manager0)']

sign_func_name2args: {'0$aborted': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))),)], '0$committed': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))),)]}

const2sigs: {Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))): [resource_manager$0$aborted$0$0, resource_manager$0$committed$0$0]}

sig2const: {'resource_manager$0$aborted$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))), 'resource_manager$0$committed$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0',)): [resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0',)): resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0}

part_sig: ('resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0',)


---------- SigGenerator ----------

terms:  ['aborted(resource_manager0)', 'committed(resource_manager0)']

func_name2symbol:  {'aborted': Const('aborted', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0',)), BooleanSort())), 'committed': Const('committed', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0',)), BooleanSort()))}

func_name2args_sort:  {'aborted': (EnumeratedSort('resource_manager', ('resource_manager0',)),), 'committed': (EnumeratedSort('resource_manager', ('resource_manager0',)),)}

sign_func_name2count:  {'0$aborted': 1, '0$committed': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0',)): [resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0',)): resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$0$aborted$0; resource_manager$0$committed$0': [resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0]}

	identical_single_classes: {'resource_manager$0$aborted$0; resource_manager$0$committed$0': resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$aborted': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))]], '0$committed': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['aborted(RESOURCE_MANAGER0)', 'committed(RESOURCE_MANAGER0)']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~committed(RESOURCE_MANAGER0)


---------- Quantifier Inference: orbit 5 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 6 =====================
size : 1
num_suborbits: 1
6 (*) : 0000
6     : ['~aborted(resource_manager0)', '~committed(resource_manager0)', '~prepared(resource_manager0)', '~working(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~aborted(resource_manager0)', '~committed(resource_manager0)', '~prepared(resource_manager0)', '~working(resource_manager0)']

sign_func_name2args: {'1$aborted': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))),)], '1$committed': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))),)], '1$prepared': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))),)], '1$working': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))),)]}

const2sigs: {Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))): [resource_manager$1$aborted$0$0, resource_manager$1$committed$0$0, resource_manager$1$prepared$0$0, resource_manager$1$working$0$0]}

sig2const: {'resource_manager$1$aborted$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))), 'resource_manager$1$committed$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))), 'resource_manager$1$prepared$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',))), 'resource_manager$1$working$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0',)): [resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0',)): resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0}

part_sig: ('resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0',)


---------- SigGenerator ----------

terms:  ['~aborted(resource_manager0)', '~committed(resource_manager0)', '~prepared(resource_manager0)', '~working(resource_manager0)']

func_name2symbol:  {'aborted': Const('aborted', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0',)), BooleanSort())), 'committed': Const('committed', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0',)), BooleanSort())), 'prepared': Const('prepared', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0',)), BooleanSort())), 'working': Const('working', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0',)), BooleanSort()))}

func_name2args_sort:  {'aborted': (EnumeratedSort('resource_manager', ('resource_manager0',)),), 'committed': (EnumeratedSort('resource_manager', ('resource_manager0',)),), 'prepared': (EnumeratedSort('resource_manager', ('resource_manager0',)),), 'working': (EnumeratedSort('resource_manager', ('resource_manager0',)),)}

sign_func_name2count:  {'1$aborted': 1, '1$committed': 1, '1$prepared': 1, '1$working': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0',)): [resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0',)): resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$1$aborted$0; resource_manager$1$committed$0; resource_manager$1$prepared$0; resource_manager$1$working$0': [resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0]}

	identical_single_classes: {'resource_manager$1$aborted$0; resource_manager$1$committed$0; resource_manager$1$prepared$0; resource_manager$1$working$0': resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$aborted': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))]], '1$committed': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))]], '1$prepared': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))]], '1$working': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~committed(RESOURCE_MANAGER0)', '~prepared(RESOURCE_MANAGER0)', '~working(RESOURCE_MANAGER0)', '~aborted(RESOURCE_MANAGER0)']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER0. committed(RESOURCE_MANAGER0) | prepared(RESOURCE_MANAGER0) | working(RESOURCE_MANAGER0) | aborted(RESOURCE_MANAGER0)


---------- Quantifier Inference: orbit 6 ----------

[QI_CHECK RESULT]: PASS


=====================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym/ivy/TCommit: resource_manager=1]

=====================================================================================================


=== Prime Orbit 0 =====================
size : 1
num_suborbits: 1
0 (*) : --11
0     : ['prepared(resource_manager0)', 'working(resource_manager0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall RESOURCE_MANAGER0. ~prepared(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0)
qcost : 3




=== Prime Orbit 1 =====================
size : 1
num_suborbits: 1
1 (*) : -1-1
1     : ['committed(resource_manager0)', 'working(resource_manager0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall RESOURCE_MANAGER0. ~committed(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0)
qcost : 3




=== Prime Orbit 2 =====================
size : 1
num_suborbits: 1
2 (*) : 1--1
2     : ['aborted(resource_manager0)', 'working(resource_manager0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0)
qcost : 3




=== Prime Orbit 3 =====================
size : 1
num_suborbits: 1
3 (*) : 1-1-
3     : ['aborted(resource_manager0)', 'prepared(resource_manager0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~prepared(RESOURCE_MANAGER0)
qcost : 3




=== Prime Orbit 4 =====================
size : 1
num_suborbits: 1
4 (*) : -11-
4     : ['committed(resource_manager0)', 'prepared(resource_manager0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall RESOURCE_MANAGER0. ~committed(RESOURCE_MANAGER0) | ~prepared(RESOURCE_MANAGER0)
qcost : 3




=== Prime Orbit 5 =====================
size : 1
num_suborbits: 1
5 (*) : 11--
5     : ['aborted(resource_manager0)', 'committed(resource_manager0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~committed(RESOURCE_MANAGER0)
qcost : 3




=== Prime Orbit 6 =====================
size : 1
num_suborbits: 1
6 (*) : 0000
6     : ['~aborted(resource_manager0)', '~committed(resource_manager0)', '~prepared(resource_manager0)', '~working(resource_manager0)']
num_forall :   1
num_exists :   0
num_literals : 4
quantified form : forall RESOURCE_MANAGER0. committed(RESOURCE_MANAGER0) | prepared(RESOURCE_MANAGER0) | working(RESOURCE_MANAGER0) | aborted(RESOURCE_MANAGER0)
qcost : 5



[QRM NOTE]: Time elapsed since start: 6.255 seconds

[QRM NOTE]: Time elapsed since last: 0.088 seconds

[QRM NOTE]: Peak memory: 1836317 bytes


====================================================================================

	[MIN]: Minimization on [ivybench/sym/ivy/TCommit: resource_manager=1]

====================================================================================


New level: 1
 pending : []
 solution : [0, 1, 2, 3, 4, 5, 6]


Before reduction : 
 pending  : []
 solution : [0, 1, 2, 3, 4, 5, 6]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : []
 solution : [0, 1, 2, 3, 4, 5, 6]


Solution : [0, 1, 2, 3, 4, 5, 6] has cost 23.


Before backtrack at level 1
 pending : []
 solution : [0, 1, 2, 3, 4, 5, 6]

After backtrack at level 1
 pending : []
 solution : [0, 1, 2, 3, 4, 5, 6]


===================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym/ivy/TCommit: resource_manager=1]

===================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: total qcost: 23

[MIN NOTE]: maximum branch and bound depth: 1

Definitions (length=0)

Equality Relations (length=0)

Solution 0 : [0, 1, 2, 3, 4, 5, 6] (length = 7)

invariant [invar_0] forall RESOURCE_MANAGER0. ~prepared(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0) # qcost: 3

invariant [invar_1] forall RESOURCE_MANAGER0. ~committed(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0) # qcost: 3

invariant [invar_2] forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0) # qcost: 3

invariant [invar_3] forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~prepared(RESOURCE_MANAGER0) # qcost: 3

invariant [invar_4] forall RESOURCE_MANAGER0. ~committed(RESOURCE_MANAGER0) | ~prepared(RESOURCE_MANAGER0) # qcost: 3

invariant [invar_5] forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~committed(RESOURCE_MANAGER0) # qcost: 3

invariant [invar_6] forall RESOURCE_MANAGER0. committed(RESOURCE_MANAGER0) | prepared(RESOURCE_MANAGER0) | working(RESOURCE_MANAGER0) | aborted(RESOURCE_MANAGER0) # qcost: 5




[QRM NOTE]: Time elapsed since start: 6.291 seconds

[QRM NOTE]: Time elapsed since last: 0.036 seconds

[QRM NOTE]: Peak memory: 1824784 bytes


======================================================================================================

	[MIN_CHECK] Minimization Sanity Check on [ivybench/sym/ivy/TCommit: resource_manager=1]

======================================================================================================

Minimization check for Solution 0

[MIN_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 6.299 seconds

[QRM NOTE]: Time elapsed since last: 0.008 seconds

[QRM NOTE]: Peak memory: 776835 bytes


=======================================================================================

	[IVY_CHECK]: Ivy Check on [ivybench/sym/ivy/TCommit: resource_manager=1]

=======================================================================================

ivy_check complete=fo ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 53: invar_0
        ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 54: invar_1
        ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 55: invar_2
        ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 56: invar_3
        ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 57: invar_4
        ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 58: invar_5
        ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 59: invar_6

    The following action implementations are present:
        ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 34: implementation of decide_abort
        ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 25: implementation of decide_commit
        ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 17: implementation of prepare

    The following initializers are present:
        ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 10: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 53: invar_0 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 54: invar_1 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 55: invar_2 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 56: invar_3 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 57: invar_4 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 58: invar_5 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 59: invar_6 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide_abort
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 53: invar_0 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 54: invar_1 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 55: invar_2 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 56: invar_3 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 57: invar_4 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 58: invar_5 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 59: invar_6 ... PASS
        (internal) ext:decide_commit
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 53: invar_0 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 54: invar_1 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 55: invar_2 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 56: invar_3 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 57: invar_4 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 58: invar_5 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 59: invar_6 ... PASS
        (internal) ext:prepare
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 53: invar_0 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 54: invar_1 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 55: invar_2 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 56: invar_3 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 57: invar_4 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 58: invar_5 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 59: invar_6 ... PASS

    The following program assertions are treated as assumptions:
        in action prepare when called from the environment:
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 18: assumption
        in action decide_commit when called from the environment:
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 26: assumption
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 27: assumption
        in action decide_abort when called from the environment:
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 35: assumption
            ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy: line 36: assumption

OK
[IVY_CHECK RESULT]: PASS

[R Implies P]: False

[QRM NOTE]: Time elapsed since start: 8.050 seconds

[QRM NOTE]: Time elapsed since last: 1.751 seconds

[QRM NOTE]: Peak memory: 826988 bytes


**************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym/ivy/TCommit: resource_manager=1

**************************************************************************************************

python3 qrm.py ivybench/sym/ivy/TCommit.resource_manager_1.0.ivy -s resource_manager=2 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym/ivy/TCommit.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


===========================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/TCommit: resource_manager=2]

===========================================================================================


==============================================

	Set up for forward reachability

==============================================

ivy_to_cpp target=qrm TCommit.resource_manager_2.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o TCommit.resource_manager_2.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 TCommit.resource_manager_2.finite.cpp TCommit.resource_manager_2.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared TCommit.resource_manager_2.finite.o TCommit.resource_manager_2.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[FW NOTE]: number of state atoms: 8

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: number of branching actions: 6

[FW NOTE]: symmetric group order: 2

[QRM NOTE]: Time elapsed since start: 6.083 seconds

[QRM NOTE]: Time elapsed since last: 6.083 seconds

[QRM NOTE]: Peak memory: 1172785 bytes


=====================================

	Symmetric Quotient DFS

=====================================

[FW NOTE]: dfs max depth: 4

[FW NOTE]: number of total reachable states:        12

[FW NOTE]: number of dfs representative states:     8

[FW NOTE]: number of dfs non-representative states: 4


==================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/TCommit: resource_manager=2]

==================================================================================================

sort: resource_manager=['resource_manager0', 'resource_manager1']
predicate: committed('resource_manager',)
predicate: prepared('resource_manager',)
predicate: working('resource_manager',)
predicate: aborted('resource_manager',)
interpreted atoms: {}
state atoms: ['aborted(resource_manager0)', 'aborted(resource_manager1)', 'committed(resource_manager0)', 'committed(resource_manager1)', 'prepared(resource_manager0)', 'prepared(resource_manager1)', 'working(resource_manager0)', 'working(resource_manager1)']
representative states : 3, 6, 12, 24, 48, 72, 192, 66


=== State Orbit 0 =====================
size : 1
repr state: 00000011
lex min decimal: 3
states:
00000011




=== State Orbit 1 =====================
size : 2
repr state: 00001001
lex min decimal: 6
states:
00000110
00001001




=== State Orbit 2 =====================
size : 1
repr state: 00001100
lex min decimal: 12
states:
00001100




=== State Orbit 3 =====================
size : 2
repr state: 00100100
lex min decimal: 24
states:
00011000
00100100




=== State Orbit 4 =====================
size : 1
repr state: 00110000
lex min decimal: 48
states:
00110000




=== State Orbit 5 =====================
size : 2
repr state: 10000100
lex min decimal: 72
states:
01001000
10000100




=== State Orbit 6 =====================
size : 1
repr state: 11000000
lex min decimal: 192
states:
11000000




=== State Orbit 7 =====================
size : 2
repr state: 10000001
lex min decimal: 66
states:
10000001
01000010



[QRM NOTE]: Time elapsed since start: 6.162 seconds

[QRM NOTE]: Time elapsed since last: 0.079 seconds

[QRM NOTE]: Peak memory: 1203812 bytes


=======================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym/ivy/TCommit: resource_manager=2]

=======================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 18, binary: 00010010

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 6.183 seconds

[QRM NOTE]: Time elapsed since last: 0.021 seconds

[QRM NOTE]: Peak memory: 168375 bytes

next size: resource_manager=2


***********************************************************************************

	[Synthesize Rmin]: ivybench/sym/ivy/TCommit: resource_manager=2

***********************************************************************************

python3 qrm.py ivybench/sym/ivy/TCommit.ivy -s resource_manager=2 -f 1 -g -w -r -t -k -v 5 -w -l ivybench/sym/ivy/TCommit.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 0.023 seconds

[QRM NOTE]: Time elapsed since last: 0.023 seconds

[QRM NOTE]: Peak memory: 2938 bytes


==================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym/ivy/TCommit: resource_manager=2]

==================================================================================================


=============================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym/ivy/TCommit: resource_manager=2]

=============================================================================================


=== Prime Orbit 0 =====================
size : 2
num_suborbits: 1
0 (*) : -----1-1
0     : ['prepared(resource_manager1)', 'working(resource_manager1)']
1     : ----1-1-
1     : ['prepared(resource_manager0)', 'working(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
2 (*) : -1---1--
2     : ['aborted(resource_manager1)', 'prepared(resource_manager1)']
3     : 1---1---
3     : ['aborted(resource_manager0)', 'prepared(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
4 (*) : ---1-1--
4     : ['committed(resource_manager1)', 'prepared(resource_manager1)']
5     : --1-1---
5     : ['committed(resource_manager0)', 'prepared(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 4
num_suborbits: 2
6 (*) : ---1---1
6     : ['committed(resource_manager1)', 'working(resource_manager1)']
7     : --1---1-
7     : ['committed(resource_manager0)', 'working(resource_manager0)']
10 (*) : ---1--1-
10     : ['committed(resource_manager1)', 'working(resource_manager0)']
11     : --1----1
11     : ['committed(resource_manager0)', 'working(resource_manager1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 4
num_suborbits: 2
8 (*) : 1--1----
8     : ['aborted(resource_manager0)', 'committed(resource_manager1)']
9     : -11-----
9     : ['aborted(resource_manager1)', 'committed(resource_manager0)']
12 (*) : -1-1----
12     : ['aborted(resource_manager1)', 'committed(resource_manager1)']
13     : 1-1-----
13     : ['aborted(resource_manager0)', 'committed(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 2
num_suborbits: 1
14 (*) : 1-----1-
14     : ['aborted(resource_manager0)', 'working(resource_manager0)']
15     : -1-----1
15     : ['aborted(resource_manager1)', 'working(resource_manager1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 2
num_suborbits: 1
16 (*) : --10-0--
16     : ['committed(resource_manager0)', '~committed(resource_manager1)', '~prepared(resource_manager1)']
17     : --010---
17     : ['committed(resource_manager1)', '~committed(resource_manager0)', '~prepared(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 2
num_suborbits: 1
18 (*) : 01--0-0-
18     : ['aborted(resource_manager1)', '~aborted(resource_manager0)', '~prepared(resource_manager0)', '~working(resource_manager0)']
19     : 10---0-0
19     : ['aborted(resource_manager0)', '~aborted(resource_manager1)', '~prepared(resource_manager1)', '~working(resource_manager1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 2
num_suborbits: 1
20 (*) : 0-0-0-0-
20     : ['~aborted(resource_manager0)', '~committed(resource_manager0)', '~prepared(resource_manager0)', '~working(resource_manager0)']
21     : -0-0-0-0
21     : ['~aborted(resource_manager1)', '~committed(resource_manager1)', '~prepared(resource_manager1)', '~working(resource_manager1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 2
num_suborbits: 1
22 (*) : 0---0-01
22     : ['working(resource_manager1)', '~aborted(resource_manager0)', '~prepared(resource_manager0)', '~working(resource_manager0)']
23     : -0---010
23     : ['working(resource_manager0)', '~aborted(resource_manager1)', '~prepared(resource_manager1)', '~working(resource_manager1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 2
num_suborbits: 1
24 (*) : 0--0000-
24     : ['~aborted(resource_manager0)', '~committed(resource_manager1)', '~prepared(resource_manager0)', '~prepared(resource_manager1)', '~working(resource_manager0)']
25     : -00-00-0
25     : ['~aborted(resource_manager1)', '~committed(resource_manager0)', '~prepared(resource_manager0)', '~prepared(resource_manager1)', '~working(resource_manager1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 11

[PRIME NOTE]: number of orbits before merging: 13

[PRIME NOTE]: number of primes: 26

[QRM NOTE]: Time elapsed since start: 0.039 seconds

[QRM NOTE]: Time elapsed since last: 0.016 seconds

[QRM NOTE]: Peak memory: 1101743 bytes


=======================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym/ivy/TCommit: resource_manager=2]

=======================================================================================

definition primes: set()


New level: 0
 pending : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
 solution : []

Essensial at level 0 : {0, 1, 2, 3, 4, 5, 8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, 0), (10, 0)]

Covered at level 0 : {9, 10, 6, 7}

After reduction : 
 pending  : []
 solution : [0, 1, 2, 3, 4, 5, 8]


Before reduction : 
 pending  : []
 solution : [0, 1, 2, 3, 4, 5, 8]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, 0), (10, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : []
 solution : [0, 1, 2, 3, 4, 5, 8]

[QRM NOTE]: Time elapsed since start: 0.040 seconds

[QRM NOTE]: Time elapsed since last: 0.002 seconds

[QRM NOTE]: Peak memory: 49676 bytes


===========================================================================================

	[QI]: Quantifier Inference on [ivybench/sym/ivy/TCommit: resource_manager=2]

===========================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 2
num_suborbits: 1
0 (*) : -----1-1
0     : ['prepared(resource_manager1)', 'working(resource_manager1)']
1     : ----1-1-
1     : ['prepared(resource_manager0)', 'working(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['prepared(resource_manager1)', 'working(resource_manager1)']

sign_func_name2args: {'0$prepared': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '0$working': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)]}

const2sigs: {Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$prepared$0$0, resource_manager$0$working$0$0]}

sig2const: {'resource_manager$0$prepared$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$0$working$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$prepared$0$0; resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$prepared$0$0; resource_manager$0$working$0$0}

part_sig: ('resource_manager$0$prepared$0$0; resource_manager$0$working$0$0',)


---------- SigGenerator ----------

terms:  ['prepared(resource_manager1)', 'working(resource_manager1)']

func_name2symbol:  {'prepared': Const('prepared', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort())), 'working': Const('working', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort()))}

func_name2args_sort:  {'prepared': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),), 'working': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),)}

sign_func_name2count:  {'0$prepared': 1, '0$working': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$prepared$0$0; resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$prepared$0$0; resource_manager$0$working$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$0$prepared$0; resource_manager$0$working$0': [resource_manager$0$prepared$0$0; resource_manager$0$working$0$0]}

	identical_single_classes: {'resource_manager$0$prepared$0; resource_manager$0$working$0': resource_manager$0$prepared$0$0; resource_manager$0$working$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$prepared': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]], '0$working': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['working(RESOURCE_MANAGER0)', 'prepared(RESOURCE_MANAGER0)']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER0. ~working(RESOURCE_MANAGER0) | ~prepared(RESOURCE_MANAGER0)


---------- Quantifier Inference: orbit 0 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
2 (*) : -1---1--
2     : ['aborted(resource_manager1)', 'prepared(resource_manager1)']
3     : 1---1---
3     : ['aborted(resource_manager0)', 'prepared(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['aborted(resource_manager1)', 'prepared(resource_manager1)']

sign_func_name2args: {'0$aborted': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '0$prepared': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)]}

const2sigs: {Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$aborted$0$0, resource_manager$0$prepared$0$0]}

sig2const: {'resource_manager$0$aborted$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$0$prepared$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0}

part_sig: ('resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0',)


---------- SigGenerator ----------

terms:  ['aborted(resource_manager1)', 'prepared(resource_manager1)']

func_name2symbol:  {'aborted': Const('aborted', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort())), 'prepared': Const('prepared', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort()))}

func_name2args_sort:  {'aborted': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),), 'prepared': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),)}

sign_func_name2count:  {'0$aborted': 1, '0$prepared': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$0$aborted$0; resource_manager$0$prepared$0': [resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0]}

	identical_single_classes: {'resource_manager$0$aborted$0; resource_manager$0$prepared$0': resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$aborted': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]], '0$prepared': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['aborted(RESOURCE_MANAGER0)', 'prepared(RESOURCE_MANAGER0)']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~prepared(RESOURCE_MANAGER0)


---------- Quantifier Inference: orbit 1 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
4 (*) : ---1-1--
4     : ['committed(resource_manager1)', 'prepared(resource_manager1)']
5     : --1-1---
5     : ['committed(resource_manager0)', 'prepared(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['committed(resource_manager1)', 'prepared(resource_manager1)']

sign_func_name2args: {'0$committed': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '0$prepared': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)]}

const2sigs: {Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$committed$0$0, resource_manager$0$prepared$0$0]}

sig2const: {'resource_manager$0$committed$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$0$prepared$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0}

part_sig: ('resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0',)


---------- SigGenerator ----------

terms:  ['committed(resource_manager1)', 'prepared(resource_manager1)']

func_name2symbol:  {'committed': Const('committed', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort())), 'prepared': Const('prepared', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort()))}

func_name2args_sort:  {'committed': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),), 'prepared': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),)}

sign_func_name2count:  {'0$committed': 1, '0$prepared': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$0$committed$0; resource_manager$0$prepared$0': [resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0]}

	identical_single_classes: {'resource_manager$0$committed$0; resource_manager$0$prepared$0': resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$committed': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]], '0$prepared': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['committed(RESOURCE_MANAGER0)', 'prepared(RESOURCE_MANAGER0)']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER0. ~committed(RESOURCE_MANAGER0) | ~prepared(RESOURCE_MANAGER0)


---------- Quantifier Inference: orbit 2 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 3 =====================
size : 4
num_suborbits: 2
6 (*) : ---1---1
6     : ['committed(resource_manager1)', 'working(resource_manager1)']
7     : --1---1-
7     : ['committed(resource_manager0)', 'working(resource_manager0)']
10 (*) : ---1--1-
10     : ['committed(resource_manager1)', 'working(resource_manager0)']
11     : --1----1
11     : ['committed(resource_manager0)', 'working(resource_manager1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['committed(resource_manager1)', 'working(resource_manager1)']

sign_func_name2args: {'0$committed': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '0$working': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)]}

const2sigs: {Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$committed$0$0, resource_manager$0$working$0$0]}

sig2const: {'resource_manager$0$committed$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$0$working$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$committed$0$0; resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$committed$0$0; resource_manager$0$working$0$0}

part_sig: ('resource_manager$0$committed$0$0; resource_manager$0$working$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['committed(resource_manager1)', 'working(resource_manager0)']

sign_func_name2args: {'0$committed': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '0$working': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)]}

const2sigs: {Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$committed$0$0], Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$working$0$0]}

sig2const: {'resource_manager$0$committed$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$0$working$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$committed$0$0, resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$committed$0$0 | resource_manager$0$working$0$0}

part_sig: ('resource_manager$0$committed$0$0 | resource_manager$0$working$0$0',)


---------- SigGenerator ----------

terms:  ['committed(resource_manager1)', 'working(resource_manager1)']

func_name2symbol:  {'committed': Const('committed', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort())), 'working': Const('working', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort()))}

func_name2args_sort:  {'committed': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),), 'working': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),)}

sign_func_name2count:  {'0$committed': 1, '0$working': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$committed$0$0, resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$committed$0$0 | resource_manager$0$working$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$0$committed$0': [resource_manager$0$committed$0$0], 'resource_manager$0$working$0': [resource_manager$0$working$0$0]}

	identical_single_classes: {'resource_manager$0$committed$0': resource_manager$0$committed$0$0, 'resource_manager$0$working$0': resource_manager$0$working$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$committed': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]], '0$working': [[Var('RESOURCE_MANAGER1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['committed(RESOURCE_MANAGER0)', 'working(RESOURCE_MANAGER1)']


---------- QFormula: _get_partition_constraint ----------

partition: ('resource_manager$0$committed$0$0; resource_manager$0$working$0$0',)[]

sort partition signature: resource_manager$0$committed$0$0; resource_manager$0$working$0$0

class signature: resource_manager$0$committed$0$0; resource_manager$0$working$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager', 'RESOURCE_MANAGER1:resource_manager']

eq_terms: ['RESOURCE_MANAGER0:resource_manager = RESOURCE_MANAGER1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager']

eq_terms: []

constraint: ['RESOURCE_MANAGER0:resource_manager = RESOURCE_MANAGER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('resource_manager$0$committed$0$0 | resource_manager$0$working$0$0',)[]

sort partition signature: resource_manager$0$committed$0$0 | resource_manager$0$working$0$0

class signature: resource_manager$0$committed$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager']

eq_terms: []

class signature: resource_manager$0$working$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER1:resource_manager']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['RESOURCE_MANAGER1:resource_manager', 'RESOURCE_MANAGER0:resource_manager']

eq_terms: ['RESOURCE_MANAGER0:resource_manager ~= RESOURCE_MANAGER1']

constraint: ['RESOURCE_MANAGER0:resource_manager ~= RESOURCE_MANAGER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('resource_manager$0$committed$0$0; resource_manager$0$working$0$0',)[]

sort partition signature: resource_manager$0$committed$0$0; resource_manager$0$working$0$0

class signature: resource_manager$0$committed$0$0; resource_manager$0$working$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager', 'RESOURCE_MANAGER1:resource_manager']

eq_terms: ['RESOURCE_MANAGER0:resource_manager = RESOURCE_MANAGER1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager']

eq_terms: []

constraint: ['RESOURCE_MANAGER0:resource_manager = RESOURCE_MANAGER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('resource_manager$0$committed$0$0 | resource_manager$0$working$0$0',)[]

sort partition signature: resource_manager$0$committed$0$0 | resource_manager$0$working$0$0

class signature: resource_manager$0$committed$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager']

eq_terms: []

class signature: resource_manager$0$working$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER1:resource_manager']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['RESOURCE_MANAGER1:resource_manager', 'RESOURCE_MANAGER0:resource_manager']

eq_terms: ['RESOURCE_MANAGER0:resource_manager ~= RESOURCE_MANAGER1']

constraint: ['RESOURCE_MANAGER0:resource_manager ~= RESOURCE_MANAGER1']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER1,RESOURCE_MANAGER0. ~committed(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER1)


---------- Quantifier Inference: orbit 3 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 4 =====================
size : 4
num_suborbits: 2
8 (*) : 1--1----
8     : ['aborted(resource_manager0)', 'committed(resource_manager1)']
9     : -11-----
9     : ['aborted(resource_manager1)', 'committed(resource_manager0)']
12 (*) : -1-1----
12     : ['aborted(resource_manager1)', 'committed(resource_manager1)']
13     : 1-1-----
13     : ['aborted(resource_manager0)', 'committed(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['aborted(resource_manager0)', 'committed(resource_manager1)']

sign_func_name2args: {'0$aborted': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '0$committed': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)]}

const2sigs: {Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$aborted$0$0], Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$committed$0$0]}

sig2const: {'resource_manager$0$aborted$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$0$committed$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$aborted$0$0, resource_manager$0$committed$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$aborted$0$0 | resource_manager$0$committed$0$0}

part_sig: ('resource_manager$0$aborted$0$0 | resource_manager$0$committed$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['aborted(resource_manager1)', 'committed(resource_manager1)']

sign_func_name2args: {'0$aborted': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '0$committed': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)]}

const2sigs: {Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$aborted$0$0, resource_manager$0$committed$0$0]}

sig2const: {'resource_manager$0$aborted$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$0$committed$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0}

part_sig: ('resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0',)


---------- SigGenerator ----------

terms:  ['aborted(resource_manager0)', 'committed(resource_manager1)']

func_name2symbol:  {'aborted': Const('aborted', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort())), 'committed': Const('committed', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort()))}

func_name2args_sort:  {'aborted': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),), 'committed': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),)}

sign_func_name2count:  {'0$aborted': 1, '0$committed': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$aborted$0$0, resource_manager$0$committed$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$aborted$0$0 | resource_manager$0$committed$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$0$aborted$0': [resource_manager$0$aborted$0$0], 'resource_manager$0$committed$0': [resource_manager$0$committed$0$0]}

	identical_single_classes: {'resource_manager$0$aborted$0': resource_manager$0$aborted$0$0, 'resource_manager$0$committed$0': resource_manager$0$committed$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$aborted': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]], '0$committed': [[Var('RESOURCE_MANAGER1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['aborted(RESOURCE_MANAGER0)', 'committed(RESOURCE_MANAGER1)']


---------- QFormula: _get_partition_constraint ----------

partition: ('resource_manager$0$aborted$0$0 | resource_manager$0$committed$0$0',)[]

sort partition signature: resource_manager$0$aborted$0$0 | resource_manager$0$committed$0$0

class signature: resource_manager$0$aborted$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager']

eq_terms: []

class signature: resource_manager$0$committed$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER1:resource_manager']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['RESOURCE_MANAGER1:resource_manager', 'RESOURCE_MANAGER0:resource_manager']

eq_terms: ['RESOURCE_MANAGER0:resource_manager ~= RESOURCE_MANAGER1']

constraint: ['RESOURCE_MANAGER0:resource_manager ~= RESOURCE_MANAGER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0',)[]

sort partition signature: resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0

class signature: resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager', 'RESOURCE_MANAGER1:resource_manager']

eq_terms: ['RESOURCE_MANAGER0:resource_manager = RESOURCE_MANAGER1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager']

eq_terms: []

constraint: ['RESOURCE_MANAGER0:resource_manager = RESOURCE_MANAGER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('resource_manager$0$aborted$0$0 | resource_manager$0$committed$0$0',)[]

sort partition signature: resource_manager$0$aborted$0$0 | resource_manager$0$committed$0$0

class signature: resource_manager$0$aborted$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager']

eq_terms: []

class signature: resource_manager$0$committed$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER1:resource_manager']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['RESOURCE_MANAGER1:resource_manager', 'RESOURCE_MANAGER0:resource_manager']

eq_terms: ['RESOURCE_MANAGER0:resource_manager ~= RESOURCE_MANAGER1']

constraint: ['RESOURCE_MANAGER0:resource_manager ~= RESOURCE_MANAGER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0',)[]

sort partition signature: resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0

class signature: resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager', 'RESOURCE_MANAGER1:resource_manager']

eq_terms: ['RESOURCE_MANAGER0:resource_manager = RESOURCE_MANAGER1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager']

eq_terms: []

constraint: ['RESOURCE_MANAGER0:resource_manager = RESOURCE_MANAGER1']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER1,RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~committed(RESOURCE_MANAGER1)


---------- Quantifier Inference: orbit 4 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 5 =====================
size : 2
num_suborbits: 1
14 (*) : 1-----1-
14     : ['aborted(resource_manager0)', 'working(resource_manager0)']
15     : -1-----1
15     : ['aborted(resource_manager1)', 'working(resource_manager1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['aborted(resource_manager0)', 'working(resource_manager0)']

sign_func_name2args: {'0$aborted': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '0$working': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)]}

const2sigs: {Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$aborted$0$0, resource_manager$0$working$0$0]}

sig2const: {'resource_manager$0$aborted$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$0$working$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$aborted$0$0; resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$aborted$0$0; resource_manager$0$working$0$0}

part_sig: ('resource_manager$0$aborted$0$0; resource_manager$0$working$0$0',)


---------- SigGenerator ----------

terms:  ['aborted(resource_manager0)', 'working(resource_manager0)']

func_name2symbol:  {'aborted': Const('aborted', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort())), 'working': Const('working', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort()))}

func_name2args_sort:  {'aborted': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),), 'working': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),)}

sign_func_name2count:  {'0$aborted': 1, '0$working': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$aborted$0$0; resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$aborted$0$0; resource_manager$0$working$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$0$aborted$0; resource_manager$0$working$0': [resource_manager$0$aborted$0$0; resource_manager$0$working$0$0]}

	identical_single_classes: {'resource_manager$0$aborted$0; resource_manager$0$working$0': resource_manager$0$aborted$0$0; resource_manager$0$working$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$aborted': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]], '0$working': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['aborted(RESOURCE_MANAGER0)', 'working(RESOURCE_MANAGER0)']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0)


---------- Quantifier Inference: orbit 5 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 8 =====================
size : 2
num_suborbits: 1
20 (*) : 0-0-0-0-
20     : ['~aborted(resource_manager0)', '~committed(resource_manager0)', '~prepared(resource_manager0)', '~working(resource_manager0)']
21     : -0-0-0-0
21     : ['~aborted(resource_manager1)', '~committed(resource_manager1)', '~prepared(resource_manager1)', '~working(resource_manager1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~aborted(resource_manager0)', '~committed(resource_manager0)', '~prepared(resource_manager0)', '~working(resource_manager0)']

sign_func_name2args: {'1$aborted': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '1$committed': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '1$prepared': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '1$working': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)]}

const2sigs: {Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$1$aborted$0$0, resource_manager$1$committed$0$0, resource_manager$1$prepared$0$0, resource_manager$1$working$0$0]}

sig2const: {'resource_manager$1$aborted$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$1$committed$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$1$prepared$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$1$working$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0}

part_sig: ('resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0',)


---------- SigGenerator ----------

terms:  ['~aborted(resource_manager0)', '~committed(resource_manager0)', '~prepared(resource_manager0)', '~working(resource_manager0)']

func_name2symbol:  {'aborted': Const('aborted', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort())), 'committed': Const('committed', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort())), 'prepared': Const('prepared', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort())), 'working': Const('working', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort()))}

func_name2args_sort:  {'aborted': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),), 'committed': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),), 'prepared': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),), 'working': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),)}

sign_func_name2count:  {'1$aborted': 1, '1$committed': 1, '1$prepared': 1, '1$working': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$1$aborted$0; resource_manager$1$committed$0; resource_manager$1$prepared$0; resource_manager$1$working$0': [resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0]}

	identical_single_classes: {'resource_manager$1$aborted$0; resource_manager$1$committed$0; resource_manager$1$prepared$0; resource_manager$1$working$0': resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$aborted': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]], '1$committed': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]], '1$prepared': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]], '1$working': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~working(RESOURCE_MANAGER0)', '~prepared(RESOURCE_MANAGER0)', '~aborted(RESOURCE_MANAGER0)', '~committed(RESOURCE_MANAGER0)']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER0. working(RESOURCE_MANAGER0) | prepared(RESOURCE_MANAGER0) | aborted(RESOURCE_MANAGER0) | committed(RESOURCE_MANAGER0)


---------- Quantifier Inference: orbit 8 ----------

[QI_CHECK RESULT]: PASS


=====================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym/ivy/TCommit: resource_manager=2]

=====================================================================================================


=== Prime Orbit 0 =====================
size : 2
num_suborbits: 1
0 (*) : -----1-1
0     : ['prepared(resource_manager1)', 'working(resource_manager1)']
1     : ----1-1-
1     : ['prepared(resource_manager0)', 'working(resource_manager0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall RESOURCE_MANAGER0. ~working(RESOURCE_MANAGER0) | ~prepared(RESOURCE_MANAGER0)
qcost : 3




=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
2 (*) : -1---1--
2     : ['aborted(resource_manager1)', 'prepared(resource_manager1)']
3     : 1---1---
3     : ['aborted(resource_manager0)', 'prepared(resource_manager0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~prepared(RESOURCE_MANAGER0)
qcost : 3




=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
4 (*) : ---1-1--
4     : ['committed(resource_manager1)', 'prepared(resource_manager1)']
5     : --1-1---
5     : ['committed(resource_manager0)', 'prepared(resource_manager0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall RESOURCE_MANAGER0. ~committed(RESOURCE_MANAGER0) | ~prepared(RESOURCE_MANAGER0)
qcost : 3




=== Prime Orbit 3 =====================
size : 4
num_suborbits: 2
6 (*) : ---1---1
6     : ['committed(resource_manager1)', 'working(resource_manager1)']
7     : --1---1-
7     : ['committed(resource_manager0)', 'working(resource_manager0)']
10 (*) : ---1--1-
10     : ['committed(resource_manager1)', 'working(resource_manager0)']
11     : --1----1
11     : ['committed(resource_manager0)', 'working(resource_manager1)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall RESOURCE_MANAGER1,RESOURCE_MANAGER0. ~committed(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER1)
qcost : 4




=== Prime Orbit 4 =====================
size : 4
num_suborbits: 2
8 (*) : 1--1----
8     : ['aborted(resource_manager0)', 'committed(resource_manager1)']
9     : -11-----
9     : ['aborted(resource_manager1)', 'committed(resource_manager0)']
12 (*) : -1-1----
12     : ['aborted(resource_manager1)', 'committed(resource_manager1)']
13     : 1-1-----
13     : ['aborted(resource_manager0)', 'committed(resource_manager0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall RESOURCE_MANAGER1,RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~committed(RESOURCE_MANAGER1)
qcost : 4




=== Prime Orbit 5 =====================
size : 2
num_suborbits: 1
14 (*) : 1-----1-
14     : ['aborted(resource_manager0)', 'working(resource_manager0)']
15     : -1-----1
15     : ['aborted(resource_manager1)', 'working(resource_manager1)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0)
qcost : 3




=== Prime Orbit 8 =====================
size : 2
num_suborbits: 1
20 (*) : 0-0-0-0-
20     : ['~aborted(resource_manager0)', '~committed(resource_manager0)', '~prepared(resource_manager0)', '~working(resource_manager0)']
21     : -0-0-0-0
21     : ['~aborted(resource_manager1)', '~committed(resource_manager1)', '~prepared(resource_manager1)', '~working(resource_manager1)']
num_forall :   1
num_exists :   0
num_literals : 4
quantified form : forall RESOURCE_MANAGER0. working(RESOURCE_MANAGER0) | prepared(RESOURCE_MANAGER0) | aborted(RESOURCE_MANAGER0) | committed(RESOURCE_MANAGER0)
qcost : 5



[QRM NOTE]: Time elapsed since start: 0.186 seconds

[QRM NOTE]: Time elapsed since last: 0.146 seconds

[QRM NOTE]: Peak memory: 1758891 bytes


====================================================================================

	[MIN]: Minimization on [ivybench/sym/ivy/TCommit: resource_manager=2]

====================================================================================


New level: 1
 pending : []
 solution : [0, 1, 2, 3, 4, 5, 8]


Before reduction : 
 pending  : []
 solution : [0, 1, 2, 3, 4, 5, 8]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : []
 solution : [0, 1, 2, 3, 4, 5, 8]


Solution : [0, 1, 2, 3, 4, 5, 8] has cost 25.


Before backtrack at level 1
 pending : []
 solution : [0, 1, 2, 3, 4, 5, 8]

After backtrack at level 1
 pending : []
 solution : [0, 1, 2, 3, 4, 5, 8]


===================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym/ivy/TCommit: resource_manager=2]

===================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: total qcost: 25

[MIN NOTE]: maximum branch and bound depth: 1

Definitions (length=0)

Equality Relations (length=0)

Solution 0 : [0, 1, 2, 3, 4, 5, 8] (length = 7)

invariant [invar_0] forall RESOURCE_MANAGER0. ~working(RESOURCE_MANAGER0) | ~prepared(RESOURCE_MANAGER0) # qcost: 3

invariant [invar_1] forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~prepared(RESOURCE_MANAGER0) # qcost: 3

invariant [invar_2] forall RESOURCE_MANAGER0. ~committed(RESOURCE_MANAGER0) | ~prepared(RESOURCE_MANAGER0) # qcost: 3

invariant [invar_3] forall RESOURCE_MANAGER1,RESOURCE_MANAGER0. ~committed(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER1) # qcost: 4

invariant [invar_4] forall RESOURCE_MANAGER1,RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~committed(RESOURCE_MANAGER1) # qcost: 4

invariant [invar_5] forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0) # qcost: 3

invariant [invar_8] forall RESOURCE_MANAGER0. working(RESOURCE_MANAGER0) | prepared(RESOURCE_MANAGER0) | aborted(RESOURCE_MANAGER0) | committed(RESOURCE_MANAGER0) # qcost: 5




[QRM NOTE]: Time elapsed since start: 0.235 seconds

[QRM NOTE]: Time elapsed since last: 0.048 seconds

[QRM NOTE]: Peak memory: 1746179 bytes


======================================================================================================

	[MIN_CHECK] Minimization Sanity Check on [ivybench/sym/ivy/TCommit: resource_manager=2]

======================================================================================================

Minimization check for Solution 0

[MIN_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 0.257 seconds

[QRM NOTE]: Time elapsed since last: 0.022 seconds

[QRM NOTE]: Peak memory: 703811 bytes


=======================================================================================

	[IVY_CHECK]: Ivy Check on [ivybench/sym/ivy/TCommit: resource_manager=2]

=======================================================================================

ivy_check complete=fo ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 53: invar_0
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 54: invar_1
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 55: invar_2
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 56: invar_3
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 57: invar_4
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 58: invar_5
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 59: invar_8

    The following action implementations are present:
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 34: implementation of decide_abort
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 25: implementation of decide_commit
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 17: implementation of prepare

    The following initializers are present:
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 10: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 53: invar_0 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 54: invar_1 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 55: invar_2 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 56: invar_3 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 57: invar_4 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 58: invar_5 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 59: invar_8 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide_abort
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 53: invar_0 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 54: invar_1 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 55: invar_2 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 56: invar_3 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 57: invar_4 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 58: invar_5 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 59: invar_8 ... PASS
        (internal) ext:decide_commit
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 53: invar_0 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 54: invar_1 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 55: invar_2 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 56: invar_3 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 57: invar_4 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 58: invar_5 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 59: invar_8 ... PASS
        (internal) ext:prepare
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 53: invar_0 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 54: invar_1 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 55: invar_2 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 56: invar_3 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 57: invar_4 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 58: invar_5 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 59: invar_8 ... PASS

    The following program assertions are treated as assumptions:
        in action prepare when called from the environment:
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 18: assumption
        in action decide_commit when called from the environment:
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 26: assumption
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 27: assumption
        in action decide_abort when called from the environment:
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 35: assumption
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 36: assumption

OK
[IVY_CHECK RESULT]: PASS

[R Implies P]: True

[UNSAT CORE]: ((forall RESOURCE_MANAGER1,RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~committed(RESOURCE_MANAGER1)))

[QRM NOTE]: Time elapsed since start: 2.211 seconds

[QRM NOTE]: Time elapsed since last: 1.954 seconds

[QRM NOTE]: Peak memory: 754094 bytes


**************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym/ivy/TCommit: resource_manager=2

**************************************************************************************************

python3 qrm.py ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy -s resource_manager=3 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym/ivy/TCommit.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


===========================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/TCommit: resource_manager=3]

===========================================================================================


==============================================

	Set up for forward reachability

==============================================

ivy_to_cpp target=qrm TCommit.resource_manager_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o TCommit.resource_manager_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 TCommit.resource_manager_3.finite.cpp TCommit.resource_manager_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared TCommit.resource_manager_3.finite.o TCommit.resource_manager_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[FW NOTE]: number of state atoms: 12

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: number of branching actions: 9

[FW NOTE]: symmetric group order: 6

[QRM NOTE]: Time elapsed since start: 6.365 seconds

[QRM NOTE]: Time elapsed since last: 6.365 seconds

[QRM NOTE]: Peak memory: 1175626 bytes


=====================================

	Symmetric Quotient DFS

=====================================

[FW NOTE]: dfs max depth: 6

[FW NOTE]: number of total reachable states:        34

[FW NOTE]: number of dfs representative states:     13

[FW NOTE]: number of dfs non-representative states: 21


==================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/TCommit: resource_manager=3]

==================================================================================================

sort: resource_manager=['resource_manager0', 'resource_manager1', 'resource_manager2']
predicate: prepared('resource_manager',)
predicate: committed('resource_manager',)
predicate: working('resource_manager',)
predicate: aborted('resource_manager',)
interpreted atoms: {}
state atoms: ['aborted(resource_manager0)', 'aborted(resource_manager1)', 'aborted(resource_manager2)', 'committed(resource_manager0)', 'committed(resource_manager1)', 'committed(resource_manager2)', 'prepared(resource_manager0)', 'prepared(resource_manager1)', 'prepared(resource_manager2)', 'working(resource_manager0)', 'working(resource_manager1)', 'working(resource_manager2)']
representative states : 7, 14, 28, 56, 112, 224, 448, 560, 1568, 3584, 532, 1540, 518


=== State Orbit 0 =====================
size : 1
repr state: 000000000111
lex min decimal: 7
states:
000000000111




=== State Orbit 1 =====================
size : 3
repr state: 000000100011
lex min decimal: 14
states:
000000010101
000000001110
000000100011




=== State Orbit 2 =====================
size : 3
repr state: 000000110001
lex min decimal: 28
states:
000000110001
000000011100
000000101010




=== State Orbit 3 =====================
size : 1
repr state: 000000111000
lex min decimal: 56
states:
000000111000




=== State Orbit 4 =====================
size : 3
repr state: 000100011000
lex min decimal: 112
states:
000010101000
000100011000
000001110000




=== State Orbit 5 =====================
size : 3
repr state: 000110001000
lex min decimal: 224
states:
000101010000
000011100000
000110001000




=== State Orbit 6 =====================
size : 1
repr state: 000111000000
lex min decimal: 448
states:
000111000000




=== State Orbit 7 =====================
size : 3
repr state: 100000011000
lex min decimal: 560
states:
010000101000
001000110000
100000011000




=== State Orbit 8 =====================
size : 3
repr state: 110000001000
lex min decimal: 1568
states:
110000001000
011000100000
101000010000




=== State Orbit 9 =====================
size : 1
repr state: 111000000000
lex min decimal: 3584
states:
111000000000




=== State Orbit 10 =====================
size : 6
repr state: 100000010001
lex min decimal: 532
states:
100000010001
100000001010
001000010100
010000100001
010000001100
001000100010




=== State Orbit 11 =====================
size : 3
repr state: 110000000001
lex min decimal: 1540
states:
110000000001
101000000010
011000000100




=== State Orbit 12 =====================
size : 3
repr state: 100000000011
lex min decimal: 518
states:
001000000110
100000000011
010000000101



[QRM NOTE]: Time elapsed since start: 6.457 seconds

[QRM NOTE]: Time elapsed since last: 0.092 seconds

[QRM NOTE]: Peak memory: 1215480 bytes


=======================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym/ivy/TCommit: resource_manager=3]

=======================================================================================================================

[REACH_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 6.502 seconds

[QRM NOTE]: Time elapsed since last: 0.046 seconds

[QRM NOTE]: Peak memory: 193643 bytes

ivy_check complete=fo ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 53: invar_0
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 54: invar_1
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 55: invar_2
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 56: invar_3
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 57: invar_4
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 58: invar_5
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 59: invar_8

    The following action implementations are present:
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 34: implementation of decide_abort
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 25: implementation of decide_commit
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 17: implementation of prepare

    The following initializers are present:
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 10: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 53: invar_0 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 54: invar_1 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 55: invar_2 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 56: invar_3 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 57: invar_4 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 58: invar_5 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 59: invar_8 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide_abort
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 53: invar_0 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 54: invar_1 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 55: invar_2 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 56: invar_3 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 57: invar_4 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 58: invar_5 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 59: invar_8 ... PASS
        (internal) ext:decide_commit
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 53: invar_0 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 54: invar_1 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 55: invar_2 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 56: invar_3 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 57: invar_4 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 58: invar_5 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 59: invar_8 ... PASS
        (internal) ext:prepare
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 53: invar_0 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 54: invar_1 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 55: invar_2 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 56: invar_3 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 57: invar_4 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 58: invar_5 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 59: invar_8 ... PASS

    The following program assertions are treated as assumptions:
        in action prepare when called from the environment:
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 18: assumption
        in action decide_commit when called from the environment:
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 26: assumption
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 27: assumption
        in action decide_abort when called from the environment:
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 35: assumption
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 36: assumption

OK
[IVY_CHECK RESULT]: PASS


*******************************************************

	[QRM]: ivybench/sym/ivy/TCommit.ivy

*******************************************************

[RMIN NUM]: 1

[RMIN RESULT]: ['ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy']

[CUTOFF]: resource_manager=2

[QRM RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 35.566 seconds

[QRM NOTE]: Time elapsed since last: 35.566 seconds

